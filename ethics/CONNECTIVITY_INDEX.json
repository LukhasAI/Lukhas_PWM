{
  "directory": "lukhas/ethics",
  "timestamp": "2025-07-28T17:40:40.684064",
  "summary": {
    "total_modules": 67,
    "total_symbols": 1164,
    "total_dependencies": 463,
    "missed_opportunities": 37
  },
  "modules": {
    "lukhas.ethics.service": {
      "metrics": {
        "total_symbols": 15,
        "used_symbols": 0,
        "unused_symbols": 15,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07575757575757576
      },
      "symbols": [
        {
          "name": "EthicsService",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "assess_action",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "evaluate_safety",
          "kind": "function",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "audit_decision",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_ethics_rules",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_evaluate_action_ethics",
          "kind": "function",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_check_regulation_compliance",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_assess_operation_safety",
          "kind": "function",
          "line": 275,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_get_ethics_version",
          "kind": "function",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "IdentityClient",
          "kind": "class",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verify_user_access",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_consent",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_activity",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.compliance_engine": {
      "metrics": {
        "total_symbols": 28,
        "used_symbols": 0,
        "unused_symbols": 28,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.16666666666666666
      },
      "symbols": [
        {
          "name": "ComplianceEngine",
          "kind": "class",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "anonymize_metadata",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "should_retain_data",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_voice_data_compliance",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "validate_content_against_ethical_constraints",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "generate_compliance_report",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_anonymous_id",
          "kind": "function",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_compliance_status",
          "kind": "function",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "detect_regulatory_region",
          "kind": "function",
          "line": 320,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "update_compliance_settings",
          "kind": "function",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": 22,
          "has_docstring": true
        },
        {
          "name": "get_audit_trail",
          "kind": "function",
          "line": 444,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_initialize_ethical_framework",
          "kind": "function",
          "line": 474,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_evaluate_bias",
          "kind": "function",
          "line": 489,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_evaluate_transparency",
          "kind": "function",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_evaluate_privacy",
          "kind": "function",
          "line": 541,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_evaluate_harm",
          "kind": "function",
          "line": 566,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_evaluate_oversight",
          "kind": "function",
          "line": 588,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_evaluate_autonomy",
          "kind": "function",
          "line": 607,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_evaluate_value_alignment",
          "kind": "function",
          "line": 626,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_text_content",
          "kind": "function",
          "line": 636,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_apply_differential_privacy",
          "kind": "function",
          "line": 683,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_applicable_regulations",
          "kind": "function",
          "line": 705,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_apply_region_specific_rules",
          "kind": "function",
          "line": 729,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_map_location_string_to_region",
          "kind": "function",
          "line": 775,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_record_audit",
          "kind": "function",
          "line": 803,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "check_module_compliance",
          "kind": "function",
          "line": 819,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "add_laplace_noise",
          "kind": "function",
          "line": 689,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.oscillating_conscience": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06060606060606061
      },
      "symbols": [
        {
          "name": "OscillatingConscience",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "update",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.ethical_guardian": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 1,
        "unused_symbols": 0,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.030303030303030304
      },
      "symbols": [
        {
          "name": "ethical_check",
          "kind": "function",
          "line": 22,
          "used": true,
          "used_by": [
            "lukhas/ethics/redteam_sim.py"
          ],
          "complexity": 8,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.monitor": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "ethics_drift_detect",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "log_ethics_event",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "log_self_reflection",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "self_reflection_report",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.legacy_ethics_jury": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "should_trigger_jury",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "run_ethics_review",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.intrinsic_governor": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.030303030303030304
      },
      "symbols": [
        {
          "name": "IntrinsicEthicalGovernor",
          "kind": "class",
          "line": 4,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.compliance_simple": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 0,
        "unused_symbols": 21,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.10606060606060606
      },
      "symbols": [
        {
          "name": "EthicsViolationType",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceFramework",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceViolation",
          "kind": "dataclass",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsValidationResult",
          "kind": "dataclass",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsComplianceEngine",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "violation_type",
          "kind": "type_alias",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "framework",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_id",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_score",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "passed",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violations",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "warnings",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_plugin_risk_score",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_violation_history",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_compliance_report",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_contains_sensitive_data",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_update_plugin_risk_score",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.compliance": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 0,
        "unused_symbols": 21,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.10606060606060606
      },
      "symbols": [
        {
          "name": "EthicsViolationType",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceFramework",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceViolation",
          "kind": "dataclass",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsValidationResult",
          "kind": "dataclass",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsComplianceEngine",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "violation_type",
          "kind": "type_alias",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "framework",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_id",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_score",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "passed",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violations",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "warnings",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_plugin_risk_score",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_violation_history",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_compliance_report",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_contains_sensitive_data",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_update_plugin_risk_score",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.tier_enforcer": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.030303030303030304
      },
      "symbols": [
        {
          "name": "tier_required",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "collapse_kernel",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.meta_ethics_governor": {
      "metrics": {
        "total_symbols": 59,
        "used_symbols": 7,
        "unused_symbols": 52,
        "import_count": 11,
        "export_count": 1,
        "connectivity_score": 0.11864406779661017,
        "cohesion_score": 0.0,
        "coupling_score": 0.16666666666666666
      },
      "symbols": [
        {
          "name": "EthicalFramework",
          "kind": "class",
          "line": 72,
          "used": true,
          "used_by": [
            "lukhas/ethics/meg_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalVerdict",
          "kind": "class",
          "line": 85,
          "used": true,
          "used_by": [
            "lukhas/ethics/meg_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Severity",
          "kind": "class",
          "line": 96,
          "used": true,
          "used_by": [
            "lukhas/ethics/meg_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CulturalContext",
          "kind": "class",
          "line": 105,
          "used": true,
          "used_by": [
            "lukhas/ethics/meg_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalPrinciple",
          "kind": "dataclass",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalDecision",
          "kind": "dataclass",
          "line": 138,
          "used": true,
          "used_by": [
            "lukhas/ethics/meg_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalEvaluation",
          "kind": "dataclass",
          "line": 152,
          "used": true,
          "used_by": [
            "lukhas/ethics/meg_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalFrameworkEngine",
          "kind": "class",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DeontologicalEngine",
          "kind": "class",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsequentialistEngine",
          "kind": "class",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaEthicsGovernor",
          "kind": "class",
          "line": 389,
          "used": true,
          "used_by": [
            "lukhas/ethics/meg_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_meg_instance",
          "kind": "constant",
          "line": 698,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_checkpoint",
          "kind": "function",
          "line": 710,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "principle_id",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "framework",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cultural_context",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conditions",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "actions",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_date",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_id",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action_type",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stakeholders",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "potential_outcomes",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "urgency",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluation_id",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verdict",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "applicable_principles",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conflicting_principles",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cultural_considerations",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "legal_implications",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "human_review_required",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluator_framework",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 397,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "load_principles",
          "kind": "function",
          "line": 384,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_principle",
          "kind": "function",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_default_principles",
          "kind": "function",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_principle_conditions",
          "kind": "function",
          "line": 284,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_check_violation",
          "kind": "function",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_initialize_default_engines",
          "kind": "function",
          "line": 434,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_load_cultural_adapters",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_ethical_engine",
          "kind": "function",
          "line": 637,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_event_callback",
          "kind": "function",
          "line": 642,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_human_review_queue",
          "kind": "function",
          "line": 649,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "resolve_human_review",
          "kind": "function",
          "line": 653,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 665,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 712,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "instrument_reasoning",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_srd",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.policy_manager": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "determine_active_regulations",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "log_active_regulations",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.audit_ethics_monitor": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06060606060606061
      },
      "symbols": [
        {
          "name": "main",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.community_feedback": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.030303030303030304
      },
      "symbols": [
        {
          "name": "load_rules",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "save_rules",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "apply_proposal",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics._spikethickness": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.015151515151515152
      },
      "symbols": [
        {
          "name": "SpikethicknessValidator",
          "kind": "class",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.redteam_sim": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.10606060606060606
      },
      "symbols": [
        {
          "name": "HashableDict",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "parse_prompts_from_file",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "run_redteam_simulation",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "__hash__",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "results",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.compliance_engine20250503213400_p95": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "Complianceengine",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "anonymize_metadata",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "should_retain_data",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_voice_data_compliance",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "validate_content_against_ethical_constraints",
          "kind": "function",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "generate_compliance_report",
          "kind": "function",
          "line": 195,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_anonymous_id",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_compliance_status",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.batch_guard": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 0,
        "unused_symbols": 20,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "EthicsLevel",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ComplianceStatus",
          "kind": "class",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EthicsResult",
          "kind": "dataclass",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsBatchGuard",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_ethics_guard",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violations",
          "kind": "constant",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbol_compliance",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "agent_badges_required",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "validate_batch_ethics",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_validate_single_task_ethics",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_contains_sensitive_data",
          "kind": "function",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_detect_harmful_content",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_has_ai_disclosure",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_validate_symbol_compliance",
          "kind": "function",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_determine_required_badges",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "generate_ethics_report",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.ethical_drift_detector": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.13636363636363635
      },
      "symbols": [
        {
          "name": "load_ethics_config",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "calculate_weighted_drift_score",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "apply_violation_tagging",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_violation_severity",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_classify_symbolically",
          "kind": "function",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_escalation_requirements",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "enrich_trace_metadata",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "export_ethics_report",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "detect_ethical_drift",
          "kind": "function",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendation",
          "kind": "function",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_send_real_time_alerts",
          "kind": "function",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_capabilities",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_collapse_hash",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "crypto_trace_index",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.engine": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.030303030303030304
      },
      "symbols": [
        {
          "name": "EthicsEngine",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "evaluate",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "interpret_score",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.guardian": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 1,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.5,
        "cohesion_score": 0.0,
        "coupling_score": 0.015151515151515152
      },
      "symbols": [
        {
          "name": "DefaultGuardian",
          "kind": "class",
          "line": 10,
          "used": true,
          "used_by": [
            "lukhas/ethics/engine.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assess_risk",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.utils": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.030303030303030304
      },
      "symbols": [
        {
          "name": "EthicsUtils",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "validate_content_ethics",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_compliance_status",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_compliance_report",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "anonymize_metadata",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.governance_checker": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "is_fine_tunable",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_symbolic_integrity",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "log_governance_trace",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.decision_node": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "EthicsNode",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_principles",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_healthcare_principles",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_finance_principles",
          "kind": "function",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_content_moderation_principles",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "evaluate_action",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_evaluate_principle",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_apply_context_adjustments",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_select_framework",
          "kind": "function",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_explanation",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_alternatives",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_add_privacy_protections",
          "kind": "function",
          "line": 452,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_add_transparency",
          "kind": "function",
          "line": 469,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_add_user_choice",
          "kind": "function",
          "line": 486,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_add_safety_measures",
          "kind": "function",
          "line": 503,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_add_human_oversight",
          "kind": "function",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_record_decision",
          "kind": "function",
          "line": 537,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_log_audit_event",
          "kind": "function",
          "line": 559,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_principle_weights",
          "kind": "function",
          "line": 564,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_principle_weight",
          "kind": "function",
          "line": 573,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "analyze_ethical_trends",
          "kind": "function",
          "line": 595,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "evaluate_content",
          "kind": "function",
          "line": 639,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_content_issues",
          "kind": "function",
          "line": 686,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "process_message",
          "kind": "function",
          "line": 724,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.ethical_auditor": {
      "metrics": {
        "total_symbols": 33,
        "used_symbols": 0,
        "unused_symbols": 33,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.18181818181818182
      },
      "symbols": [
        {
          "name": "AuditContext",
          "kind": "dataclass",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AuditResult",
          "kind": "dataclass",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EliteEthicalAuditor",
          "kind": "class",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "module_name",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module_type",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_tier",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_tags",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "agi_level",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_priority",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lambda_id",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audited_by",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "model_version",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_score",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "improvements",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_concerns",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_integrity",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_status",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trust_score",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_assessment",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cost_tokens",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_hash",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lambda_signature",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_system_prompt",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_user_prompt",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_parse_audit_response",
          "kind": "function",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": 24,
          "has_docstring": true
        },
        {
          "name": "_calculate_cost",
          "kind": "function",
          "line": 292,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_audit_hash",
          "kind": "function",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_sign_with_lambda_id",
          "kind": "function",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_audit_summary",
          "kind": "function",
          "line": 492,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.export_report": {
      "metrics": {
        "total_symbols": 16,
        "used_symbols": 0,
        "unused_symbols": 16,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.10606060606060606
      },
      "symbols": [
        {
          "name": "EthicsReportExporter",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "export_ethics_report",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "export_comprehensive_ethics_report",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "export_multi_format",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_export_json",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_export_yaml",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_export_csv",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_export_html",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_html_report",
          "kind": "function",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "generate_dashboard_data",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_group_violations_by_severity",
          "kind": "function",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_group_violations_by_attribute",
          "kind": "function",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "generate_audit_trail",
          "kind": "function",
          "line": 289,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_governance_summary",
          "kind": "function",
          "line": 316,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_governance_recommendations",
          "kind": "function",
          "line": 352,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.hitlo_bridge": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 3,
        "unused_symbols": 18,
        "import_count": 7,
        "export_count": 2,
        "connectivity_score": 0.14285714285714285,
        "cohesion_score": 0.0,
        "coupling_score": 0.10606060606060606
      },
      "symbols": [
        {
          "name": "EthicsEscalationRule",
          "kind": "dataclass",
          "line": 61,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsHITLOBridge",
          "kind": "class",
          "line": 97,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_ethics_hitlo_bridge",
          "kind": "function",
          "line": 451,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py"
          ],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "condition",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_threshold",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collapse_threshold",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_threshold",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "require_consensus",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_priority",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "should_escalate",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_setup_default_rules",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_escalation_rule",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "should_escalate_evaluation",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_review_context",
          "kind": "function",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_categorize_risk_level",
          "kind": "function",
          "line": 321,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_review_questions",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_update_metrics",
          "kind": "function",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.extreme_ethical_testing": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.18181818181818182
      },
      "symbols": [
        {
          "name": "ExtremEthicalTesting",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.ethics": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "main",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.quantum_mesh_integrator": {
      "metrics": {
        "total_symbols": 43,
        "used_symbols": 0,
        "unused_symbols": 43,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.15151515151515152
      },
      "symbols": [
        {
          "name": "EthicsRiskLevel",
          "kind": "class",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsSignalType",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalState",
          "kind": "dataclass",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsSignal",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PhaseEntanglement",
          "kind": "dataclass",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumEthicsMeshIntegrator",
          "kind": "class",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "module_name",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coherence",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "signal_type",
          "kind": "type_alias",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source_modules",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module_a",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module_b",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entanglement_strength",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase_difference",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coherence_score",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conflict_risk",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "integrate_ethics_mesh",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "calculate_phase_entanglement_matrix",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "detect_ethics_phase_conflict",
          "kind": "function",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_weighted_coherence",
          "kind": "function",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_weighted_confidence",
          "kind": "function",
          "line": 443,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_weighted_entropy",
          "kind": "function",
          "line": 455,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_weighted_alignment",
          "kind": "function",
          "line": 467,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_phase_synchronization",
          "kind": "function",
          "line": 479,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_stability_index",
          "kind": "function",
          "line": 494,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_drift_magnitude",
          "kind": "function",
          "line": 508,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_risk_level",
          "kind": "function",
          "line": 525,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_get_expected_entanglement",
          "kind": "function",
          "line": 538,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_cascade_risk",
          "kind": "function",
          "line": 554,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_identify_cascade_triggers",
          "kind": "function",
          "line": 579,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_drift_signal",
          "kind": "function",
          "line": 591,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_recommend_intervention",
          "kind": "function",
          "line": 604,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_mesh_status",
          "kind": "function",
          "line": 644,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.orchestrator": {
      "metrics": {
        "total_symbols": 36,
        "used_symbols": 0,
        "unused_symbols": 36,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.18181818181818182
      },
      "symbols": [
        {
          "name": "EthicsMode",
          "kind": "class",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsConfiguration",
          "kind": "dataclass",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsAuditEntry",
          "kind": "dataclass",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedEthicsOrchestrator",
          "kind": "class",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_ethics_orchestrator",
          "kind": "constant",
          "line": 535,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_ethics_orchestrator",
          "kind": "function",
          "line": 538,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "ethical_checkpoint",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "mode",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_human_escalation",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_meg_evaluation",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_drift_detection",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_audit_trail",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_threshold",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "auto_escalation_threshold",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_evaluation_time_seconds",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cultural_context",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_level",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_id",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluations",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "final_verdict",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "escalated_to_human",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "human_override",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_flags",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "components_used",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_components",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": true
        },
        {
          "name": "_synthesize_evaluations",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_should_escalate_to_human",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 473,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_audit_trail",
          "kind": "function",
          "line": 504,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "configure",
          "kind": "function",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 555,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.meg_guard": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 0,
        "unused_symbols": 18,
        "import_count": 7,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.10606060606060606
      },
      "symbols": [
        {
          "name": "MEGConfig",
          "kind": "dataclass",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MEG",
          "kind": "class",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "demo_meg_usage",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "default_timeout",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_retries",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_check_enabled",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_calls",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rate_limit_calls",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rate_limit_window",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_check_rate_limit",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_ethical_check",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "guard",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": true
        },
        {
          "name": "get_stats",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "temporary_disable_ethics",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "critical_operation",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": false
        },
        {
          "name": "sync_wrapper",
          "kind": "function",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.meg_openai_guard": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06060606060606061
      },
      "symbols": [
        {
          "name": "meg_chat_completion",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "meg_chat_completion_critical",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "meg_chat_completion_extended",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "meg_chat_completion_long",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "meg_generate_text",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "meg_complete_with_system",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "MEGChatCompletion",
          "kind": "class",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "patch_openai_with_meg",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "unpatch_openai",
          "kind": "function",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_complete",
          "kind": "function",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "create",
          "kind": "function",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.meg_bridge": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 2,
        "unused_symbols": 7,
        "import_count": 6,
        "export_count": 2,
        "connectivity_score": 0.2222222222222222,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "MEGPolicyBridge",
          "kind": "class",
          "line": 23,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_meg_bridge",
          "kind": "function",
          "line": 278,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py"
          ],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "ethics_decision_to_meg_decision",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 30,
          "has_docstring": true
        },
        {
          "name": "meg_evaluation_to_ethics_evaluation",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 18,
          "has_docstring": true
        },
        {
          "name": "get_cultural_context_info",
          "kind": "function",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_meg_status",
          "kind": "function",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_meg_callback",
          "kind": "function",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_human_review_queue",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.ethical_evaluator": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.015151515151515152
      },
      "symbols": [
        {
          "name": "EthicalEvaluator",
          "kind": "class",
          "line": 3,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CollapseEngine",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Memoria",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluate",
          "kind": "function",
          "line": 4,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "collapse",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "store",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "trace",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.bases": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 0,
        "unused_symbols": 11,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "ComplianceEngine",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceFramework",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceViolation",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_compliance_rule",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_check_rule",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_rule",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_action",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_validate_rule",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.lukhas_ethics_guard": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 0,
        "unused_symbols": 11,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "LegalComplianceAssistant",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_default_rules",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_content_safety",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "check_privacy_compliance",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "ethical_review",
          "kind": "function",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "comprehensive_compliance_check",
          "kind": "function",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_compliance_report",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "update_rules",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendation",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "anonymize_data",
          "kind": "function",
          "line": 292,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.compliance_validator": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 1,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.2,
        "cohesion_score": 0.0,
        "coupling_score": 0.06060606060606061
      },
      "symbols": [
        {
          "name": "ComplianceValidator",
          "kind": "class",
          "line": 27,
          "used": true,
          "used_by": [
            "lukhas/ethics/compliance/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_governance_component",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.glyph_ethics_validator": {
      "metrics": {
        "total_symbols": 59,
        "used_symbols": 0,
        "unused_symbols": 59,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.10606060606060606
      },
      "symbols": [
        {
          "name": "EthicalViolationType",
          "kind": "class",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValidationResult",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalConstraint",
          "kind": "dataclass",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValidationReport",
          "kind": "dataclass",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlyphEthicsValidator",
          "kind": "class",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "constraint_id",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "constraint_type",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "applies_to",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "glyph_types",
          "kind": "type_alias",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validation_function",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameters",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_applicable",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "validation_id",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "glyph_id",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "operation",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violations",
          "kind": "type_alias",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "warnings",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_score",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "safety_score",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reviewer_notes",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_approved",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_safe",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_glyph_creation",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "validate_glyph_mutation",
          "kind": "function",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "validate_glyph_fusion",
          "kind": "function",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "validate_glyph_decay",
          "kind": "function",
          "line": 346,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_ethical_constraints",
          "kind": "function",
          "line": 407,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_content_filters",
          "kind": "function",
          "line": 462,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_validate_content_safety",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 18,
          "has_docstring": true
        },
        {
          "name": "_validate_emotional_boundaries",
          "kind": "function",
          "line": 521,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_validate_symbolic_integrity",
          "kind": "function",
          "line": 546,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_validate_privacy_compliance",
          "kind": "function",
          "line": 565,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_validate_mutation_authorization",
          "kind": "function",
          "line": 590,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_validate_mutation_impact",
          "kind": "function",
          "line": 606,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_validate_mutation_continuity",
          "kind": "function",
          "line": 627,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_validate_fusion_compatibility",
          "kind": "function",
          "line": 646,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_validate_fusion_consent",
          "kind": "function",
          "line": 666,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_validate_fusion_result_integrity",
          "kind": "function",
          "line": 677,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_validate_memory_preservation",
          "kind": "function",
          "line": 691,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_validate_decay_dependencies",
          "kind": "function",
          "line": 706,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_validate_data_retention",
          "kind": "function",
          "line": 720,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_ethical_score",
          "kind": "function",
          "line": 733,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_safety_score",
          "kind": "function",
          "line": 762,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_decay_ethical_score",
          "kind": "function",
          "line": 788,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_decay_safety_score",
          "kind": "function",
          "line": 808,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_determine_validation_result",
          "kind": "function",
          "line": 828,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_determine_decay_validation_result",
          "kind": "function",
          "line": 858,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_creation_recommendations",
          "kind": "function",
          "line": 872,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_mutation_recommendations",
          "kind": "function",
          "line": 890,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_fusion_recommendations",
          "kind": "function",
          "line": 906,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_decay_recommendations",
          "kind": "function",
          "line": 922,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_glyphs_have_conflicting_ethics",
          "kind": "function",
          "line": 937,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_validation_statistics",
          "kind": "function",
          "line": 960,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.fallback.ethics_layer": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.030303030303030304
      },
      "symbols": [
        {
          "name": "FallbackEthicsLayer",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "is_allowed",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.governor.dao_controller": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07575757575757576
      },
      "symbols": [
        {
          "name": "DAOGovernanceNode",
          "kind": "class",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_council",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_proposal",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_proposal",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "vote_on_proposal",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_check_proposal_status",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_execute_proposal",
          "kind": "function",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_execute_system_update",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_execute_ethical_decision",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_execute_resource_allocation",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_simulate_voting",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.security.emergency_override": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 3,
        "unused_symbols": 0,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06060606060606061
      },
      "symbols": [
        {
          "name": "check_safety_flags",
          "kind": "function",
          "line": 17,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py"
          ],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "shutdown_systems",
          "kind": "function",
          "line": 32,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py"
          ],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_incident",
          "kind": "function",
          "line": 40,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py"
          ],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.security.security_engine": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 1,
        "unused_symbols": 4,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.2,
        "cohesion_score": 0.0,
        "coupling_score": 0.015151515151515152
      },
      "symbols": [
        {
          "name": "SecurityEngine",
          "kind": "class",
          "line": 7,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "validate_request",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "detect_threats",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "sanitize_data",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.ethical_reasoning_system": {
      "metrics": {
        "total_symbols": 73,
        "used_symbols": 0,
        "unused_symbols": 73,
        "import_count": 26,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.3939393939393939
      },
      "symbols": [
        {
          "name": "EthicalFramework",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MoralPrinciple",
          "kind": "class",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "StakeholderType",
          "kind": "class",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalDilemmaType",
          "kind": "class",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MoralJudgment",
          "kind": "dataclass",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValueAlignment",
          "kind": "dataclass",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalConstraint",
          "kind": "dataclass",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DeontologicalReasoner",
          "kind": "class",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsequentialistReasoner",
          "kind": "class",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValueAlignmentSystem",
          "kind": "class",
          "line": 886,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalReasoningSystem",
          "kind": "class",
          "line": 1286,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "judgment_id",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_question",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommended_action",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "moral_justification",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_score",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uncertainty_factors",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stakeholder_impacts",
          "kind": "type_alias",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "principle_weights",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "framework_consensus",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cultural_considerations",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "potential_harms",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mitigation_strategies",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment_id",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_values",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_values",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment_score",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "value_drift_rate",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "misalignment_risks",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment_interventions",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_in_alignment",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "constraint_id",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "constraint_type",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority_level",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hard_constraint",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enforcement_mechanism",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violation_consequences",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "contextual_exceptions",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stakeholder_source",
          "kind": "type_alias",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cultural_context",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 1291,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_generate_universalization_reasoning",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_humanity_reasoning",
          "kind": "function",
          "line": 337,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_kingdom_reasoning",
          "kind": "function",
          "line": 409,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_relevant_duties",
          "kind": "function",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_find_duty_conflicts",
          "kind": "function",
          "line": 451,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_resolve_duty_conflicts",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_calculate_deontological_confidence",
          "kind": "function",
          "line": 494,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_preference_satisfaction",
          "kind": "function",
          "line": 698,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_affects_capability",
          "kind": "function",
          "line": 780,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_priority_weighted_aggregation",
          "kind": "function",
          "line": 801,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_consequentialist_confidence",
          "kind": "function",
          "line": 841,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_utilitarian_justification",
          "kind": "function",
          "line": 867,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_identify_relevant_values",
          "kind": "function",
          "line": 1047,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_values_from_text",
          "kind": "function",
          "line": 1076,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_value_drift_rate",
          "kind": "function",
          "line": 1218,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_misalignment_risks",
          "kind": "function",
          "line": 1237,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_suggest_alignment_interventions",
          "kind": "function",
          "line": 1263,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_initialize_default_constraints",
          "kind": "function",
          "line": 1313,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_drift_detector",
          "kind": "function",
          "line": 1365,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_constraint_violation_judgment",
          "kind": "function",
          "line": 1528,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_estimate_impact_magnitude",
          "kind": "function",
          "line": 1587,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_estimate_impact_valence",
          "kind": "function",
          "line": 1606,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_specific_impacts",
          "kind": "function",
          "line": 1625,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_mitigation_needs",
          "kind": "function",
          "line": 1640,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_uncertainty_factors",
          "kind": "function",
          "line": 1677,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_calculate_overall_confidence",
          "kind": "function",
          "line": 1852,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_principle_weights",
          "kind": "function",
          "line": 1885,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_framework_consensus",
          "kind": "function",
          "line": 1919,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_identify_potential_harms",
          "kind": "function",
          "line": 1944,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_mitigation_strategies",
          "kind": "function",
          "line": 1987,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.security.main_node_security_engine": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.24242424242424243
      },
      "symbols": [
        {
          "name": "MainNodeSecurityEngine",
          "kind": "class",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "init_components",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_event_handlers",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_duration",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_memory_usage",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_save_system_state",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.security.flagship_security_engine": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.19696969696969696
      },
      "symbols": [
        {
          "name": "LukhasFlagshipSecurityEngine",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.security.privacy": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.015151515151515152
      },
      "symbols": [
        {
          "name": "PrivacyManager",
          "kind": "class",
          "line": 6,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.governor.lambda_governor": {
      "metrics": {
        "total_symbols": 52,
        "used_symbols": 8,
        "unused_symbols": 44,
        "import_count": 12,
        "export_count": 1,
        "connectivity_score": 0.15384615384615385,
        "cohesion_score": 0.0,
        "coupling_score": 0.18181818181818182
      },
      "symbols": [
        {
          "name": "ActionDecision",
          "kind": "class",
          "line": 69,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EscalationSource",
          "kind": "class",
          "line": 79,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EscalationPriority",
          "kind": "class",
          "line": 91,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EscalationSignal",
          "kind": "dataclass",
          "line": 102,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ArbitrationResponse",
          "kind": "dataclass",
          "line": 153,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InterventionExecution",
          "kind": "dataclass",
          "line": 175,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LambdaGovernor",
          "kind": "class",
          "line": 199,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_escalation_signal",
          "kind": "function",
          "line": 967,
          "used": true,
          "used_by": [
            "lukhas/ethics/governor/__init__.py"
          ],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "signal_id",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source_module",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "triggering_metric",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotion_volatility",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "contradiction_density",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_ids",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbol_ids",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommended_action",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_urgency_score",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "response_id",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_score",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_tags",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "affected_symbols",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quarantine_scope",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rollback_plan",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mesh_notifications",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_id",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_status",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "affected_systems",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_log",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rollback_available",
          "kind": "constant",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "add_log_entry",
          "kind": "function",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_mesh_router",
          "kind": "function",
          "line": 754,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_dream_coordinator",
          "kind": "function",
          "line": 759,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_memory_manager",
          "kind": "function",
          "line": 764,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_subsystem_callback",
          "kind": "function",
          "line": 769,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_governor_status",
          "kind": "function",
          "line": 774,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_decision_confidence",
          "kind": "function",
          "line": 801,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_intervention_tags",
          "kind": "function",
          "line": 830,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_generate_reasoning",
          "kind": "function",
          "line": 856,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_determine_quarantine_scope",
          "kind": "function",
          "line": 889,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_rollback_plan",
          "kind": "function",
          "line": 910,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_stats",
          "kind": "function",
          "line": 935,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_is_recent",
          "kind": "function",
          "line": 947,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.stabilization.tuner": {
      "metrics": {
        "total_symbols": 38,
        "used_symbols": 0,
        "unused_symbols": 38,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.19696969696969696
      },
      "symbols": [
        {
          "name": "StabilizationAction",
          "kind": "dataclass",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EntanglementTrend",
          "kind": "dataclass",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicStabilizer",
          "kind": "class",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdaptiveEntanglementStabilizer",
          "kind": "class",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 708,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "subsystem_pair",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "instability_type",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stabilizers_applied",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "justification",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "auto_applied",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success_score",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pair",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamps",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "strengths",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coherences",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase_diffs",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conflict_risks",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "add_datapoint",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_trend_slope",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "is_unstable",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_stabilizer",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_applicable_stabilizers",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "monitor_entanglement",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_synthetic_log_data",
          "kind": "function",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_trends",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "detect_instability",
          "kind": "function",
          "line": 382,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_in_cooldown_period",
          "kind": "function",
          "line": 425,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "select_stabilizers",
          "kind": "function",
          "line": 438,
          "used": false,
          "used_by": [],
          "complexity": 16,
          "has_docstring": true
        },
        {
          "name": "apply_symbolic_correction",
          "kind": "function",
          "line": 503,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_inject_stabilizer",
          "kind": "function",
          "line": 565,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_severity",
          "kind": "function",
          "line": 587,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_justification",
          "kind": "function",
          "line": 602,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "emit_tuning_log",
          "kind": "function",
          "line": 626,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_stabilization_status",
          "kind": "function",
          "line": 689,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.training.alignment_overseer": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "train_overseer_from_scenarios",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "pattern_counts",
          "kind": "constant",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.security.secure_utils": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 4,
        "unused_symbols": 4,
        "import_count": 6,
        "export_count": 2,
        "connectivity_score": 0.5,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "SecurityError",
          "kind": "class",
          "line": 15,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "safe_eval",
          "kind": "function",
          "line": 19,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py",
            "lukhas/ethics/security/security_engine.py"
          ],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_is_safe_ast",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "safe_subprocess_run",
          "kind": "function",
          "line": 107,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py",
            "lukhas/ethics/security/security_engine.py"
          ],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_validate_command",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "sanitize_input",
          "kind": "function",
          "line": 201,
          "used": true,
          "used_by": [
            "lukhas/ethics/security/__init__.py",
            "lukhas/ethics/security/security_engine.py"
          ],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "secure_file_path",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_env_var",
          "kind": "function",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.tools.quantum_mesh_visualizer": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 0,
        "unused_symbols": 20,
        "import_count": 18,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.2727272727272727
      },
      "symbols": [
        {
          "name": "QuantumMeshVisualizer",
          "kind": "class",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 997,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_setup_color_schemes",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "load_entanglement_data",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_load_live_data",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_load_from_logs",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_synthetic_data",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "generate_entanglement_heatmap",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "plot_phase_synchronization",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "list_active_conflict_pairs",
          "kind": "function",
          "line": 468,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "generate_interactive_dashboard",
          "kind": "function",
          "line": 538,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_generate_static_dashboard",
          "kind": "function",
          "line": 735,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "export_visual_summary",
          "kind": "function",
          "line": 752,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_export_markdown_report",
          "kind": "function",
          "line": 774,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_export_html_report",
          "kind": "function",
          "line": 860,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_export_json_snapshot",
          "kind": "function",
          "line": 869,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_html_template",
          "kind": "function",
          "line": 882,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_format_conflicts_html",
          "kind": "function",
          "line": 953,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_format_entanglements_html",
          "kind": "function",
          "line": 975,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.utils.tag_misinterpretation_sim": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "simulate_misinterpretation_scenarios",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "scenarios",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.safety.entropy_tuning": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.015151515151515152
      },
      "symbols": [
        {
          "name": "final_entropy_tune",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "recheck_entropy",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.sentinel.ethical_sentinel_dashboard": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.19696969696969696
      },
      "symbols": [
        {
          "name": "initialize_sentinel",
          "kind": "function",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_risk_gauge",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_violation_timeline",
          "kind": "function",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "create_symbol_health_charts",
          "kind": "function",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "format_violation",
          "kind": "function",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.safety.compliance_hooks": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07575757575757576
      },
      "symbols": [
        {
          "name": "compliance_drift_detect",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "log_compliance_event",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.safety.integration_bridge": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "LUKHASSafetyBridge",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.sentinel.ethical_drift_sentinel": {
      "metrics": {
        "total_symbols": 49,
        "used_symbols": 0,
        "unused_symbols": 49,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.16666666666666666
      },
      "symbols": [
        {
          "name": "EscalationTier",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ViolationType",
          "kind": "class",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalViolation",
          "kind": "dataclass",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InterventionAction",
          "kind": "dataclass",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalState",
          "kind": "dataclass",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalDriftSentinel",
          "kind": "class",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "phase_harmonics_score",
          "kind": "function",
          "line": 772,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "violation_id",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbol_id",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violation_type",
          "kind": "type_alias",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_score",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_required",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_status",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "action_id",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action_type",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_symbol",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameters",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coherence_score",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_stability",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "contradiction_level",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_phase_alignment",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_velocity",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "glyph_entropy",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_updated",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violation_history",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_count",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "calculate_risk_score",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_detect_violations",
          "kind": "function",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_create_violation",
          "kind": "function",
          "line": 391,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_log_violation",
          "kind": "function",
          "line": 550,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_log_escalation",
          "kind": "function",
          "line": 574,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_check_cascade_conditions",
          "kind": "function",
          "line": 589,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_is_recent",
          "kind": "function",
          "line": 620,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_determine_severity",
          "kind": "function",
          "line": 629,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_severity_rank",
          "kind": "function",
          "line": 636,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_ethical_state",
          "kind": "function",
          "line": 646,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_ethical_state",
          "kind": "function",
          "line": 659,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_sentinel_status",
          "kind": "function",
          "line": 693,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_system_risk",
          "kind": "function",
          "line": 716,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_symbol",
          "kind": "function",
          "line": 736,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "unregister_symbol",
          "kind": "function",
          "line": 753,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.safety.compliance_digest": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07575757575757576
      },
      "symbols": [
        {
          "name": "load_emergency_logs",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "generate_digest",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "plot_bar",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.simulations.colony_dilemma_simulation": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.15151515151515152
      },
      "symbols": [
        {
          "name": "DivergenceReport",
          "kind": "dataclass",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_tag_difference",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "measure_divergence",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "step",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "divergence",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "details",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reports",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.self_reflective_debugger": {
      "metrics": {
        "total_symbols": 141,
        "used_symbols": 0,
        "unused_symbols": 141,
        "import_count": 20,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.30303030303030304
      },
      "symbols": [
        {
          "name": "EnhancedAnomalyType",
          "kind": "class",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveHealthStatus",
          "kind": "class",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveState",
          "kind": "dataclass",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedReasoningChain",
          "kind": "dataclass",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedSelfReflectiveDebugger",
          "kind": "class",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "state_id",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_status",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active_reasoning_chains",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cognitive_load",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_pressure",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_efficiency",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_stability",
          "kind": "constant",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_alignment_score",
          "kind": "constant",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hds_simulation_count",
          "kind": "constant",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpi_analysis_depth",
          "kind": "constant",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ppmv_privacy_level",
          "kind": "constant",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "xil_explanation_quality",
          "kind": "constant",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hitlo_human_interaction_rate",
          "kind": "constant",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meta_cognitive_awareness",
          "kind": "constant",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_module_coherence",
          "kind": "constant",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "predictive_accuracy",
          "kind": "constant",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anomaly_detection_sensitivity",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "chain_id",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "steps",
          "kind": "constant",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_tags",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "started_at",
          "kind": "constant",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "completed_at",
          "kind": "constant",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hds_scenarios_used",
          "kind": "constant",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpi_graphs_referenced",
          "kind": "constant",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ppmv_memories_accessed",
          "kind": "constant",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "xil_explanations_generated",
          "kind": "constant",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hitlo_reviews_triggered",
          "kind": "constant",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_processing_time",
          "kind": "constant",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cognitive_load_impact",
          "kind": "constant",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_module_calls",
          "kind": "constant",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anomalies_detected",
          "kind": "constant",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_initialize_ceo_integration",
          "kind": "function",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "stop_monitoring",
          "kind": "function",
          "line": 339,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "begin_enhanced_reasoning_chain",
          "kind": "function",
          "line": 349,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_detect_basic_anomalies",
          "kind": "function",
          "line": 530,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_step_module_interactions",
          "kind": "function",
          "line": 684,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_chain_module_history",
          "kind": "function",
          "line": 716,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_module_correlation",
          "kind": "function",
          "line": 742,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_reasoning_pipeline_coherence",
          "kind": "function",
          "line": 782,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_decision_making_consistency",
          "kind": "function",
          "line": 815,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_calculate_memory_explanation_alignment",
          "kind": "function",
          "line": 845,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_temporal_consistency",
          "kind": "function",
          "line": 877,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_workflow_progression",
          "kind": "function",
          "line": 908,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_calculate_processing_time_correlation",
          "kind": "function",
          "line": 947,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_confidence_module_correlation",
          "kind": "function",
          "line": 982,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_error_propagation",
          "kind": "function",
          "line": 1017,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_overall_integration_score",
          "kind": "function",
          "line": 1043,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_anomaly_risk_score",
          "kind": "function",
          "line": 1061,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_stability_index",
          "kind": "function",
          "line": 1087,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_module_activation_sequence",
          "kind": "function",
          "line": 1100,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_extract_data_flow_patterns",
          "kind": "function",
          "line": 1112,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_extract_latency_trends",
          "kind": "function",
          "line": 1129,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_extract_error_patterns",
          "kind": "function",
          "line": 1141,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_detect_integration_failures",
          "kind": "function",
          "line": 1152,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_detect_workflow_sync_errors",
          "kind": "function",
          "line": 1215,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_detect_cross_module_data_corruption",
          "kind": "function",
          "line": 1269,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_detect_integration_performance_issues",
          "kind": "function",
          "line": 1327,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_correlation_matrix",
          "kind": "function",
          "line": 1393,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_correlation_statistics",
          "kind": "function",
          "line": 1435,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_correlation_trends",
          "kind": "function",
          "line": 1469,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_calculate_metric_trend",
          "kind": "function",
          "line": 1500,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_identify_problematic_modules",
          "kind": "function",
          "line": 1543,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_active_errors",
          "kind": "function",
          "line": 1563,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_fallback_models",
          "kind": "function",
          "line": 1724,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_decision_tree",
          "kind": "function",
          "line": 1741,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_predictive_features",
          "kind": "function",
          "line": 1762,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_module_latency_variance",
          "kind": "function",
          "line": 1857,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_data_flow_completeness",
          "kind": "function",
          "line": 1872,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_confidence_trend",
          "kind": "function",
          "line": 1886,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_performance_trend",
          "kind": "function",
          "line": 1894,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_chain_complexity",
          "kind": "function",
          "line": 1902,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_recent_anomaly_rate",
          "kind": "function",
          "line": 1918,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_predict_confidence",
          "kind": "function",
          "line": 1980,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_predict_performance",
          "kind": "function",
          "line": 2003,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_predict_anomaly_probability",
          "kind": "function",
          "line": 2026,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_traverse_decision_tree",
          "kind": "function",
          "line": 2053,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_predict_next_modules",
          "kind": "function",
          "line": 2067,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_predict_risk_score",
          "kind": "function",
          "line": 2098,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_prediction_deviations",
          "kind": "function",
          "line": 2117,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_fallback_predictions",
          "kind": "function",
          "line": 2139,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_ml_predictions",
          "kind": "function",
          "line": 2150,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_identify_anomaly_contributors",
          "kind": "function",
          "line": 2256,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_analyze_confidence_time_series",
          "kind": "function",
          "line": 2308,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_analyze_performance_time_series",
          "kind": "function",
          "line": 2360,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_analyze_module_usage_time_series",
          "kind": "function",
          "line": 2411,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_trend_anomalies",
          "kind": "function",
          "line": 2451,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_oscillation_score",
          "kind": "function",
          "line": 2483,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_detect_pattern_based_anomalies",
          "kind": "function",
          "line": 2500,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_matches_pattern",
          "kind": "function",
          "line": 2545,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "_get_anomaly_type_for_pattern",
          "kind": "function",
          "line": 2604,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_severity_for_pattern",
          "kind": "function",
          "line": 2614,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_evaluate_exponential_smoothing",
          "kind": "function",
          "line": 2736,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_confidence_trend",
          "kind": "function",
          "line": 2903,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_variance",
          "kind": "function",
          "line": 2916,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_chain_efficiency",
          "kind": "function",
          "line": 2923,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_analyze_anomaly_severity_distribution",
          "kind": "function",
          "line": 2935,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_anomaly_types",
          "kind": "function",
          "line": 2946,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_chain_recommendations",
          "kind": "function",
          "line": 2958,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_enhanced_monitoring_loop",
          "kind": "function",
          "line": 3040,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_update_cognitive_state",
          "kind": "function",
          "line": 3060,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_cognitive_load",
          "kind": "function",
          "line": 3079,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_processing_efficiency",
          "kind": "function",
          "line": 3087,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_ethical_alignment",
          "kind": "function",
          "line": 3099,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_meta_cognitive_awareness",
          "kind": "function",
          "line": 3104,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_overall_health_score",
          "kind": "function",
          "line": 3109,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_monitor_ceo_modules",
          "kind": "function",
          "line": 3119,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_cleanup_old_data",
          "kind": "function",
          "line": 3124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_chain_metrics",
          "kind": "function",
          "line": 3135,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_cognitive_health_status",
          "kind": "function",
          "line": 3150,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_enhanced_metrics",
          "kind": "function",
          "line": 3167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_anomaly_summary",
          "kind": "function",
          "line": 3178,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_most_common_anomaly_types",
          "kind": "function",
          "line": 3205,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "AnomalyType",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SeverityLevel",
          "kind": "class",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ReviewTrigger",
          "kind": "class",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ReasoningStep",
          "kind": "dataclass",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ReasoningAnomaly",
          "kind": "dataclass",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "step_id",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "operation",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "inputs",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "outputs",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_usage",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anomaly_id",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anomaly_type",
          "kind": "type_alias",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "detected_at",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evidence",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "suggested_actions",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "human_review_required",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.compliance.engine": {
      "metrics": {
        "total_symbols": 49,
        "used_symbols": 0,
        "unused_symbols": 49,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.12121212121212122
      },
      "symbols": [
        {
          "name": "_CorePrivateEthicsEngine",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_LucasPrivateEthicsGuard",
          "kind": "class",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdvancedComplianceEthicsEngine",
          "kind": "class",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 416,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "evaluate_action",
          "kind": "function",
          "line": 453,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_action_type",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": false
        },
        {
          "name": "_extract_content",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": false
        },
        {
          "name": "_evaluate_against_framework",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_utilitarian",
          "kind": "function",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_deontological",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_evaluate_virtue_ethics",
          "kind": "function",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_justice",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_care_ethics",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_against_principle",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_non_maleficence",
          "kind": "function",
          "line": 226,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_beneficence",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_evaluate_autonomy",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_justice_principle",
          "kind": "function",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_evaluate_transparency",
          "kind": "function",
          "line": 258,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_evaluate_privacy",
          "kind": "function",
          "line": 269,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "suggest_alternatives",
          "kind": "function",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        },
        {
          "name": "increase_scrutiny_level",
          "kind": "function",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "reset_scrutiny_level",
          "kind": "function",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "incorporate_feedback",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": false
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_add_to_history",
          "kind": "function",
          "line": 317,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_ensure_log_dir",
          "kind": "function",
          "line": 441,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_build_default_legal_knowledge_graph",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_build_default_sensitive_vocab",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_access",
          "kind": "function",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "log_violation",
          "kind": "function",
          "line": 373,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "check_cultural_context",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "evaluate_action_ethics",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "suggest_ethical_alternatives",
          "kind": "function",
          "line": 457,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_core_ethics_metrics",
          "kind": "function",
          "line": 460,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "incorporate_ethics_feedback",
          "kind": "function",
          "line": 463,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "anonymize_metadata",
          "kind": "function",
          "line": 467,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        },
        {
          "name": "should_retain_data",
          "kind": "function",
          "line": 481,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_voice_data_compliance",
          "kind": "function",
          "line": 489,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": false
        },
        {
          "name": "validate_content_against_harmful_patterns",
          "kind": "function",
          "line": 513,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "generate_compliance_report",
          "kind": "function",
          "line": 532,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_generate_anonymous_id",
          "kind": "function",
          "line": 547,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_data_access_permission",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_cultural_appropriateness",
          "kind": "function",
          "line": 557,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "perform_ethics_drift_detection",
          "kind": "function",
          "line": 562,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_log_ethics_drift_event",
          "kind": "function",
          "line": 600,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_overall_compliance_status",
          "kind": "function",
          "line": 609,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_get_last_drift_log_summary",
          "kind": "function",
          "line": 627,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "get_score",
          "kind": "function",
          "line": 574,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.policy_engines.integration": {
      "metrics": {
        "total_symbols": 15,
        "used_symbols": 0,
        "unused_symbols": 15,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07575757575757576
      },
      "symbols": [
        {
          "name": "GovernanceDecision",
          "kind": "dataclass",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PolicyEngineIntegration",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_policy_engine",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "evaluate_with_policies",
          "kind": "function",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "action",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "requester",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_level",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_policy_decision",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "initialize_default_policies",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "evaluate_governance_decision",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "add_custom_policy",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_policy_metrics",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.policy_engines.examples.gpt4_policy": {
      "metrics": {
        "total_symbols": 19,
        "used_symbols": 2,
        "unused_symbols": 17,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.10526315789473684,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "GPT4Config",
          "kind": "dataclass",
          "line": 46,
          "used": true,
          "used_by": [
            "lukhas/ethics/policy_engines/examples/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GPT4Policy",
          "kind": "class",
          "line": 56,
          "used": true,
          "used_by": [
            "lukhas/ethics/policy_engines/examples/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "model",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "temperature",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_tokens",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_prompt",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_caching",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cache_ttl_seconds",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_policy_name",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_policy_version",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "initialize",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "evaluate_decision",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_get_default_system_prompt",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_prepare_evaluation_prompt",
          "kind": "function",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_template_response",
          "kind": "function",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_parse_gpt_response",
          "kind": "function",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_get_cache_key",
          "kind": "function",
          "line": 326,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 352,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.policy_engines.base": {
      "metrics": {
        "total_symbols": 40,
        "used_symbols": 6,
        "unused_symbols": 34,
        "import_count": 6,
        "export_count": 8,
        "connectivity_score": 0.15,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "RiskLevel",
          "kind": "class",
          "line": 39,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/hitlo_bridge.py",
            "lukhas/ethics/meg_bridge.py",
            "lukhas/ethics/orchestrator.py",
            "lukhas/ethics/policy_engines/examples/three_laws.py",
            "lukhas/ethics/policy_engines/integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Decision",
          "kind": "dataclass",
          "line": 48,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/hitlo_bridge.py",
            "lukhas/ethics/meg_bridge.py",
            "lukhas/ethics/orchestrator.py",
            "lukhas/ethics/policy_engines/__init__.py",
            "lukhas/ethics/policy_engines/examples/gpt4_policy.py",
            "lukhas/ethics/policy_engines/examples/three_laws.py",
            "lukhas/ethics/policy_engines/integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsEvaluation",
          "kind": "dataclass",
          "line": 67,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/hitlo_bridge.py",
            "lukhas/ethics/meg_bridge.py",
            "lukhas/ethics/orchestrator.py",
            "lukhas/ethics/policy_engines/__init__.py",
            "lukhas/ethics/policy_engines/examples/gpt4_policy.py",
            "lukhas/ethics/policy_engines/examples/three_laws.py",
            "lukhas/ethics/policy_engines/integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PolicyValidationError",
          "kind": "class",
          "line": 92,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/policy_engines/__init__.py",
            "lukhas/ethics/policy_engines/examples/gpt4_policy.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsPolicy",
          "kind": "class",
          "line": 97,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/policy_engines/__init__.py",
            "lukhas/ethics/policy_engines/examples/gpt4_policy.py",
            "lukhas/ethics/policy_engines/examples/three_laws.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PolicyRegistry",
          "kind": "class",
          "line": 282,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/orchestrator.py",
            "lukhas/ethics/policy_engines/__init__.py",
            "lukhas/ethics/policy_engines/integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "action",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_state",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "glyphs",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "requester_id",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "urgency",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "allowed",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_flags",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_impact",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_alignment",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collapse_risk",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "policy_name",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluation_time_ms",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "evaluate_decision",
          "kind": "function",
          "line": 331,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_policy_name",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_policy_version",
          "kind": "function",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_symbolic_alignment",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "assess_drift_risk",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "assess_collapse_risk",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "initialize",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_metrics",
          "kind": "function",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "register_policy",
          "kind": "function",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "unregister_policy",
          "kind": "function",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_consensus_evaluation",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_active_policies",
          "kind": "function",
          "line": 427,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_policy_metrics",
          "kind": "function",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.ethics.simulations.lambda_shield_tester": {
      "metrics": {
        "total_symbols": 51,
        "used_symbols": 0,
        "unused_symbols": 51,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.22727272727272727
      },
      "symbols": [
        {
          "name": "AttackVectorType",
          "kind": "class",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SimulationStatus",
          "kind": "class",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SyntheticViolation",
          "kind": "dataclass",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FirewallResponse",
          "kind": "dataclass",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SimulationReport",
          "kind": "dataclass",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LambdaShieldTester",
          "kind": "class",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "violation_id",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violation_type",
          "kind": "type_alias",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "attack_vector",
          "kind": "type_alias",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity_target",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "injected_values",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "affected_symbols",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "attack_metadata",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expected_detection",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stealth_factor",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "response_id",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "detected",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "detection_latency_ms",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "escalation_tier",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_action",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sentinel_confidence",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "governor_confidence",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_metadata",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "simulation_id",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_violations",
          "kind": "constant",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "detected_violations",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "undetected_violations",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "false_positives",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "detection_coverage",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_response_time_ms",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violations_by_type",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity_distribution",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sim_fail_flags",
          "kind": "constant",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "calculate_metrics",
          "kind": "function",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_synthetic_violations",
          "kind": "function",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_violation_values",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_mock_escalation_tier",
          "kind": "function",
          "line": 596,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_mock_intervention_action",
          "kind": "function",
          "line": 613,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "record_response_log",
          "kind": "function",
          "line": 633,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "output_firewall_report",
          "kind": "function",
          "line": 677,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_simulation_report",
          "kind": "function",
          "line": 716,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 790,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": true
        },
        {
          "name": "_generate_markdown_report",
          "kind": "function",
          "line": 856,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_json_report",
          "kind": "function",
          "line": 952,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ViolationType",
          "kind": "class",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EscalationTier",
          "kind": "class",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ActionDecision",
          "kind": "class",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.ethics.policy_engines.examples.three_laws": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 1,
        "unused_symbols": 9,
        "import_count": 4,
        "export_count": 2,
        "connectivity_score": 0.1,
        "cohesion_score": 0.0,
        "coupling_score": 0.06060606060606061
      },
      "symbols": [
        {
          "name": "ThreeLawsPolicy",
          "kind": "class",
          "line": 43,
          "used": true,
          "used_by": [
            "lukhas/ethics/__init__.py",
            "lukhas/ethics/policy_engines/examples/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_policy_name",
          "kind": "function",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_policy_version",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "evaluate_decision",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_evaluate_first_law",
          "kind": "function",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": 28,
          "has_docstring": true
        },
        {
          "name": "_evaluate_second_law",
          "kind": "function",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_evaluate_third_law",
          "kind": "function",
          "line": 350,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_calculate_drift_impact",
          "kind": "function",
          "line": 398,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "validate_symbolic_alignment",
          "kind": "function",
          "line": 445,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    }
  },
  "missed_opportunities": [
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.service has 9 unused public symbols",
      "affected_files": [
        "lukhas.ethics.service"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicsService, assess_action, check_compliance, evaluate_safety, audit_decision..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.compliance_engine has 12 unused public symbols",
      "affected_files": [
        "lukhas.ethics.compliance_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComplianceEngine, anonymize_metadata, should_retain_data, check_voice_data_compliance, validate_content_against_ethical_constraints..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.compliance_simple has 18 unused public symbols",
      "affected_files": [
        "lukhas.ethics.compliance_simple"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicsViolationType, ComplianceFramework, ComplianceViolation, EthicsValidationResult, EthicsComplianceEngine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.compliance has 18 unused public symbols",
      "affected_files": [
        "lukhas.ethics.compliance"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicsViolationType, ComplianceFramework, ComplianceViolation, EthicsValidationResult, EthicsComplianceEngine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.meta_ethics_governor has 45 unused public symbols",
      "affected_files": [
        "lukhas.ethics.meta_ethics_governor"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicalPrinciple, EthicalFrameworkEngine, DeontologicalEngine, ConsequentialistEngine, ethical_checkpoint..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.compliance_engine20250503213400_p95 has 7 unused public symbols",
      "affected_files": [
        "lukhas.ethics.compliance_engine20250503213400_p95"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: Complianceengine, anonymize_metadata, should_retain_data, check_voice_data_compliance, validate_content_against_ethical_constraints..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.batch_guard has 13 unused public symbols",
      "affected_files": [
        "lukhas.ethics.batch_guard"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicsLevel, ComplianceStatus, EthicsResult, EthicsBatchGuard, create_ethics_guard..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.ethical_drift_detector has 10 unused public symbols",
      "affected_files": [
        "lukhas.ethics.ethical_drift_detector"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: load_ethics_config, calculate_weighted_drift_score, apply_violation_tagging, check_escalation_requirements, enrich_trace_metadata..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.decision_node has 7 unused public symbols",
      "affected_files": [
        "lukhas.ethics.decision_node"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicsNode, evaluate_action, get_principle_weights, set_principle_weight, analyze_ethical_trends..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.ethical_auditor has 26 unused public symbols",
      "affected_files": [
        "lukhas.ethics.ethical_auditor"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AuditContext, AuditResult, EliteEthicalAuditor, module_name, module_type..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.export_report has 7 unused public symbols",
      "affected_files": [
        "lukhas.ethics.export_report"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicsReportExporter, export_ethics_report, export_comprehensive_ethics_report, export_multi_format, generate_dashboard_data..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.hitlo_bridge has 12 unused public symbols",
      "affected_files": [
        "lukhas.ethics.hitlo_bridge"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: name, condition, risk_threshold, collapse_threshold, drift_threshold..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.quantum_mesh_integrator has 27 unused public symbols",
      "affected_files": [
        "lukhas.ethics.quantum_mesh_integrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicsRiskLevel, EthicsSignalType, EthicalState, EthicsSignal, PhaseEntanglement..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.orchestrator has 31 unused public symbols",
      "affected_files": [
        "lukhas.ethics.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicsMode, EthicsConfiguration, EthicsAuditEntry, UnifiedEthicsOrchestrator, get_ethics_orchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.meg_guard has 15 unused public symbols",
      "affected_files": [
        "lukhas.ethics.meg_guard"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: MEGConfig, MEG, demo_meg_usage, default_timeout, max_retries..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.meg_openai_guard has 10 unused public symbols",
      "affected_files": [
        "lukhas.ethics.meg_openai_guard"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: meg_chat_completion, meg_chat_completion_critical, meg_chat_completion_extended, meg_chat_completion_long, meg_generate_text..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.meg_bridge has 6 unused public symbols",
      "affected_files": [
        "lukhas.ethics.meg_bridge"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: ethics_decision_to_meg_decision, meg_evaluation_to_ethics_evaluation, get_cultural_context_info, get_meg_status, add_meg_callback..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.ethical_evaluator has 7 unused public symbols",
      "affected_files": [
        "lukhas.ethics.ethical_evaluator"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicalEvaluator, CollapseEngine, Memoria, evaluate, collapse..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.bases has 8 unused public symbols",
      "affected_files": [
        "lukhas.ethics.bases"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: ComplianceEngine, ComplianceFramework, ComplianceViolation, add_compliance_rule, check_compliance..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.lukhas_ethics_guard has 8 unused public symbols",
      "affected_files": [
        "lukhas.ethics.lukhas_ethics_guard"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: LegalComplianceAssistant, check_content_safety, check_privacy_compliance, ethical_review, comprehensive_compliance_check..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.glyph_ethics_validator has 32 unused public symbols",
      "affected_files": [
        "lukhas.ethics.glyph_ethics_validator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicalViolationType, ValidationResult, EthicalConstraint, ValidationReport, GlyphEthicsValidator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.ethical_reasoning_system has 42 unused public symbols",
      "affected_files": [
        "lukhas.ethics.ethical_reasoning_system"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicalFramework, MoralPrinciple, StakeholderType, EthicalDilemmaType, MoralJudgment..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.governor.lambda_governor has 36 unused public symbols",
      "affected_files": [
        "lukhas.ethics.governor.lambda_governor"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: signal_id, timestamp, source_module, priority, triggering_metric..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.stabilization.tuner has 30 unused public symbols",
      "affected_files": [
        "lukhas.ethics.stabilization.tuner"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: StabilizationAction, EntanglementTrend, SymbolicStabilizer, AdaptiveEntanglementStabilizer, main..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.tools.quantum_mesh_visualizer has 8 unused public symbols",
      "affected_files": [
        "lukhas.ethics.tools.quantum_mesh_visualizer"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: QuantumMeshVisualizer, main, load_entanglement_data, generate_entanglement_heatmap, plot_phase_synchronization..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.sentinel.ethical_drift_sentinel has 37 unused public symbols",
      "affected_files": [
        "lukhas.ethics.sentinel.ethical_drift_sentinel"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EscalationTier, ViolationType, EthicalViolation, InterventionAction, EthicalState..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.simulations.colony_dilemma_simulation has 6 unused public symbols",
      "affected_files": [
        "lukhas.ethics.simulations.colony_dilemma_simulation"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: DivergenceReport, measure_divergence, step, divergence, details..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.self_reflective_debugger has 64 unused public symbols",
      "affected_files": [
        "lukhas.ethics.self_reflective_debugger"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnhancedAnomalyType, CognitiveHealthStatus, CognitiveState, EnhancedReasoningChain, EnhancedSelfReflectiveDebugger..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.compliance.engine has 24 unused public symbols",
      "affected_files": [
        "lukhas.ethics.compliance.engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AdvancedComplianceEthicsEngine, evaluate_action, suggest_alternatives, increase_scrutiny_level, reset_scrutiny_level..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.policy_engines.integration has 14 unused public symbols",
      "affected_files": [
        "lukhas.ethics.policy_engines.integration"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: GovernanceDecision, PolicyEngineIntegration, get_policy_engine, evaluate_with_policies, action..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.policy_engines.examples.gpt4_policy has 11 unused public symbols",
      "affected_files": [
        "lukhas.ethics.policy_engines.examples.gpt4_policy"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: model, temperature, max_tokens, system_prompt, enable_caching..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.policy_engines.base has 31 unused public symbols",
      "affected_files": [
        "lukhas.ethics.policy_engines.base"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: action, context, symbolic_state, glyphs, timestamp..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.ethics.simulations.lambda_shield_tester has 43 unused public symbols",
      "affected_files": [
        "lukhas.ethics.simulations.lambda_shield_tester"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AttackVectorType, SimulationStatus, SyntheticViolation, FirewallResponse, SimulationReport..."
    },
    {
      "type": "god_module",
      "description": "Module lukhas.ethics.ethical_reasoning_system has too many dependencies (26)",
      "affected_files": [
        "lukhas.ethics.ethical_reasoning_system"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.ethics.legacy_ethics_jury is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.ethics.legacy_ethics_jury"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.ethics.policy_manager is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.ethics.policy_manager"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.ethics.ethics is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.ethics.ethics"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    }
  ],
  "dependency_graph": {
    "nodes": [
      "lukhas.ethics.service",
      "lukhas.ethics.compliance_engine",
      "lukhas.ethics.oscillating_conscience",
      "lukhas.ethics.ethical_guardian",
      "lukhas.ethics.monitor",
      "lukhas.ethics.legacy_ethics_jury",
      "lukhas.ethics.intrinsic_governor",
      "lukhas.ethics.compliance_simple",
      "lukhas.ethics.compliance",
      "lukhas.ethics.tier_enforcer",
      "lukhas.ethics.meta_ethics_governor",
      "lukhas.ethics.policy_manager",
      "lukhas.ethics.audit_ethics_monitor",
      "lukhas.ethics.community_feedback",
      "lukhas.ethics._spikethickness",
      "lukhas.ethics.redteam_sim",
      "lukhas.ethics.compliance_engine20250503213400_p95",
      "lukhas.ethics.batch_guard",
      "lukhas.ethics.ethical_drift_detector",
      "lukhas.ethics.engine",
      "lukhas.ethics.guardian",
      "lukhas.ethics.utils",
      "lukhas.ethics.governance_checker",
      "lukhas.ethics.decision_node",
      "lukhas.ethics.ethical_auditor",
      "lukhas.ethics.export_report",
      "lukhas.ethics.hitlo_bridge",
      "lukhas.ethics.extreme_ethical_testing",
      "lukhas.ethics.ethics",
      "lukhas.ethics.quantum_mesh_integrator",
      "lukhas.ethics.orchestrator",
      "lukhas.ethics.meg_guard",
      "lukhas.ethics.meg_openai_guard",
      "lukhas.ethics.meg_bridge",
      "lukhas.ethics.ethical_evaluator",
      "lukhas.ethics.bases",
      "lukhas.ethics.lukhas_ethics_guard",
      "lukhas.ethics.compliance_validator",
      "lukhas.ethics.glyph_ethics_validator",
      "lukhas.ethics.fallback.ethics_layer",
      "lukhas.ethics.governor.dao_controller",
      "lukhas.ethics.security.emergency_override",
      "lukhas.ethics.security.security_engine",
      "lukhas.ethics.ethical_reasoning_system",
      "lukhas.ethics.security.main_node_security_engine",
      "lukhas.ethics.security.flagship_security_engine",
      "lukhas.ethics.security.privacy",
      "lukhas.ethics.governor.lambda_governor",
      "lukhas.ethics.stabilization.tuner",
      "lukhas.ethics.training.alignment_overseer",
      "lukhas.ethics.security.secure_utils",
      "lukhas.ethics.tools.quantum_mesh_visualizer",
      "lukhas.ethics.utils.tag_misinterpretation_sim",
      "lukhas.ethics.safety.entropy_tuning",
      "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
      "lukhas.ethics.safety.compliance_hooks",
      "lukhas.ethics.safety.integration_bridge",
      "lukhas.ethics.sentinel.ethical_drift_sentinel",
      "lukhas.ethics.safety.compliance_digest",
      "lukhas.ethics.simulations.colony_dilemma_simulation",
      "lukhas.ethics.self_reflective_debugger",
      "lukhas.ethics.compliance.engine",
      "lukhas.ethics.policy_engines.integration",
      "lukhas.ethics.policy_engines.examples.gpt4_policy",
      "lukhas.ethics.policy_engines.base",
      "lukhas.ethics.simulations.lambda_shield_tester",
      "lukhas.ethics.policy_engines.examples.three_laws"
    ],
    "edges": [
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "random"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "math"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "importlib"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.compliance_engine",
        "to": "re"
      },
      {
        "from": "lukhas.ethics.service",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.ethics.service",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.service",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.service",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.service",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "ethics.self_reflective_debugger"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.meta_ethics_governor",
        "to": "abc"
      },
      {
        "from": "lukhas.ethics.monitor",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.monitor",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.monitor",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.ethical_guardian",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.ethical_guardian",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.oscillating_conscience",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.oscillating_conscience",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.oscillating_conscience",
        "to": "lukhas.bio.base_oscillator"
      },
      {
        "from": "lukhas.ethics.oscillating_conscience",
        "to": "math"
      },
      {
        "from": "lukhas.ethics.compliance",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.compliance",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.compliance",
        "to": "lukhas.ethics.types"
      },
      {
        "from": "lukhas.ethics.compliance",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.compliance",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.compliance",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.compliance",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.intrinsic_governor",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.intrinsic_governor",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.compliance_engine20250503213400_p95",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.compliance_engine20250503213400_p95",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.compliance_engine20250503213400_p95",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.compliance_engine20250503213400_p95",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.compliance_engine20250503213400_p95",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.compliance_engine20250503213400_p95",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.compliance_simple",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.compliance_simple",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.compliance_simple",
        "to": "lukhas.ethics.types"
      },
      {
        "from": "lukhas.ethics.compliance_simple",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.compliance_simple",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.compliance_simple",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.compliance_simple",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.batch_guard",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.batch_guard",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.batch_guard",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.batch_guard",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.batch_guard",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.batch_guard",
        "to": "re"
      },
      {
        "from": "lukhas.ethics.tier_enforcer",
        "to": "functools"
      },
      {
        "from": "lukhas.ethics.tier_enforcer",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.audit_ethics_monitor",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.audit_ethics_monitor",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.audit_ethics_monitor",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.audit_ethics_monitor",
        "to": "tools.lukhas_audit"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "core.symbolic.symbolic_tracer"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "yaml"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "hashlib"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.ethical_drift_detector",
        "to": "crypto"
      },
      {
        "from": "lukhas.ethics.__init__",
        "to": "lukhas.ethics.meg_bridge"
      },
      {
        "from": "lukhas.ethics.__init__",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.__init__",
        "to": "lukhas.ethics.hitlo_bridge"
      },
      {
        "from": "lukhas.ethics.__init__",
        "to": "lukhas.ethics.fallback"
      },
      {
        "from": "lukhas.ethics.__init__",
        "to": "lukhas.ethics.unified_ethics_orchestrator"
      },
      {
        "from": "lukhas.ethics.__init__",
        "to": "lukhas.ethics.policy_engines.examples.three_laws"
      },
      {
        "from": "lukhas.ethics.community_feedback",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.community_feedback",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.redteam_sim",
        "to": "__future__"
      },
      {
        "from": "lukhas.ethics.redteam_sim",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.redteam_sim",
        "to": "argparse"
      },
      {
        "from": "lukhas.ethics.redteam_sim",
        "to": "lukhas.ethics.ethical_guardian"
      },
      {
        "from": "lukhas.ethics.redteam_sim",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.redteam_sim",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.redteam_sim",
        "to": "json"
      },
      {
        "from": "lukhas.ethics._spikethickness",
        "to": "_plotly_utils.basevalidators"
      },
      {
        "from": "lukhas.ethics.decision_node",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.decision_node",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.decision_node",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.decision_node",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.decision_node",
        "to": "hashlib"
      },
      {
        "from": "lukhas.ethics.decision_node",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.export_report",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.export_report",
        "to": "yaml"
      },
      {
        "from": "lukhas.ethics.export_report",
        "to": "csv"
      },
      {
        "from": "lukhas.ethics.export_report",
        "to": "hashlib"
      },
      {
        "from": "lukhas.ethics.export_report",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.export_report",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.export_report",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.quantum_mesh_integrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "core.docututor.symbolic_knowledge_core.knowledge_graph"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "hashlib"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "openai"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "core.symbolic.drift.drift_score"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.ethical_auditor",
        "to": "re"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "reasoning.causal_program_inducer"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "creativity.dream.hyperspace_dream_simulator"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "collections"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "memory.privacy_preserving_memory_vault"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "communication.explainability_interface_layer"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "hashlib"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "core.integration.governance.__init__"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "threading"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "lukhas.orchestration.human_in_the_loop_orchestrator"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.self_reflective_debugger",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.engine",
        "to": "lukhas.ethics.guardian"
      },
      {
        "from": "lukhas.ethics.engine",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.guardian",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.utils",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.utils",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.glyph_ethics_validator",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.glyph_ethics_validator",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.glyph_ethics_validator",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.glyph_ethics_validator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.glyph_ethics_validator",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.glyph_ethics_validator",
        "to": "re"
      },
      {
        "from": "lukhas.ethics.glyph_ethics_validator",
        "to": "lukhas.core.symbolic.glyphs.glyph"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "lukhas.ethics.hitlo_bridge"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "lukhas.ethics.meg_bridge"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "lukhas.orchestration_src.brain.nodes.ethics_node"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "lukhas.orchestration_src.ethics_loop_guard"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "lukhas.ethics"
      },
      {
        "from": "lukhas.ethics.orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.governance_checker",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.governance_checker",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.governance_checker",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.hitlo_bridge",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.hitlo_bridge",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.hitlo_bridge",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.hitlo_bridge",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.hitlo_bridge",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.hitlo_bridge",
        "to": "lukhas.orchestration_src.human_in_the_loop_orchestrator"
      },
      {
        "from": "lukhas.ethics.hitlo_bridge",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "modules.ai_service_integrations"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "brain.abas.abas_core"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "core.config"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "core.interfaces.as_agent.sys.dast.dast_core"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "core.interfaces.as_agent.sys.nias.nias_core"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "modules.lukhas_dreams_advanced"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "traceback"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.extreme_ethical_testing",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.meg_guard",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.meg_guard",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.meg_guard",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.meg_guard",
        "to": "functools"
      },
      {
        "from": "lukhas.ethics.meg_guard",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.meg_guard",
        "to": "contextlib"
      },
      {
        "from": "lukhas.ethics.meg_guard",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "scipy.optimize"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "torch"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "collections"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "pandas"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "torch.nn"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "networkx"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "torch.nn.functional"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "sklearn.preprocessing"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "abc"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "sklearn.cluster"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "sklearn.manifold"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "matplotlib.pyplot"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "scipy.spatial.distance"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "scipy.stats"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.ethical_reasoning_system",
        "to": "sklearn.ensemble"
      },
      {
        "from": "lukhas.ethics.meg_openai_guard",
        "to": "lukhas.ethics.meg_guard"
      },
      {
        "from": "lukhas.ethics.meg_openai_guard",
        "to": "openai"
      },
      {
        "from": "lukhas.ethics.meg_openai_guard",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.meg_openai_guard",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.meg_bridge",
        "to": "lukhas.ethics.meta_ethics_governor"
      },
      {
        "from": "lukhas.ethics.meg_bridge",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.meg_bridge",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.meg_bridge",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.meg_bridge",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.meg_bridge",
        "to": "datetime"
      },
      {
        "from ethics.ethics_guard",
        "to": "json"
      },
      {
        "from ethics.ethics_guard",
        "to": "datetime"
      },
      {
        "from ethics.ethics_guard",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.ethical_evaluator",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.compliance_validator",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.compliance_validator",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.compliance_validator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.compliance_validator",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.bases",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.bases",
        "to": "abc"
      },
      {
        "from": "lukhas.ethics.bases",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "ethics.quantum_mesh_integrator"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "argparse"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "collections"
      },
      {
        "from": "lukhas.ethics.stabilization.tuner",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "plotly.express"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "seaborn"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "matplotlib.pyplot"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "ethics.quantum_mesh_integrator"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "matplotlib.colors"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "plotly.subplots"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "argparse"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "plotly.offline"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "matplotlib.patches"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.tools.quantum_mesh_visualizer",
        "to": "plotly.graph_objects"
      },
      {
        "from": "lukhas.ethics.governor.__init__",
        "to": "lukhas.ethics.governor.lambda_governor"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "collections"
      },
      {
        "from": "lukhas.ethics.governor.lambda_governor",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.governor.dao_controller",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.governor.dao_controller",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.governor.dao_controller",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.governor.dao_controller",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.governor.dao_controller",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.fallback.__init__",
        "to": "lukhas.ethics.fallback.fallback_ethics_layer"
      },
      {
        "from": "lukhas.ethics.fallback.ethics_layer",
        "to": "__future__"
      },
      {
        "from": "lukhas.ethics.fallback.ethics_layer",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "frontend.interface.adaptive_interface_generator"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "AID.service.identity_manager"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "lukhas.voice.speech_processor"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "backend.security.privacy_manager"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "frontend.multimodal.image_generator"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "core.config.settings"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "backend.learning.meta_learning"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "backend.cognitive.node"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "backend.core.neuro_symbolic_engine"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.security.main_node_security_engine",
        "to": "resource"
      },
      {
        "from": "lukhas.ethics.security.emergency_override",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.security.emergency_override",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.security.emergency_override",
        "to": "settings_loader"
      },
      {
        "from": "lukhas.ethics.security.emergency_override",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.security.security_engine",
        "to": "lukhas.ethics.security.secure_utils"
      },
      {
        "from": "lukhas.ethics.security.__init__",
        "to": "lukhas.ethics.security.secure_utils"
      },
      {
        "from": "lukhas.ethics.security.__init__",
        "to": "lukhas.ethics.security.emergency_override"
      },
      {
        "from": "lukhas.ethics.security.__init__",
        "to": "lukhas.ethics.security.security_engine"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "symbolic_engine"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "safety_guardrails"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "compliance_registry"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "lukhas_brain"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "nias_plugin"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "unified_core_system"
      },
      {
        "from": "lukhas.ethics.security.flagship_security_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.security.secure_utils",
        "to": "subprocess"
      },
      {
        "from": "lukhas.ethics.security.secure_utils",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.security.secure_utils",
        "to": "ast"
      },
      {
        "from": "lukhas.ethics.security.secure_utils",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.security.secure_utils",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.security.secure_utils",
        "to": "shlex"
      },
      {
        "from": "lukhas.ethics.security.privacy",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.training.alignment_overseer",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.training.alignment_overseer",
        "to": "__future__"
      },
      {
        "from": "lukhas.ethics.training.alignment_overseer",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.utils.tag_misinterpretation_sim",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.utils.tag_misinterpretation_sim",
        "to": "__future__"
      },
      {
        "from": "lukhas.ethics.utils.tag_misinterpretation_sim",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.compliance.__init__",
        "to": "lukhas.ethics.compliance_validator"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.compliance.engine",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "collections"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_drift_sentinel",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "plotly.express"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "streamlit"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "plotly.subplots"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "ethics.sentinel.ethical_drift_sentinel"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "sys"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "collections"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "pandas"
      },
      {
        "from": "lukhas.ethics.sentinel.ethical_sentinel_dashboard",
        "to": "plotly.graph_objects"
      },
      {
        "from": "lukhas.ethics.safety.entropy_tuning",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.safety.compliance_hooks",
        "to": "lukhas_governance.policy_manager"
      },
      {
        "from": "lukhas.ethics.safety.compliance_hooks",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.safety.compliance_hooks",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.safety.compliance_hooks",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.safety.compliance_hooks",
        "to": "lukhas_governance.audit_logger"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard",
        "to": "streamlit"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard",
        "to": "core.interfaces.voice.core.sayit"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard",
        "to": "pandas"
      },
      {
        "from": "lukhas.ethics.safety.integration_bridge",
        "to": "lukhas.orchestration.brain.safety_guardrails"
      },
      {
        "from": "lukhas.ethics.safety.integration_bridge",
        "to": "compliance.ai_compliance"
      },
      {
        "from": "lukhas.ethics.safety.integration_bridge",
        "to": "backend.security.privacy_manager"
      },
      {
        "from": "lukhas.ethics.safety.compliance_digest",
        "to": "matplotlib.pyplot"
      },
      {
        "from": "lukhas.ethics.safety.compliance_digest",
        "to": "os"
      },
      {
        "from": "lukhas.ethics.safety.compliance_digest",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.safety.compliance_digest",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.safety.compliance_digest",
        "to": "collections"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard_visual",
        "to": "streamlit"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard_visual",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.safety.compliance_dashboard_visual",
        "to": "base64"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "lukhas.core.symbolism.tags"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "lukhas.core.colonies.creativity_colony"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "lukhas.core.colonies.tensor_colony_ops"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "lukhas.core.colonies.reasoning_colony"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "lukhas.core.colonies.memory_colony"
      },
      {
        "from": "lukhas.ethics.simulations.colony_dilemma_simulation",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.simulations.__init__",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.simulations.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "random"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "structlog"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "ethics.governor.lambda_governor"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "uuid"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "argparse"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "ethics.sentinel.ethical_drift_sentinel"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "pathlib"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "numpy"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.simulations.lambda_shield_tester",
        "to": "asyncio"
      },
      {
        "from": "lukhas.ethics.policy_engines.__init__",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.policy_engines.__init__",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.policy_engines.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.policy_engines.integration",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.policy_engines.integration",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.policy_engines.integration",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.policy_engines.integration",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.policy_engines.integration",
        "to": "lukhas.ethics.policy_engines.examples"
      },
      {
        "from": "lukhas.ethics.policy_engines.base",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.policy_engines.base",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.policy_engines.base",
        "to": "enum"
      },
      {
        "from": "lukhas.ethics.policy_engines.base",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.policy_engines.base",
        "to": "datetime"
      },
      {
        "from": "lukhas.ethics.policy_engines.base",
        "to": "abc"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.gpt4_policy",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.gpt4_policy",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.gpt4_policy",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.gpt4_policy",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.gpt4_policy",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.gpt4_policy",
        "to": "json"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.__init__",
        "to": "lukhas.ethics.policy_engines.examples.gpt4_policy"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.__init__",
        "to": "lukhas.ethics.policy_engines.examples.three_laws"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.__init__",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.three_laws",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.three_laws",
        "to": "time"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.three_laws",
        "to": "logging"
      },
      {
        "from": "lukhas.ethics.policy_engines.examples.three_laws",
        "to": "typing"
      }
    ]
  }
}