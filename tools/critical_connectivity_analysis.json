{
  "critical_issues": {
    "missing_core_modules": [
      {
        "module": "bio_symbolic",
        "affected_files": 13,
        "examples": [
          "brain/brain/unified_integration/adapters/cognitive_adapter.py",
          "brain/brain/unified_integration/adapters/oscillator_adapter.py",
          "brain/brain/unified_integration/adapters/intent_adapter.py"
        ]
      },
      {
        "module": "voice",
        "affected_files": 11,
        "examples": [
          "brain/learning/lukhas-base/2025-04-11_lukhas/main_loop.py",
          "brain/learning/lukhas-base/2025-04-11_lukhas/main_loop.py",
          "voice/voice/context_aware_modular_voice.py"
        ]
      },
      {
        "module": "bio_awareness",
        "affected_files": 10,
        "examples": [
          "quantum/quantum/enhanced_quantum_engine.py",
          "brain/brain/integration/meta_cognitive/enhanced_meta_cognitive.py",
          "brain/memory/integration/memory/enhanced_memory_visualizer.py"
        ]
      },
      {
        "module": "bio_core",
        "affected_files": 8,
        "examples": [
          "voice/voice/enhanced_elevenlabs_integration.py",
          "voice/voice/enhanced_voice_integrator.py",
          "voice/voice/enhanced_voice_integrator.py"
        ]
      }
    ],
    "voice_system_issues": [
      {
        "file": "brain/dreams/dream_delivery_manager.py",
        "import": "voice_synthesis"
      },
      {
        "file": "orchestration/integration/system_orchestrator/dream_engine/dream_delivery_manager.py.py",
        "import": "voice_synthesis"
      },
      {
        "file": "shared/knowledge/memory_evolution/memory_evolution.py",
        "import": "voice_synthesis"
      },
      {
        "file": "brain/dreams/dream_delivery_manager.py",
        "import": "voice_safety_guard"
      },
      {
        "file": "orchestration/integration/system_orchestrator/dream_engine/dream_delivery_manager.py.py",
        "import": "voice_safety_guard"
      },
      {
        "file": "core/orchestration/demo.py",
        "import": "voice_safety_guard"
      },
      {
        "file": "voice/voice/voice_integration.py",
        "import": "voice_profiling"
      },
      {
        "file": "voice/voice/voice_personality.py",
        "import": "voice_profiling"
      },
      {
        "file": "voice/voice/enhanced_voice_integrator.py",
        "import": "voice_profiling"
      },
      {
        "file": "voice/voice/voice_modularity_system.py",
        "import": "voice_modulator"
      },
      {
        "file": "voice/voice/modularity/__init__.py",
        "import": "voice_modulator"
      },
      {
        "file": "core/orchestration/demo.py",
        "import": "voice_modulator"
      }
    ],
    "bio_symbolic_issues": [
      {
        "file": "brain/brain/unified_integration/adapters/cognitive_adapter.py",
        "import": "bio_symbolic"
      },
      {
        "file": "brain/brain/unified_integration/adapters/oscillator_adapter.py",
        "import": "bio_symbolic"
      },
      {
        "file": "brain/brain/unified_integration/adapters/intent_adapter.py",
        "import": "bio_symbolic"
      },
      {
        "file": "orchestration/integration/nodes/unified_node.py",
        "import": "bio_symbolic"
      },
      {
        "file": "applications/flagship/lukhas_flagship/core.py",
        "import": "bio_symbolic.bio_core"
      },
      {
        "file": "shared/knowledge/bio_symbolic_awareness_adapter.py",
        "import": "bio_symbolic"
      },
      {
        "file": "shared/knowledge/awareness.py",
        "import": "bio_symbolic"
      },
      {
        "file": "core/orchestration/pattern_recognition.py",
        "import": "bio_symbolic.crista_optimizer"
      },
      {
        "file": "core/orchestration/test_integration.py",
        "import": "bio_symbolic.mito_quantum_attention"
      },
      {
        "file": "bio/orchestration/bio_orchestrator.py",
        "import": "bio_symbolic.mito_quantum_attention"
      },
      {
        "file": "bio/orchestration/bio_orchestrator.py",
        "import": "bio_symbolic.bio_orchestrator"
      },
      {
        "file": "bio/quantum/quantum_attention.py",
        "import": "bio_symbolic.bio_orchestrator"
      },
      {
        "file": "bio/quantum/quantum_attention.py",
        "import": "bio_symbolic.quantum_attention"
      },
      {
        "file": "quantum/quantum/enhanced_quantum_engine.py",
        "import": "bio_awareness.advanced_quantum_bio"
      },
      {
        "file": "brain/brain/integration/meta_cognitive/enhanced_meta_cognitive.py",
        "import": "bio_awareness.enhanced_awareness"
      },
      {
        "file": "brain/memory/integration/memory/enhanced_memory_visualizer.py",
        "import": "bio_awareness.quantum_bio_components"
      },
      {
        "file": "brain/memory/integration/memory/enhanced_memory_fold.py",
        "import": "bio_awareness.quantum_bio_components"
      },
      {
        "file": "orchestration/integration/integration/integration_coordinator.py",
        "import": "bio_awareness.enhanced_awareness"
      },
      {
        "file": "orchestration/integration/integration/safety/safety_coordinator.py",
        "import": "bio_awareness.enhanced_awareness"
      },
      {
        "file": "orchestration/integration/integration/safety/enhanced_emergency_override.py",
        "import": "bio_awareness.enhanced_awareness"
      },
      {
        "file": "orchestration/integration/integration/dast/enhanced_dast_orchestrator.py",
        "import": "bio_awareness.enhanced_awareness"
      },
      {
        "file": "bio/integration/bio_quantum/bio_quantum_coordinator.py",
        "import": "bio_awareness.advanced_quantum_bio"
      },
      {
        "file": "bio/integration/governance/enhanced_policy_board.py",
        "import": "bio_awareness.enhanced_awareness"
      },
      {
        "file": "voice/voice/enhanced_elevenlabs_integration.py",
        "import": "bio_core.oscillator.orchestrator"
      },
      {
        "file": "voice/voice/enhanced_voice_integrator.py",
        "import": "bio_core.oscillator.quantum_layer"
      },
      {
        "file": "voice/voice/enhanced_voice_integrator.py",
        "import": "bio_core.oscillator.orchestrator"
      },
      {
        "file": "voice/voice/enhanced_voice_integrator.py",
        "import": "bio_core.voice.quantum_voice_enhancer"
      },
      {
        "file": "shared/knowledge/system_awareness.py",
        "import": "bio_core.bio_symbolic"
      },
      {
        "file": "bio/integration/bio_awareness/enhanced_awareness.py",
        "import": "bio_core.oscillator.quantum_layer"
      },
      {
        "file": "bio/integration/bio_awareness/advanced_quantum_bio.py",
        "import": "bio_core.oscillator.quantum_layer"
      },
      {
        "file": "bio/integration/bio_awareness/quantum_bio_components.py",
        "import": "bio_core.oscillator.quantum_layer"
      }
    ],
    "cross_system_dependencies": [],
    "orphaned_components": []
  },
  "isolation_patterns": {
    "neural": [
      "neural/neural/processing/backend/app/badge_manager.py",
      "neural/neural/processing/backend/database/crud.py",
      "neural/neural/processing/diagnostics/insight_cli.py",
      "neural/neural/processing/backend/app/journey_log_manager.py",
      "neural/neural/processing/diagnostics/memory_log_filter.py",
      "neural/neural/processing/lukhas_identity/security/kyi_check.py",
      "neural/neural/processing/backend/app/cloud_storage.py",
      "neural/neural/processing/backend/app/tests.py",
      "neural/neural/processing/context_builder.py",
      "neural/neural/processing/backend/app/id_generator.py",
      "neural/neural/processing/dream_engine/narration_controller.py",
      "neural/neural/learning/lukhas_voice_duet.py",
      "neural/neural/learning/intent_language.py",
      "neural/neural/processing/dream_engine/dream_injector.py",
      "neural/neural/processing/backend/app/public_cloud_sync.py",
      "neural/neural/processing/dao/log_viewer.py",
      "neural/neural/processing/backend/app/logs.py",
      "neural/neural/processing/backend/database/models.py",
      "neural/processing/diagnostic_engine/engine.py",
      "neural/neural/processing/backend/app/mesh_memory_manager.py",
      "neural/neural/processing/mesh_registry.py",
      "neural/neural/processing/diagnostics.py",
      "neural/neural/processing/backend/app/institution_manager.py",
      "neural/neural/processing/backend/app/compliance.py",
      "neural/neural/processing/backend/app/main_app.py",
      "neural/neural/processing/backend/app/music_memory_manager.py",
      "neural/neural/processing/policy_board.py",
      "neural/neural/processing/dream_engine/publish_queue_manager.py",
      "neural/neural/processing/backend/app/cloud_storage_policy.py",
      "neural/neural/processing/backend/app/cloud_bridge_manager.py",
      "neural/neural/processing/backend/app/modules.py",
      "neural/processing/lukhas_assist/engine.py",
      "neural/processing/lukhas_dast/engine.py",
      "neural/neural/processing/backend/app/personal_vault.py",
      "neural/neural/processing/backend/database/trust_sharing_manager.py",
      "neural/neural/learning/lukhas_duet_conductor.py",
      "neural/neural/processing/dream_engine/dream_seed_vote.py",
      "neural/neural/processing/emergency_override.py",
      "neural/neural/processing/backend/app/symbolic_score.py",
      "neural/neural/processing/dream_engine/lukhas_assistant.py",
      "neural/neural/processing/backend/database/vault_models.py",
      "neural/neural/processing/backend/app/media_archive_manager.py",
      "neural/neural/processing/backend/app/incident_reporter.py",
      "neural/neural/processing/dream_engine/html_social_generator.py",
      "neural/neural/processing/backend/app/replay_manager.py",
      "neural/neural/learning/lukhas_core.py",
      "neural/neural/processing/backend/app/users.py",
      "neural/neural/processing/backend/app/vault_downloads.py",
      "neural/neural/processing/backend/app/qrglyph_generator.py",
      "neural/neural/processing/backend/app/admin_tools.py",
      "neural/neural/processing/backend/app/log_archiver.py",
      "neural/neural/processing/dream_engine/dream_reflection_loop.py",
      "neural/neural/processing/backend/qrglyphs/tests/test_create_qrglyph.py",
      "neural/neural/processing/backend/app/external_authenticator.py",
      "neural/neural/processing/backend/app/device_registry.py",
      "neural/neural/processing/backend/app/crypto.py",
      "neural/neural/processing/dao/dao_core.py",
      "neural/neural/processing/backend/app/vault.py",
      "neural/neural/processing/dream_engine/dream_registry_dashboard.py",
      "neural/processing/lukhas_create/engine.py",
      "neural/neural/processing/dream_engine/dream_replay.py",
      "neural/neural/processing/backend/app/email_logs.py",
      "neural/neural/processing/backend/app/game_state_bridge.py",
      "neural/neural/processing/replay_queue.py",
      "neural/processing/qrl_code/qrly_1.py",
      "neural/neural/processing/identity_trace.py",
      "neural/neural/processing/backend/app/context_manager.py",
      "neural/neural/processing/backend/app/auth.py",
      "neural/neural/processing/backend/app/encryption_core.py",
      "neural/neural/processing/backend/app/analytics_engine.py",
      "neural/neural/learning/symbolic_voice_loop.py",
      "neural/neural/processing/backend/app/email_templates.py",
      "neural/neural/processing/backend/app/emailer.py",
      "neural/neural/processing/backend/app/audit_logger.py",
      "neural/neural/processing/backend/app/logs_api.py"
    ],
    "enhancement": [
      "enhancement/elite/agi_realtime_dashboard.py",
      "enhancement/elite/ai_constitution_checker.py",
      "enhancement/enhancement/adaptive_agi/Meta_Learning/meta_learning_enhancement_system.py",
      "enhancement/elite/notion_lambda_sync.py",
      "enhancement/elite/agi_plugin_registry.py",
      "enhancement/elite/symbolic_trust_scorer.py",
      "enhancement/elite/emotional_secure_logger.py",
      "enhancement/elite/enhanced_cost_optimizer.py"
    ],
    "core": [
      "core/orchestration/agi_enhancement_integration/test_agi_enhancement_integration.py",
      "core/orchestration/llm_engine.py",
      "core/geofencing/location_tracker.py",
      "core/orchestration/lukhas_unified_self_merge_divergence.py",
      "core/orchestration/test_integration.py",
      "core/orchestration/ai_compliance.py",
      "core/orchestration/demo_orchestrator.py",
      "core/orchestration/generate_autotest_docs.py",
      "core/orchestration/final_validation.py",
      "core/orchestration/test_autotest_system.py",
      "core/orchestration/dynamic_adaptive_dashboard.py",
      "core/orchestration/enhanced_core_integrator.py",
      "core/orchestration/agi_enhancement_integration/unified_agi_enhancement_orchestrator.py",
      "core/orchestration/demo.py",
      "core/integration_test.py",
      "core/orchestration/orchestrator_core.py",
      "core/orchestration/test_visionary_agi.py",
      "core/orchestration/agi_enhancement_integration/validate_agi_integration.py",
      "core/orchestration/lukhas_visionary_startup.py",
      "core/orchestration/lukhas_core_integrator.py",
      "core/orchestration/voice_memory_helix.py",
      "core/orchestration/pattern_recognition.py",
      "core/orchestration/the_oscillator.py",
      "core/orchestration/lukhas_demo.py",
      "core/orchestration/symbolic_core.py",
      "core/orchestration/trace_memoria_logger.py",
      "core/geofencing/geofencing_manager.py",
      "core/orchestration/agi_enhancement_integration/test_agi_enhancement_integration_simple.py",
      "core/orchestration/agi_enhancement_integration/adapters/meta_learning_adapter.py",
      "core/orchestration/guardian_orchestrator.py",
      "core/orchestration/golden_healix_mapper.py",
      "core/orchestration/setup.py",
      "core/orchestration/context_analyzer.py",
      "core/orchestration/emotional_oscillator.py",
      "core/orchestration/dream_mutator.py",
      "core/orchestration/compliance_registry.py",
      "core/orchestration/agi_enhancement_integration/test_agi_enhancement_integration_working.py",
      "core/orchestration/agi_enhancement_integration/adapters/crista_optimizer_adapter.py",
      "core/orchestration/agi_enhancement_integration/adapters/quantum_bio_optimization_adapter.py",
      "core/orchestration/simple_test.py",
      "core/orchestration/brain_integration.py",
      "core/orchestration/semantic_reasoner.py",
      "core/orchestration/neuro_symbolic_engine_.py",
      "core/orchestration/meta_cognitive_orchestrator.py",
      "core/orchestration/agi_enhancement_integration/adapter_redundancy_analyzer.py",
      "core/orchestration/main_node.py",
      "core/orchestration/lukhas_brain 2.29.10\u202fAM.py",
      "core/orchestration/symbolic_ai_stubs.py",
      "core/orchestration/autotest_validation.py",
      "core/orchestration/dast_orchestrator.py",
      "core/orchestration/adaptive_image_generator.py",
      "core/orchestration/quantum_annealed_consensus.py"
    ],
    "symbolic": [
      "symbolic/symbolic/modules/intent_inference.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/modules/alignment_score.py",
      "symbolic/symbolic/quantum_symbolic_engine.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/modules/fold_token.py",
      "symbolic/symbolic/test_symbolic.py",
      "symbolic/symbolic/pattern_templates.py",
      "symbolic/symbolic/governance/symbolic_action_prrotocol.py",
      "symbolic/symbolic/core.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/interface/delivery_dashboard.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/interface/welcome_screen.py",
      "symbolic/symbolic/modules/governance_monitor.py",
      "symbolic/symbolic/modules/dissonance_detector.py",
      "symbolic/symbolic/modules/cognitive_updater.py",
      "symbolic/symbolic/modules/personality_manager.py",
      "symbolic/symbolic/modules/voice_interface.py",
      "symbolic/symbolic/modules/dream_visualizer.py",
      "symbolic/symbolic/symbolic_engine.py",
      "symbolic/symbolic/advanced_symbolic_loop.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/core/user_profile.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/utils/viewers/dream_utils.py",
      "symbolic/symbolic/governance/symbolic_action_protocol.py",
      "symbolic/symbolic/base_module.py",
      "symbolic/symbolic/quantum_neuro_symbolic_engine.py",
      "symbolic/symbolic/modules/memoria.py",
      "symbolic/symbolic/symbolic_helix_timeline.py",
      "symbolic/symbolic/modules/memory_reflector.py",
      "symbolic/symbolic/neuro_symbolic_integration.backup_20250531_044533.py",
      "symbolic/symbolic/modules/dream_generator.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/streamlit_app.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/interface/user_profile.py",
      "symbolic/symbolic/neural_processor.py",
      "symbolic/symbolic/tests/test_symbolic_engine.py",
      "symbolic/symbolic/modules/ethical_guardian.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/utils/viewers/load_dream.py",
      "symbolic/symbolic/neuro_symbolic_integration.py",
      "symbolic/symbolic/hybrid_integration.py",
      "symbolic/symbolic/modules/episodic_recall.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/interface/language_module.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/modules/demo_launcher.py",
      "symbolic/symbolic/reasoning_engine.py",
      "symbolic/symbolic/bridge.py",
      "symbolic/symbolic/modules/emotion_analyzer.py",
      "symbolic/symbolic/symbolic_audit_viewer.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/core/lukhas_sec_protocol.py",
      "symbolic/symbolic/symbolic_carousel.py",
      "symbolic/symbolic/modules/trace_logger.py",
      "symbolic/symbolic/2025-04-15_lukhas-symbolic-core-additional/modules/sleep_cycle.py",
      "symbolic/symbolic/types.py",
      "symbolic/symbolic/symbolic_action_protocol_merged.py",
      "symbolic/symbolic/orchestrator.py",
      "symbolic/symbolic/memory_helix_visualizer.py",
      "symbolic/symbolic/modules/dream_synthesizer.py"
    ],
    "interface": [
      "interface/interface/ui/components/audio_exporter.py",
      "interface/interface/lukhas_as_agent/core/nias_filter.py",
      "interface/interface/lukhas_as_agent/auth/vendor_hospitality_sync.py",
      "interface/interface/lukhas_as_agent/widgets/lukhas_widget_archive.py",
      "interface/interface/lukhas_as_agent/core/ lukhas_nias_filter.py",
      "interface/interface/lukhas_as_agent/news_and_social/lukhas_news_dispatcher.py",
      "interface/interface/lukhas_as_agent/sys/dast/schedule_manager.py",
      "interface/interface/lukhas_as_agent/sys/dast/aggregator.py",
      "interface/interface/voice/test_voice.py",
      "interface/interface/lukhas_as_agent/sys/nias/delivery_loop.py",
      "interface/interface/lukhas_as_agent/sys/nias/consent_filter.py",
      "interface/interface/logic/agent_core.py",
      "interface/interface/lukhas_as_agent/core/gatekeeper.py",
      "interface/interface/lukhas_as_agent/core/render_ai.py",
      "interface/interface/lukhas_as_agent/sys/dast/partner_sdk.py",
      "interface/interface/lukhas_as_agent/sys/nias/trace_logger.py",
      "interface/interface/lukhas_as_agent/agent_logic/identity/session_manager.py",
      "interface/interface/lukhas_as_agent/agent_logic/identity/token_handler.py",
      "interface/interface/lukhas_as_agent/widgets/terminal_widget.py",
      "interface/interface/lukhas_as_agent/sys/nias/feedback_log_viewer.py",
      "interface/interface/lukhas_as_agent/core/checkout_handler.py",
      "interface/interface/lukhas_as_agent/sys/nias/replay_heatmap.py",
      "interface/interface/lukhas_as_agent/auth/vendor_sync_orchestrator.py",
      "interface/interface/web_formatter.py",
      "interface/interface/lukhas_as_agent/auth/lucas_registry.py",
      "interface/interface/lukhas_as_agent/core/wallet.py",
      "interface/interface/logic/voice_narration_player.py",
      "interface/interface/video/compliance_logger.py",
      "interface/interface/lukhas_as_agent/core/scheduler.py",
      "interface/interface/lukhas_as_agent/core/filter_gpt.py",
      "interface/interface/lukhas_as_agent/widgets/travel_widget.py",
      "interface/interface/lukhas_as_agent/agent_logic/identity/tier_manager.py",
      "interface/interface/lukhas_as_agent/sys/nias/narration_controller.py",
      "interface/interface/lukhas_as_agent/sys/nias/dream_export_streamlit.py",
      "interface/interface/lukhas_as_agent/core/lukhas_overview_log.py",
      "interface/interface/lukhas_as_agent/sys/nias/dream_recorder.py",
      "interface/interface/video/dream_bridge.py",
      "interface/interface/lukhas_as_agent/core/reward_reputation.py",
      "interface/interface/lukhas_as_agent/core/affiliate_log.py",
      "interface/interface/text_handler.py",
      "interface/interface/tools/security/session_logger.py",
      "interface/interface/lukhas_as_agent/core/vendor_sync.py",
      "interface/interface/lukhas_as_agent/tests/auto_test_payloads.py",
      "interface/interface/lukhas_as_agent/sys/nias/main_loop.py",
      "interface/interface/voice/eleven_tts.py",
      "interface/interface/lukhas_as_agent/docs/assets/mermaid_diagrams/core/utils/symbolic_github_export.py",
      "interface/interface/lukhas_as_agent/sys/abas/abas.py",
      "interface/interface/voice/integrations/openai/gpt_client.py",
<<<<<<< HEAD
      "interface/interface/Λctl.py",
=======
      "interface/interface/lukhasctl.py",
>>>>>>> jules/ecosystem-consolidation-2025
      "interface/interface/ui/components/replay_graphs.py",
      "interface/interface/tools/dao/dao_propose.py",
      "interface/interface/ui/adaptive/ui_orchestrator.py",
      "interface/interface/dashboard_settings.py",
      "interface/interface/logic/agent_self.py",
      "interface/interface/lukhas_as_agent/utils/lukhas_template.py",
      "interface/interface/logic/context/context_builder.py",
      "interface/interface/lukhas_as_agent/core/generate_video.py",
      "interface/interface/lukhas_dast/api.py",
      "interface/interface/lukhas-base/2025-04-11_lukhas/lucas_sibling/core/lucas_api.py",
      "interface/interface/lukhas_as_agent/sys/dast/dast_logger.py",
      "interface/interface/tools/research/dev_dashboard.py",
      "interface/interface/lukhas_as_agent/sys/nias/dream_narrator_queue.py",
      "interface/interface/lukhas_socket.py",
      "interface/interface/lukhas_as_agent/core/generate_imagge.py",
      "interface/interface/lukhas_as_agent/tests/test_payload_validation.py",
      "interface/interface/logic/safety_filter.py",
      "interface/interface/voice/integrations/openai/whisper_client.py",
      "interface/interface/tools/cli/command_registry.py",
      "interface/interface/dashboad.py",
      "interface/interface/lukhas_as_agent/sys/nias/replay_visualizer.py",
      "interface/interface/voice/input/stream_handler.py",
      "interface/interface/interaction/symptom_reporter.py",
      "interface/interface/logic/memory_handler.py",
      "interface/interface/research_dashboard.py",
      "interface/interface/devtools/lukhasctl.py",
      "interface/interface/lukhas_as_agent/utils/constants.py",
      "interface/interface/speech_processor.py",
      "interface/interface/lukhas_as_agent/core/lukhas_agent_handoff.py",
      "interface/interface/video/video_adapter.py",
      "interface/interface/voice/integrations/openai/dalle_client.py",
      "interface/interface/lukhas_as_agent/sys/nias/symbolic_matcher.py",
      "interface/interface/lukhas_as_agent/utils/symbolic_utils.py",
      "interface/interface/ui/components/payload_builder.py",
      "interface/interface/lukhas_as_agent/agent_logic/identity/qrglymph_public.py",
      "interface/interface/logic/ethics_jury.py",
      "interface/interface/tools/research/research_dashboard.py",
      "interface/interface/lukhas_as_agent/sys/nias/validate_payload.py",
      "interface/interface/api/dream_api.py",
      "interface/interface/lukhas_as_agent/widgets/live_renderer_widget.py",
      "interface/interface/lukhas_as_agent/core/memory_folds.py",
      "interface/interface/app.py",
      "interface/interface/lukhas_as_agent/sys/nias/inject_message_simulator.py",
      "interface/interface/lukhas_as_agent/utils/symbolic_github_export.py",
      "interface/interface/lukhas_as_agent/sys/nias/nias_core.py",
      "interface/interface/lukhas_as_agent/sys/dast/lukhas_launcher.py",
      "interface/interface/custom_llm.py",
      "interface/interface/lukhas_as_agent/sys/nias/symbolic_reply_generator.py",
      "interface/interface/lukhas_as_agent/sys/nias/feedback_loop.py",
      "interface/interface/ui/app.py",
      "interface/interface/lukhas_as_agent/core/vision_prompts.py",
      "interface/interface/lukhas_as_agent/auth/lukhas_agent_handoff.py",
      "interface/interface/lukhas_as_agent/sys/dast/dast.py",
      "interface/interface/lukhas_as_agent/docs/assets/mermaid_diagrams/lukhas_streamlit_dashboard.py",
      "interface/interface/lukhas_as_agent/docs/assets/mermaid_diagrams/core/modules/nias/dream_export_streamlit.py",
      "interface/interface/lukhas_as_agent/docs/assets/mermaid_diagrams/core/modules/nias/lukhas_voice_narrator.py",
      "interface/interface/tools/cli/speak.py",
      "interface/interface/ui/components/tier_visualizer.py",
      "interface/interface/lukhas_as_agent/sys/dast/store.py",
      "interface/interface/logic/delegate_logic.py",
      "interface/interface/lukhas_as_agent/widgets/widget_engine.py",
      "interface/interface/dev_dashboard.py",
      "interface/interface/voice_handler.py",
      "interface/interface/voice_replay.py",
      "interface/interface/voice/integrations/elevenlabs/__init___.py",
      "interface/interface/gui_launcher.py",
      "interface/interface/logic/22_04_25orcherstrator.py",
      "interface/interface/logic/consent_manager.py",
      "interface/interface/ui/components/voice_preview_streamlit.py",
      "interface/interface/main.py",
      "interface/interface/lukhas_as_agent/sys/dast/dast_core.py",
      "interface/interface/logic/agent_logic_architecture.py",
      "interface/interface/lukhas_as_agent/docs/assets/mermaid_diagrams/core/modules/nias/replay_visualizer.py",
      "interface/interface/tools/dao/dao_vote.py",
      "interface/interface/lukhas_as_agent/tests/test_nias_dast_abas.py"
    ],
    "brain": [
      "brain/brain/access/tier_manager.py",
      "brain/memory/memoria/lukhas_dream_cron.py",
      "brain/memory/memory_lock.py",
      "brain/brain/meta_adaptative/memory/memory_manager.py",
      "brain/brain/unified_integration/adapters/brain_adapter.py",
      "brain/memory/memory_cloud.py",
      "brain/brain/lukhas_data/consent_manager.py",
      "brain/memory/meta_learning.py",
      "brain/memory/trauma_lock.py",
      "brain/brain/federated_learning.py",
      "brain/brain/spine/lukhas_emotion_log_alt.py",
      "brain/brain/subsystems/compliance_engine.py",
      "brain/brain/rem/rem.py",
      "brain/brain/meta_adaptative/meta_core.py",
      "brain/brain/net/client.py",
      "brain/dreams/dream_viewer.py",
      "brain/dreams/dream_injector.py",
      "brain/brain/qrl_code/com_validator.py",
      "brain/brain/personality/creative_expressions.py",
      "brain/dreams/dream_mutator.py",
      "brain/brain/tracing/trace_tools.py",
      "brain/brain/meta_adaptative/cognitive/voice_engine.py",
      "brain/dreams/lukhas-base/2025-04-14_lukhas-variant/core/dream_refold.py",
      "brain/learning/lukhas-base/2025-04-11_lukhas/lucas_sibling/core/scaffold streamlit_app.py",
      "brain/brain/tests/test_agi_bot.py",
      "brain/brain/spine/ lukhas_guardian.py",
      "brain/memory/processing/memory_processing.py",
      "brain/brain/quantum_processing/quantum_engine.py",
      "brain/dreams/dream_engine_merged.py",
      "brain/memory/quantum_memory_manager.py",
      "brain/memory/helix_mapper.py",
      "brain/dreams/dream_log.py",
      "brain/memory/lukhas-base/2025-04-11_lukhas/lucas_sibling/memory/memory_trace.py",
      "brain/memory/memoria/lukhas_dreams.py",
      "brain/brain/spine/memory_folds.py",
      "brain/brain/memory_learning/memory_manager.py",
      "brain/brain/spine/emotional_sorter.py",
      "brain/memory/advanced_memoria_system.py",
      "brain/memory/memoria/lukhas_replayer.py",
      "brain/dreams/dream_stats.py",
      "brain/brain/runtime/init_lukhas.py",
      "brain/learning/aid/dream_engine/narration_controller.py",
      "brain/memory/memory_trace_logger.py",
      "brain/brain/reflective_introspection.py",
      "brain/dreams/quantum_dream_adapter.py",
      "brain/dreams/dream_utils.py",
      "brain/memory/voice_memory_helix.py",
      "brain/learning/lukhas-base/2025-04-11_lukhas/main_loop.py",
      "brain/memory/fold_engine.py",
      "brain/dreams/visualizer_core.py",
      "brain/memory/2025-04-15_lukhas-rem-vix-prot/streamlit_mesh_test.py",
      "brain/brain/interfaces/memory/memory_seeder.py",
      "brain/brain/spine/main_loop.py",
      "brain/brain/logging/lukhas_output_log.py",
      "brain/dreams/dream_generator.py",
      "brain/brain/config/read_settings.py",
      "brain/brain/enhanced_agi_bot.py",
      "brain/memory/memory_folds.py",
      "brain/brain/rem/dream_utils.py",
      "brain/dreams/dream_narrator_queue.py",
      "brain/brain/spine/lukhas_emotion_log.py",
      "brain/memory/adaptive_agi/GUARDIAN/sub_agents/memory_cleaner.py",
      "brain/brain/rem/lidar_emotion_interpreter.py",
      "brain/memory/memory_systems/memory_manager.py",
      "brain/brain/interfaces/memory/memory_helix.py",
      "brain/dreams/symbolic/vocabulary.py",
      "brain/brain/interfaces/voice/M_M_F.py",
      "brain/brain/unified_integration/adapters/cognitive_adapter.py",
      "brain/brain/interfaces/speech_processor.py",
      "brain/brain/spine/lukhas_trait_sync.py",
      "brain/dreams/enhanced_dream_engine.py",
      "brain/memory/enhanced_memory_manager.py",
      "brain/emotional/ethical_conflict_resolution.py",
      "brain/memory/memoria/gpt_reflection.py",
      "brain/brain/system_orchestrator/cognitive/meta_learning.py",
      "brain/brain/output/lukhas_report_generator.py",
      "brain/memory/helix_dna.py",
      "brain/dreams/lukhas-base/2025-04-11_lukhas/lucas_sibling/dream__loop.py",
      "brain/learning/aid/dream_engine/dream_reflection_loop.py",
      "brain/brain/unified_integration/adapters/oscillator_adapter.py",
      "brain/brain/nodes/intent_node 2.07.22\u202fAM.py",
      "brain/learning/aid/dream_engine/dream_summary_generator.py",
      "brain/learning/tests/test_meta_learning.py",
      "brain/brain/unified_integration/adapters/bio_adapter.py",
      "brain/brain/net/client_event.py",
      "brain/brain/spine/lukhas_hash.py",
      "brain/brain/spine/trait_manager.py",
      "brain/brain/spine/lukhas_unified_self.py",
      "brain/brain/spine/emotion_trend_tracker.py",
      "brain/brain/spine/ lukhas_reflection.py",
      "brain/dreams/dream_seed.py",
      "brain/brain/nodes/ethics_node.py",
      "brain/dreams/cli/dream_processor.py",
      "brain/learning/adaptive_agi/Meta_Learning/symbolic_feedback.py",
      "brain/memory/memoria-checkpoint.py",
      "brain/brain/neural_core.py",
      "brain/dreams/dream_cli.py",
      "brain/brain/rem/streamlit_lidar.py",
      "brain/brain/dna/lukhas_dna_link.py",
      "brain/dreams/lucas_oracle_dream.py",
      "brain/brain/golden_transfer_planner.py",
      "brain/dreams/dream_replay.py",
      "brain/dreams/dream_summary_generator.py",
      "brain/brain/memory_learning/enhanced_memory_manager.py",
      "brain/emotional/ethical_stop.py",
      "brain/brain/spine/accent_adapter.py",
      "brain/memory/exponential_learning.py",
      "brain/brain/brain_integration.py",
      "brain/memory/lucas_memory_encryptor.py",
      "brain/memory/fold_engine_integration_test.py",
      "brain/brain/spine/lukhas_guardian.py",
      "brain/brain/config/lukhas_settings.py",
      "brain/memory/integration/memory/enhanced_memory_visualizer.py",
      "brain/brain/config/lukhas_settings_editor.py",
      "brain/brain/meta_adaptative/adaptive_interface_generator.py",
      "brain/memory/integration/memory/enhanced_memory_fold.py",
      "brain/brain/output/message_hub.py",
      "brain/brain/nodes/memory_node.py",
      "brain/dreams/dream_replay_cli.py",
      "brain/memory/learn_to_learn.py",
      "brain/brain/net/async_client.py",
      "brain/brain/nodes/goal_node.py",
      "brain/brain/seamless/experience_core.py",
      "brain/memory/experience_manager.py",
      "brain/memory/integration/memory/enhanced_memory_manager.py",
      "brain/learning/adaptive_agi/Meta_Learning/monitor_dashboard.py",
      "brain/emotional/core.py",
      "brain/dreams/dream_reflection_loop.py",
      "brain/brain/rem/generate_dream.py",
      "brain/brain/nodes/node_registry.py",
      "brain/brain/unified_integration/adapters/dream_adapter.py",
      "brain/dreams/dream_log_viewer.py",
      "brain/brain/emotional_resonance.py",
      "brain/memory/lucas_memory_recall.py",
      "brain/learning/lukhas_flagship/main.py",
      "brain/memory/memory_learning/memory_manager.py",
      "brain/memory/dream_memory_export.py",
      "brain/brain/qrl_code/qrly_1.py",
      "brain/learning/aid/dream_engine/dream_registry_dashboard.py",
      "brain/brain/lukhas_core_integrator.py",
      "brain/brain/interfaces/memory/glyph_map.py",
      "brain/brain/unified_integration/adapters/intent_adapter.py",
      "brain/brain/spine/emotion_intent_link.py",
      "brain/emotional/emotional_resonance.py",
      "brain/brain/rem/sleep_cycle.py",
      "brain/brain/nodes/intent_node.py",
      "brain/memory/memory_manager.py",
      "brain/learning/aid/dream_engine/dream_injector.py",
      "brain/brain/rem/rem_visualizer.py",
      "brain/dreams/dream_export_streamlit.py",
      "brain/brain/utils/trace_logger.py",
      "brain/brain/nodes/dao_node.py",
      "brain/brain/spine/lukhas_trait_sync_gpt_synb_ref.py",
      "brain/brain/unified_integration/adapters/voice_adapter.py",
      "brain/brain/unified_integration/adapters/awareness_adapter.py",
      "brain/brain/config/settings_loader.py",
      "brain/brain/adaptive_image_generator.py",
      "brain/brain/unified_integration/adapters/legacy_adapter.py",
      "brain/learning/aid/dream_engine/lukhas_assistant.py",
      "brain/brain/config/lukhas_setup.py",
      "brain/memory/memoria/lukhas_dreams_alt.py",
      "brain/dreams/dream_processor.py",
      "brain/brain/plugins/README_plugins.md .py",
      "brain/brain/runtime/core_registry.py",
      "brain/brain/spine/emotion_mapper_alt.py",
      "brain/memory/core.py",
      "brain/brain/spine/lukhas_self_reflect_cron.py",
      "brain/brain/nodes/node.py",
      "brain/brain/interfaces/voice/voice_emotion_modulator.py",
      "brain/brain/reasoning_engine.py",
      "brain/brain/spine/healix_mapper.py",
      "brain/brain/interfaces/voice/voice_fallback.py",
      "brain/dreams/dream_clustering_engine.py",
      "brain/dreams/dream_engine/dream_clustering_engine.py",
      "brain/brain/nodes/nodeset.py",
      "brain/brain/context/lukhas_context_sync.py",
      "brain/dreams/dream_engine.py",
      "brain/brain/spine/emotion_mapper.py",
      "brain/brain/meta_adaptative/compliance_engine.py",
      "brain/brain/demonstrate_true_agi.py",
      "brain/memory/memoria/lukhas_reflector.py",
      "brain/brain/meta_learner.py",
      "brain/dreams/core.py",
      "brain/learning/adaptive_agi/adaptive_agi_demo.py",
      "brain/dreams/dream_processor_integration.py",
      "brain/dreams/dream_delivery_manager.py"
    ],
    "tests": [
      "tests/core/test_all.py",
      "tests/core/test_voice_processing.py",
      "tests/core/test_safety_guard.py",
      "tests/dast/tests.py",
      "tests/core/test_testing.py",
      "tests/core/test_compliance_engine.py",
      "tests/dast/basic_test.py",
      "tests/core/test_enhanced_core_integrator.py",
      "tests/tests/test_safety_recovery.py",
      "tests/core/test_quantum_consensus.py",
      "tests/dast/simple_test.py",
      "tests/core/test_framework.py",
      "tests/core/test_logger.py",
      "tests/core/quantum_test_oracle.py",
      "tests/core/test_intent_node.py",
      "tests/core/test_context_analyzer.py",
      "tests/test_integration.py",
      "tests/symbolic_processor.py",
      "tests/core/test_emotion_mapper_alt.py",
      "tests/core/test_healix_mapper.py",
      "tests/interaction/test_symptom_reporter.py",
      "tests/core/automatic_testing_system.py",
      "tests/integration/test_phase3_quantum_integration.py",
      "tests/core/symbolic_audit_viewer.py",
      "tests/benchmarks/quantum_performance_benchmark.py"
    ],
<<<<<<< HEAD
    "ΛiD": [
      "ΛiD/src/personality_refiner.py",
      "ΛiD/src/seedra_vault_manager.py",
      "ΛiD/src/core.py",
      "ΛiD/src/tiered_encryption_engine.py",
      "ΛiD/src/voice_personality.py",
      "ΛiD/src/vault/ΛiD.py",
      "ΛiD/src/tests/test_identity.py",
      "ΛiD/src/seedra/identity_validator.py",
      "ΛiD/src/lukhas_es_creativo.py",
      "ΛiD/src/lukhas_expression.py",
      "ΛiD/src/emotional_memory.py",
      "ΛiD/src/test_identity.py",
      "ΛiD/src/neuro_haiku_generator.py",
      "ΛiD/src/creative_expressions.py",
      "ΛiD/service/lukhas_identity/security/lukhas_awareness_protocol.py",
      "ΛiD/src/identity_manager.py",
      "ΛiD/src/lukhas_id_manager.py",
      "ΛiD/standardization/final_id_standardization.py",
      "ΛiD/src/test_cretivity.py",
      "ΛiD/src/quantum_identity_engine.py",
      "ΛiD/src/symbolic/vocabulary.py",
      "ΛiD/standardization/final_lambda_id_standardization.py",
      "ΛiD/src/seedra_registry.py",
      "ΛiD/src/enhanced_personality.py",
      "ΛiD/src/seedra/seedra_core.py",
      "ΛiD/src/examples/usage_demo.py",
      "ΛiD/src/vault/memory_identity.py",
      "ΛiD/src/personas/lukhas_empathy.py",
      "ΛiD/src/symbolic_vault.py",
      "ΛiD/src/personas/lukhas_personas.py",
      "ΛiD/src/brain_identity_connector.py",
      "ΛiD/src/unified_doc_generator.py",
      "ΛiD/src/manager.py",
      "ΛiD/standardization/final_lambda_standardization_complete.py",
      "ΛiD/standardization/lambda_id_ref_standardization.py",
      "ΛiD/service/router.py"
=======
    "Lukhas_ID": [
      "Lukhas_ID/src/personality_refiner.py",
      "Lukhas_ID/src/seedra_vault_manager.py",
      "Lukhas_ID/src/core.py",
      "Lukhas_ID/src/tiered_encryption_engine.py",
      "Lukhas_ID/src/voice_personality.py",
      "Lukhas_ID/src/vault/Lukhas_ID.py",
      "Lukhas_ID/src/tests/test_identity.py",
      "Lukhas_ID/src/seedra/identity_validator.py",
      "Lukhas_ID/src/lukhas_es_creativo.py",
      "Lukhas_ID/src/lukhas_expression.py",
      "Lukhas_ID/src/emotional_memory.py",
      "Lukhas_ID/src/test_identity.py",
      "Lukhas_ID/src/neuro_haiku_generator.py",
      "Lukhas_ID/src/creative_expressions.py",
      "Lukhas_ID/service/lukhas_identity/security/lukhas_awareness_protocol.py",
      "Lukhas_ID/src/identity_manager.py",
      "Lukhas_ID/src/lukhas_id_manager.py",
      "Lukhas_ID/standardization/final_id_standardization.py",
      "Lukhas_ID/src/test_cretivity.py",
      "Lukhas_ID/src/quantum_identity_engine.py",
      "Lukhas_ID/src/symbolic/vocabulary.py",
      "Lukhas_ID/standardization/final_lambda_id_standardization.py",
      "Lukhas_ID/src/seedra_registry.py",
      "Lukhas_ID/src/enhanced_personality.py",
      "Lukhas_ID/src/seedra/seedra_core.py",
      "Lukhas_ID/src/examples/usage_demo.py",
      "Lukhas_ID/src/vault/memory_identity.py",
      "Lukhas_ID/src/personas/lukhas_empathy.py",
      "Lukhas_ID/src/symbolic_vault.py",
      "Lukhas_ID/src/personas/lukhas_personas.py",
      "Lukhas_ID/src/brain_identity_connector.py",
      "Lukhas_ID/src/unified_doc_generator.py",
      "Lukhas_ID/src/manager.py",
      "Lukhas_ID/standardization/final_lambda_standardization_complete.py",
      "Lukhas_ID/standardization/lambda_id_ref_standardization.py",
      "Lukhas_ID/service/router.py"
>>>>>>> jules/ecosystem-consolidation-2025
    ],
    "vision": [
      "vision/vision/core.py",
      "vision/vision/symbolic/vocabulary.py",
      "vision/vision/examples/vision_usage.py"
    ],
    "shared": [
      "shared/knowledge/content_generation_engine/unified_doc_generator.py",
      "shared/knowledge/multiverse_web.py",
      "shared/knowledge/tests/test_tutor.py",
      "shared/knowledge/plugin.py",
      "shared/knowledge/system_awareness.py",
      "shared/knowledge/symbolic_knowledge_core/knowledge_graph.py",
      "shared/logging/secure_agi_logger.py",
      "shared/knowledge/memory_evolution/usage_learning.py",
      "shared/knowledge/memory_evolution/knowledge_adaptation.py",
      "shared/knowledge/memory_evolution/version_control.py",
      "shared/knowledge/tests/test_doc_generator.py",
      "shared/knowledge/content_generation_engine/doc_generator.py",
      "shared/knowledge/awareness.py",
      "shared/data/crud_operations.py",
      "shared/knowledge/memory_evolution/document_analyzer.py",
      "shared/knowledge/tutoring_engine/tutor.py",
      "shared/knowledge/lukhas_awareness_protocol.py",
      "shared/knowledge/tests/test_plugin_integration.py",
      "shared/knowledge/symbolic_trace_logger.py",
      "shared/knowledge/memory_evolution/memory_evolution.py"
    ],
    "bio": [
      "bio/quantum/mito_quantum_attention.py",
      "bio/dream/test_enhanced_dream.py",
      "bio/dast/quantum_dast_orchestrator.py",
      "bio/orchestration/orchestrator.py",
      "bio/unified/quantum_unified_system.py",
      "bio/integration/bio_quantum/bio_quantum_coordinator.py",
      "bio/oscillators/27_04_23_upgraded_lukhas_oscillator.py",
      "bio/lukhas-base/2025-04-11_lukhas/symbolic_dna.py",
      "bio/oscillators/tests/test_quantum_integration.py",
      "bio/oscillators/prime_oscillator.py",
      "bio/dream/quantum_dream_adapter.py",
      "bio/dream/dream_engine.py",
      "bio/stress_gate.py",
      "bio/quantum/quantum_attention2.py",
      "bio/memory/quantum_memory_manager.py",
      "bio/oscillators/orchestrator_new.py",
      "bio/oscillators/orchestrator.py",
      "bio/cognitive_ai_client.py",
      "bio/lidar_integration.py",
      "bio/glyph_id_hash.py",
      "bio/oscillators/base_oscillator.py",
      "bio/quantum/quantum_attention.py",
      "bio/awareness/quantum_awareness_system.py",
      "bio/mito_ethics_sync.py"
    ],
    "governance": [
      "governance/governance/test_compliance_engine.py",
      "governance/safety/adaptive_agi/GUARDIAN/demo_complete_guardian.py",
      "governance/security/compliance_dashboard_visual.py",
      "governance/ethics/lukhas-base/2025-04-14_lukhas-variant/core/ethics_engine.py",
      "governance/governance/compliance_drift_simulation.py",
      "governance/governance/ethics_engine.py",
      "governance/governance/quantum_ethics_engine.py",
      "governance/security/ethics_monitor.py",
      "governance/governance/test_governance.py",
      "governance/governance/engine_final.py",
      "governance/governance/compliance_engine.py",
      "governance/governance/lukhas_ethics_guard.py",
      "governance/safety/adaptive_agi/GUARDIAN/demo_guardian_system.py",
      "governance/governance/ethics_engine_clean.py",
      "governance/security/compliance_dashboard.py",
      "governance/security/safety_guardrails.py",
      "governance/security/compliance_digest.py",
      "governance/safety/adaptive_agi/GUARDIAN/demo_reflection_layer.py",
      "governance/governance/engine_v2.py",
      "governance/safety/agi_operation_manager.py",
      "governance/security/safety_guard.py",
      "governance/governance/ethics_engine_professional.py",
      "governance/governance/compliance_report_generator.py",
      "governance/governance/incident_response/incident_response_log.py",
      "governance/governance/oversight_hooks/human_oversight_hooks.py",
      "governance/safety/adaptive_agi/GUARDIAN/reflection_layer.py",
      "governance/security/compliance_hooks.py",
      "governance/governance/audit_logger.py",
      "governance/security/entropy_tuning.py",
      "governance/governance/engine.py",
      "governance/governance/compliance_drift_monitor.py",
      "governance/governance/engine_clean.py",
      "governance/governance/reports/YYYY-MM-DD/policy_manager.py",
      "governance/governance/core.py",
      "governance/governance/regulatory_matrix/jurisdiction_matrix.py",
      "governance/security/privacy.py",
      "governance/governance/policy_manager.py",
      "governance/security/privacy_manager.py"
    ],
    "voice": [
      "voice/voice/lucas_voice_agent.py",
      "voice/voice/context_aware_voice_modular.py",
      "voice/voice/symbolic/vocabulary.py",
      "voice/voice/speech_processor.py",
      "voice/voice/symbolic_voice_core.py",
      "voice/voice/voice_memory_helix.py",
      "voice/voice/voice_node.py",
      "voice/voice/quantum_voice_enhancer.py",
      "voice/voice/voice_cultural_integration.py",
      "voice/voice/speech_framework.py",
      "voice/voice/symbolic_voice_loop.py",
      "voice/voice/speech_recognition_module.py",
      "voice/voice/core.py",
      "voice/voice/examples/voice_usage.py",
      "voice/voice/cognitive_voice.py",
      "voice/voice/dream_voice_pipeline.py",
      "voice/voice/context_aware/context_analyzer.py",
      "voice/voice/lucas_voice_narrator.py",
      "voice/voice/enhanced_voice_integrator.py",
      "voice/voice/tests/test_enhanced_voice_integrator.py",
      "voice/voice/voice_adaptation_module.py",
      "voice/voice/lukhas_voice_agent.py",
      "voice/voice/context_aware_modular_voice.py",
      "voice/voice/voice_integrator.py",
      "voice/voice/enhanced_elevenlabs_integration.py",
      "voice/voice/adapters/voice_adapter.py",
      "voice/voice/edge_tts_integration.py",
      "voice/voice/voice_duet_conductor.py",
      "voice/voice/core/].py",
      "voice/voice/voice_systems/core.py"
    ],
    "orchestration": [
      "orchestration/integration/system_orchestrator/adaptive_agi/Meta_Learning/rate_modulator.py",
      "orchestration/integration/system_orchestrator/adaptive_systems/crista_optimizer/crista_optimizer.py",
      "orchestration/integration/lukhas_dast/adapters.py",
      "orchestration/integration/system_orchestrator/dream_engine/dream_delivery_manager.py.py",
      "orchestration/integration/system_orchestrator/agi_enhancement_integration/adapters/meta_learning_adapter.py",
      "orchestration/integration/integration/safety/enhanced_emergency_override.py",
      "orchestration/integration/lukhas_flagship/orchestrator.py",
      "orchestration/integration/system_orchestrator/spine/master_integration_orchestrator.py",
      "orchestration/integration/system_orchestrator/adaptive_agi/GUARDIAN/remediator_agent.py",
      "orchestration/integration/adaptive_agi/Meta_Learning/remediator_agent.py",
      "orchestration/integration/system_orchestrator/adaptive_systems/crista_optimizer/topology_manager.py",
      "orchestration/integration/tests/test_lukhas_integration.py",
      "orchestration/integration/adaptive_agi/GUARDIAN/guardian_integration.py",
      "orchestration/integration/system_orchestrator/agi_enhancement_integration/adapters/crista_optimizer_adapter.py",
      "orchestration/integration/integration/safety/safety_coordinator.py",
      "orchestration/integration/nodes/unified_node.py",
      "orchestration/integration/system_orchestrator/adaptive_agi/GUARDIAN/reflection_layer.py",
      "orchestration/integration/integration/integration_layer.py",
      "orchestration/integration/integration/dast/enhanced_dast_orchestrator.py",
      "orchestration/integration/system_orchestrator/dream_engine/dream_reflection_loop.py",
      "orchestration/integration/system_orchestrator/agi_enhancement_integration/unified_agi_enhancement_orchestrator.py",
      "orchestration/integration/integration/integration_coordinator.py",
      "orchestration/integration/system_orchestrator/lukhas_dast/processors.py",
      "orchestration/performance/optimized_capability_controller.py",
      "orchestration/integration/system_orchestrator/lukhas_analyze/engine.py",
      "orchestration/integration/system_orchestrator/adaptive_systems/crista_optimizer/symbolic_network.py",
      "orchestration/integration/adaptive_agi/GUARDIAN/remediator_agent.py",
      "orchestration/integration/adaptive_agi/Meta_Learning/federated_integration.py",
      "orchestration/integration/system_orchestrator/lukhas_dast/engine_fixed.py"
    ],
    "quantum": [
      "quantum/quantum/core.py",
      "quantum/quantum/quantum_consensus_system.py",
      "quantum/quantum/quantum_dast_orchestrator.py",
      "quantum/quantum/examples/bio_usage.py",
      "quantum/quantum/symbolic/vocabulary.py",
      "quantum/quantum/quantum_enhanced_oscillator.py",
      "quantum/quantum/base_oscillator.py",
      "quantum/quantum/enhanced_quantum_engine.py",
      "quantum/quantum/quantum_states.py",
      "quantum/quantum/quantum_awareness_system.py",
      "quantum/quantum/quantum_base.py",
      "quantum/quantum/test_quantum.py",
      "quantum/quantum/quantum_unified_system.py",
      "quantum/quantum/quantum_layer.py",
      "quantum/quantum/test_oscillator.py",
      "quantum/quantum/quantum_engine.py"
    ],
    "connectivity": [
      "connectivity/network/lukhas-base/2025-04-14_lukhas-variant/core/lucas_becoming_protocol.py",
      "connectivity/servers/fallback_server.py",
      "connectivity/servers/working_secure_server.py",
      "connectivity/servers/secure_mobile_server.py",
      "connectivity/servers/https_server.py",
      "connectivity/network/lukhas-base/2025-04-14_lukhas-variant/core/lucas_sec_protocol.py",
      "connectivity/servers/enhanced_secure_server.py",
      "connectivity/lukhas_gateway.py",
      "connectivity/servers/simple_secure_server.py"
    ],
    "applications": [
      "applications/flagship/lukhas_flagship/module_registry.py",
      "applications/flagship/lukhas_flagship/core.py"
    ],
    "nias_plugin.py": [
      "nias_plugin.py"
    ],
    "api": [
      "api/ethical_auditor.py"
    ],
    "auth": [
      "auth/src/lucas_id_integration.py",
      "auth/src/lukhas_auth.py"
    ],
    "docs": [
      "docs/generate_core_readmes.py"
    ],
    "meta": [
      "meta/intelligence/lukhas_dast/verify.py",
      "meta/intelligence/lukhas_dast/intelligence.py"
    ],
    "agent": [
      "agent/agent/adaptive_agi/GUARDIAN/sub_agents/ethics_guardian.py"
    ],
    "lambda_dependency_connectivity_test.py": [
      "lambda_dependency_connectivity_test.py"
    ]
  },
  "action_plan": {
    "immediate_fixes": [
      {
        "priority": "HIGH",
        "action": "Create or fix import path for bio_symbolic",
        "affected_files": 13,
        "module": "bio_symbolic"
      },
      {
        "priority": "HIGH",
        "action": "Create or fix import path for bio_awareness",
        "affected_files": 10,
        "module": "bio_awareness"
      }
    ],
    "system_restructuring": [
      {
        "system": "neural",
        "isolated_count": 75,
        "recommendation": "Review neural module structure and improve internal connectivity"
      },
      {
        "system": "core",
        "isolated_count": 52,
        "recommendation": "Review core module structure and improve internal connectivity"
      },
      {
        "system": "symbolic",
        "isolated_count": 52,
        "recommendation": "Review symbolic module structure and improve internal connectivity"
      },
      {
        "system": "interface",
        "isolated_count": 124,
        "recommendation": "Review interface module structure and improve internal connectivity"
      },
      {
        "system": "brain",
        "isolated_count": 186,
        "recommendation": "Review brain module structure and improve internal connectivity"
      }
    ],
    "module_consolidation": [],
    "connectivity_improvements": []
  },
  "missing_modules": {
    "bio_symbolic": 13,
    "voice": 11,
    "bio_awareness": 10,
    "bio_core": 8,
    "voice_safety_guard": 3,
    "voice_synthesis": 3,
    "bio_symbolic_": 3,
    "voice_profiling": 3,
    "voice_modulator": 3,
    "interface": 2
  },
  "affected_systems": {
    "quantum": [
      "bio_awareness.advanced_quantum_bio"
    ],
    "symbolic": [
      "interface.symbolic_helix_timeline"
    ],
    "brain": [
      "bio_awareness.quantum_bio_components",
      "bio_symbolic_.quantum_attention",
      "voice_synthesis",
      "bio_awareness.enhanced_awareness",
      "voice.listen",
      "voice.speak",
      "voice_safety_guard",
      "bio_symbolic"
    ],
    "orchestration": [
      "governance.enhanced_policy_board",
      "bio_symbolic_.symbolic_world",
      "voice_synthesis",
      "bio_awareness.enhanced_awareness",
      "meta_cognitive.enhanced_meta_cognitive",
      "voice_safety_guard",
      "bio_symbolic"
    ],
    "applications": [
      "bio_symbolic.bio_core"
    ],
    "voice": [
      "interface.voice.integrations.elevenlabs.elevenlabs_client",
      "bio_core.oscillator.quantum_layer",
      "bio_core.oscillator.orchestrator",
      "brain.voice_engine",
      "bio_core.voice.quantum_voice_enhancer",
      "voice_modulator",
      "voice.synthesis",
      "voice.emotional_modulator",
      "voice_router",
      "voice_profiling",
      "voice.voice_personality",
      "voice_modularity_system"
    ],
    "shared": [
      "voice_synthesis",
      "bio_oscillator",
      "bio_core.bio_symbolic",
      "bio_symbolic_awareness_adapter",
      "bio_symbolic"
    ],
    "auth": [
      "auth_routes"
    ],
    "core": [
      "bio_symbolic.mito_quantum_attention",
      "bio_symbolic_.quantum_attention",
      "visionary_agi_orchestrator",
      "bio_symbolic.crista_optimizer",
      "voice_modulator",
      "bio_orchestrator",
      "config.settings",
      "voice_safety_guard"
    ],
    "bio": [
      "bio_symbolic.mito_quantum_attention",
      "bio_core.oscillator.quantum_layer",
      "bio_symbolic.bio_orchestrator",
      "bio_symbolic.quantum_attention",
      "bio_awareness.enhanced_awareness",
      "bio_awareness.advanced_quantum_bio"
    ],
    "interface": [
      "voice.voice_integration",
      "interfaces.video.auth_middleware",
      "voice.voice_interface",
      "voice_system_integrator",
      "voice.message_handler",
      "voice_renderer",
      "interfaces"
    ],
<<<<<<< HEAD
    "ΛiD": [
=======
    "Lukhas_ID": [
>>>>>>> jules/ecosystem-consolidation-2025
      "biometric_engine"
    ]
  }
}