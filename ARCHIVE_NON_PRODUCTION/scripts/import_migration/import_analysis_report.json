{
  "total_files_analyzed": 2043,
  "total_import_statements": 14073,
  "unique_modules_imported": 1805,
  "potential_old_imports": 1279,
  "old_import_details": [
    {
      "module": "typing",
      "used_in": [
        "consciousness/awareness/symbolic_trace_logger.py",
        "core/symbolic/collapse/vector_ops.py",
        "orchestration/specialized/component_orchestrator.py",
        "memory/neocortical/semantic_extractor.py",
        "memory/systems/bio_symbolic_memory.py",
        "learning/adaptive_meta_learning.py",
        "orchestration/migrated/memory_integration_orchestrator.py",
        "identity/interface.py",
        "identity/core/onboarding/onboarding.py",
        "benchmarks/voice_system_benchmark.py",
        "features/symbolic/tracer.py",
        "bio/systems/orchestration/identity_aware_bio_orchestrator.py",
        "core/demo_coordination.py",
        "orchestration/brain/eu_awareness_engine.py",
        "reasoning/coherence_patch_validator.py",
        "memory/systems/memoria_system.py",
        "quantum/distributed_quantum_architecture.py",
        "core/ethics/__init__.py",
        "bio/systems/orchestration/oscillator_orchestrator.py",
        "orchestration/brain/token_budget_controller.py",
        "benchmarks/perception_system_benchmark.py",
        "orchestration/brain/abstract_reasoning/oscillator.py",
        "memory/adapters/creativity_adapter.py",
        "orchestration/brain/neuro_symbolic/neural_processor.py",
        "memory/governance/ethical_drift_governor.py",
        "creativity/dream_systems/quantum_dream_adapter.py",
        "tests/memory/test_fold_engine_integration.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware.py",
        "meta/HEADER_FOOTER_TEMPLATE.py",
        "memory/neocortical/concept_hierarchy.py",
        "tests/test.py",
        "memory/voice_memory_manager.py",
        "voice/context_aware_voice_modular.py",
        "examples/identity/qrg_standalone_demo.py",
        "examples/orchestration_src/adaptive_agi_demo.py",
        "core/interfaces/lukhas_as_agent/widgets/widget_config.py",
        "ethics/ethical_guardian.py",
        "orchestration/brain/visualization/memory_helix_visualizer.py",
        "benchmarks/tests/ethical_compliance_test.py",
        "quantum/voice_enhancer.py",
        "config/knowledge/symbolic_knowledge_integration.py",
        "orchestration/brain/integrity_probe.py",
        "emotion/dreamseed_upgrade.py",
        "identity/qrg_100_percent_coverage.py",
        "core/event_replayer.py",
        "memory/systems/memory_drift_mirror.py",
        "quantum/entanglement.py",
        "tools/digest_extractor.py",
        "orchestration/brain/eu_ai_transparency.py",
        "orchestration/brain/learn_to_learn.py",
        "quantum/\u039bBot_quantum_security.py",
        "tests/test_bio_symbolic_integration.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "orchestration/migrated/memory_orchestrator.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "emotion/tools/emotional_echo_detector.py",
        "identity/core/user_tier_mapping.py",
        "identity/backend/verifold/storage/filecoin_uploader.py",
        "memory/systems/healix_memory_core.py",
        "memory/visualizer.py",
        "creativity/dream/oneiric_engine/oneiric_core/db/db.py",
        "creativity/dream/modifiers/quantum_state_modifier.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "reasoning/abstract_reasoning_demo.original.py",
        "memory/systems/simple_store.py",
        "identity/auth/cultural_profile_manager.py",
        "creativity/dream_systems/dream_glyph_bridge.py",
        "learning/federated_learning_system.py",
        "learning/meta_learning_recovery.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "voice/systems/voice_synthesis.py",
        "orchestration/brain/emotional/core.py",
        "core/identity/engine.py",
        "identity/core/onboarding/onboarding_config.py",
        "features/memory/hooks/base.py",
        "tests/test_memory_comprehensive.py",
        "symbolic/neural/neural_symbolic_bridge.py",
        "creativity/dream/redirect_trace_replayer.py",
        "tests/utils/test_collector.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "core/personality/creative_personality_clean.py",
        "orchestration/brain/self_improvement/meta_learner.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "consciousness/systems/consciousness.py",
        "features/symbolic/collapse/trace.py",
        "examples/integration/simple_integration_test.py",
        "ethics/policy_engines/base.py",
        "memory/systems/memoria/__init__.py",
        "core/enhanced_swarm.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "orchestration/brain/colony_coordinator.py",
        "orchestration/brain/ai_compliance.py",
        "symbolic/bio/symbolic_entropy.py",
        "orchestration/brain/visualization/healix_visualizer.py",
        "bio/core.py",
        "core/infrastructure/node_collection.py",
        "features/integration/system_bridge.py",
        "tests/suites/advanced_agi_test_suite.py",
        "orchestration/colony_orchestrator.py",
        "memory/emotional_memory_manager.py",
        "orchestration/brain/lambda_bot_batch_processor.py",
        "orchestration/agents/adaptive_orchestrator.py",
        "memory/adapters/colony_memory_adapter.py",
        "features/docututor/symbolic_knowledge_core/knowledge_graph.py",
        "features/memory/fold_lineage_tracker.py",
        "tests/core/symbolic/test_collapse.py",
        "ethics/policy_engines/examples/__init__.py",
        "examples/ethics/lambda_governor_demo.py",
        "orchestration/orchestrator.py",
        "core/interfaces/custom_llm.py",
        "identity/enterprise/auth.py",
        "identity/backend/verifold/entropy_fusion.py",
        "memory/distributed_state_manager.py",
        "memory/glyph_memory_integration.py",
        "orchestration/security/dast/tests.py",
        "orchestration/config/orchestrator_flags.py",
        "ethics/security/secure_utils.py",
        "orchestration/brain/privacy_manager.py",
        "memory/systems/memory_session_storage.py",
        "core/governance/governance_colony.py",
        "memory/systems/memory_drift_tracker.py",
        "bridge/symbolic_dream_bridge.py",
        "orchestration/monitoring/reflection_layer.py",
        "orchestration/brain/attention/quantum_attention.py",
        "voice/systems/synthesis.py",
        "identity/backend/verifold/web3/emotion_nft_standard.py",
        "voice/voice_profiling.py",
        "orchestration/brain/trace_memoria_logger.py",
        "quantum/post_quantum_crypto.py",
        "memory/systems/memoria/dream_cron.py",
        "identity/auth_utils/cognitive_load_estimator.py",
        "creativity/dream/openai_dream_integration.py",
        "core/services/location/tracker.py",
        "orchestration/brain/core/azure_openai_client.py",
        "orchestration/brain/symbolic_engine/semantic_reasoner.py",
        "memory/tools/memory_drift_auditor.py",
        "reasoning/LBot_reasoning_processed.py",
        "voice/voice_cultural_integrator.py",
        "orchestration/brain/compliance_registry.py",
        "creativity/emotional_resonance.py",
        "orchestration/brain/unified_integration/adapters/intent_adapter.py",
        "features/integration/layer.py",
        "identity/core/commercial/commercial_module.py",
        "ethics/policy_engines/examples/three_laws.py",
        "memory/base_manager.py",
        "orchestration/example_agents.py",
        "core/api_controllers.py",
        "reasoning/conflict_resolver.py",
        "memory/systems/memory_introspection_engine.py",
        "core/identity_aware_base.py",
        "ethics/utils.py",
        "orchestration/core_modules/orchestrator_core.py",
        "identity/auth_backend/qr_entropy_generator.py",
        "memory/systems/in_memory_cache_storage_wrapper.py",
        "features/common/base_config.py",
        "core/modules/nias/dream_recorder.py",
        "memory/systems/lukhas_memory_recall.py",
        "identity/backend/verifold/qr_decoder.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "benchmarks/reasoning_system_benchmark.py",
        "orchestration/specialized/ui_orchestrator.py",
        "orchestration/brain/seamless/experience_core.py",
        "core/id.py",
        "voice/validator.py",
        "orchestration/brain/spine/main_loop.py",
        "consciousness/systems/engine_codex.py",
        "core/practical_optimizations.py",
        "features/docututor/memory_evolution/version_control.py",
        "features/integration/executive_decision_integrator.py",
        "orchestration/specialized/orchestrator_emotion_engine.py",
        "core/actor_system.py",
        "identity/backend/verifold/storage/verifold_exporter.py",
        "quantum/vault_manager.py",
        "core/spine/integration_orchestrator.py",
        "config/fallback_settings.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "api/memory.py",
        "learning/system.py",
        "orchestration/brain/meta_cognitive/reflective_introspection_system.py",
        "memory/symbol_aware_tiered_memory.py",
        "identity/core/lambd_id_service.py",
        "identity/backend/verifold/setup_project.py",
        "voice/voice_system_integrator.py",
        "orchestration/brain/dynamic_adaptive_dashboard.py",
        "tests/test_lambda_governor.py",
        "ethics/governance_checker.py",
        "features/symbolic/trace_verifier.py",
        "examples/consciousness/consciousness_demo.py",
        "orchestration/security/dast/engine.py",
        "learning/meta_adaptive/meta_learning.py",
        "bio/bio_affect_model.py",
        "reasoning/systems/id_reasoning_engine.py",
        "creativity/dream_systems/dream_emotion_bridge.py",
        "features/symbolic/drift/score.py",
        "tests/test_memory_fold_universal_integration.py",
        "voice/cognitive_voice.py",
        "benchmarks/dashboard_system_benchmark.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "orchestration/brain/awareness_engine.py",
        "orchestration/brain/main_bot.py",
        "identity/backend/verifold/compliance/symbolic_audit_mode.py",
        "bio/quantum_layer.py",
        "bio/recovery_protocol.py",
        "bio/systems/orchestration/adapters/voice_adapter.py",
        "creativity/systems/voice_personality_creativity_engine.py",
        "learning/meta_learning/meta_core.py",
        "tests/test_self_reflective_debugger_ml_models.py",
        "features/docututor/memory_evolution/bio_oscillator.py",
        "reasoning/response_reasoning_item.py",
        "creativity/dream/dashboard/dream_metrics_view.py",
        "orchestration/agents/builtin/codex.py",
        "bio/endocrine_integration.py",
        "creativity/quantum_creative_integration.py",
        "bio/symbolic_entropy_observer.py",
        "creativity/dream/tag_debug.py",
        "orchestration/brain/safety_guardrails.py",
        "memory/lightweight_concurrency.py",
        "creativity/personality_engine.py",
        "orchestration/module_orchestrator.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "emotion/affect_stagnation_detector.py",
        "core/plugin_registry.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware_unified.py",
        "voice/audio_engine.py",
        "quantum/validator.py",
        "benchmarks/tests/biological_memory_validation_test.py",
        "tools/fix_corrupted_lukhas.py",
        "quantum/bio_crista_optimizer_adapter.py",
        "quantum/certificate_manager.py",
        "benchmarks/api_system_benchmark.py",
        "tests/core/test_agent_coordination.py",
        "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
        "examples/reasoning/oracle_demo.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "voice/interface.py",
        "core/targeted_api_fixes.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "memory/systems/trauma_lock.py",
        "memory/memory_optimization.py",
        "features/crista_optimizer/symbolic_network.py",
        "features/integration/system_coordinator.py",
        "consciousness/awareness/__init__.py",
        "identity/lukhus_ultimate_test_suite.py",
        "core/unified/orchestration.py",
        "core/interfaces/voice/voice_emotional/context_aware_modular_voice.py",
        "identity/backend/verifold/ledger_auditor.py",
        "creativity/dream_systems/dream_delivery_manager.py",
        "bridge/message_bus.py",
        "bridge/personality_communication_engine.py",
        "memory/core/interfaces/semantic_interface.py",
        "memory/systems/in_memory_span_exporter.py",
        "memory/integration_test.py",
        "features/symbolic/collapse/engine.py",
        "voice/recognition.py",
        "voice/integrations/openai/dalle_client.py",
        "interfaces/api/v1/rest/middleware.py",
        "core/user_interface_manager/text_handler.py",
        "memory/systems/memory_orchestrator.py",
        "tests/test_glyph_recall_drift_correlation.py",
        "orchestration/brain/australian_awareness_engine.py",
        "interfaces/api/v1/grpc/pb2.py",
        "memory/colonies/episodic_memory_colony.py",
        "bio/endocrine_daily_operations.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "creativity/engines/engine.py",
        "memory/systems/learn_to_learn.py",
        "memory/systems/integration_adapters.py",
        "memory/replay/replay_buffer.py",
        "ethics/orchestrator.py",
        "ethics/governor/dao_controller.py",
        "voice/personality.py",
        "consciousness/reflection/lambda_mirror.py",
        "bio/oscillator.py",
        "features/integration/governance/policy_board.py",
        "benchmarks/tests/ethical_compliance.py",
        "ethics/compliance_simple.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "emotion/symbolic_user_intent.py",
        "emotion/affect_detection/affect_stagnation_detector.py",
        "consciousness/awareness/system_awareness.py",
        "interfaces/api/lambda_bot_api_integration.py",
        "consciousness/awareness/awareness_protocol.py",
        "consciousness/systems/engine_alt.py",
        "main.py",
        "core/infrastructure/node_manager.py",
        "ethics/quantum_mesh_integrator.py",
        "learning/usage_learning.py",
        "orchestration/core_modules/core_integrator.py",
        "memory/service.py",
        "core/integrated_safety_system.py",
        "memory/systems/memory_node.py",
        "core/identity_aware_base_colony.py",
        "orchestration/brain/core/response_types.py",
        "memory/systems/memory_learning/memory_manager.py",
        "narrative/symbolic_weaver.py",
        "interfaces/protocols/awareness_protocol.py",
        "memory/systems/memory_bases.py",
        "voice/integrations/openai/whisper_client.py",
        "voice/bio_core/oscillator/orchestrator.py",
        "reasoning/reasoning_effort.py",
        "consciousness/service.py",
        "identity/api/controllers/lambd_id_controller.py",
        "core/module_registry.py",
        "features/integration/neuro_symbolic_fusion_layer.py",
        "tests/test_quantum_coordinator.py",
        "orchestration/base.py",
        "identity/backend/verifold/cryptography/forward_secure_pibe.py",
        "orchestration/brain/experience_manager.py",
        "core/monitoring/collapse_tracker.py",
        "memory/systems/memory_helix_visualizer.py",
        "memory/systems/memory_helix_golden.py",
        "core/testing/plugin_test_framework.py",
        "orchestration/core_modules/system_orchestrator.py",
        "memory/systems/memory_validator.py",
        "tests/memory_stress_tests.py",
        "orchestration/resonance_orchestrator.py",
        "memory/emotional.py",
        "ethics/training/alignment_overseer.py",
        "orchestration/immune/system_watchdog.py",
        "quantum/quantum_flux.py",
        "identity/public/lambda_id_previewer.py",
        "memory/systems/memory_advanced_manager.py",
        "benchmarks/bridge_system_benchmark.py",
        "orchestration/brain/consciousness/memory_identity.py",
        "core/cluster_sharding.py",
        "core/introspection/introspector.py",
        "identity/backend/verifold/security/symbolic_adversary_agent.py",
        "consciousness/systems/integrator.py",
        "quantum/systems/quantum_validator.py",
        "memory/systems/memory_consolidator.py",
        "core/colonies/reasoning_colony.py",
        "tests/test_integration_complete.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "identity/mobile_platform/mobile_ui_renderer.py",
        "features/docututor/memory_evolution/knowledge_adaptation.py",
        "orchestration/brain/collapse_chain_simulator.py",
        "api/emotion.py",
        "memory/systems/foldin.py",
        "tests/orchestration/test_plugin_registry.py",
        "quantum/bio_system.py",
        "tools/task_tracker.py",
        "tests/compliance/test_global_institutional_framework.py",
        "memory/colonies/base_memory_colony.py",
        "ethics/redteam_sim.py",
        "examples/unit_tests/test_brain_integration.py",
        "orchestration/brain/symbolic_engine/symbolic_core.py",
        "memory/systems/hybrid_memory_fold.py",
        "memory/systems/agent_memory.py",
        "identity/qrg_showcase.py",
        "features/integration/safety/coordinator.py",
        "orchestration/brain/drift_pattern_analyzer.py",
        "orchestration/brain/meta/cognition/orchestrator.py",
        "memory/systems/foldin_simple.py",
        "simulation/agents_of_failure.py",
        "core/performance/orchestrator.py",
        "orchestration/brain/neural/neural_intelligence_api.py",
        "orchestration/brain/symbolic_ai/modules/dream_generator.py",
        "orchestration/workflow_engine.py",
        "orchestration/brain/neural/cognitive_core.py",
        "core/oracle_nervous_system.py",
        "memory/core/colony_memory_validator.py",
        "core/automatic_testing_system.py",
        "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
        "tests/memory/test_identity_lineage_validation.py",
        "identity/security/symbolic_vault.py",
        "orchestration/brain/unified_integration/adapters/dream_adapter.py",
        "orchestration/interfaces/plugin_registry.py",
        "identity/core/id_service/entropy_engine.py",
        "tools/import_path_fixer.py",
        "core/p2p_communication.py",
        "symbolic/glyph_engine.py",
        "foundry/lambda_mirror.py",
        "memory/systems/memory_profiler.py",
        "core/fallback_services.py",
        "orchestration/agents/types.py",
        "memory/systems/memoria/gpt_reflection.py",
        "orchestration/core_modules/symbolic_handshake.py",
        "features/integration/dynamic_modality_broker.py",
        "core/symbolic_bridge/token_map.py",
        "memory/systems/memory_encryptor.py",
        "symbolic/symbolic_glyph_hash.py",
        "memory/tools/lambda_vault_scan.py",
        "features/symbolic/collapse/reasoner.py",
        "symbolic/swarm_tag_simulation.py",
        "core/quantum_identity_manager.py",
        "emotion/mood_regulation/mood_regulator.py",
        "bio/symbolic/bio_symbolic_orchestrator.py",
        "core/consistency_manager.py",
        "identity/core/qrg/qrg_manager.py",
        "ethics/meg_bridge.py",
        "ethics/stabilization/tuner.py",
        "quantum/systems/quantum_entanglement.py",
        "consciousness/systems/dream_engine/dream_reflection_loop.py",
        "identity/backend/seedra/identity_validator.py",
        "creativity/creative_market.py",
        "memory/systems/memory_collapse_verifier.py",
        "tools/fix_remaining_issues.py",
        "identity/backend/verifold/verifold_chain.py",
        "core/examples/mailbox_demo.py",
        "reasoning/reasoning_engine.py",
        "identity/backend/verifold/web_journal/web_journal_app.py",
        "symbolic/neural/neuro_symbolic_fusion_layer.py",
        "trace/drift_harmonizer.py",
        "memory/systems/causal_memory_chains.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "orchestration/brain/brain_collapse_manager.py",
        "orchestration/security/ethics_loop_guard.py",
        "orchestration/security/LGOV_validator.py",
        "creativity/dream/oneiric_engine/oneiric_core/settings.py",
        "core/colonies/governance_colony_enhanced.py",
        "core/identity/persona_engine.py",
        "creativity/dream_systems/dream_engine.py",
        "reasoning/collapse_reasoner.py",
        "core/event_replay_snapshot.py",
        "identity/backend/verifold/journal_mode.py",
        "memory/systems/reflection_engine.py",
        "benchmarks/learning_system_benchmark.py",
        "core/distributed_tracing.py",
        "core/colonies/creativity_colony.py",
        "memory/loop_monitor.py",
        "ethics/meta_ethics_governor.py",
        "voice/synthesis.py",
        "bridge/llm_wrappers/unified_openai_client.py",
        "tests/test_phase3b_memory_recurrence.py",
        "orchestration/security/dast/intelligence.py",
        "orchestration/agents/registry.py",
        "quantum/regenerate_intelligent_descriptions.py",
        "core/colonies/memory_colony.py",
        "orchestration/brain/neuro_symbolic/neuro_symbolic_engine.py",
        "core/symbolic_contract.py",
        "bio/stress_signal.py",
        "orchestration/brain/consciousness.py",
        "orchestration/user_feedback/symbolic_tuner.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "core/__init__.py",
        "creativity/dream/dream_engine/oracle_dream.py",
        "orchestration/brain/mesh/collapse_mesh.py",
        "docs/documentation_updater.py",
        "tests/fixtures/memory_fixtures.py",
        "orchestration/brain/security_pr_analyzer.py",
        "features/docututor/memory_evolution/voice_synthesis.py",
        "voice/safety/voice_safety_guard.py",
        "examples/integration/integrated_abot_demo.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "identity/backend/verifold/verifold_hash_pq.py",
        "quantum/engine.py",
        "memory/proteome/symbolic_proteome.py",
        "identity/core/tier/tier_manager.py",
        "bio/symbolic/anomaly_filter_colony.py",
        "consciousness/cognitive_architecture_controller.py",
        "foundry/symbolic_foundry.py",
        "security/moderator.py",
        "core/symbolism/methylation_model.py",
        "creativity/dream/dream_pipeline.py",
        "orchestration/brain/prediction/world_models.py",
        "examples/unit_tests/test_chatgpt_memory_integrator.py",
        "memory/quantum_manager.py",
        "quantum/bio_multi_orchestrator.py",
        "reasoning/analysis/engine.py",
        "benchmarks/tests/test_swarm_coherence_integration.py",
        "creativity/creative_q_expression.py",
        "tests/fixtures/symbolic_fixtures.py",
        "core/actor_supervision_integration.py",
        "reasoning/traceback_orchestrator.py",
        "memory/systems/colony_swarm_integration.py",
        "tools/cleanup_and_organize.py",
        "features/symbolic/memory_reflection_template.py",
        "memory/systems/dream_trace_linker.py",
        "core/symbolism/archiver.py",
        "creativity/dream/engine/dream_engine_optimizer.py",
        "orchestration/monitoring/health_checks.py",
        "interfaces/api/v1/common/validators.py",
        "benchmarks/performance/quantized_cycles_stress_test.py",
        "learning/meta_learning/symbolic_feedback.py",
        "reasoning/intent/intent_processor.py",
        "memory/systems/memory_safety_features.py",
        "consciousness/systems/\u039bBot_consciousness_monitor.py",
        "ethics/utils/tag_misinterpretation_sim.py",
        "consciousness/systems/engine.py",
        "core/interfaces/logic/context/context_builder.py",
        "quantum/quantum_waveform.py",
        "identity/backend/verifold/identity/lukhas_recovery_protocols.py",
        "ethics/engine.py",
        "identity/backend/verifold/yubi_seeder.py",
        "reasoning/symbolic_loop_harmonizer.py",
        "memory/manager.py",
        "memory/systems/lazy_loading_embeddings.py",
        "creativity/voice_integrator.py",
        "voice/voice_integration.py",
        "orchestration/brain/orchestration/orchestrator.py",
        "examples/api_usage_examples.py",
        "orchestration/monitoring/sub_agents/ethics_guardian.py",
        "ethics/glyph_ethics_validator.py",
        "identity/auth_backend/trust_scorer.py",
        "ethics/meg_guard.py",
        "voice/bio_core/voice/quantum_voice_enhancer.py",
        "orchestration/brain/abstract_reasoning/confidence_calibrator.py",
        "memory/systems/memory_lock.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "quantum/metadata.py",
        "orchestration/quorum_orchestrator.py",
        "orchestration/brain/meta/learning/system.py",
        "learning/tutor_learning_engine.py",
        "core/tier_aware_colony_proxy.py",
        "quantum/quantum_glyph_registry.py",
        "reasoning/trace_summary_builder.py",
        "core/interfaces/lukhas_as_agent/utils/constants.py",
        "core/interfaces/ui/adaptive/ui_orchestrator.py",
        "consciousness/systems/state.py",
        "ethics/guardian.py",
        "identity/auth_utils/attention_monitor.py",
        "orchestration/agent_orchestrator.py",
        "docs/examples/translation_agent.py",
        "orchestration/brain/vulnerability_dashboard.py",
        "orchestration/brain/compliance/ai_compliance_manager.py",
        "memory/systems/memoria/dreams.py",
        "symbolic/service_analysis.py",
        "quantum/quantum_processing/__init__.py",
        "dashboard/core/test_execution_engine.py",
        "consciousness/systems/cognitive_systems/voice_personality.py",
        "orchestration/brain/autonomous_github_manager.py",
        "bridge/llm_wrappers/env_loader.py",
        "orchestration/brain/net/async_client.py",
        "core/supervision.py",
        "learning/federated_meta_learning.py",
        "docs/examples/three_laws_ethics.py",
        "orchestration/brain/unified_integration/adapters/awareness_adapter.py",
        "orchestration/brain/unified_integration/adapters/cognitive_adapter.py",
        "memory/systems/multimodal_memory_support.py",
        "core/colonies/ethics_swarm_colony.py",
        "identity/backend/verifold/visual/qr_tier_scanner.py",
        "identity/lukhus_deployment_package.py",
        "features/symbolic/glyphs/symbolic_foundry.py",
        "interfaces/api/v1/rest/routers/tasks.py",
        "core/common.py",
        "tools/vision/vision_prompt_helper.py",
        "core/personality/creative_expressions.py",
        "memory/systems/remvix/__init__.py",
        "consciousness/openai_consciousness_adapter.py",
        "identity/auth_utils/grid_size_calculator.py",
        "interfaces/api/v1/grpc/pb2_grpc.py",
        "identity/backend/verifold/security/consent_fuzz_tester.py",
        "memory/systems/collapse_trace.py",
        "bio/trust_binder.py",
        "core/api_diff_analyzer.py",
        "features/symbolic/glyphs.py",
        "dashboard/api/websocket_server.py",
        "api/glyph_exchange.py",
        "interfaces/api/v1/rest/models.py",
        "reasoning/reporting/reasoning_report_generator.py",
        "core/notion_sync.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "core/monitoring/collapse_integration.py",
        "identity/backend/seedra/biometric_engine.py",
        "tests/unified_grammar/test_grammar_compliance.py",
        "orchestration/brain/research_awareness_engine.py",
        "api/colony_endpoints.py",
        "identity/utils/entropy_calculator.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "quantum/add_compliant_headers.py",
        "memory/systems/memoria/replayer.py",
        "core/ai/integration_manager.py",
        "bio/stability_anchor.py",
        "features/integration/safety/emergency_override.py",
        "voice/modularity_system.py",
        "memory/systems/fold_lineage_tracker.py",
        "orchestration/brain/cognitive_core.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "core/resource_efficiency_analyzer.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "orchestration/brain/das_awareness_engine.py",
        "orchestration/brain/spine/fold_engine.py",
        "memory/systems/orchestrator.py",
        "orchestration/brain/ethics/ethics_engine.py",
        "core/user_interface_manager/voice_handler.py",
        "consciousness/cognitive/__init__.py",
        "orchestration/brain/compliance/constitutional_ai.py",
        "memory/repair/advanced_trauma_repair.py",
        "dashboard/core/test_performance_monitor.py",
        "features/common/ethics.py",
        "ethics/security/flagship_security_engine.py",
        "creativity/dream/core.py",
        "quantum/dast_orchestrator.py",
        "tests/test_ethical_drift_sentinel.py",
        "tests/test_lambda_echo_detector.py",
        "quantum/phase_quantum_integration.py",
        "tests/advanced_memory_fold_test_suite.py",
        "bridge/llm_wrappers/azure_openai_wrapper.py",
        "tests/core/symbolic/test_glyphs.py",
        "core/meta_learning/remediator_agent.py",
        "identity/auth_backend/authentication_server.py",
        "identity/backend/verifold/verifold_replay_engine.py",
        "learning/federated_colony_learning.py",
        "dashboard/core/test_scheduler.py",
        "core/observatory.py",
        "examples/integration/demo_ai_integration.py",
        "orchestration/agents/multi_agent_collaboration.py",
        "benchmarks/configuration_system_benchmark.py",
        "orchestration/brain/orchestrator.py",
        "memory/compression/symbolic_delta.py",
        "memory/core/interfaces/episodic_interface.py",
        "core/monitoring_observability.py",
        "bridge/llm_wrappers/perplexity_wrapper.py",
        "voice/interfaces/voice_interface.py",
        "memory/systems/symbolic_delta_compression.py",
        "bridge/symbolic_memory_mapper.py",
        "orchestration/brain/brain_integration.py",
        "memory/systems/module_integrations.py",
        "identity/core/tier/tier_system.py",
        "bridge/colony_bridge.py",
        "core/net/client_event.py",
        "memory/systems/memoria_codex.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "identity/auth_utils/cultural_safety_checker.py",
        "orchestration/brain/integration/brain_integration.py",
        "memory/systems/memory_research.py",
        "memory/systems/engine.py",
        "features/symbolic/causal_reasoner_template.py",
        "orchestration/brain/uk_awareness_engine.py",
        "features/symbolic/glyphs/glyph.py",
        "examples/creativity/dream_interpreter_demo.py",
        "creativity/dream/processors/dream_processor.py",
        "creativity/dream/dream_seed.py",
        "ethics/policy_engines/examples/gpt4_policy.py",
        "tools/interactive_test_suite.py",
        "memory/core/interfaces/memory_interface.py",
        "examples/consciousness/quantum_creative_consciousness_demo.py",
        "quantum/processor.py",
        "bio/symbolic/contextual_mapping_colony.py",
        "core/observability_steering.py",
        "memory/core/unified_memory_orchestrator.py",
        "tests/auditor_test_suite.py",
        "creativity/dream/oneiric_engine/oneiric_core/analysis/drift_score.py",
        "tests/memory/test_glyph_memory_integration.py",
        "core/colonies/memory_colony_enhanced.py",
        "dashboard/core/morphing_engine.py",
        "orchestration/brain/adaptive_image_generator.py",
        "core/efficient_communication.py",
        "orchestration/security/dast/adapters.py",
        "voice/modulator.py",
        "learning/meta_learning.py",
        "features/docututor/memory_evolution/document_analyzer.py",
        "core/colonies/temporal_colony.py",
        "core/monitoring/drift_monitor.py",
        "ethics/self_reflective_debugger.py",
        "diagnostics/entropy_radar.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "emotion/cycler.py",
        "examples/orchestration_src/demo_orchestrator.py",
        "memory/basic.py",
        "identity/backend/verifold/cryptography/crypto_router.py",
        "memory/systems/distributed_memory.py",
        "core/symbolic_boot.py",
        "ethics/service.py",
        "orchestration/brain/neuro_symbolic/hybrid_integration.py",
        "ethics/simulations/lambda_shield_tester.py",
        "memory/systems/in_memory_log_exporter.py",
        "memory/drift_memory_manager.py",
        "identity/backend/verifold/verifold_gui.py",
        "consciousness/systems/engine_poetic.py",
        "memory/systems/memory_identity.py",
        "memory/systems/trace_injector.py",
        "creativity/dream/engine/dream_engine_merged.py",
        "features/symbolic/security/glyph_redactor_engine.py",
        "ethics/ethical_drift_detector.py",
        "orchestration/brain/symbol_validator.py",
        "creativity/dream/engine/legacy_dream_engine.py",
        "orchestration/brain/monitoring/performance.py",
        "tools/dev/add_verbose_core_descriptions.py",
        "trace/drift_tools.py",
        "bio/symbolic_entropy.py",
        "learning/tutor.py",
        "orchestration/system_orchestrator.py",
        "tools/fix_headers.py",
        "features/memory/integration_orchestrator.py",
        "memory/evolution.py",
        "bio/systems/orchestration/bio_orchestrator.py",
        "core/integrator.py",
        "core/identity/manager.py",
        "core/personality/personality.py",
        "memory/systems/memory_processing.py",
        "features/memory/memory_fold.py",
        "reasoning/response_reasoning_item_param.py",
        "orchestration/brain/collapse_bridge.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "core/resource_efficiency.py",
        "identity/core/id_service/portability_system.py",
        "identity/core/sent/consent_history.py",
        "tests/active/test_context_analyzer.py",
        "core/resource_optimization_integration.py",
        "core/identity/mapper.py",
        "orchestration/specialized/loop_recovery_simulator.py",
        "orchestration/brain/neuro_symbolic/bridge.py",
        "tools/safe_workspace_analyzer.py",
        "memory/systems/memory_visualizer.py",
        "bridge/symbolic_reasoning_adapter.py",
        "orchestration/master_orchestrator.py",
        "core/quantized_thought_cycles.py",
        "features/memory/fold_engine.py",
        "bio/systems/mitochondria_model.py",
        "identity/backend/verifold/web_dashboard.py",
        "orchestration/integration_engine.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py",
        "memory/systems/helix_mapper.py",
        "emotion/mood_regulation/mood_entropy_tracker.py",
        "memory/systems/attention_memory_layer.py",
        "orchestration/brain/multi_brain_orchestrator.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "dashboard/core/fallback_system.py",
        "quantum/quantum_bio_coordinator.py",
        "memory/fold_entropy_visualizer.py",
        "quantum/consensus_system.py",
        "identity/backend/seedra/seedra_core.py",
        "bio/colony_self_repair.py",
        "orchestration/brain/cognitive/voice_engine.py",
        "features/integration/connectivity_engine.py",
        "core/interfaces/logic/delegate_logic.py",
        "creativity/affect_stagnation_detector.py",
        "core/config.py",
        "core/swarm_identity_orchestrator.py",
        "creativity/dream_systems/dream_stats.py",
        "core/colonies/oracle_colony.py",
        "features/common/base_health.py",
        "orchestration/core_modules/workflow_engine.py",
        "orchestration/brain/dream_engine/cli/dream_processor.py",
        "creativity/dream/cli/dream_processor.py",
        "core/integrated_system.py",
        "bridge/trace_logger.py",
        "orchestration/brain/core/orchestrator.py",
        "identity/auth/constitutional_gatekeeper.py",
        "consciousness/quantum_consciousness_integration.py",
        "consciousness/systems/lambda_mirror.py",
        "identity/utils/symbolic_parser.py",
        "reasoning/oracle_predictor.py",
        "tools/core_module_analyzer.py",
        "voice/speech_processor.py",
        "memory/systems/memory_tracker.py",
        "symbolic/colony_tag_propagation.py",
        "api/consciousness.py",
        "identity/backend/verifold/visual/glyph_stego_encoder.py",
        "bio/symbolic/dna_simulator.py",
        "memory/systems/episodic_replay_buffer.py",
        "perception/symbolic_nervous_system.py",
        "identity/governance/policy_board.py",
        "emotion/recurring_emotion_tracker.py",
        "core/interaction/symptom_reporter.py",
        "memory/systems/memory_recall.py",
        "tests/test_glyph_memory_timeline.py",
        "creativity/dream/feedback_propagator.py",
        "features/symbolic/memoria/recall_hooks.py",
        "creativity/dream_systems/dream_utils.py",
        "reasoning/symbolic_logic_engine.py",
        "bio/simulation_controller.py",
        "voice/speech_engine.py",
        "ethics/compliance_validator.py",
        "quantum/bio_components.py",
        "identity/backend/verifold/cryptography/zk_narrative_proof_adapter.py",
        "orchestration/core.py",
        "creativity/dream/processors/dream_processor_integrator.py",
        "orchestration/brain/quantum_annealed_consensus.py",
        "bio/base_oscillator.py",
        "orchestration/brain/rem/dream_processor_integrator.py",
        "memory/systems/memory_utils.py",
        "dashboard/core/test_management_system.py",
        "ethics/meg_openai_guard.py",
        "identity/auth/entropy_synchronizer.py",
        "orchestration/security/dast_orchestrator.py",
        "symbolic/vocabularies/voice_vocabulary.py",
        "quantum/bio_optimization_adapter.py",
        "core/direct_ai_router.py",
        "orchestration/brain/neural/neural_intelligence_main.py",
        "identity/core/qrs_manager.py",
        "creativity/dream_systems/snapshot_redirection_controller.py",
        "bio/eeg_sync_bridge.py",
        "trace/drift_dashboard.py",
        "creativity/dream/stability/redirect_forecaster.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_unified.py",
        "reasoning/reasoning_metrics.py",
        "quantum/neural_symbolic_engine.py",
        "orchestration/brain/context_analyzer.py",
        "consciousness/cognitive/adapter_complete.py",
        "core/observability/collector.py",
        "ethics/fallback/ethics_layer.py",
        "memory/systems/identity_lineage_bridge.py",
        "quantum/dream_adapter.py",
        "quantum/bio.py",
        "quantum/oscillator.py",
        "features/common/base_module.py",
        "creativity/dream/dream_data_sources.py",
        "core/ethics/dream_ethics_injector.py",
        "memory/systems/hierarchical_data_store.py",
        "dashboard/core/universal_adaptive_dashboard.py",
        "creativity/dream/quantum_dream_adapter.py",
        "core/core_system.py",
        "features/diagnostic_engine/engine.py",
        "reasoning/causal_reasoning.py",
        "examples/integration/integration_tests.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "orchestration/core_modules/controller.py",
        "quantum/ethics_engine.py",
        "bridge/llm_wrappers/gemini_wrapper.py",
        "quantum/systems/bio_integration/connectivity_consolidator.py",
        "benchmarks/security_system_benchmark.py",
        "memory/systems/replay_system.py",
        "creativity/healix_visualizer.py",
        "creativity/systems/vocabulary_creativity_engine.py",
        "creativity/dream/dream_generator.py",
        "benchmarks/tests/run_comprehensive_test_suite.py",
        "orchestration/brain/ethics/ethical_hierarchy.py",
        "features/creative_engine/engine.py",
        "core/tiered_state_management.py",
        "orchestration/brain/pr_security_review_task.py",
        "memory/systems/resonance_memory_retrieval.py",
        "features/symbolic/memoria/symbolic_trace_map.py",
        "features/memory/dream_memory_fold.py",
        "quantum/system.py",
        "core/generate_autotest_docs.py",
        "bridge/llm_wrappers/anthropic_wrapper.py",
        "creativity/dream/engine/advanced_dream_engine.py",
        "consciousness/systems/quantum_consciousness_integration.py",
        "orchestration/brain/monitoring/guardian_reflector.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "quantum/awareness_system.py",
        "creativity/creative_engine.py",
        "orchestration/monitoring/remediator_agent.py",
        "reasoning/\u039bBot_reasoning.py",
        "emotion/dreamseed_unified.py",
        "memory/systems/pin_memory_cache.py",
        "tools/prediction/test_prophet.py",
        "core/colonies/tensor_colony_ops.py",
        "orchestration/config/production_config.py",
        "ethics/compliance.py",
        "memory/hippocampal/pattern_separator.py",
        "identity/core/sing/sso_engine.py",
        "identity/backend/verifold/verifold_hash_utils.py",
        "tools/sandbox_runner.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "identity/api/api.py",
        "dashboard/core/dashboard_colony_agent.py",
        "creativity/dream_systems/dream_limiter.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "core/quorum_override.py",
        "memory/openai_memory_adapter.py",
        "orchestration/brain/prediction/predictive_resource_manager.py",
        "memory/systems/neurosymbolic_integration.py",
        "tools/path_validator.py",
        "identity/core/id_service/lambd_id_generator.py",
        "memory/consolidation/ripple_generator.py",
        "reasoning/symbolic_reasoning.py",
        "voice/audio_processor.py",
        "orchestration/brain/net/client.py",
        "core/colonies/base_colony.py",
        "ethics/simulations/colony_dilemma_simulation.py",
        "orchestration/brain/unified_integration/adapters/legacy_adapter.py",
        "memory/systems/meta_learning_patterns.py",
        "tests/test_self_reflective_debugger_correlation.py",
        "features/memory/fold_universal_bridge.py",
        "tests/orchestration/test_agent_interface.py",
        "orchestration/agents/orchestrator.py",
        "orchestration/core_modules/master_orchestrator_alt.py",
        "quantum/bio_test_oracle.py",
        "consciousness/cognitive/adapter.py",
        "quantum/neuro_symbolic_engine.py",
        "orchestration/apis/drift_monitoring_api.py",
        "identity/tests/test_comprehensive.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "ethics/lukhas_ethics_guard.py",
        "tools/symbolic_cli_test.py",
        "orchestration/swarm_orchestration_adapter.py",
        "core/identity/processor.py",
        "features/common/symbolic.py",
        "core/services/location/geofencing_manager.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "features/memory/connection_visualizer.py",
        "orchestration/security/dast/api.py",
        "examples/unit_tests/test_voice.py",
        "ethics/policy_engines/__init__.py",
        "identity/backend/verifold/verifold_cli.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "memory/systems/foldout.py",
        "identity/utils/qrg_parser.py",
        "quantum/processing_core.py",
        "creativity/dream/engine/dream_engine.py",
        "memory/systems/memory_reflector.py",
        "memory/systems/core.py",
        "consciousness/brain_integration_20250620_013824.py",
        "bridge/integration_bridge.py",
        "memory/systems/processor.py",
        "features/crista_optimizer/crista_optimizer.py",
        "orchestration/migrated/ethics_orchestrator.py",
        "core/identity_integration.py",
        "memory/systems/tier_system.py",
        "learning/service.py",
        "bio/symbolic/fallback_systems.py",
        "core/personality/__init__.py",
        "orchestration/monitoring/sub_agents/memory_cleaner.py",
        "core/meta_learning/enhancement_system.py",
        "memory/dashboard.py",
        "core/symbolic_diagnostics/trace_repair_engine.py",
        "orchestration/brain/neuro_symbolic/neuro_symbolic_integration.py",
        "memory/symbolic_integration.py",
        "memory/repair/helix_repair_module.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "bio/protein_synthesizer.py",
        "quantum/add_intelligent_descriptions.py",
        "memory/systems/lukhas_memory_encryptor.py",
        "examples/integration/quantum_identity_integration_test.py",
        "features/data_manager/crud_operations.py",
        "orchestration/agents/base.py",
        "orchestration/brain/unified_integration/adapters/oscillator_adapter.py",
        "orchestration/brain/symbolic_engine/pattern_recognition.py",
        "identity/backend/verifold/storage/verifold_vault_viewer.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "core/integration_hub.py",
        "ethics/decision_node.py",
        "features/docututor/content_generation_engine/doc_generator.py",
        "examples/identity/qrg_demo.py",
        "orchestration/endocrine_orchestrator.py",
        "orchestration/interfaces/orchestration_protocol.py",
        "core/tier_unification_adapter.py",
        "identity/backend/verifold/web3/verifold_bridge_adapter.py",
        "bio/symbolic/adaptive_threshold_colony.py",
        "consciousness/systems/awareness_processor.py",
        "ethics/compliance_engine20250503213400_p95.py",
        "orchestration/brain/abstract_reasoning/interface.py",
        "identity/qrg_integration.py",
        "memory/systems/causal_identity_tracker.py",
        "identity/core/brain_identity_connector.py",
        "consciousness/systems/validator.py",
        "memory/emotional_memory_manager_unified.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "memory/systems/adaptive_memory_engine.py",
        "reasoning/intent/intent_detector.py",
        "tests/compliance/test_eu_awareness_engine.py",
        "memory/systems/integration_example.py",
        "creativity/emotion/voice_profiling_emotion_engine.py",
        "orchestration/brain/collapse_chain_integrity.py",
        "bio/prime_oscillator.py",
        "tools/task_migration.py",
        "creativity/service.py",
        "features/symbolic/moral_agent_template.py",
        "memory/systems/memoria.py",
        "core/colonies/governance_colony.py",
        "identity/backend/seedra/vault/seedra_registry.py",
        "creativity/dream/immersive_ingestion.py",
        "interfaces/api/v1/common/errors.py",
        "reasoning/id_reasoning_engine.py",
        "creativity/dream/visualization/memoryscape_viewport.py",
        "features/integration/meta_cognitive/meta_cognitive.py",
        "core/personality/creative_personality.py",
        "memory/quantum_memory_manager.py",
        "memory/resonance/resonant_memory_access.py",
        "learning/meta_learning/federated_integration.py",
        "consciousness/systems/quantum_consciousness_visualizer.py",
        "consciousness/reflection/__init__.py",
        "orchestration/brain/core_system.py",
        "core/colonies/supervisor_agent.py",
        "orchestration/brain/unified_integration/adapters/brain_adapter.py",
        "memory/systems/exponential_learning.py",
        "quantum/systems/quantum_processing_core.py",
        "core/bio_symbolic_swarm_hub.py",
        "examples/quantum/bio_quantum_radar_comprehensive_demo.py",
        "features/crista_optimizer/topology_manager.py",
        "orchestration/core_modules/signal_middleware.py",
        "embodiment/body_state.py",
        "tests/monitoring/test_drift_monitor.py",
        "features/common/logger.py",
        "benchmarks/symbolic_system_benchmark.py",
        "memory/dream_memory_manager.py",
        "identity/qrg_test_suite.py",
        "features/integration/neural_symbolic_bridge.py",
        "emotion/multimodal_sentiment.py",
        "voice/processor.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/specialized/enhancement_orchestrator.py",
        "quantum/add_poetic_headers.py",
        "identity/mobile/qr_code_animator.py",
        "memory/systems/memory_media_file_storage.py",
        "features/docututor/memory_evolution/usage_learning.py",
        "ethics/policy_engines/integration.py",
        "tagging/tagging_system.py",
        "emotion/mood_regulator.py",
        "reasoning/ethical_reasoning_system.py",
        "orchestration/signal_router.py",
        "voice/bio_core/oscillator/bio_quantum_engine.py",
        "voice/integrations/elevenlabs/elevenlabs_client.py",
        "orchestration/brain/net/client_event.py",
        "core/event_bus.py",
        "voice/bio_core/oscillator/quantum_layer.py",
        "core/ai_interface.py",
        "foundry/lambda_sage.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "quantum/systems/quantum_processor.py",
        "ethics/governor/lambda_governor.py",
        "orchestration/config/migration_router.py",
        "orchestration/brain/cognitive/awareness/awareness.py",
        "core/event_sourcing.py",
        "orchestration/brain/demo.py",
        "core/agent_coordination.py",
        "consciousness/systems/awareness_tracker.py",
        "memory/hippocampal/theta_oscillator.py",
        "identity/backend/verifold/qr_encoder.py",
        "benchmarks/ethics/ethical_compliance.py",
        "orchestration/brain/identity_manager.py",
        "orchestration/brain/core/types.py",
        "dashboard/core/self_healing_manager.py",
        "orchestration/agents/builtin/jules.py",
        "memory/systems/chatgpt_memory_integrator_legacy.py",
        "consciousness/awareness/bio_symbolic_awareness_adapter.py",
        "identity/core/id_service/lambd_id_validator.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "emotion/models.py",
        "bio/symbolic/quantum_coherence_enhancer.py",
        "identity/auth/adaptive_ui_controller.py",
        "ethics/hitlo_bridge.py",
        "quantum/add_verbose_intelligent_descriptions.py",
        "orchestration/echo/echo_controller.py",
        "examples/unit_tests/test_framework_security_engine.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "consciousness/systems/quantum_creative_consciousness.py",
        "bio/symbolic/bio_symbolic.py",
        "identity/api/onboarding_api.py",
        "core/helpers/__init__.py",
        "features/integration/bio_awareness/awareness.py",
        "memory/node.py",
        "examples/unit_tests/test_framework.py",
        "ethics/bases.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "creativity/dream/oneiric_engine/oneiric_core/main.py",
        "examples/bio_symbolic_demo.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "ethics/simulations/__init__.py",
        "quantum/api_manager.py",
        "quantum/creative_integration.py",
        "memory/systems/memory_planning.py",
        "tests/test_reflection_standalone.py",
        "identity/backend/verifold/hardware_entropy_seed.py",
        "memory/structural_conscience.py",
        "consciousness/cognitive/reflective_introspection.py",
        "ethics/compliance_engine.py",
        "orchestration/migrated/brain_orchestrator.py",
        "tests/test_oracle_predictor.py",
        "orchestration/specialized/deployment_orchestrator.py",
        "ethics/ethical_auditor.py",
        "symbolic/bio/symbolic_entropy_observer.py",
        "tests/core/symbolic/test_drift.py",
        "orchestration/brain/collaborative_ai_agent_system.py",
        "bridge/openai_core_service.py",
        "orchestration/migrate_orchestrators.py",
        "benchmarks/trace_system_benchmark.py",
        "orchestration/core_modules/process_orchestrator.py",
        "ethics/tools/quantum_mesh_visualizer.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "orchestration/brain/meta/integrations/bot_enhancement.py",
        "voice/integrator.py",
        "tools/dev/module_digest_extractor.py",
        "creativity/dream/dashboard/dream_metrics_db.py",
        "consciousness/systems/engine_complete.py",
        "identity/core/auth/biometric_integration.py",
        "dashboard/core/dynamic_tab_system.py",
        "examples/tests/quantum_creative_integration_test.py",
        "quantum/layer.py",
        "creativity/dream/dream_sandbox.py",
        "quantum/quantum_colony.py",
        "memory/privacy_preserving_memory_vault.py",
        "quantum/service.py",
        "memory/persistence/orthogonal_persistence.py",
        "tests/ethics/policy_engines/test_ethical_drift.py",
        "learning/metalearningenhancementsystem.py",
        "learning/federated_learning.py",
        "consciousness/systems/awareness_engine.py",
        "orchestration/specialized/inter_agent_simulation.py",
        "symbolic/vocabularies/vision_vocabulary.py",
        "memory/systems/memory_evolution.py",
        "features/docututor/plugin.py",
        "tests/test_drift_regression.py",
        "memory/systems/memory_helix.py",
        "creativity/dream/rl/rl_dream_cycle.py",
        "core/energy_consumption_analysis.py",
        "tests/hold/test_security_fixes_validation.py",
        "emotion/colony_emotions.py",
        "ethics/batch_guard.py",
        "orchestration/brain/unified_integration/adapters/voice_adapter.py",
        "api/dream.py",
        "features/entropy/radar.py",
        "reasoning/openai_oracle_adapter.py",
        "memory/systems/helix_dna.py",
        "emotion/affect_detection/recurring_emotion_tracker.py",
        "core/mailbox.py",
        "reasoning/goals/goal_manager.py",
        "bio/resilience_boost.py",
        "consciousness/systems/self_reflection_engine.py",
        "bio/symbolic/preprocessing_colony.py",
        "identity/backend/verifold/web_qr_verifier.py",
        "tools/parsers/knowledge_loader.py",
        "core/image_processing_pipeline.py",
        "creativity/dream/dream_director.py",
        "core/integrity_probe.py",
        "identity/backend/verifold/ai/narrative_alignment_checker.py",
        "examples/tests/bio_quantum_radar_integration_test.py",
        "memory/systems/test_memory_store/__init__.py",
        "core/decorators.py",
        "memory/systems/quantum_memory_architecture.py",
        "memory/systems/memory_viz.py",
        "creativity/dream/oneiric_engine/oneiric_core/db/user_repository.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "creativity/advanced_haiku_generator.py",
        "memory/systems/dream_integrator.py",
        "quantum/coordinator.py",
        "identity/backend/verifold/identity/ethics_verifier.py",
        "core/neural_architectures/neural_integrator.py",
        "features/decision/bridge.py",
        "orchestration/core_modules/orchestration_service.py",
        "ethics/ethical_reasoning_system.py",
        "consciousness/systems/mapper.py",
        "learning/meta_learning_adapter.py",
        "orchestration/brain/governance/dao_governance_node.py",
        "core/utils/__init__.py",
        "config/settings.py",
        "bridge/explainability_interface_layer.py",
        "learning/plugin_learning_engine.py",
        "orchestration/brain/autonomous_system.py",
        "quantum/main.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "features/symbolic/glyphs/glyph_engine.py",
        "features/diagnostic_engine/diagnostic_payloads.py",
        "tools/parsers/test_knowledge_loader.py",
        "learning/meta_adaptive/adaptive_interface_generator.py",
        "orchestration/brain/core/azure_free_tier_strategy.py",
        "memory/memoria.py",
        "features/memory/hooks/registry.py",
        "quantum/web_integration.py",
        "voice/swarm_voice_generator.py",
        "identity/core/trace/activity_logger.py",
        "identity/api/routes/lambd_id_routes.py",
        "creativity/quantum_creative_types.py",
        "memory/systems/simple_memory.py",
        "orchestration/brain/meta/compliance_engine_20250503213400.py",
        "reasoning/reasoning_colony.py",
        "orchestration/brain/personality/voice_personality.py",
        "identity/auth/qrg_generators.py",
        "creativity/dream_systems/dream_loop_generator.py",
        "identity/backend/verifold/narrative_utils.py",
        "orchestration/brain/unified_integration/adapters/bio_adapter.py",
        "identity/tools/onboarding_cli.py",
        "orchestration/brain/controller.py",
        "core/router/llm_multiverse_router.py",
        "ethics/export_report.py",
        "memory/systems/glyph_memory_bridge.py",
        "memory/systems/foldout_simple.py",
        "orchestration/core_modules/master_orchestrator.py",
        "orchestration/brain/abstract_reasoning/core.py",
        "reasoning/hooks/dream_reflect_hook.py",
        "core/task_manager.py",
        "core/infrastructure/node_registry.py",
        "memory/systems/dream_memory_manager.py",
        "bridge/shared_state.py",
        "memory/systems/symbolic_replay_engine.py",
        "consciousness/systems/consciousness_colony_integration.py",
        "bridge/model_communication_engine.py",
        "quantum/abas_quantum_specialist.py",
        "orchestration/security/dast/processors.py",
        "memory/systems/emotional_memory_manager.py",
        "orchestration/brain/spine/accent_adapter.py",
        "ethics/compliance/engine.py",
        "memory/systems/memoria/reflector.py",
        "identity/backend/verifold/security/glyph_mutation_simulator.py",
        "orchestration/examples/endocrine_module_example.py",
        "tools/collapse_simulator.py",
        "bio/systems/orchestration/base_orchestrator.py",
        "features/drift/unified_drift_system.py",
        "orchestration/brain/entropy_probe.py",
        "orchestration/core_modules/signals.py",
        "bio/curiosity_spark.py",
        "orchestration/brain/safe_subprocess_executor.py",
        "memory/dreamseed_example.py",
        "examples/reasoning/abstract_reasoning_demo.py",
        "benchmarks/emotion_system_benchmark.py",
        "memory/systems/distributed_memory_fold.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_fastapi.py",
        "memory/tools/lambda_archive_inspector.py",
        "orchestration/interfaces/agent_interface.py",
        "quantum/healix_mapper.py",
        "orchestration/brain/spine/healix_mapper.py",
        "identity/utils/entropy_helpers.py",
        "tests/memory_stress_tests_light.py",
        "voice/emotional_modulator.py",
        "creativity/dream/redirect_justifier.py",
        "voice/interfaces/input/stream_handler.py",
        "memory/systems/integrity_collapser.py",
        "examples/ethics/ethical_sentinel_demo.py",
        "identity/auth_backend/pqc_crypto_engine.py",
        "core/verifold/verifold_unified.py",
        "orchestration/brain/orchestration/core.py",
        "voice/message_handler.py",
        "orchestration/brain/MultiBrainSymphony.py",
        "examples/integration/test_integration_communication.py",
        "interfaces/api/v1/grpc/client.py"
      ],
      "count": 1205
    },
    {
      "module": "datetime",
      "used_in": [
        "consciousness/awareness/symbolic_trace_logger.py",
        "orchestration/specialized/component_orchestrator.py",
        "orchestration/migrated/memory_integration_orchestrator.py",
        "learning/adaptive_meta_learning.py",
        "identity/interface.py",
        "tests/memory/test_memory_basic.py",
        "benchmarks/voice_system_benchmark.py",
        "features/symbolic/tracer.py",
        "bio/systems/orchestration/identity_aware_bio_orchestrator.py",
        "orchestration/brain/eu_awareness_engine.py",
        "reasoning/coherence_patch_validator.py",
        "memory/systems/memoria_system.py",
        "core/ethics/__init__.py",
        "orchestration/brain/token_budget_controller.py",
        "benchmarks/perception_system_benchmark.py",
        "orchestration/brain/abstract_reasoning/oscillator.py",
        "orchestration/brain/pr_security_review_starter.py",
        "memory/governance/ethical_drift_governor.py",
        "tests/test_memory_fold_simple.py",
        "creativity/dream_systems/quantum_dream_adapter.py",
        "tests/memory/test_fold_engine_integration.py",
        "voice/context_aware_voice_modular.py",
        "orchestration/brain/pr_security_review_github_actions.py",
        "tests/test.py",
        "memory/voice_memory_manager.py",
        "examples/orchestration_src/adaptive_agi_demo.py",
        "orchestration/brain/visualization/memory_helix_visualizer.py",
        "core/interfaces/tools/dao/dao_propose.py",
        "tests/core/monitoring/test_collapse_tracker.py",
        "config/knowledge/symbolic_knowledge_integration.py",
        "orchestration/brain/integrity_probe.py",
        "emotion/dreamseed_upgrade.py",
        "identity/qrg_100_percent_coverage.py",
        "quantum/entanglement.py",
        "tools/digest_extractor.py",
        "orchestration/brain/eu_ai_transparency.py",
        "orchestration/brain/learn_to_learn.py",
        "quantum/\u039bBot_quantum_security.py",
        "tests/test_bio_symbolic_integration.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "orchestration/migrated/memory_orchestrator.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "emotion/tools/emotional_echo_detector.py",
        "identity/core/user_tier_mapping.py",
        "memory/systems/healix_memory_core.py",
        "memory/visualizer.py",
        "identity/backend/app/device_registry.py",
        "learning/systems/intent_language.py",
        "creativity/dream/modifiers/quantum_state_modifier.py",
        "orchestration/brain/neuro_symbolic/governance/symbolic_action_protocol.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "reasoning/abstract_reasoning_demo.original.py",
        "memory/systems/simple_store.py",
        "core/interfaces/nias/generate_nias_docs.py",
        "identity/auth/cultural_profile_manager.py",
        "creativity/dream_systems/dream_glyph_bridge.py",
        "learning/federated_learning_system.py",
        "learning/meta_learning_recovery.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "core/identity/engine.py",
        "identity/backend/database/trust_sharing_manager.py",
        "consciousness/systems/reflection/reflection.py",
        "features/memory/hooks/base.py",
        "tests/test_memory_comprehensive.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "tests/test_unified_ethics_orchestrator.py",
        "identity/backend/app/badge_manager.py",
        "orchestration/brain/self_improvement/meta_learner.py",
        "identity/backend/app/token_handler.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "learning/systems/core_system.py",
        "consciousness/systems/consciousness.py",
        "features/symbolic/collapse/trace.py",
        "ethics/extreme_ethical_testing.py",
        "ethics/policy_engines/base.py",
        "examples/integration/simple_integration_test.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "orchestration/brain/ai_compliance.py",
        "examples/bio_symbolic_coherence_diagnostic.py",
        "orchestration/brain/visualization/healix_visualizer.py",
        "bio/core.py",
        "features/integration/system_bridge.py",
        "tests/suites/advanced_agi_test_suite.py",
        "orchestration/colony_orchestrator.py",
        "memory/emotional_memory_manager.py",
        "benchmarks/safety/integrated_safety_test_script_20250729_064441.py",
        "orchestration/agents/adaptive_orchestrator.py",
        "memory/adapters/colony_memory_adapter.py",
        "orchestration/brain/lambda_bot_batch_processor.py",
        "creativity/dream_systems/dream_replay.py",
        "features/memory/fold_lineage_tracker.py",
        "tests/core/symbolic/test_collapse.py",
        "orchestration/brain/spine/fold_engine.py",
        "examples/ethics/lambda_governor_demo.py",
        "orchestration/orchestrator.py",
        "identity/enterprise/auth.py",
        "quantum/quantum_oscillator.py",
        "memory/distributed_state_manager.py",
        "memory/glyph_memory_integration.py",
        "orchestration/brain/privacy_manager.py",
        "tests/integration/test_critical_path.py",
        "memory/systems/memory_drift_tracker.py",
        "orchestration/monitoring/reflection_layer.py",
        "orchestration/brain/attention/quantum_attention.py",
        "orchestration/brain/trace_memoria_logger.py",
        "tests/test_memory_stress_final.py",
        "voice/voice_profiling.py",
        "memory/systems/memoria/dream_cron.py",
        "identity/auth_utils/cognitive_load_estimator.py",
        "trace/drift_dashboard_visual.py",
        "core/services/location/tracker.py",
        "creativity/dream/dream_mutator.py",
        "creativity/dream/openai_dream_integration.py",
        "orchestration/brain/symbolic_engine/semantic_reasoner.py",
        "memory/tools/memory_drift_auditor.py",
        "reasoning/LBot_reasoning_processed.py",
        "voice/voice_cultural_integrator.py",
        "orchestration/brain/compliance_registry.py",
        "creativity/emotional_resonance.py",
        "orchestration/brain/unified_integration/adapters/intent_adapter.py",
        "trace/vdf.py",
        "tests/test_ai_functionality.py",
        "identity/core/commercial/commercial_module.py",
        "memory/base_manager.py",
        "memory/systems/memory_checkpoint.py",
        "orchestration/example_agents.py",
        "core/api_controllers.py",
        "reasoning/conflict_resolver.py",
        "benchmarks/tests/functional_capability_test.py",
        "core/identity_aware_base.py",
        "identity/auth_backend/qr_entropy_generator.py",
        "tests/test_verifold_unified.py",
        "examples/orchestration/demo_orchestration_consolidation.py",
        "learning/systems/symbolic_voice_loop.py",
        "core/modules/nias/dream_recorder.py",
        "memory/systems/lukhas_memory_recall.py",
        "reasoning/master_loop.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "benchmarks/reasoning_system_benchmark.py",
        "core/id.py",
        "voice/validator.py",
        "orchestration/brain/spine/main_loop.py",
        "consciousness/systems/engine_codex.py",
        "creativity/dream/dream_log.py",
        "identity/backend/app/cloud_bridge_manager.py",
        "features/integration/executive_decision_integrator.py",
        "benchmarks/tests/comprehensive_functional_test.py",
        "quantum/vault_manager.py",
        "core/spine/integration_orchestrator.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "api/memory.py",
        "learning/system.py",
        "orchestration/brain/meta_cognitive/reflective_introspection_system.py",
        "identity/core/lambd_id_service.py",
        "identity/backend/dream_engine/dream_summary_generator.py",
        "tests/test_attention_memory.py",
        "benchmarks/safety/comprehensive_safety_test_reference.py",
        "voice/voice_system_integrator.py",
        "tests/test_lambda_governor.py",
        "ethics/governance_checker.py",
        "identity/backend/app/game_state_bridge.py",
        "orchestration/security/dast/engine.py",
        "learning/meta_adaptive/meta_learning.py",
        "examples/quantum/quantum_security_integration_demo.py",
        "core/interfaces/voice/edge_voice.py",
        "reasoning/systems/id_reasoning_engine.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "benchmarks/dashboard_system_benchmark.py",
        "tests/test_memory_fold_universal_integration.py",
        "orchestration/brain/awareness_engine.py",
        "orchestration/brain/main_bot.py",
        "identity/backend/app/analytics_engine.py",
        "identity/backend/verifold/compliance/symbolic_audit_mode.py",
        "bio/quantum_layer.py",
        "bio/recovery_protocol.py",
        "creativity/systems/voice_personality_creativity_engine.py",
        "learning/meta_learning/meta_core.py",
        "tests/test_self_reflective_debugger_ml_models.py",
        "features/docututor/memory_evolution/bio_oscillator.py",
        "creativity/dream/dashboard/dream_metrics_view.py",
        "identity/backend/app/crypto.py",
        "quantum/ethics_engine.py",
        "orchestration/brain/safety_guardrails.py",
        "core/interfaces/tools/dao/dao_vote.py",
        "tests/ethics/test_ethics_basic.py",
        "orchestration/brain/spine/trait_sync_gpt_synb_ref.py",
        "tests/test_colony_integrations.py",
        "core/interfaces/lukhas_as_agent/news_and_social/s_dispatcher.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "emotion/affect_stagnation_detector.py",
        "voice/audio_engine.py",
        "tests/test_memory_fold_performance.py",
        "core/interfaces/lukhas_as_agent/sys/dast/launcher.py",
        "quantum/validator.py",
        "benchmarks/tests/biological_memory_validation_test.py",
        "quantum/bio_crista_optimizer_adapter.py",
        "quantum/certificate_manager.py",
        "benchmarks/api_system_benchmark.py",
        "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
        "ethics/monitor.py",
        "identity/backend/app/incident_reporter.py",
        "examples/reasoning/oracle_demo.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "voice/interface.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "benchmarks/tests/actor_throughput_test.py",
        "features/integration/system_coordinator.py",
        "identity/lukhus_ultimate_test_suite.py",
        "core/interfaces/voice/voice_emotional/context_aware_modular_voice.py",
        "identity/backend/verifold/ledger_auditor.py",
        "bridge/message_bus.py",
        "features/symbolic/collapse/engine.py",
        "orchestration/brain/core/orchestrator.py",
        "interfaces/api/v1/rest/middleware.py",
        "tests/core/memory/hooks/test_hooks.py",
        "memory/integration_test.py",
        "tests/test_quantized_cycles.py",
        "voice/recognition.py",
        "identity/backend/app/cloud_storage_policy.py",
        "voice/integrations/openai/dalle_client.py",
        "memory/systems/memory_orchestrator.py",
        "tests/test_glyph_recall_drift_correlation.py",
        "orchestration/brain/australian_awareness_engine.py",
        "bio/endocrine_daily_operations.py",
        "orchestration/monitoring/the_oscillator.py",
        "memory/systems/learn_to_learn.py",
        "memory/systems/integration_adapters.py",
        "memory/replay/replay_buffer.py",
        "ethics/orchestrator.py",
        "tests/test_memory_safety_demo.py",
        "voice/personality.py",
        "consciousness/reflection/lambda_mirror.py",
        "bio/oscillator.py",
        "features/integration/governance/policy_board.py",
        "benchmarks/memory/optimized_memory_system_test_script.py",
        "ethics/compliance_simple.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "emotion/affect_detection/affect_stagnation_detector.py",
        "consciousness/awareness/system_awareness.py",
        "interfaces/api/lambda_bot_api_integration.py",
        "consciousness/awareness/awareness_protocol.py",
        "consciousness/systems/engine_alt.py",
        "main.py",
        "tests/creativity/dream_systems/test_snapshot_redirection_controller.py",
        "ethics/quantum_mesh_integrator.py",
        "learning/usage_learning.py",
        "tests/dream/test_emotional_repair_loop.py",
        "memory/service.py",
        "core/integrated_safety_system.py",
        "core/identity_aware_base_colony.py",
        "memory/systems/memory_learning/memory_manager.py",
        "narrative/symbolic_weaver.py",
        "interfaces/protocols/awareness_protocol.py",
        "memory/systems/memory_bases.py",
        "voice/integrations/openai/whisper_client.py",
        "consciousness/service.py",
        "identity/api/controllers/lambd_id_controller.py",
        "core/module_registry.py",
        "features/integration/neuro_symbolic_fusion_layer.py",
        "tests/test_quantum_coordinator.py",
        "orchestration/base.py",
        "orchestration/brain/experience_manager.py",
        "core/monitoring/collapse_tracker.py",
        "memory/systems/memory_helix_visualizer.py",
        "memory/systems/memory_helix_golden.py",
        "core/testing/plugin_test_framework.py",
        "tests/test_quantum_identity_integration.py",
        "orchestration/core_modules/system_orchestrator.py",
        "memory/systems/memory_validator.py",
        "tests/memory_stress_tests.py",
        "tests/symbolic/test_symbolic_core.py",
        "orchestration/resonance_orchestrator.py",
        "memory/emotional.py",
        "identity/backend/app/logs_api.py",
        "identity/backend/dream_engine/dream_narrator_queue.py",
        "identity/public/lambda_id_previewer.py",
        "memory/systems/memory_advanced_manager.py",
        "benchmarks/bridge_system_benchmark.py",
        "orchestration/brain/consciousness/memory_identity.py",
        "core/introspection/introspector.py",
        "consciousness/systems/integrator.py",
        "quantum/systems/quantum_validator.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "orchestration/brain/collapse_chain_simulator.py",
        "identity/mobile_platform/mobile_ui_renderer.py",
        "features/docututor/memory_evolution/knowledge_adaptation.py",
        "api/emotion.py",
        "identity/backend/app/external_authenticator.py",
        "tests/compliance/test_ethical_auditor.py",
        "quantum/bio_system.py",
        "tools/task_tracker.py",
        "tests/compliance/test_global_institutional_framework.py",
        "orchestration/brain/symbolic_engine/symbolic_core.py",
        "ethics/redteam_sim.py",
        "examples/unit_tests/test_brain_integration.py",
        "memory/systems/hybrid_memory_fold.py",
        "memory/systems/agent_memory.py",
        "identity/qrg_showcase.py",
        "features/integration/safety/coordinator.py",
        "orchestration/brain/drift_pattern_analyzer.py",
        "orchestration/brain/meta/cognition/orchestrator.py",
        "core/performance/orchestrator.py",
        "identity/backend/dream_engine/dream_injector.py",
        "benchmarks/tests/actor_throughput_simple_test.py",
        "examples/bio_symbolic_comprehensive_test.py",
        "benchmarks/performance/run_quantized_benchmark.py",
        "orchestration/workflow_engine.py",
        "tests/test_memory_cleaner_dreams.py",
        "orchestration/brain/symbolic_ai/modules/dream_generator.py",
        "benchmarks/simple_actor_benchmark.py",
        "orchestration/brain/neural/cognitive_core.py",
        "core/oracle_nervous_system.py",
        "core/automatic_testing_system.py",
        "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
        "tests/memory/test_identity_lineage_validation.py",
        "identity/security/symbolic_vault.py",
        "orchestration/brain/unified_integration/adapters/dream_adapter.py",
        "orchestration/interfaces/plugin_registry.py",
        "identity/core/id_service/entropy_engine.py",
        "symbolic/glyph_engine.py",
        "foundry/lambda_mirror.py",
        "features/integration/dynamic_modality_broker.py",
        "memory/systems/memory_encryptor.py",
        "memory/tools/lambda_vault_scan.py",
        "features/symbolic/collapse/reasoner.py",
        "orchestration/brain/access/tier_manager.py",
        "core/quantum_identity_manager.py",
        "orchestration/brain/context/context_sync.py",
        "bio/symbolic/bio_symbolic_orchestrator.py",
        "core/interfaces/lukhas_as_agent/widgets/travel_widget.py",
        "tests/test_guardian_system_integration.py",
        "tests/ethics/policy_engines/test_base.py",
        "tests/unified_grammar/test_base_module.py",
        "ethics/meg_bridge.py",
        "ethics/stabilization/tuner.py",
        "orchestration/brain/orchestration/the_oscillator.py",
        "quantum/systems/quantum_entanglement.py",
        "consciousness/systems/dream_engine/dream_reflection_loop.py",
        "core/interfaces/tools/research/research_dashboard.py",
        "identity/backend/seedra/identity_validator.py",
        "creativity/creative_market.py",
        "interfaces/api/v1/rest/routers/process.py",
        "orchestration/main_node.py",
        "core/interfaces/lukhas_as_agent/sys/nias/generate_payload_cli.py",
        "reasoning/reasoning_engine.py",
        "identity/backend/verifold/web_journal/web_journal_app.py",
        "symbolic/neural/neuro_symbolic_fusion_layer.py",
        "memory/systems/causal_memory_chains.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "orchestration/brain/brain_collapse_manager.py",
        "orchestration/security/ethics_loop_guard.py",
        "core/colonies/governance_colony_enhanced.py",
        "core/identity/persona_engine.py",
        "creativity/dream_systems/dream_engine.py",
        "reasoning/collapse_reasoner.py",
        "identity/backend/verifold/journal_mode.py",
        "memory/systems/reflection_engine.py",
        "examples/dream_openai_demo.py",
        "benchmarks/learning_system_benchmark.py",
        "orchestration/brain/validate_pr_security_review.py",
        "core/interfaces/main.py",
        "ethics/meta_ethics_governor.py",
        "bridge/llm_wrappers/unified_openai_client.py",
        "tests/test_phase3b_memory_recurrence.py",
        "orchestration/security/dast/intelligence.py",
        "quantum/regenerate_intelligent_descriptions.py",
        "orchestration/brain/neuro_symbolic/neuro_symbolic_engine.py",
        "orchestration/brain/consciousness.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "creativity/dream/dream_engine/oracle_dream.py",
        "orchestration/brain/mesh/collapse_mesh.py",
        "docs/documentation_updater.py",
        "tests/fixtures/memory_fixtures.py",
        "orchestration/brain/security_pr_analyzer.py",
        "features/docututor/memory_evolution/voice_synthesis.py",
        "benchmarks/tests/real_world_creativity_test.py",
        "examples/integration/integrated_abot_demo.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "quantum/engine.py",
        "memory/proteome/symbolic_proteome.py",
        "identity/core/tier/tier_manager.py",
        "orchestration/brain/spine/self_reflect_cron.py",
        "bio/symbolic/anomaly_filter_colony.py",
        "consciousness/cognitive_architecture_controller.py",
        "foundry/symbolic_foundry.py",
        "creativity/dream/dream_pipeline.py",
        "orchestration/brain/prediction/world_models.py",
        "examples/unit_tests/test_chatgpt_memory_integrator.py",
        "identity/backend/dream_engine/html_social_generator.py",
        "memory/quantum_manager.py",
        "tests/test_migration.py",
        "quantum/bio_multi_orchestrator.py",
        "creativity/creative_q_expression.py",
        "creativity/dream_systems/dream_log.py",
        "tests/fixtures/symbolic_fixtures.py",
        "reasoning/traceback_orchestrator.py",
        "memory/systems/colony_swarm_integration.py",
        "orchestration/monitoring/health_checks.py",
        "orchestration/brain/output/report_generator.py",
        "memory/systems/dream_trace_linker.py",
        "creativity/dream/engine/dream_engine_optimizer.py",
        "benchmarks/performance/quantized_cycles_stress_test.py",
        "learning/meta_learning/symbolic_feedback.py",
        "memory/systems/memory_safety_features.py",
        "consciousness/systems/\u039bBot_consciousness_monitor.py",
        "consciousness/systems/engine.py",
        "quantum/quantum_waveform.py",
        "memory/manager.py",
        "memory/systems/lazy_loading_embeddings.py",
        "orchestration/brain/orchestration/orchestrator.py",
        "examples/api_usage_examples.py",
        "orchestration/brain/rem/dream_log.py",
        "orchestration/monitoring/sub_agents/ethics_guardian.py",
        "ethics/glyph_ethics_validator.py",
        "identity/auth_backend/trust_scorer.py",
        "identity/wearables_integration/entropy_beacon.py",
        "orchestration/brain/abstract_reasoning/confidence_calibrator.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "quantum/metadata.py",
        "orchestration/brain/meta/learning/system.py",
        "learning/tutor_learning_engine.py",
        "core/tier_aware_colony_proxy.py",
        "consciousness/systems/state.py",
        "identity/lukhas_identity/security/kyi_check.py",
        "interfaces/api/v1/rest/routers/metrics.py",
        "identity/auth_utils/attention_monitor.py",
        "orchestration/agent_orchestrator.py",
        "orchestration/brain/vulnerability_dashboard.py",
        "orchestration/brain/compliance/ai_compliance_manager.py",
        "memory/systems/memoria/dreams.py",
        "dashboard/core/test_execution_engine.py",
        "consciousness/systems/cognitive_systems/voice_personality.py",
        "orchestration/brain/autonomous_github_manager.py",
        "learning/federated_meta_learning.py",
        "orchestration/brain/unified_integration/adapters/awareness_adapter.py",
        "orchestration/brain/unified_integration/adapters/cognitive_adapter.py",
        "memory/systems/multimodal_memory_support.py",
        "core/colonies/ethics_swarm_colony.py",
        "identity/backend/app/symbolic_score.py",
        "identity/lukhus_deployment_package.py",
        "orchestration/brain/rem/lidar_emotion_interpreter.py",
        "features/symbolic/glyphs/symbolic_foundry.py",
        "core/common.py",
        "tools/vision/vision_prompt_helper.py",
        "consciousness/openai_consciousness_adapter.py",
        "orchestration/brain/logging/output_log.py",
        "interfaces/api/v1/rest/models.py",
        "memory/systems/collapse_trace.py",
        "bio/trust_binder.py",
        "core/api_diff_analyzer.py",
        "dashboard/api/websocket_server.py",
        "api/glyph_exchange.py",
        "ethics/security/emergency_override.py",
        "core/interfaces/cli.py",
        "core/notion_sync.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "core/monitoring/collapse_integration.py",
        "identity/backend/seedra/biometric_engine.py",
        "orchestration/brain/research_awareness_engine.py",
        "tests/test_reflection_engine.py",
        "api/colony_endpoints.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "quantum/add_compliant_headers.py",
        "memory/systems/memoria/replayer.py",
        "trace/restabilization_index.py",
        "core/ai/integration_manager.py",
        "features/integration/safety/emergency_override.py",
        "voice/modularity_system.py",
        "memory/systems/fold_lineage_tracker.py",
        "orchestration/brain/cognitive_core.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "core/resource_efficiency_analyzer.py",
        "orchestration/brain/spine/emotion_log.py",
        "orchestration/brain/das_awareness_engine.py",
        "memory/systems/orchestrator.py",
        "orchestration/brain/ethics/ethics_engine.py",
        "orchestration/brain/spine/emotion_intent_link.py",
        "orchestration/brain/compliance/constitutional_ai.py",
        "memory/repair/advanced_trauma_repair.py",
        "tests/test_dream_integration.py",
        "dashboard/core/test_performance_monitor.py",
        "creativity/dream/core.py",
        "quantum/dast_orchestrator.py",
        "identity/backend/app/email_logs.py",
        "tests/test_ethical_drift_sentinel.py",
        "tests/test_lambda_echo_detector.py",
        "quantum/phase_quantum_integration.py",
        "tests/advanced_memory_fold_test_suite.py",
        "examples/integration/demo_ai_integration.py",
        "quantum/fix_proper_ascii.py",
        "core/meta_learning/remediator_agent.py",
        "identity/auth_backend/authentication_server.py",
        "identity/backend/verifold/verifold_replay_engine.py",
        "core/interfaces/lukhas_as_agent/streamlit/components/voice_preview_streamlit.py",
        "dashboard/core/test_scheduler.py",
        "benchmarks/configuration_system_benchmark.py",
        "orchestration/brain/orchestrator.py",
        "memory/compression/symbolic_delta.py",
        "core/monitoring_observability.py",
        "orchestration/brain/spine/trait_sync.py",
        "orchestration/brain/expression.py",
        "voice/interfaces/voice_interface.py",
        "memory/systems/symbolic_delta_compression.py",
        "orchestration/brain/brain_integration.py",
        "memory/systems/module_integrations.py",
        "benchmarks/tests/dream_tools_functional_test.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "memory/systems/memoria_codex.py",
        "identity/auth_utils/cultural_safety_checker.py",
        "orchestration/brain/integration/brain_integration.py",
        "orchestration/brain/uk_awareness_engine.py",
        "memory/systems/engine.py",
        "features/symbolic/glyphs/glyph.py",
        "examples/creativity/dream_interpreter_demo.py",
        "tools/interactive_test_suite.py",
        "memory/core/interfaces/memory_interface.py",
        "examples/consciousness/quantum_creative_consciousness_demo.py",
        "tests/test_ethics_guardian_realignment.py",
        "bio/symbolic/contextual_mapping_colony.py",
        "core/observability_steering.py",
        "memory/core/unified_memory_orchestrator.py",
        "tests/auditor_test_suite.py",
        "quantum/processor.py",
        "tests/memory/test_glyph_memory_integration.py",
        "core/colonies/memory_colony_enhanced.py",
        "dashboard/core/morphing_engine.py",
        "trace/symbolic_trace_logger.py",
        "orchestration/security/dast/adapters.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "core/monitoring/drift_monitor.py",
        "ethics/self_reflective_debugger.py",
        "quantum/fix_module_descriptions.py",
        "core/interfaces/tools/security/session_logger.py",
        "core/interfaces/ui/components/voice_preview_streamlit.py",
        "examples/orchestration_src/demo_orchestrator.py",
        "memory/basic.py",
        "memory/systems/distributed_memory.py",
        "creativity/dream_timeline_visualizer.py",
        "ethics/service.py",
        "orchestration/brain/neuro_symbolic/hybrid_integration.py",
        "ethics/simulations/lambda_shield_tester.py",
        "memory/drift_memory_manager.py",
        "ethics/ethical_drift_detector.py",
        "consciousness/systems/engine_poetic.py",
        "memory/systems/memory_identity.py",
        "memory/systems/trace_injector.py",
        "orchestration/brain/symbol_validator.py",
        "tests/core/test_energy_consumption_analysis.py",
        "creativity/dream/engine/legacy_dream_engine.py",
        "tools/dev/add_verbose_core_descriptions.py",
        "trace/drift_tools.py",
        "learning/tutor.py",
        "quantum/add_module_descriptions.py",
        "features/memory/integration_orchestrator.py",
        "memory/evolution.py",
        "core/identity/manager.py",
        "core/integrator.py",
        "core/personality/personality.py",
        "memory/systems/memory_processing.py",
        "orchestration/brain/collapse_bridge.py",
        "features/memory/memory_fold.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "identity/core/id_service/portability_system.py",
        "identity/core/sent/consent_history.py",
        "ethics/safety/compliance_digest.py",
        "core/identity/mapper.py",
        "memory/systems/memory_visualizer.py",
        "orchestration/master_orchestrator.py",
        "core/quantized_thought_cycles.py",
        "memory/systems/test_512_dim_optimization.py",
        "features/memory/fold_engine.py",
        "identity/backend/verifold/web_dashboard.py",
        "orchestration/integration_engine.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py",
        "memory/systems/helix_mapper.py",
        "orchestration/user_feedback/feedback_collector.py",
        "memory/systems/attention_memory_layer.py",
        "orchestration/brain/multi_brain_orchestrator.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "dashboard/core/fallback_system.py",
        "core/interfaces/lukhas_as_agent/core/overview_log.py",
        "quantum/quantum_bio_coordinator.py",
        "identity/backend/seedra/seedra_core.py",
        "orchestration/brain/cognitive/voice_engine.py",
        "features/integration/connectivity_engine.py",
        "orchestration/migrated/test_migrations.py",
        "creativity/affect_stagnation_detector.py",
        "core/swarm_identity_orchestrator.py",
        "identity/backend/app/vault.py",
        "creativity/dream_systems/dream_stats.py",
        "core/colonies/oracle_colony.py",
        "tests/test_simple_optimized_memory.py",
        "features/common/base_health.py",
        "orchestration/core_modules/workflow_engine.py",
        "orchestration/brain/dream_engine/cli/dream_processor.py",
        "creativity/dream/cli/dream_processor.py",
        "bridge/trace_logger.py",
        "identity/auth/constitutional_gatekeeper.py",
        "consciousness/quantum_consciousness_integration.py",
        "consciousness/systems/lambda_mirror.py",
        "reasoning/oracle_predictor.py",
        "examples/orchestration/demo_complete_guardian.py",
        "voice/speech_processor.py",
        "api/consciousness.py",
        "memory/systems/episodic_replay_buffer.py",
        "tests/diagnostics/test_prophet.py",
        "perception/symbolic_nervous_system.py",
        "identity/governance/policy_board.py",
        "emotion/recurring_emotion_tracker.py",
        "core/interaction/symptom_reporter.py",
        "memory/systems/memory_recall.py",
        "tests/test_glyph_memory_timeline.py",
        "creativity/dream/feedback_propagator.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "reasoning/symbolic_logic_engine.py",
        "bio/simulation_controller.py",
        "voice/speech_engine.py",
        "ethics/compliance_validator.py",
        "quantum/bio_components.py",
        "tests/test_all_integrations.py",
        "examples/unit_tests/test_quantum_creative_engine.py",
        "creativity/dream/processors/dream_processor_integrator.py",
        "orchestration/core.py",
        "identity/backend/dream_engine/dream_seed_vote.py",
        "tests/test_optimized_memory_system.py",
        "orchestration/brain/rem/dream_processor_integrator.py",
        "memory/systems/memory_utils.py",
        "dashboard/core/test_management_system.py",
        "identity/auth/entropy_synchronizer.py",
        "orchestration/security/dast_orchestrator.py",
        "quantum/bio_optimization_adapter.py",
        "creativity/dream_systems/snapshot_redirection_controller.py",
        "trace/drift_dashboard.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_unified.py",
        "examples/bio_symbolic_coherence_optimization_test.py",
        "orchestration/brain/context_analyzer.py",
        "consciousness/cognitive/adapter_complete.py",
        "quantum/dream_adapter.py",
        "memory/systems/identity_lineage_bridge.py",
        "quantum/oscillator.py",
        "quantum/bio.py",
        "creativity/dream/dream_data_sources.py",
        "core/ethics/dream_ethics_injector.py",
        "memory/systems/hierarchical_data_store.py",
        "dashboard/core/universal_adaptive_dashboard.py",
        "creativity/dream/quantum_dream_adapter.py",
        "core/core_system.py",
        "features/diagnostic_engine/engine.py",
        "tests/test_integration_simple.py",
        "reasoning/causal_reasoning.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "examples/integration/integration_tests.py",
        "orchestration/core_modules/controller.py",
        "quantum/systems/bio_integration/connectivity_consolidator.py",
        "benchmarks/security_system_benchmark.py",
        "memory/systems/replay_system.py",
        "creativity/healix_visualizer.py",
        "creativity/dream/dream_generator.py",
        "tests/test_priority_modules.py",
        "benchmarks/tests/run_comprehensive_test_suite.py",
        "orchestration/brain/ethics/ethical_hierarchy.py",
        "identity/backend/app/session_manager.py",
        "orchestration/brain/pr_security_review_task.py",
        "memory/systems/resonance_memory_retrieval.py",
        "features/symbolic/memoria/symbolic_trace_map.py",
        "features/memory/dream_memory_fold.py",
        "quantum/system.py",
        "core/generate_autotest_docs.py",
        "creativity/dream/engine/advanced_dream_engine.py",
        "consciousness/systems/quantum_consciousness_integration.py",
        "orchestration/brain/monitoring/guardian_reflector.py",
        "core/interfaces/lukhas_as_agent/sys/nias/feedback_loop.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "emotion/dreamseed_unified.py",
        "orchestration/monitoring/remediator_agent.py",
        "reasoning/\u039bBot_reasoning.py",
        "quantum/awareness_system.py",
        "tests/core/symbolic/test_tracer.py",
        "tools/prediction/test_prophet.py",
        "ethics/ethical_evaluator.py",
        "ethics/compliance.py",
        "tests/test_ethics_hitlo_bridge.py",
        "identity/core/sing/sso_engine.py",
        "orchestration/brain/spine/unified_self.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "identity/api/api.py",
        "tests/test_dream_system_complete.py",
        "dashboard/core/dashboard_colony_agent.py",
        "tests/real_world_creativity_test.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "memory/openai_memory_adapter.py",
        "orchestration/brain/prediction/predictive_resource_manager.py",
        "memory/systems/neurosymbolic_integration.py",
        "identity/core/id_service/lambd_id_generator.py",
        "memory/consolidation/ripple_generator.py",
        "reasoning/symbolic_reasoning.py",
        "voice/audio_processor.py",
        "orchestration/brain/net/client.py",
        "memory/systems/meta_learning_patterns.py",
        "tests/test_self_reflective_debugger_correlation.py",
        "features/memory/fold_universal_bridge.py",
        "tests/orchestration/test_agent_interface.py",
        "orchestration/agents/orchestrator.py",
        "orchestration/core_modules/master_orchestrator_alt.py",
        "quantum/bio_test_oracle.py",
        "consciousness/cognitive/adapter.py",
        "quantum/neuro_symbolic_engine.py",
        "benchmarks/memory/memory_stress_tests/memory_optimization_analysis.py",
        "core/interfaces/lukhas_as_agent/widgets/delivery_tracker_widget.py",
        "orchestration/apis/drift_monitoring_api.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "ethics/lukhas_ethics_guard.py",
        "tests/test_reflection_layer_metrics.py",
        "features/symbolic/collapse/bridge.py",
        "core/meta_learning/monitor_dashboard.py",
        "core/interfaces/lukhas_as_agent/sys/nias/replay_visualizer.py",
        "orchestration/swarm_orchestration_adapter.py",
        "core/identity/processor.py",
        "orchestration/security/dast/api.py",
        "core/services/location/geofencing_manager.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "memory/systems/foldout.py",
        "quantum/processing_core.py",
        "memory/systems/core.py",
        "consciousness/brain_integration_20250620_013824.py",
        "tools/cli/drift_analyzer_cli.py",
        "memory/systems/processor.py",
        "bridge/integration_bridge.py",
        "identity/backend/app/context_manager.py",
        "core/identity_integration.py",
        "memory/systems/tier_system.py",
        "learning/service.py",
        "orchestration/migrated/ethics_orchestrator.py",
        "bio/symbolic/fallback_systems.py",
        "orchestration/monitoring/sub_agents/memory_cleaner.py",
        "core/meta_learning/enhancement_system.py",
        "memory/dashboard.py",
        "benchmarks/tests/dream_system_functional_test.py",
        "memory/symbolic_integration.py",
        "memory/repair/helix_repair_module.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "quantum/add_intelligent_descriptions.py",
        "memory/systems/lukhas_memory_encryptor.py",
        "examples/integration/quantum_identity_integration_test.py",
        "features/data_manager/crud_operations.py",
        "orchestration/brain/unified_integration/adapters/oscillator_adapter.py",
        "tests/test_memory_cleaner_analysis.py",
        "identity/backend/verifold/storage/verifold_vault_viewer.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "core/integration_hub.py",
        "orchestration/endocrine_orchestrator.py",
        "orchestration/interfaces/orchestration_protocol.py",
        "core/tier_unification_adapter.py",
        "bio/symbolic/adaptive_threshold_colony.py",
        "ethics/oscillating_conscience.py",
        "consciousness/systems/awareness_processor.py",
        "orchestration/brain/abstract_reasoning/interface.py",
        "identity/qrg_integration.py",
        "memory_optimization_analysis.py",
        "orchestration/brain/rem/generate_dream.py",
        "memory/systems/causal_identity_tracker.py",
        "identity/core/brain_identity_connector.py",
        "identity/backend/app/journey_log_manager.py",
        "memory/emotional_memory_manager_unified.py",
        "consciousness/systems/validator.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "memory/systems/adaptive_memory_engine.py",
        "reasoning/intent/intent_detector.py",
        "benchmarks/tests/bio_symbolic_coherence_test.py",
        "tests/compliance/test_eu_awareness_engine.py",
        "creativity/emotion/voice_profiling_emotion_engine.py",
        "orchestration/brain/collapse_chain_integrity.py",
        "creativity/service.py",
        "memory/systems/memoria.py",
        "features/api/dream_api.py",
        "tests/test_memory_cleaner_cleanup.py",
        "creativity/dream/visualization/dream_timeline_visualizer.py",
        "reasoning/id_reasoning_engine.py",
        "examples/unit_tests/test_symbolic_anomaly_explorer.py",
        "features/integration/meta_cognitive/meta_cognitive.py",
        "memory/resonance/resonant_memory_access.py",
        "memory/quantum_memory_manager.py",
        "learning/meta_learning/federated_integration.py",
        "consciousness/systems/quantum_consciousness_visualizer.py",
        "orchestration/brain/core_system.py",
        "orchestration/brain/ethics/ethics_guard.py",
        "orchestration/brain/unified_integration/adapters/brain_adapter.py",
        "quantum/systems/quantum_processing_core.py",
        "memory/systems/exponential_learning.py",
        "core/bio_symbolic_swarm_hub.py",
        "examples/quantum/bio_quantum_radar_comprehensive_demo.py",
        "orchestration/core_modules/signal_middleware.py",
        "ethics/safety/compliance_hooks.py",
        "tests/monitoring/test_drift_monitor.py",
        "benchmarks/symbolic_system_benchmark.py",
        "core/interfaces/lukhas_as_agent/news_and_social/affiliate_log.py",
        "memory/dream_memory_manager.py",
        "identity/qrg_test_suite.py",
        "creativity/dream_systems/dream_viewer.py",
        "tests/conftest.py",
        "tests/test_replay_system.py",
        "orchestration/brain/dream_mutator.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/specialized/enhancement_orchestrator.py",
        "quantum/add_poetic_headers.py",
        "memory/systems/test_lazy_loading.py",
        "demo_documentation_update.py",
        "features/docututor/memory_evolution/usage_learning.py",
        "reasoning/ethical_reasoning_system.py",
        "voice/bio_core/oscillator/bio_quantum_engine.py",
        "voice/integrations/elevenlabs/elevenlabs_client.py",
        "foundry/lambda_sage.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "quantum/systems/quantum_processor.py",
        "ethics/governor/lambda_governor.py",
        "orchestration/config/migration_router.py",
        "orchestration/brain/cognitive/awareness/awareness.py",
        "core/event_sourcing.py",
        "tests/test_ethics_guardian_assessment.py",
        "consciousness/systems/awareness_tracker.py",
        "orchestration/brain/demo.py",
        "orchestration/brain/core/types.py",
        "orchestration/brain/unified_self_merge_divergence.py",
        "identity/backend/app/tier_manager.py",
        "dashboard/core/self_healing_manager.py",
        "creativity/dream/visualization/dream_viewer.py",
        "benchmarks/tests/bio_symbolic_coherence_optimization_test.py",
        "memory/systems/chatgpt_memory_integrator_legacy.py",
        "consciousness/awareness/bio_symbolic_awareness_adapter.py",
        "interfaces/api/v1/rest/routers/health.py",
        "identity/core/id_service/lambd_id_validator.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "bio/symbolic/quantum_coherence_enhancer.py",
        "identity/auth/adaptive_ui_controller.py",
        "ethics/hitlo_bridge.py",
        "quantum/add_verbose_intelligent_descriptions.py",
        "orchestration/echo/echo_controller.py",
        "examples/unit_tests/test_framework_security_engine.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "consciousness/systems/quantum_creative_consciousness.py",
        "bio/symbolic/bio_symbolic.py",
        "tests/test_actor_colony_integration.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "core/helpers/__init__.py",
        "features/integration/bio_awareness/awareness.py",
        "examples/unit_tests/test_framework.py",
        "ethics/bases.py",
        "tests/test_entropy_radar.py",
        "examples/bio_symbolic_demo.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "quantum/api_manager.py",
        "tests/test_reflection_standalone.py",
        "consciousness/cognitive/reflective_introspection.py",
        "memory/structural_conscience.py",
        "tests/test_integrated_safety.py",
        "orchestration/migrated/brain_orchestrator.py",
        "tests/test_oracle_predictor.py",
        "orchestration/specialized/deployment_orchestrator.py",
        "ethics/ethical_auditor.py",
        "tests/test_integrated_safety_simple.py",
        "tests/core/symbolic/test_drift.py",
        "orchestration/brain/collaborative_ai_agent_system.py",
        "bridge/openai_core_service.py",
        "orchestration/specialized/integrated_system_orchestrator.py",
        "benchmarks/trace_system_benchmark.py",
        "orchestration/core_modules/process_orchestrator.py",
        "ethics/tools/quantum_mesh_visualizer.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "bridge/connectors/blockchain_bridge.py",
        "orchestration/brain/monitor.py",
        "orchestration/brain/meta/integrations/bot_enhancement.py",
        "identity/api/__init__.py",
        "creativity/dream/dashboard/dream_metrics_db.py",
        "consciousness/systems/engine_complete.py",
        "dashboard/core/dynamic_tab_system.py",
        "identity/backend/dream_engine/publish_queue_manager.py",
        "quantum/layer.py",
        "quantum/quantum_colony.py",
        "memory/privacy_preserving_memory_vault.py",
        "quantum/service.py",
        "memory/persistence/orthogonal_persistence.py",
        "orchestration/brain/spine/emotion_log_alt.py",
        "learning/metalearningenhancementsystem.py",
        "learning/federated_learning.py",
        "consciousness/systems/awareness_engine.py",
        "benchmarks/optimized_actor_benchmark.py",
        "tests/test_drift_regression.py",
        "memory/systems/memory_helix.py",
        "core/energy_consumption_analysis.py",
        "emotion/colony_emotions.py",
        "api/dream.py",
        "core/interfaces/web_formatter.py",
        "features/entropy/radar.py",
        "reasoning/openai_oracle_adapter.py",
        "memory/systems/helix_dna.py",
        "emotion/affect_detection/recurring_emotion_tracker.py",
        "consciousness/systems/self_reflection_engine.py",
        "bio/symbolic/preprocessing_colony.py",
        "tests/test_dream_system_integration.py",
        "tools/parsers/knowledge_loader.py",
        "core/decorators.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "creativity/advanced_haiku_generator.py",
        "memory/systems/dream_integrator.py",
        "quantum/coordinator.py",
        "core/neural_architectures/neural_integrator.py",
        "features/decision/bridge.py",
        "examples/orchestration/demo_reflection_layer.py",
        "orchestration/core_modules/orchestration_service.py",
        "ethics/ethical_reasoning_system.py",
        "quantum/add_template_reference.py",
        "learning/meta_learning_adapter.py",
        "orchestration/brain/governance/dao_governance_node.py",
        "orchestration/brain/autonomous_system.py",
        "bridge/explainability_interface_layer.py",
        "quantum/main.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "core/utils/dream_utils.py",
        "quantum/web_integration.py",
        "orchestration/brain/core/azure_free_tier_strategy.py",
        "memory/systems/simple_512_test.py",
        "identity/core/trace/activity_logger.py",
        "memory/systems/simple_memory.py",
        "core/interfaces/lukhas_as_agent/sys/nias/dream_recorder.py",
        "tools/prediction/prophet_demo.py",
        "orchestration/brain/personality/voice_personality.py",
        "identity/backend/verifold/narrative_utils.py",
        "orchestration/brain/unified_integration/adapters/bio_adapter.py",
        "orchestration/brain/controller.py",
        "core/router/llm_multiverse_router.py",
        "ethics/security/main_node_security_engine.py",
        "core/interfaces/lukhas_as_agent/sys/nias/inject_message_simulator.py",
        "ethics/sentinel/ethical_sentinel_dashboard.py",
        "ethics/export_report.py",
        "memory/systems/glyph_memory_bridge.py",
        "memory/systems/foldout_simple.py",
        "orchestration/core_modules/master_orchestrator.py",
        "orchestration/brain/abstract_reasoning/core.py",
        "core/task_manager.py",
        "memory/systems/dream_memory_manager.py",
        "bridge/shared_state.py",
        "consciousness/systems/consciousness_colony_integration.py",
        "quantum/creative_engine.py",
        "quantum/abas_quantum_specialist.py",
        "orchestration/security/dast/processors.py",
        "memory/systems/emotional_memory_manager.py",
        "core/interfaces/voice/voice_agent.py",
        "ethics/compliance/engine.py",
        "identity/backend/app/audit_logger.py",
        "memory/systems/memoria/reflector.py",
        "orchestration/brain/spine/accent_adapter.py",
        "identity/backend/app/replay_manager.py",
        "tools/collapse_simulator.py",
        "orchestration/brain/entropy_probe.py",
        "features/drift/unified_drift_system.py",
        "orchestration/brain/spine/trait_manager.py",
        "orchestration/brain/main_node.py",
        "memory/dreamseed_example.py",
        "examples/reasoning/abstract_reasoning_demo.py",
        "benchmarks/emotion_system_benchmark.py",
        "core/interfaces/voice/listen.py",
        "memory/systems/distributed_memory_fold.py",
        "memory/memory_systems/memoria-checkpoint.py",
        "memory/tools/lambda_archive_inspector.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_fastapi.py",
        "orchestration/interfaces/agent_interface.py",
        "quantum/healix_mapper.py",
        "orchestration/brain/spine/healix_mapper.py",
        "tests/memory_stress_tests_light.py",
        "voice/emotional_modulator.py",
        "voice/interfaces/input/stream_handler.py",
        "examples/ethics/ethical_sentinel_demo.py",
        "benchmarks/memory/memory_stress_tests/test_memory_stress_final.py",
        "identity/auth_backend/pqc_crypto_engine.py",
        "core/verifold/verifold_unified.py",
        "orchestration/brain/orchestration/core.py",
        "orchestration/brain/personality/personality_refiner.py",
        "voice/message_handler.py",
        "orchestration/brain/orchestration/main_node.py",
        "core/interfaces/ui/components/audio_exporter.py",
        "orchestration/brain/MultiBrainSymphony.py",
        "memory_system_demo.py",
        "examples/integration/test_integration_communication.py",
        "orchestration/brain/rem/generate_dream_data.py"
      ],
      "count": 992
    },
    {
      "module": "asyncio",
      "used_in": [
        "orchestration/specialized/component_orchestrator.py",
        "orchestration/migrated/memory_integration_orchestrator.py",
        "tests/core/test_task_escalation.py",
        "benchmarks/voice_system_benchmark.py",
        "orchestration/brain/eu_awareness_engine.py",
        "core/demo_coordination.py",
        "tests/core/test_reasoning_colony_dream_context.py",
        "benchmarks/perception_system_benchmark.py",
        "orchestration/brain/abstract_reasoning/oscillator.py",
        "voice/context_aware_voice_modular.py",
        "examples/orchestration_src/adaptive_agi_demo.py",
        "benchmarks/tests/ethical_compliance_test.py",
        "tests/core/monitoring/test_collapse_tracker.py",
        "quantum/voice_enhancer.py",
        "config/knowledge/symbolic_knowledge_integration.py",
        "orchestration/brain/integrity_probe.py",
        "quantum/entanglement.py",
        "tests/test_dream_engine_integration.py",
        "core/test_tiered_state_management.py",
        "orchestration/brain/eu_ai_transparency.py",
        "quantum/\u039bBot_quantum_security.py",
        "tests/test_bio_symbolic_integration.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "orchestration/migrated/memory_orchestrator.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "emotion/tools/emotional_echo_detector.py",
        "tests/core/test_core_integration.py",
        "tests/monitoring/test_collapse_integration.py",
        "memory/systems/healix_memory_core.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "reasoning/abstract_reasoning_demo.original.py",
        "memory/systems/simple_store.py",
        "learning/federated_learning_system.py",
        "voice/systems/voice_synthesis.py",
        "devtools/tags_debug.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "orchestration/brain/emotional/core.py",
        "core/identity/engine.py",
        "tests/test_memory_comprehensive.py",
        "tests/test_unified_ethics_orchestrator.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "consciousness/systems/consciousness.py",
        "ethics/extreme_ethical_testing.py",
        "orchestration/brain/colony_coordinator.py",
        "tests/core/test_consistency_management.py",
        "core/enhanced_swarm.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "orchestration/brain/visualization/healix_visualizer.py",
        "tests/active/test_strategy_engine_core.py",
        "bio/core.py",
        "features/integration/system_bridge.py",
        "tests/suites/advanced_agi_test_suite.py",
        "orchestration/colony_orchestrator.py",
        "benchmarks/safety/integrated_safety_test_script_20250729_064441.py",
        "orchestration/agents/adaptive_orchestrator.py",
        "memory/adapters/colony_memory_adapter.py",
        "tests/novel_tasks/test_generalization_v2.py",
        "examples/ethics/lambda_governor_demo.py",
        "orchestration/orchestrator.py",
        "tests/active/test_drift_loop_governance.py",
        "orchestration/security/dast/tests.py",
        "memory/distributed_state_manager.py",
        "orchestration/monitoring/reflection_layer.py",
        "voice/systems/synthesis.py",
        "tests/test_memory_stress_final.py",
        "ethics/intrinsic_governor.py",
        "creativity/dream/openai_dream_integration.py",
        "core/services/location/tracker.py",
        "reasoning/LBot_reasoning_processed.py",
        "tests/test_ai_functionality.py",
        "memory/base_manager.py",
        "orchestration/example_agents.py",
        "benchmarks/tests/functional_capability_test.py",
        "core/test_p2p_communication.py",
        "orchestration/core_modules/orchestrator_core.py",
        "tests/bio/test_simulation_controller.py",
        "tests/test_verifold_unified.py",
        "examples/orchestration/demo_orchestration_consolidation.py",
        "tests/core/test_actor_system.py",
        "benchmarks/reasoning_system_benchmark.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "core/id.py",
        "voice/validator.py",
        "orchestration/brain/spine/main_loop.py",
        "consciousness/systems/engine_codex.py",
        "core/practical_optimizations.py",
        "features/integration/executive_decision_integrator.py",
        "benchmarks/tests/comprehensive_functional_test.py",
        "orchestration/specialized/orchestrator_emotion_engine.py",
        "core/actor_system.py",
        "core/spine/integration_orchestrator.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "learning/system.py",
        "examples/unit_tests/test_memory_engines.py",
        "benchmarks/safety/comprehensive_safety_test_reference.py",
        "orchestration/brain/dynamic_adaptive_dashboard.py",
        "tests/test_lambda_governor.py",
        "examples/consciousness/consciousness_demo.py",
        "orchestration/security/dast/engine.py",
        "learning/meta_adaptive/meta_learning.py",
        "tests/dream/test_tag_flow_visualization.py",
        "core/interfaces/voice/edge_voice.py",
        "reasoning/systems/id_reasoning_engine.py",
        "examples/p2p_collaboration_demo.py",
        "benchmarks/dashboard_system_benchmark.py",
        "tests/test_memory_fold_universal_integration.py",
        "orchestration/brain/awareness_engine.py",
        "orchestration/brain/main_bot.py",
        "tests/test_self_reflective_debugger_ml_models.py",
        "bio/recovery_protocol.py",
        "creativity/systems/voice_personality_creativity_engine.py",
        "identity/auth_backend/webrtc_peer_sync.py",
        "creativity/quantum_creative_integration.py",
        "memory/lightweight_concurrency.py",
        "tests/test_colony_integrations.py",
        "orchestration/module_orchestrator.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "examples/orchestration/demo_agent_orchestration.py",
        "voice/audio_engine.py",
        "tests/test_memory_fold_performance.py",
        "quantum/validator.py",
        "quantum/bio_crista_optimizer_adapter.py",
        "quantum/certificate_manager.py",
        "benchmarks/api_system_benchmark.py",
        "tests/core/test_agent_coordination.py",
        "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "voice/interface.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "memory/memory_optimization.py",
        "features/integration/system_coordinator.py",
        "tests/bio/test_bio_phase_control.py",
        "benchmarks/tests/ethical_compliance.py",
        "bridge/message_bus.py",
        "orchestration/brain/core/orchestrator.py",
        "tests/test_quantum_ethics_mesh.py",
        "memory/core/interfaces/semantic_interface.py",
        "memory/integration_test.py",
        "tests/test_quantized_cycles.py",
        "voice/recognition.py",
        "memory/systems/memory_orchestrator.py",
        "tests/symbolic/test_swarm_tag_simulation.py",
        "tests/core/test_mailbox.py",
        "memory/colonies/episodic_memory_colony.py",
        "bio/endocrine_daily_operations.py",
        "tests/bio/test_colony_self_repair.py",
        "creativity/engines/engine.py",
        "memory/systems/integration_adapters.py",
        "ethics/orchestrator.py",
        "memory/replay/replay_buffer.py",
        "tests/test_memory_safety_demo.py",
        "consciousness/reflection/lambda_mirror.py",
        "bio/oscillator.py",
        "features/integration/governance/policy_board.py",
        "tests/core/test_temporal_colony.py",
        "ethics/compliance_simple.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "consciousness/awareness/system_awareness.py",
        "interfaces/api/lambda_bot_api_integration.py",
        "consciousness/awareness/awareness_protocol.py",
        "consciousness/systems/engine_alt.py",
        "ethics/quantum_mesh_integrator.py",
        "core/integrated_safety_system.py",
        "tests/test_simple_dream_integration.py",
        "core/identity_aware_base_colony.py",
        "narrative/symbolic_weaver.py",
        "voice/integrations/openai/whisper_client.py",
        "voice/bio_core/oscillator/orchestrator.py",
        "tests/memory/test_loop_monitor.py",
        "tests/core/test_vector_collapse.py",
        "consciousness/service.py",
        "tests/test_quantum_coordinator.py",
        "orchestration/base.py",
        "core/monitoring/collapse_tracker.py",
        "memory/systems/memory_helix_golden.py",
        "core/testing/plugin_test_framework.py",
        "tests/test_quantum_identity_integration.py",
        "orchestration/core_modules/system_orchestrator.py",
        "memory/systems/memory_validator.py",
        "tests/memory_stress_tests.py",
        "orchestration/resonance_orchestrator.py",
        "core/test_mailbox_simple.py",
        "memory/systems/memory_advanced_manager.py",
        "benchmarks/bridge_system_benchmark.py",
        "consciousness/systems/integrator.py",
        "tests/memory/test_memory_optimization.py",
        "quantum/systems/quantum_validator.py",
        "core/colonies/reasoning_colony.py",
        "tests/test_integration_complete.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "orchestration/brain/collapse_chain_simulator.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "tests/compliance/test_ethical_auditor.py",
        "tests/orchestration/test_plugin_registry.py",
        "quantum/bio_system.py",
        "memory/colonies/base_memory_colony.py",
        "examples/unit_tests/test_brain_integration.py",
        "memory/systems/hybrid_memory_fold.py",
        "memory/systems/agent_memory.py",
        "features/integration/safety/coordinator.py",
        "voice/interfaces/eleven_tts.py",
        "orchestration/brain/drift_pattern_analyzer.py",
        "core/performance/orchestrator.py",
        "orchestration/brain/neural/neural_intelligence_api.py",
        "examples/unit_tests/test_autotest_system.py",
        "benchmarks/tests/actor_throughput_simple_test.py",
        "examples/bio_symbolic_comprehensive_test.py",
        "benchmarks/performance/run_quantized_benchmark.py",
        "orchestration/workflow_engine.py",
        "benchmarks/simple_actor_benchmark.py",
        "orchestration/brain/neural/cognitive_core.py",
        "core/oracle_nervous_system.py",
        "memory/core/colony_memory_validator.py",
        "core/automatic_testing_system.py",
        "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
        "tests/memory/test_identity_lineage_validation.py",
        "orchestration/brain/unified_integration/adapters/dream_adapter.py",
        "orchestration/interfaces/plugin_registry.py",
        "core/p2p_communication.py",
        "foundry/lambda_mirror.py",
        "features/integration/dynamic_modality_broker.py",
        "symbolic/swarm_tag_simulation.py",
        "core/quantum_identity_manager.py",
        "update_documentation.py",
        "bio/symbolic/bio_symbolic_orchestrator.py",
        "core/consistency_manager.py",
        "tests/unified_grammar/test_base_module.py",
        "quantum/systems/quantum_entanglement.py",
        "ethics/stabilization/tuner.py",
        "consciousness/systems/dream_engine/dream_reflection_loop.py",
        "identity/backend/seedra/identity_validator.py",
        "tests/hold/orchestration/test_orchestration.py",
        "orchestration/main_node.py",
        "core/examples/mailbox_demo.py",
        "identity/backend/verifold/web_journal/web_journal_app.py",
        "memory/systems/causal_memory_chains.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "tests/bio/test_oscillator_drift_safety.py",
        "examples/ethics/demo_integration.py",
        "orchestration/brain/brain_collapse_manager.py",
        "core/colonies/governance_colony_enhanced.py",
        "core/identity/persona_engine.py",
        "creativity/dream_systems/dream_engine.py",
        "core/event_replay_snapshot.py",
        "memory/systems/reflection_engine.py",
        "examples/dream_openai_demo.py",
        "benchmarks/learning_system_benchmark.py",
        "memory/loop_monitor.py",
        "core/interfaces/main.py",
        "ethics/meta_ethics_governor.py",
        "bridge/llm_wrappers/unified_openai_client.py",
        "tests/test_phase3b_memory_recurrence.py",
        "tests/core/test_colony_dilemma_simulation.py",
        "orchestration/brain/neuro_symbolic/neuro_symbolic_engine.py",
        "tools/test_knowledge_integration.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "creativity/dream/dream_engine/oracle_dream.py",
        "tests/active/test_symptom_reporter.py",
        "docs/documentation_updater.py",
        "features/docututor/memory_evolution/voice_synthesis.py",
        "memory/proteome/symbolic_proteome.py",
        "bio/symbolic/anomaly_filter_colony.py",
        "consciousness/cognitive_architecture_controller.py",
        "tests/test_strategy_engine_integration.py",
        "creativity/dream/dream_pipeline.py",
        "orchestration/brain/prediction/world_models.py",
        "examples/unit_tests/test_chatgpt_memory_integrator.py",
        "memory/quantum_manager.py",
        "quantum/bio_multi_orchestrator.py",
        "reasoning/analysis/engine.py",
        "benchmarks/tests/test_swarm_coherence_integration.py",
        "creativity/creative_q_expression.py",
        "core/actor_supervision_integration.py",
        "memory/systems/colony_swarm_integration.py",
        "orchestration/monitoring/health_checks.py",
        "core/symbolism/archiver.py",
        "creativity/dream/engine/dream_engine_optimizer.py",
        "tests/core/symbolic/test_archiver.py",
        "benchmarks/performance/quantized_cycles_stress_test.py",
        "memory/systems/memory_safety_features.py",
        "consciousness/systems/\u039bBot_consciousness_monitor.py",
        "consciousness/systems/engine.py",
        "tests/test_brain_colony_coordinator.py",
        "tests/test_actor_supervision.py",
        "memory/manager.py",
        "memory/systems/lazy_loading_embeddings.py",
        "creativity/voice_integrator.py",
        "orchestration/brain/orchestration/orchestrator.py",
        "ethics/meg_guard.py",
        "voice/bio_core/voice/quantum_voice_enhancer.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "quantum/metadata.py",
        "orchestration/brain/meta/learning/system.py",
        "core/tier_aware_colony_proxy.py",
        "examples/test_bio_symbolic_enhanced.py",
        "consciousness/systems/state.py",
        "orchestration/agent_orchestrator.py",
        "orchestration/brain/compliance/ai_compliance_manager.py",
        "dashboard/core/test_execution_engine.py",
        "consciousness/systems/cognitive_systems/voice_personality.py",
        "orchestration/brain/autonomous_github_manager.py",
        "orchestration/brain/net/async_client.py",
        "core/supervision.py",
        "learning/federated_meta_learning.py",
        "core/autotest_validation.py",
        "orchestration/brain/unified_integration/adapters/awareness_adapter.py",
        "memory/systems/multimodal_memory_support.py",
        "memory/test_lightweight_concurrency.py",
        "orchestration/brain/unified_integration/adapters/cognitive_adapter.py",
        "core/colonies/ethics_swarm_colony.py",
        "consciousness/openai_consciousness_adapter.py",
        "interfaces/api/v1/grpc/pb2_grpc.py",
        "dashboard/api/websocket_server.py",
        "core/notion_sync.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "core/monitoring/collapse_integration.py",
        "identity/backend/seedra/biometric_engine.py",
        "orchestration/brain/research_awareness_engine.py",
        "tests/test_reflection_engine.py",
        "tests/core/test_observatory.py",
        "tests/core/test_supervision.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "features/integration/safety/emergency_override.py",
        "core/ai/integration_manager.py",
        "orchestration/brain/cognitive_core.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "orchestration/api.py",
        "orchestration/brain/das_awareness_engine.py",
        "memory/systems/orchestrator.py",
        "orchestration/brain/compliance/constitutional_ai.py",
        "memory/repair/advanced_trauma_repair.py",
        "tests/test_dream_integration.py",
        "dashboard/core/test_performance_monitor.py",
        "ethics/security/flagship_security_engine.py",
        "creativity/dream/core.py",
        "quantum/dast_orchestrator.py",
        "tests/novel_tasks/test_generalization.py",
        "tests/test_ethical_drift_sentinel.py",
        "tests/test_lambda_echo_detector.py",
        "quantum/phase_quantum_integration.py",
        "tests/advanced_memory_fold_test_suite.py",
        "examples/integration/demo_ai_integration.py",
        "core/meta_learning/remediator_agent.py",
        "identity/auth_backend/authentication_server.py",
        "learning/federated_colony_learning.py",
        "tests/unified_grammar/test_module_integration.py",
        "dashboard/core/test_scheduler.py",
        "core/benchmark_swarm.py",
        "benchmarks/configuration_system_benchmark.py",
        "orchestration/brain/orchestrator.py",
        "memory/core/interfaces/episodic_interface.py",
        "core/monitoring_observability.py",
        "memory/systems/module_integrations.py",
        "bridge/colony_bridge.py",
        "benchmarks/tests/dream_tools_functional_test.py",
        "orchestration/brain/integration/brain_integration.py",
        "memory/systems/engine.py",
        "examples/creativity/dream_interpreter_demo.py",
        "tools/interactive_test_suite.py",
        "memory/core/interfaces/memory_interface.py",
        "examples/consciousness/quantum_creative_consciousness_demo.py",
        "quantum/processor.py",
        "bio/symbolic/contextual_mapping_colony.py",
        "core/observability_steering.py",
        "memory/core/unified_memory_orchestrator.py",
        "tests/auditor_test_suite.py",
        "core/colonies/memory_colony_enhanced.py",
        "dashboard/core/morphing_engine.py",
        "orchestration/brain/adaptive_image_generator.py",
        "core/efficient_communication.py",
        "orchestration/security/dast/adapters.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "core/monitoring/drift_monitor.py",
        "ethics/self_reflective_debugger.py",
        "examples/orchestration_src/demo_orchestrator.py",
        "memory/systems/distributed_memory.py",
        "ethics/simulations/lambda_shield_tester.py",
        "consciousness/systems/engine_poetic.py",
        "tests/core/test_energy_consumption_analysis.py",
        "creativity/dream/engine/legacy_dream_engine.py",
        "orchestration/brain/monitoring/performance.py",
        "trace/drift_tools.py",
        "orchestration/system_orchestrator.py",
        "core/identity/manager.py",
        "orchestration/brain/collapse_bridge.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "core/resource_optimization_integration.py",
        "core/identity/mapper.py",
        "orchestration/specialized/loop_recovery_simulator.py",
        "orchestration/master_orchestrator.py",
        "core/quantized_thought_cycles.py",
        "memory/systems/test_512_dim_optimization.py",
        "orchestration/integration_engine.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py",
        "orchestration/brain/multi_brain_orchestrator.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "dashboard/core/fallback_system.py",
        "tests/test_lightweight_concurrency.py",
        "quantum/quantum_bio_coordinator.py",
        "examples/tests/debug_brain_test.py",
        "identity/backend/seedra/seedra_core.py",
        "features/integration/connectivity_engine.py",
        "orchestration/migrated/test_migrations.py",
        "core/swarm_identity_orchestrator.py",
        "tests/test_hybrid_memory.py",
        "core/colonies/oracle_colony.py",
        "orchestration/core_modules/workflow_engine.py",
        "core/integrated_system.py",
        "consciousness/quantum_consciousness_integration.py",
        "consciousness/systems/lambda_mirror.py",
        "reasoning/oracle_predictor.py",
        "examples/orchestration/demo_complete_guardian.py",
        "voice/speech_processor.py",
        "memory/systems/episodic_replay_buffer.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "quantum/bio_components.py",
        "bio/simulation_controller.py",
        "voice/speech_engine.py",
        "ethics/compliance_validator.py",
        "tests/test_all_integrations.py",
        "examples/unit_tests/test_quantum_creative_engine.py",
        "orchestration/core.py",
        "tests/test_optimized_memory_system.py",
        "tests/test_symbiotic_swarm_integration.py",
        "dashboard/core/test_management_system.py",
        "identity/auth/entropy_synchronizer.py",
        "orchestration/security/dast_orchestrator.py",
        "quantum/bio_optimization_adapter.py",
        "orchestration/brain/neural/neural_intelligence_main.py",
        "examples/bio_symbolic_coherence_optimization_test.py",
        "consciousness/cognitive/adapter_complete.py",
        "core/observability/collector.py",
        "quantum/dream_adapter.py",
        "memory/systems/identity_lineage_bridge.py",
        "quantum/oscillator.py",
        "quantum/bio.py",
        "creativity/dream/dream_data_sources.py",
        "core/ethics/dream_ethics_injector.py",
        "memory/systems/hierarchical_data_store.py",
        "dashboard/core/universal_adaptive_dashboard.py",
        "creativity/dream/quantum_dream_adapter.py",
        "tests/test_integration_simple.py",
        "examples/integration/integration_tests.py",
        "quantum/ethics_engine.py",
        "orchestration/core_modules/controller.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "memory/systems/memory_comprehensive.py",
        "quantum/systems/bio_integration/connectivity_consolidator.py",
        "benchmarks/security_system_benchmark.py",
        "memory/systems/replay_system.py",
        "creativity/healix_visualizer.py",
        "creativity/dream/dream_generator.py",
        "tests/test_priority_modules.py",
        "tests/test_drift_recovery.py",
        "benchmarks/tests/run_comprehensive_test_suite.py",
        "orchestration/brain/ethics/ethical_hierarchy.py",
        "features/creative_engine/engine.py",
        "core/tiered_state_management.py",
        "quantum/system.py",
        "creativity/dream/engine/advanced_dream_engine.py",
        "consciousness/systems/quantum_consciousness_integration.py",
        "orchestration/brain/monitoring/guardian_reflector.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "quantum/awareness_system.py",
        "creativity/creative_engine.py",
        "reasoning/\u039bBot_reasoning.py",
        "tools/prediction/test_prophet.py",
        "ethics/compliance.py",
        "tests/test_ethics_hitlo_bridge.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "tests/test_dream_system_complete.py",
        "dashboard/core/dashboard_colony_agent.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "memory/openai_memory_adapter.py",
        "memory/systems/neurosymbolic_integration.py",
        "voice/audio_processor.py",
        "memory/consolidation/ripple_generator.py",
        "core/colonies/base_colony.py",
        "ethics/simulations/colony_dilemma_simulation.py",
        "memory/systems/meta_learning_patterns.py",
        "tests/test_self_reflective_debugger_correlation.py",
        "features/memory/fold_universal_bridge.py",
        "tests/orchestration/test_agent_interface.py",
        "orchestration/agents/orchestrator.py",
        "orchestration/core_modules/master_orchestrator_alt.py",
        "quantum/bio_test_oracle.py",
        "consciousness/cognitive/adapter.py",
        "quantum/neuro_symbolic_engine.py",
        "orchestration/apis/drift_monitoring_api.py",
        "tests/bio/test_biosimulation_feedback.py",
        "orchestration/swarm_orchestration_adapter.py",
        "core/identity/processor.py",
        "orchestration/security/dast/api.py",
        "core/services/location/geofencing_manager.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "quantum/processing_core.py",
        "tests/test_recursive_dream_fork.py",
        "creativity/dream/engine/dream_engine.py",
        "memory/systems/core.py",
        "consciousness/brain_integration_20250620_013824.py",
        "tools/cli/drift_analyzer_cli.py",
        "memory/systems/processor.py",
        "bridge/integration_bridge.py",
        "orchestration/migrated/ethics_orchestrator.py",
        "bio/symbolic/fallback_systems.py",
        "core/meta_learning/enhancement_system.py",
        "benchmarks/tests/dream_system_functional_test.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "examples/integration/quantum_identity_integration_test.py",
        "orchestration/brain/unified_integration/adapters/oscillator_adapter.py",
        "core/integration_hub.py",
        "core/test_coordination_simple.py",
        "orchestration/endocrine_orchestrator.py",
        "orchestration/interfaces/orchestration_protocol.py",
        "tests/test_documentation_single.py",
        "tests/bio/test_bio_drift_response.py",
        "bio/symbolic/adaptive_threshold_colony.py",
        "consciousness/systems/awareness_processor.py",
        "tests/core/test_tensor_colony_ops.py",
        "orchestration/brain/abstract_reasoning/interface.py",
        "memory/systems/causal_identity_tracker.py",
        "consciousness/systems/validator.py",
        "memory/systems/adaptive_memory_engine.py",
        "reasoning/intent/intent_detector.py",
        "benchmarks/tests/bio_symbolic_coherence_test.py",
        "tests/compliance/test_eu_awareness_engine.py",
        "memory/systems/integration_example.py",
        "orchestration/brain/collapse_chain_integrity.py",
        "core/interfaces/socket.py",
        "core/colonies/governance_colony.py",
        "creativity/dream/immersive_ingestion.py",
        "reasoning/id_reasoning_engine.py",
        "features/integration/meta_cognitive/meta_cognitive.py",
        "memory/resonance/resonant_memory_access.py",
        "memory/quantum_memory_manager.py",
        "learning/meta_learning/federated_integration.py",
        "orchestration/brain/core_system.py",
        "orchestration/brain/unified_integration/adapters/brain_adapter.py",
        "quantum/systems/quantum_processing_core.py",
        "core/bio_symbolic_swarm_hub.py",
        "examples/quantum/bio_quantum_radar_comprehensive_demo.py",
        "tests/core/test_resource_optimization_integration.py",
        "orchestration/migrated/simple_test.py",
        "orchestration/core_modules/signal_middleware.py",
        "tests/monitoring/test_drift_monitor.py",
        "tests/test_event_bus.py",
        "benchmarks/symbolic_system_benchmark.py",
        "tests/conftest.py",
        "tests/test_replay_system.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/specialized/enhancement_orchestrator.py",
        "memory/systems/test_lazy_loading.py",
        "core/validation.py",
        "reasoning/ethical_reasoning_system.py",
        "voice/bio_core/oscillator/bio_quantum_engine.py",
        "voice/integrations/elevenlabs/elevenlabs_client.py",
        "ethics/audit_ethics_monitor.py",
        "core/event_bus.py",
        "voice/bio_core/oscillator/quantum_layer.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "quantum/systems/quantum_processor.py",
        "ethics/governor/lambda_governor.py",
        "orchestration/config/migration_router.py",
        "orchestration/brain/cognitive/awareness/awareness.py",
        "orchestration/brain/demo.py",
        "core/agent_coordination.py",
        "consciousness/systems/awareness_tracker.py",
        "memory/hippocampal/theta_oscillator.py",
        "benchmarks/ethics/ethical_compliance.py",
        "dashboard/core/self_healing_manager.py",
        "benchmarks/tests/bio_symbolic_coherence_optimization_test.py",
        "core/test_image_processing_pipeline.py",
        "memory/systems/chatgpt_memory_integrator_legacy.py",
        "consciousness/awareness/bio_symbolic_awareness_adapter.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "interfaces/api/v1/grpc/server.py",
        "ethics/hitlo_bridge.py",
        "examples/unit_tests/test_beautiful_consciousness.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "consciousness/systems/quantum_creative_consciousness.py",
        "bio/symbolic/bio_symbolic.py",
        "tests/test_actor_colony_integration.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "features/integration/bio_awareness/awareness.py",
        "quantum/creative_integration.py",
        "tests/test_reflection_standalone.py",
        "consciousness/cognitive/reflective_introspection.py",
        "memory/structural_conscience.py",
        "tests/test_integrated_safety.py",
        "orchestration/migrated/brain_orchestrator.py",
        "orchestration/specialized/deployment_orchestrator.py",
        "tests/test_integrated_safety_simple.py",
        "orchestration/brain/collaborative_ai_agent_system.py",
        "bridge/openai_core_service.py",
        "orchestration/specialized/integrated_system_orchestrator.py",
        "benchmarks/trace_system_benchmark.py",
        "orchestration/core_modules/process_orchestrator.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "orchestration/brain/meta/integrations/bot_enhancement.py",
        "voice/integrator.py",
        "consciousness/systems/engine_complete.py",
        "dashboard/core/dynamic_tab_system.py",
        "examples/tests/quantum_creative_integration_test.py",
        "quantum/quantum_colony.py",
        "memory/privacy_preserving_memory_vault.py",
        "memory/persistence/orthogonal_persistence.py",
        "learning/metalearningenhancementsystem.py",
        "consciousness/systems/awareness_engine.py",
        "orchestration/specialized/inter_agent_simulation.py",
        "memory/systems/memory_evolution.py",
        "tests/test_drift_regression.py",
        "memory/systems/memory_helix.py",
        "core/energy_consumption_analysis.py",
        "tests/active/test_quantized_cycle_manager.py",
        "orchestration/brain/unified_integration/adapters/voice_adapter.py",
        "reasoning/openai_oracle_adapter.py",
        "core/mailbox.py",
        "consciousness/systems/self_reflection_engine.py",
        "bio/symbolic/preprocessing_colony.py",
        "tests/test_dream_system_integration.py",
        "tools/parsers/knowledge_loader.py",
        "core/image_processing_pipeline.py",
        "examples/tests/bio_quantum_radar_integration_test.py",
        "tests/core/test_consciousness_phase.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "creativity/advanced_haiku_generator.py",
        "memory/systems/dream_integrator.py",
        "quantum/coordinator.py",
        "core/neural_architectures/neural_integrator.py",
        "features/decision/bridge.py",
        "examples/orchestration/demo_reflection_layer.py",
        "orchestration/core_modules/orchestration_service.py",
        "ethics/ethical_reasoning_system.py",
        "consciousness/systems/mapper.py",
        "learning/meta_learning_adapter.py",
        "orchestration/brain/governance/dao_governance_node.py",
        "bridge/explainability_interface_layer.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "tools/parsers/test_knowledge_loader.py",
        "quantum/web_integration.py",
        "voice/swarm_voice_generator.py",
        "creativity/quantum_creative_types.py",
        "memory/systems/simple_memory.py",
        "tools/prediction/prophet_demo.py",
        "reasoning/reasoning_colony.py",
        "orchestration/brain/personality/voice_personality.py",
        "orchestration/brain/unified_integration/adapters/bio_adapter.py",
        "orchestration/brain/controller.py",
        "ethics/security/main_node_security_engine.py",
        "ethics/sentinel/ethical_sentinel_dashboard.py",
        "orchestration/core_modules/master_orchestrator.py",
        "memory/systems/foldout_simple.py",
        "orchestration/brain/abstract_reasoning/core.py",
        "core/task_manager.py",
        "memory/systems/dream_memory_manager.py",
        "bridge/shared_state.py",
        "consciousness/systems/consciousness_colony_integration.py",
        "examples/unit_tests/test_memory_comprehensive.py",
        "quantum/creative_engine.py",
        "core/quantized_cycle_manager.py",
        "quantum/abas_quantum_specialist.py",
        "orchestration/security/dast/processors.py",
        "orchestration/examples/endocrine_module_example.py",
        "tools/collapse_simulator.py",
        "tests/active/test_helix_memory_encryption.py",
        "orchestration/brain/entropy_probe.py",
        "orchestration/brain/main_node.py",
        "examples/reasoning/abstract_reasoning_demo.py",
        "benchmarks/emotion_system_benchmark.py",
        "memory/systems/distributed_memory_fold.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_fastapi.py",
        "orchestration/interfaces/agent_interface.py",
        "quantum/healix_mapper.py",
        "tests/memory_stress_tests_light.py",
        "examples/ethics/ethical_sentinel_demo.py",
        "benchmarks/memory/memory_stress_tests/test_memory_stress_final.py",
        "core/verifold/verifold_unified.py",
        "orchestration/brain/orchestration/core.py",
        "orchestration/brain/orchestration/main_node.py",
        "orchestration/brain/MultiBrainSymphony.py",
        "memory_system_demo.py",
        "examples/integration/test_integration_communication.py"
      ],
      "count": 688
    },
    {
      "module": "dataclasses",
      "used_in": [
        "identity/core/onboarding/onboarding.py",
        "features/symbolic/tracer.py",
        "orchestration/brain/eu_awareness_engine.py",
        "bio/systems/orchestration/oscillator_orchestrator.py",
        "orchestration/brain/token_budget_controller.py",
        "memory/governance/ethical_drift_governor.py",
        "creativity/dream_systems/quantum_dream_adapter.py",
        "voice/context_aware_voice_modular.py",
        "memory/neocortical/concept_hierarchy.py",
        "tests/test.py",
        "examples/identity/qrg_standalone_demo.py",
        "quantum/voice_enhancer.py",
        "emotion/dreamseed_upgrade.py",
        "quantum/\u039bBot_quantum_security.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "orchestration/migrated/memory_orchestrator.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "emotion/tools/emotional_echo_detector.py",
        "identity/core/user_tier_mapping.py",
        "identity/backend/verifold/storage/filecoin_uploader.py",
        "memory/systems/healix_memory_core.py",
        "memory/visualizer.py",
        "creativity/dream/modifiers/quantum_state_modifier.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "memory/systems/simple_store.py",
        "identity/auth/cultural_profile_manager.py",
        "creativity/dream_systems/dream_glyph_bridge.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "orchestration/brain/emotional/core.py",
        "identity/core/onboarding/onboarding_config.py",
        "features/memory/hooks/base.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "examples/integration/simple_integration_test.py",
        "ethics/policy_engines/base.py",
        "core/enhanced_swarm.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "tests/suites/advanced_agi_test_suite.py",
        "orchestration/colony_orchestrator.py",
        "orchestration/brain/lambda_bot_batch_processor.py",
        "orchestration/agents/adaptive_orchestrator.py",
        "memory/adapters/colony_memory_adapter.py",
        "tests/core/symbolic/test_collapse.py",
        "features/memory/fold_lineage_tracker.py",
        "orchestration/orchestrator.py",
        "identity/enterprise/auth.py",
        "identity/backend/verifold/entropy_fusion.py",
        "memory/distributed_state_manager.py",
        "memory/glyph_memory_integration.py",
        "orchestration/config/orchestrator_flags.py",
        "bridge/symbolic_dream_bridge.py",
        "orchestration/monitoring/reflection_layer.py",
        "voice/systems/synthesis.py",
        "identity/backend/verifold/web3/emotion_nft_standard.py",
        "identity/auth_utils/cognitive_load_estimator.py",
        "core/services/location/tracker.py",
        "reasoning/LBot_reasoning_processed.py",
        "identity/core/commercial/commercial_module.py",
        "reasoning/conflict_resolver.py",
        "orchestration/core_modules/orchestrator_core.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "core/id.py",
        "consciousness/systems/engine_codex.py",
        "core/practical_optimizations.py",
        "features/integration/executive_decision_integrator.py",
        "quantum/vault_manager.py",
        "orchestration/specialized/orchestrator_emotion_engine.py",
        "core/actor_system.py",
        "core/spine/integration_orchestrator.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "learning/system.py",
        "identity/core/lambd_id_service.py",
        "orchestration/brain/dynamic_adaptive_dashboard.py",
        "orchestration/security/dast/engine.py",
        "reasoning/systems/id_reasoning_engine.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "features/symbolic/drift/score.py",
        "orchestration/brain/awareness_engine.py",
        "identity/backend/verifold/compliance/symbolic_audit_mode.py",
        "bio/quantum_layer.py",
        "bio/recovery_protocol.py",
        "creativity/dream/dashboard/dream_metrics_view.py",
        "bio/endocrine_integration.py",
        "orchestration/module_orchestrator.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "benchmarks/tests/biological_memory_validation_test.py",
        "quantum/bio_crista_optimizer_adapter.py",
        "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "memory/memory_optimization.py",
        "features/crista_optimizer/symbolic_network.py",
        "features/integration/system_coordinator.py",
        "identity/lukhus_ultimate_test_suite.py",
        "bridge/message_bus.py",
        "features/symbolic/collapse/engine.py",
        "orchestration/brain/core/orchestrator.py",
        "memory/core/interfaces/semantic_interface.py",
        "memory/systems/in_memory_span_exporter.py",
        "memory/integration_test.py",
        "memory/systems/memory_orchestrator.py",
        "tests/test_glyph_recall_drift_correlation.py",
        "orchestration/brain/australian_awareness_engine.py",
        "memory/colonies/episodic_memory_colony.py",
        "creativity/engines/engine.py",
        "memory/systems/integration_adapters.py",
        "ethics/orchestrator.py",
        "memory/replay/replay_buffer.py",
        "consciousness/reflection/lambda_mirror.py",
        "bio/oscillator.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "emotion/symbolic_user_intent.py",
        "ethics/compliance_simple.py",
        "consciousness/systems/engine_alt.py",
        "ethics/quantum_mesh_integrator.py",
        "core/integrated_safety_system.py",
        "orchestration/brain/core/response_types.py",
        "narrative/symbolic_weaver.py",
        "interfaces/protocols/awareness_protocol.py",
        "voice/bio_core/oscillator/orchestrator.py",
        "orchestration/base.py",
        "core/module_registry.py",
        "features/integration/neuro_symbolic_fusion_layer.py",
        "identity/backend/verifold/cryptography/forward_secure_pibe.py",
        "core/monitoring/collapse_tracker.py",
        "core/testing/plugin_test_framework.py",
        "orchestration/resonance_orchestrator.py",
        "quantum/quantum_flux.py",
        "identity/public/lambda_id_previewer.py",
        "identity/backend/verifold/security/symbolic_adversary_agent.py",
        "core/meta_learning/symbolic_feedback.py",
        "consciousness/systems/integrator.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "identity/mobile_platform/mobile_ui_renderer.py",
        "memory/colonies/base_memory_colony.py",
        "memory/systems/hybrid_memory_fold.py",
        "simulation/agents_of_failure.py",
        "core/performance/orchestrator.py",
        "core/oracle_nervous_system.py",
        "memory/core/colony_memory_validator.py",
        "core/automatic_testing_system.py",
        "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
        "orchestration/interfaces/plugin_registry.py",
        "core/p2p_communication.py",
        "foundry/lambda_mirror.py",
        "memory/systems/memory_profiler.py",
        "orchestration/agents/types.py",
        "memory/systems/memoria/gpt_reflection.py",
        "features/integration/dynamic_modality_broker.py",
        "features/symbolic/collapse/reasoner.py",
        "symbolic/swarm_tag_simulation.py",
        "core/quantum_identity_manager.py",
        "bio/symbolic/bio_symbolic_orchestrator.py",
        "identity/core/qrg/qrg_manager.py",
        "ethics/meg_bridge.py",
        "ethics/stabilization/tuner.py",
        "consciousness/systems/dream_engine/dream_reflection_loop.py",
        "identity/backend/seedra/identity_validator.py",
        "creativity/creative_market.py",
        "memory/systems/memory_collapse_verifier.py",
        "symbolic/neural/neuro_symbolic_fusion_layer.py",
        "memory/systems/causal_memory_chains.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "reasoning/collapse_reasoner.py",
        "core/event_replay_snapshot.py",
        "identity/backend/verifold/journal_mode.py",
        "memory/systems/reflection_engine.py",
        "core/distributed_tracing.py",
        "memory/loop_monitor.py",
        "ethics/meta_ethics_governor.py",
        "orchestration/security/dast/intelligence.py",
        "bridge/llm_wrappers/unified_openai_client.py",
        "core/symbolic_contract.py",
        "orchestration/brain/consciousness.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "docs/documentation_updater.py",
        "orchestration/brain/security_pr_analyzer.py",
        "features/docututor/memory_evolution/voice_synthesis.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "memory/proteome/symbolic_proteome.py",
        "identity/core/tier/tier_manager.py",
        "consciousness/cognitive_architecture_controller.py",
        "foundry/symbolic_foundry.py",
        "orchestration/brain/prediction/world_models.py",
        "quantum/bio_multi_orchestrator.py",
        "reasoning/analysis/engine.py",
        "creativity/creative_q_expression.py",
        "reasoning/traceback_orchestrator.py",
        "memory/systems/colony_swarm_integration.py",
        "orchestration/monitoring/health_checks.py",
        "memory/systems/dream_trace_linker.py",
        "learning/meta_learning/symbolic_feedback.py",
        "memory/systems/memory_safety_features.py",
        "consciousness/systems/engine.py",
        "quantum/quantum_waveform.py",
        "identity/backend/verifold/identity/lukhas_recovery_protocols.py",
        "identity/backend/verifold/yubi_seeder.py",
        "memory/systems/lazy_loading_embeddings.py",
        "creativity/voice_integrator.py",
        "orchestration/brain/orchestration/orchestrator.py",
        "ethics/glyph_ethics_validator.py",
        "ethics/meg_guard.py",
        "voice/bio_core/voice/quantum_voice_enhancer.py",
        "orchestration/brain/abstract_reasoning/confidence_calibrator.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "quantum/metadata.py",
        "identity/auth_utils/attention_monitor.py",
        "memory/systems/memoria/dreams.py",
        "dashboard/core/test_execution_engine.py",
        "orchestration/brain/autonomous_github_manager.py",
        "core/supervision.py",
        "memory/systems/multimodal_memory_support.py",
        "core/colonies/ethics_swarm_colony.py",
        "features/symbolic/glyphs/symbolic_foundry.py",
        "identity/auth_utils/grid_size_calculator.py",
        "core/api_diff_analyzer.py",
        "dashboard/api/websocket_server.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "identity/backend/seedra/biometric_engine.py",
        "orchestration/brain/research_awareness_engine.py",
        "identity/utils/entropy_calculator.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "core/ai/integration_manager.py",
        "memory/systems/fold_lineage_tracker.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "core/resource_efficiency_analyzer.py",
        "orchestration/brain/das_awareness_engine.py",
        "orchestration/brain/compliance/constitutional_ai.py",
        "memory/repair/advanced_trauma_repair.py",
        "dashboard/core/test_performance_monitor.py",
        "features/common/ethics.py",
        "creativity/dream/core.py",
        "quantum/dast_orchestrator.py",
        "tests/core/symbolic/test_glyphs.py",
        "core/meta_learning/remediator_agent.py",
        "identity/auth_backend/authentication_server.py",
        "identity/backend/verifold/verifold_replay_engine.py",
        "dashboard/core/test_scheduler.py",
        "orchestration/brain/orchestrator.py",
        "memory/compression/symbolic_delta.py",
        "memory/core/interfaces/episodic_interface.py",
        "core/monitoring_observability.py",
        "memory/systems/symbolic_delta_compression.py",
        "bridge/symbolic_memory_mapper.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "identity/auth_utils/cultural_safety_checker.py",
        "memory/systems/memory_research.py",
        "orchestration/brain/uk_awareness_engine.py",
        "features/symbolic/glyphs/glyph.py",
        "examples/creativity/dream_interpreter_demo.py",
        "ethics/policy_engines/examples/gpt4_policy.py",
        "tools/interactive_test_suite.py",
        "memory/core/interfaces/memory_interface.py",
        "core/observability_steering.py",
        "memory/core/unified_memory_orchestrator.py",
        "dashboard/core/morphing_engine.py",
        "core/efficient_communication.py",
        "orchestration/security/dast/adapters.py",
        "learning/meta_learning.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "core/monitoring/drift_monitor.py",
        "ethics/self_reflective_debugger.py",
        "memory/systems/distributed_memory.py",
        "ethics/simulations/lambda_shield_tester.py",
        "memory/systems/in_memory_log_exporter.py",
        "consciousness/systems/engine_poetic.py",
        "memory/systems/trace_injector.py",
        "creativity/dream/engine/dream_engine_merged.py",
        "orchestration/brain/symbol_validator.py",
        "orchestration/brain/monitoring/performance.py",
        "trace/drift_tools.py",
        "orchestration/system_orchestrator.py",
        "memory/evolution.py",
        "core/integrator.py",
        "core/personality/personality.py",
        "memory/systems/memory_processing.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "core/resource_optimization_integration.py",
        "memory/systems/memory_visualizer.py",
        "bridge/symbolic_reasoning_adapter.py",
        "orchestration/master_orchestrator.py",
        "core/quantized_thought_cycles.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py",
        "memory/systems/attention_memory_layer.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "dashboard/core/fallback_system.py",
        "identity/backend/seedra/seedra_core.py",
        "core/swarm_identity_orchestrator.py",
        "core/colonies/oracle_colony.py",
        "features/common/base_health.py",
        "bridge/trace_logger.py",
        "identity/auth/constitutional_gatekeeper.py",
        "consciousness/systems/lambda_mirror.py",
        "identity/utils/symbolic_parser.py",
        "reasoning/oracle_predictor.py",
        "identity/backend/verifold/visual/glyph_stego_encoder.py",
        "memory/systems/episodic_replay_buffer.py",
        "perception/symbolic_nervous_system.py",
        "tests/test_glyph_memory_timeline.py",
        "reasoning/symbolic_logic_engine.py",
        "bio/simulation_controller.py",
        "identity/backend/verifold/cryptography/zk_narrative_proof_adapter.py",
        "creativity/dream/processors/dream_processor_integrator.py",
        "bio/base_oscillator.py",
        "orchestration/brain/rem/dream_processor_integrator.py",
        "dashboard/core/test_management_system.py",
        "symbolic/vocabularies/voice_vocabulary.py",
        "identity/auth/entropy_synchronizer.py",
        "quantum/bio_optimization_adapter.py",
        "identity/core/qrs_manager.py",
        "trace/drift_dashboard.py",
        "consciousness/cognitive/adapter_complete.py",
        "core/observability/collector.py",
        "quantum/dream_adapter.py",
        "memory/systems/identity_lineage_bridge.py",
        "quantum/oscillator.py",
        "core/ethics/dream_ethics_injector.py",
        "memory/systems/hierarchical_data_store.py",
        "dashboard/core/universal_adaptive_dashboard.py",
        "creativity/dream/quantum_dream_adapter.py",
        "examples/integration/integration_tests.py",
        "quantum/ethics_engine.py",
        "orchestration/core_modules/controller.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "quantum/systems/bio_integration/connectivity_consolidator.py",
        "memory/systems/replay_system.py",
        "creativity/systems/vocabulary_creativity_engine.py",
        "features/creative_engine/engine.py",
        "core/tiered_state_management.py",
        "orchestration/brain/pr_security_review_task.py",
        "memory/systems/resonance_memory_retrieval.py",
        "features/memory/dream_memory_fold.py",
        "quantum/system.py",
        "orchestration/brain/monitoring/guardian_reflector.py",
        "quantum/awareness_system.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "creativity/creative_engine.py",
        "emotion/dreamseed_unified.py",
        "reasoning/\u039bBot_reasoning.py",
        "orchestration/config/production_config.py",
        "ethics/compliance.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "dashboard/core/dashboard_colony_agent.py",
        "creativity/dream_systems/dream_limiter.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "memory/systems/neurosymbolic_integration.py",
        "memory/consolidation/ripple_generator.py",
        "ethics/simulations/colony_dilemma_simulation.py",
        "memory/systems/meta_learning_patterns.py",
        "features/memory/fold_universal_bridge.py",
        "orchestration/agents/orchestrator.py",
        "quantum/bio_test_oracle.py",
        "consciousness/cognitive/adapter.py",
        "orchestration/apis/drift_monitoring_api.py",
        "identity/tests/test_comprehensive.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "core/meta_learning/monitor_dashboard.py",
        "orchestration/swarm_orchestration_adapter.py",
        "orchestration/security/dast/api.py",
        "core/services/location/geofencing_manager.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "memory/systems/core.py",
        "consciousness/brain_integration_20250620_013824.py",
        "orchestration/migrated/ethics_orchestrator.py",
        "features/crista_optimizer/crista_optimizer.py",
        "memory/systems/tier_system.py",
        "bio/symbolic/fallback_systems.py",
        "core/meta_learning/enhancement_system.py",
        "memory/dashboard.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "core/integration_hub.py",
        "examples/identity/qrg_demo.py",
        "orchestration/endocrine_orchestrator.py",
        "orchestration/interfaces/orchestration_protocol.py",
        "identity/backend/verifold/web3/verifold_bridge_adapter.py",
        "identity/qrg_integration.py",
        "memory/systems/causal_identity_tracker.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "interfaces/api/v1/common/errors.py",
        "reasoning/id_reasoning_engine.py",
        "memory/resonance/resonant_memory_access.py",
        "learning/meta_learning/federated_integration.py",
        "orchestration/brain/core_system.py",
        "embodiment/body_state.py",
        "features/crista_optimizer/topology_manager.py",
        "orchestration/migrated/simple_test.py",
        "identity/qrg_test_suite.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/specialized/enhancement_orchestrator.py",
        "tests/connectivity/fixtures/module_a.py",
        "ethics/policy_engines/integration.py",
        "tagging/tagging_system.py",
        "reasoning/ethical_reasoning_system.py",
        "voice/bio_core/oscillator/bio_quantum_engine.py",
        "core/event_bus.py",
        "voice/bio_core/oscillator/quantum_layer.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "foundry/lambda_sage.py",
        "ethics/governor/lambda_governor.py",
        "orchestration/config/migration_router.py",
        "core/event_sourcing.py",
        "core/agent_coordination.py",
        "memory/hippocampal/theta_oscillator.py",
        "orchestration/brain/core/types.py",
        "dashboard/core/self_healing_manager.py",
        "memory/systems/chatgpt_memory_integrator_legacy.py",
        "emotion/models.py",
        "bio/symbolic/quantum_coherence_enhancer.py",
        "identity/auth/adaptive_ui_controller.py",
        "ethics/hitlo_bridge.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "quantum/api_manager.py",
        "memory/systems/memory_planning.py",
        "tests/test_reflection_standalone.py",
        "identity/backend/verifold/hardware_entropy_seed.py",
        "memory/structural_conscience.py",
        "orchestration/migrated/brain_orchestrator.py",
        "ethics/ethical_auditor.py",
        "tests/core/symbolic/test_drift.py",
        "orchestration/brain/collaborative_ai_agent_system.py",
        "bridge/openai_core_service.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "orchestration/brain/meta/integrations/bot_enhancement.py",
        "voice/integrator.py",
        "tools/dev/module_digest_extractor.py",
        "consciousness/systems/engine_complete.py",
        "identity/core/auth/biometric_integration.py",
        "dashboard/core/dynamic_tab_system.py",
        "quantum/layer.py",
        "creativity/dream/dream_sandbox.py",
        "quantum/quantum_colony.py",
        "memory/privacy_preserving_memory_vault.py",
        "memory/persistence/orthogonal_persistence.py",
        "learning/metalearningenhancementsystem.py",
        "symbolic/vocabularies/vision_vocabulary.py",
        "orchestration/specialized/inter_agent_simulation.py",
        "core/energy_consumption_analysis.py",
        "ethics/batch_guard.py",
        "reasoning/openai_oracle_adapter.py",
        "core/mailbox.py",
        "identity/backend/verifold/web_qr_verifier.py",
        "tools/parsers/knowledge_loader.py",
        "core/image_processing_pipeline.py",
        "core/integrity_probe.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "memory/systems/dream_integrator.py",
        "core/neural_architectures/neural_integrator.py",
        "features/decision/bridge.py",
        "ethics/ethical_reasoning_system.py",
        "consciousness/systems/mapper.py",
        "learning/meta_learning_adapter.py",
        "bridge/explainability_interface_layer.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "quantum/web_integration.py",
        "memory/memoria.py",
        "features/memory/hooks/registry.py",
        "creativity/quantum_creative_types.py",
        "reasoning/reasoning_colony.py",
        "identity/auth/qrg_generators.py",
        "memory/systems/glyph_memory_bridge.py",
        "orchestration/core_modules/master_orchestrator.py",
        "core/task_manager.py",
        "bridge/shared_state.py",
        "memory/systems/symbolic_replay_engine.py",
        "bridge/model_communication_engine.py",
        "quantum/abas_quantum_specialist.py",
        "orchestration/security/dast/processors.py",
        "features/drift/unified_drift_system.py",
        "orchestration/core_modules/signals.py",
        "memory/systems/distributed_memory_fold.py",
        "orchestration/interfaces/agent_interface.py",
        "memory/tools/lambda_archive_inspector.py",
        "quantum/healix_mapper.py",
        "core/meta_learning/rate_modulator.py",
        "voice/interfaces/input/stream_handler.py",
        "identity/auth_backend/pqc_crypto_engine.py",
        "core/verifold/verifold_unified.py",
        "voice/message_handler.py"
      ],
      "count": 488
    },
    {
      "module": "pathlib",
      "used_in": [
        "consciousness/awareness/symbolic_trace_logger.py",
        "orchestration/migrated/memory_integration_orchestrator.py",
        "quantum/setup_api_keys.py",
        "benchmarks/voice_system_benchmark.py",
        "fix_import_paths.py",
        "memory/systems/memoria_system.py",
        "orchestration/brain/pr_security_review_github_actions.py",
        "tests/test.py",
        "tests/core/monitoring/test_collapse_tracker.py",
        "config/knowledge/symbolic_knowledge_integration.py",
        "tests/runners/run_tests_resilient.py",
        "tools/digest_extractor.py",
        "core/apply_api_fixes.py",
        "tests/test_bio_symbolic_integration.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "core/symbolic_drift_analyzer.py",
        "emotion/tools/emotional_echo_detector.py",
        "identity/backend/app/device_registry.py",
        "memory/visualizer.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "reasoning/abstract_reasoning_demo.original.py",
        "memory/systems/simple_store.py",
        "core/interfaces/nias/generate_nias_docs.py",
        "learning/federated_learning_system.py",
        "learning/meta_learning_recovery.py",
        "orchestration/brain/emotional/core.py",
        "identity/backend/database/trust_sharing_manager.py",
        "consciousness/systems/reflection/reflection.py",
        "tests/hold/orchestration/test_orchestration_plugins.py",
        "tests/utils/test_collector.py",
        "core/validation_script_fixes.py",
        "identity/backend/app/badge_manager.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "tests/suites/advanced_agi_test_suite.py",
        "memory/emotional_memory_manager.py",
        "orchestration/agents/adaptive_orchestrator.py",
        "orchestration/brain/fix_lambda_symbols.py",
        "creativity/dream_systems/dream_replay.py",
        "orchestration/orchestrator.py",
        "orchestration/monitoring/reflection_layer.py",
        "voice/systems/synthesis.py",
        "orchestration/brain/trace_memoria_logger.py",
        "memory/systems/memoria/dream_cron.py",
        "creativity/dream/openai_dream_integration.py",
        "trace/drift_dashboard_visual.py",
        "orchestration/brain/compliance_registry.py",
        "trace/vdf.py",
        "identity/backend/verifold/scanner_pwa/scanner_api.py",
        "memory/base_manager.py",
        "tests/ethics/test_self_reflection.py",
        "tests/test_ethics_redteam_sim.py",
        "examples/orchestration/demo_orchestration_consolidation.py",
        "features/common/base_config.py",
        "memory/systems/lukhas_memory_recall.py",
        "benchmarks/reasoning_system_benchmark.py",
        "tests/dream_system/test_dream_core.py",
        "features/integration/executive_decision_integrator.py",
        "identity/backend/app/cloud_bridge_manager.py",
        "quantum/vault_manager.py",
        "core/spine/integration_orchestrator.py",
        "core/interfaces/tools/research/dev_dashboard.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "identity/core/lambd_id_service.py",
        "identity/backend/verifold/setup_project.py",
        "orchestration/brain/dynamic_adaptive_dashboard.py",
        "tests/test_lambda_governor.py",
        "identity/backend/app/game_state_bridge.py",
        "identity/backend/verifold/web_journal/launch_web_journal.py",
        "examples/quantum/quantum_security_integration_demo.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "creativity/dream_systems/dream_emotion_bridge.py",
        "benchmarks/dashboard_system_benchmark.py",
        "tests/test_dream_snapshot_export.py",
        "creativity/quantum_creative_integration.py",
        "voice/lukhas_voice_narrator.py",
        "orchestration/brain/spine/trait_sync_gpt_synb_ref.py",
        "examples/orchestration/demo_agent_orchestration.py",
        "identity/backend/dao/dao_core.py",
        "tests/test_memory_fold_performance.py",
        "tools/fix_corrupted_lukhas.py",
        "quantum/certificate_manager.py",
        "identity/backend/verifold/verifier_test_suite.py",
        "benchmarks/api_system_benchmark.py",
        "ethics/monitor.py",
        "examples/reasoning/oracle_demo.py",
        "identity/backend/dao/log_viewer.py",
        "core/targeted_api_fixes.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "core/interfaces/logic/agent_self.py",
        "features/integration/system_coordinator.py",
        "identity/backend/verifold/ledger_auditor.py",
        "orchestration/brain/core/orchestrator.py",
        "creativity/dream_systems/dream_delivery_manager.py",
        "memory/systems/memory_orchestrator.py",
        "tests/core/test_mailbox.py",
        "consciousness/reflection/lambda_mirror.py",
        "features/integration/governance/policy_board.py",
        "tests/utils/symbolic_test_scaffold.py",
        "tests/analytics/test_sid_entropy_radar.py",
        ".vscode/vscode-archive/files_moves_2.py",
        "ethics/quantum_mesh_integrator.py",
        "identity/backend/qrglyphs/tests/test_create_qrglyph.py",
        "orchestration/brain/config/paths.py",
        "orchestration/core_modules/core_integrator.py",
        "narrative/symbolic_weaver.py",
        "orchestration/base.py",
        "identity/api/controllers/lambd_id_controller.py",
        "core/monitoring/collapse_tracker.py",
        "core/testing/plugin_test_framework.py",
        "tests/symbolic/test_symbolic_core.py",
        "core/test_mailbox_simple.py",
        "identity/backend/dream_engine/dream_narrator_queue.py",
        "benchmarks/bridge_system_benchmark.py",
        "core/introspection/introspector.py",
        "consciousness/systems/integrator.py",
        "memory/systems/memory_consolidator.py",
        "tests/test_integration_complete.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "memory/systems/foldin.py",
        "tests/compliance/test_ethical_auditor.py",
        "tests/orchestration/test_plugin_registry.py",
        "tools/task_tracker.py",
        "ethics/redteam_sim.py",
        "memory/systems/agent_memory.py",
        "voice/interfaces/eleven_tts.py",
        "memory/systems/foldin_simple.py",
        "core/performance/orchestrator.py",
        "examples/unit_tests/test_autotest_system.py",
        "identity/backend/dream_engine/dream_injector.py",
        "core/interfaces/lukhas_as_agent/sys/nias/dream_export_streamlit.py",
        "tests/diagnostics/test_entropy_radar.py",
        "identity/backend/dream_engine/dream_replay.py",
        "core/automatic_testing_system.py",
        "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
        "orchestration/interfaces/plugin_registry.py",
        "ethics/safety/compliance_dashboard_visual.py",
        "tools/import_path_fixer.py",
        "foundry/lambda_mirror.py",
        "features/integration/dynamic_modality_broker.py",
        "memory/systems/memory_encryptor.py",
        "memory/tools/lambda_vault_scan.py",
        "emotion/mood_regulation/mood_regulator.py",
        "update_documentation.py",
        "ethics/stabilization/tuner.py",
        "consciousness/systems/dream_engine/dream_reflection_loop.py",
        "core/interfaces/tools/research/research_dashboard.py",
        "creativity/creative_market.py",
        "creativity/dream/oneiric_engine/oneiric_core/migrations/env.py",
        "tools/fix_remaining_issues.py",
        "core/interfaces/lukhas_as_agent/sys/nias/generate_payload_cli.py",
        "identity/backend/verifold/verifold_chain.py",
        "tests/hold/simple_security_test.py",
        "core/examples/mailbox_demo.py",
        "identity/backend/verifold/web_journal/web_journal_app.py",
        "examples/ethics/demo_integration.py",
        "creativity/dream_systems/dream_engine.py",
        "core/event_replay_snapshot.py",
        "identity/backend/verifold/journal_mode.py",
        "orchestration/brain/validate_pr_security_review.py",
        "examples/dream_openai_demo.py",
        "benchmarks/learning_system_benchmark.py",
        "ethics/meta_ethics_governor.py",
        "tests/test_phase3b_memory_recurrence.py",
        "quantum/regenerate_intelligent_descriptions.py",
        "tools/test_knowledge_integration.py",
        "creativity/dream/dream_engine/oracle_dream.py",
        "identity/backend/dream_engine/narration_controller.py",
        "docs/documentation_updater.py",
        "tests/fixtures/memory_fixtures.py",
        "orchestration/brain/security_pr_analyzer.py",
        "features/docututor/memory_evolution/voice_synthesis.py",
        "examples/integration/integrated_abot_demo.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "consciousness/cognitive_architecture_controller.py",
        "foundry/symbolic_foundry.py",
        "creativity/dream/dream_pipeline.py",
        "memory/quantum_manager.py",
        "quantum/bio_multi_orchestrator.py",
        "tools/cleanup_and_organize.py",
        "creativity/dream/engine/dream_engine_optimizer.py",
        "tests/test_brain_colony_coordinator.py",
        "tests/run_test_suite.py",
        "memory/manager.py",
        "memory/systems/lazy_loading_embeddings.py",
        "orchestration/brain/orchestration/orchestrator.py",
        "ethics/community_feedback.py",
        "orchestration/agent_orchestrator.py",
        "core/interfaces/ui/app.py",
        "memory/systems/memoria/dreams.py",
        "core/autotest_validation.py",
        "memory/systems/multimodal_memory_support.py",
        "ethics/safety/compliance_dashboard.py",
        "tests/unified_grammar/run_tests.py",
        "tools/vision/vision_prompt_helper.py",
        "trace/snapshot_divergence_plot.py",
        "core/api_diff_analyzer.py",
        "core/notion_sync.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "identity/tests/__init__.py",
        "tests/unified_grammar/test_grammar_compliance.py",
        "quantum/add_compliant_headers.py",
        "memory/systems/memoria/replayer.py",
        "core/ai/integration_manager.py",
        "features/integration/safety/emergency_override.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "tests/hold/test_security_fixes_verification.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "dashboard/core/test_performance_monitor.py",
        "ethics/security/flagship_security_engine.py",
        "tests/test_ethical_drift_sentinel.py",
        "tests/test_lambda_echo_detector.py",
        "tests/advanced_memory_fold_test_suite.py",
        "quantum/fix_proper_ascii.py",
        "core/meta_learning/remediator_agent.py",
        "identity/backend/verifold/verifold_replay_engine.py",
        "core/interfaces/lukhas_as_agent/streamlit/components/voice_preview_streamlit.py",
        "dashboard/core/test_scheduler.py",
        "orchestration/brain/orchestrator.py",
        "orchestration/brain/spine/trait_sync.py",
        "voice/interfaces/voice_interface.py",
        "memory/systems/memoria_codex.py",
        "tools/interactive_test_suite.py",
        "identity/backend/qrglyphs/qrglymph_public.py",
        "tests/memory/test_glyph_memory_integration.py",
        "identity/backend/verifold/scanner_pwa/scanner_backend.py",
        "examples/orchestration/demo_guardian_system.py",
        "diagnostics/entropy_radar.py",
        "tests/test_symbolic_replay_engine.py",
        "ethics/self_reflective_debugger.py",
        "quantum/fix_module_descriptions.py",
        "core/interfaces/tools/security/session_logger.py",
        "core/interfaces/ui/components/voice_preview_streamlit.py",
        "core/symbolic_boot.py",
        "ethics/simulations/lambda_shield_tester.py",
        "memory/drift_memory_manager.py",
        "identity/backend/verifold/verifold_gui.py",
        "ethics/ethical_drift_detector.py",
        "orchestration/brain/symbol_validator.py",
        "creativity/dream/engine/legacy_dream_engine.py",
        "tools/dev/add_verbose_core_descriptions.py",
        "trace/drift_tools.py",
        "quantum/add_module_descriptions.py",
        "tools/fix_headers.py",
        "features/memory/integration_orchestrator.py",
        "core/integrator.py",
        "features/memory/memory_fold.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "tools/safe_workspace_analyzer.py",
        "memory/systems/memory_visualizer.py",
        "memory/systems/test_512_dim_optimization.py",
        "identity/backend/verifold/web_dashboard.py",
        "tests/dream/test_dream_governance_integration.py",
        "orchestration/user_feedback/feedback_collector.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "creativity/dream_systems/dream_snapshot.py",
        "core/interfaces/lukhas_as_agent/core/overview_log.py",
        "identity/backend/app/vault.py",
        "consciousness/quantum_consciousness_integration.py",
        "consciousness/systems/lambda_mirror.py",
        "reasoning/oracle_predictor.py",
        "examples/orchestration/demo_complete_guardian.py",
        "tools/core_module_analyzer.py",
        "tests/diagnostics/test_prophet.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "memory/systems/memory_recall.py",
        "identity/backend/dream_engine/dream_seed_vote.py",
        "core/interfaces/lukhas_as_agent/streamlit/app.py",
        "identity/backend/app/qrglyph_generator.py",
        "identity/backend/dream_engine/dream_registry_dashboard.py",
        "dashboard/core/test_management_system.py",
        "quantum/bio_optimization_adapter.py",
        "creativity/dream_systems/snapshot_redirection_controller.py",
        "consciousness/cognitive/adapter_complete.py",
        "creativity/dream/dream_data_sources.py",
        "voice/dream_voice_pipeline.py",
        "core/ethics/dream_ethics_injector.py",
        "memory/systems/hierarchical_data_store.py",
        "core/interfaces/lukhas_as_agent/sys/nias/narration_controller.py",
        "memory/systems/memory_comprehensive.py",
        "quantum/systems/bio_integration/connectivity_consolidator.py",
        "benchmarks/security_system_benchmark.py",
        "tests/test_drift_recovery.py",
        "orchestration/brain/pr_security_review_task.py",
        "features/memory/dream_memory_fold.py",
        "quantum/system.py",
        "core/generate_autotest_docs.py",
        "creativity/dream/engine/advanced_dream_engine.py",
        "consciousness/systems/quantum_consciousness_integration.py",
        "quantum/awareness_system.py",
        "core/interfaces/lukhas_as_agent/sys/nias/feedback_loop.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "creativity/creative_engine.py",
        "tests/active/test_task_announce_api.py",
        "tools/prediction/test_prophet.py",
        "orchestration/config/production_config.py",
        "orchestration/brain/spine/unified_self.py",
        "tests/test_dream_system_complete.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "memory/systems/neurosymbolic_integration.py",
        "tools/path_validator.py",
        "core/interfaces/research_dashboard.py",
        "examples/identity/id_trace_demo.py",
        "memory/systems/meta_learning_patterns.py",
        "tests/unified_grammar/test_symbolic_vocabulary.py",
        "orchestration/agents/orchestrator.py",
        "tools/symbolic_cli_test.py",
        "features/symbolic/collapse/bridge.py",
        "core/interfaces/lukhas_as_agent/sys/nias/replay_visualizer.py",
        "features/memory/connection_visualizer.py",
        "examples/unit_tests/test_voice.py",
        "identity/backend/verifold/verifold_cli.py",
        "memory/systems/foldout.py",
        "consciousness/brain_integration_20250620_013824.py",
        "tools/cli/drift_analyzer_cli.py",
        "bridge/integration_bridge.py",
        "tests/consciousness/test_consciousness_core.py",
        "tests/utils/validate_test_env.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "orchestration/core_modules/plugin_loader.py",
        "quantum/add_intelligent_descriptions.py",
        "memory/systems/lukhas_memory_encryptor.py",
        "core/test_coordination_simple.py",
        "features/docututor/content_generation_engine/doc_generator.py",
        "tests/test_documentation_single.py",
        "core/interfaces/lukhas_as_agent/sys/nias/feedback_log_viewer.py",
        "orchestration/brain/rem/generate_dream.py",
        "identity/backend/app/journey_log_manager.py",
        "memory/emotional_memory_manager_unified.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "tools/task_migration.py",
        "memory/systems/memoria.py",
        "examples/unit_tests/test_symbolic_anomaly_explorer.py",
        "memory/quantum_memory_manager.py",
        "tools/cli/ctl.py",
        "creativity/dream/tools/run_dream_analysis.py",
        "examples/quantum/bio_quantum_radar_comprehensive_demo.py",
        "ethics/safety/compliance_hooks.py",
        "identity/backend/dream_engine/assistant.py",
        "benchmarks/symbolic_system_benchmark.py",
        "core/interfaces/lukhas_as_agent/news_and_social/affiliate_log.py",
        "memory/dream_memory_manager.py",
        "tests/conftest.py",
        "tests/identity/test_identity_core.py",
        "voice/processor.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/specialized/enhancement_orchestrator.py",
        "quantum/add_poetic_headers.py",
        "memory/systems/test_lazy_loading.py",
        "core/validation.py",
        "demo_documentation_update.py",
        "core/ai_interface.py",
        "foundry/lambda_sage.py",
        "ethics/governor/lambda_governor.py",
        "identity/backend/verifold/qr_encoder.py",
        "orchestration/brain/core/types.py",
        "orchestration/brain/unified_self_merge_divergence.py",
        "core/test_image_processing_pipeline.py",
        "tests/internal_tools/test_module_digest_extractor.py",
        "identity/core/id_service/lambd_id_validator.py",
        "quantum/add_verbose_intelligent_descriptions.py",
        "examples/unit_tests/test_framework_security_engine.py",
        "examples/unit_tests/test_framework.py",
        "tests/test_entropy_radar.py",
        "examples/bio_symbolic_demo.py",
        "quantum/api_manager.py",
        "quantum/creative_integration.py",
        "tests/test_reflection_standalone.py",
        "orchestration/migrated/brain_orchestrator.py",
        "tests/test_oracle_predictor.py",
        "tests/analytics/test_drift_affect_validator_json.py",
        "ethics/ethical_auditor.py",
        "orchestration/specialized/deployment_orchestrator.py",
        "bridge/openai_core_service.py",
        "orchestration/migrate_orchestrators.py",
        "tests/dream/test_dream_limiter.py",
        "ethics/tools/quantum_mesh_visualizer.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "bridge/connectors/blockchain_bridge.py",
        "identity/api/__init__.py",
        "tools/dev/module_digest_extractor.py",
        "creativity/dream/dashboard/dream_metrics_db.py",
        "consciousness/systems/engine_complete.py",
        "examples/tests/quantum_creative_integration_test.py",
        "memory/privacy_preserving_memory_vault.py",
        "memory/persistence/orthogonal_persistence.py",
        "core/interfaces/tools/cli/dream_cli.py",
        "tests/hold/test_security_fixes_validation.py",
        "features/entropy/radar.py",
        "orchestration/brain/tracing/trace_tools.py",
        "identity/backend/verifold/web_qr_verifier.py",
        "tools/parsers/knowledge_loader.py",
        "tests/creativity/test_creative_market.py",
        "core/image_processing_pipeline.py",
        "examples/tests/bio_quantum_radar_integration_test.py",
        "core/interfaces/dev_dashboard.py",
        "orchestration/brain/dream_engine/cli/dream_cli.py",
        "creativity/advanced_haiku_generator.py",
        "core/neural_architectures/neural_integrator.py",
        "examples/orchestration/demo_reflection_layer.py",
        "quantum/add_template_reference.py",
        "consciousness/systems/mapper.py",
        "bridge/explainability_interface_layer.py",
        "core/utils/dream_utils.py",
        "tools/parsers/test_knowledge_loader.py",
        "features/analytics/clustering/dream_clustering_engine.py",
        "memory/systems/simple_memory.py",
        "identity/backend/verifold/narrative_utils.py",
        "core/interfaces/lukhas_as_agent/sys/nias/voice_narrator.py",
        "core/interfaces/lukhas_as_agent/sys/nias/inject_message_simulator.py",
        "ethics/sentinel/ethical_sentinel_dashboard.py",
        "ethics/export_report.py",
        "orchestration/core_modules/master_orchestrator.py",
        "memory/systems/foldout_simple.py",
        "core/task_manager.py",
        "learning/aid/dream_engine/narration_controller.py",
        "memory/systems/symbolic_replay_engine.py",
        "examples/unit_tests/test_memory_comprehensive.py",
        "tests/api/test_glyph_exchange.py",
        "ethics/compliance/engine.py",
        "memory/systems/memoria/reflector.py",
        "identity/backend/app/replay_manager.py",
        "tools/collapse_simulator.py",
        "core/interfaces/lukhas_as_agent/sys/nias/05_25_dream_clustering_engine.py",
        "core/interfaces/lukhas_as_agent/agent_logic/agent_self.py",
        "examples/reasoning/abstract_reasoning_demo.py",
        "core/interfaces/voice/listen.py",
        "memory/systems/distributed_memory_fold.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_fastapi.py",
        "memory/tools/lambda_archive_inspector.py",
        "quantum/healix_mapper.py",
        "core/interfaces/app.py",
        "orchestration/brain/personality/personality_refiner.py",
        "core/interfaces/ui/components/audio_exporter.py",
        "tests/utils/orphan_test_scanner.py",
        "identity/backend/app/cloud_storage.py",
        "tests/test_all_interactive.py",
        "tests/bridge/test_blockchain_anchor.py",
        "orchestration/brain/rem/generate_dream_data.py"
      ],
      "count": 439
    },
    {
      "module": "time",
      "used_in": [
        "identity/core/onboarding/onboarding.py",
        "tests/memory/test_memory_basic.py",
        "benchmarks/voice_system_benchmark.py",
        "orchestration/brain/token_budget_controller.py",
        "benchmarks/perception_system_benchmark.py",
        "orchestration/brain/abstract_reasoning/oscillator.py",
        "orchestration/brain/pr_security_review_starter.py",
        "tests/test_memory_fold_simple.py",
        "voice/context_aware_voice_modular.py",
        "memory/neocortical/concept_hierarchy.py",
        "tests/test.py",
        "examples/identity/qrg_standalone_demo.py",
        "examples/orchestration_src/adaptive_agi_demo.py",
        "orchestration/brain/visualization/memory_helix_visualizer.py",
        "identity/qrg_100_percent_coverage.py",
        "tests/emotion/test_emotion_feedback.py",
        "core/test_tiered_state_management.py",
        "orchestration/brain/eu_ai_transparency.py",
        "quantum/\u039bBot_quantum_security.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "emotion/tools/emotional_echo_detector.py",
        "tests/core/test_core_integration.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "symbolic/bio/glyph_id_hash.py",
        "voice/systems/voice_synthesis.py",
        "memory/systems/simple_store.py",
        "tests/test_emotion_recursion.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "tests/test_memory_comprehensive.py",
        "core/actor_model.py",
        "symbolic/neural/neural_symbolic_bridge.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "core/enhanced_swarm.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "orchestration/brain/visualization/healix_visualizer.py",
        "tests/active/test_strategy_engine_core.py",
        "core/infrastructure/node_collection.py",
        "tests/suites/advanced_agi_test_suite.py",
        "orchestration/colony_orchestrator.py",
        "tests/hold/dreams/test_affect_delta_detection.py",
        "tests/emotion/affect/test_affect_stagnation.py",
        "benchmarks/safety/integrated_safety_test_script_20250729_064441.py",
        "memory/adapters/colony_memory_adapter.py",
        "orchestration/agents/adaptive_orchestrator.py",
        "orchestration/brain/spine/fold_engine.py",
        "orchestration/security/dast/tests.py",
        "orchestration/orchestrator.py",
        "identity/backend/verifold/entropy_fusion.py",
        "memory/distributed_state_manager.py",
        "orchestration/brain/privacy_manager.py",
        "bridge/symbolic_dream_bridge.py",
        "orchestration/monitoring/reflection_layer.py",
        "orchestration/brain/trace_memoria_logger.py",
        "tests/test_memory_stress_final.py",
        "memory/systems/memoria/dream_cron.py",
        "identity/auth_utils/cognitive_load_estimator.py",
        "trace/drift_dashboard_visual.py",
        "reasoning/LBot_reasoning_processed.py",
        "creativity/emotional_resonance.py",
        "identity/core/commercial/commercial_module.py",
        "ethics/policy_engines/examples/three_laws.py",
        "benchmarks/tests/functional_capability_test.py",
        "core/test_p2p_communication.py",
        "orchestration/core_modules/orchestrator_core.py",
        "benchmarks/reasoning_system_benchmark.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "orchestration/brain/spine/main_loop.py",
        "core/practical_optimizations.py",
        "features/docututor/memory_evolution/version_control.py",
        "benchmarks/tests/comprehensive_functional_test.py",
        "orchestration/specialized/orchestrator_emotion_engine.py",
        "core/actor_system.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "identity/core/lambd_id_service.py",
        "tests/test_attention_memory.py",
        "identity/auth_backend/entropy_health_api.py",
        "orchestration/brain/dynamic_adaptive_dashboard.py",
        "examples/consciousness/consciousness_demo.py",
        "orchestration/security/dast/engine.py",
        "examples/quantum/quantum_security_integration_demo.py",
        "tests/active/test_intent_node.py",
        "reasoning/systems/id_reasoning_engine.py",
        "benchmarks/dashboard_system_benchmark.py",
        "tests/test_memory_fold_performance.py",
        "benchmarks/tests/biological_memory_validation_test.py",
        "benchmarks/api_system_benchmark.py",
        "tests/core/test_agent_coordination.py",
        "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
        "examples/reasoning/oracle_demo.py",
        "voice/interface.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "memory/systems/trauma_lock.py",
        "benchmarks/tests/actor_throughput_test.py",
        "memory/memory_optimization.py",
        "features/crista_optimizer/symbolic_network.py",
        "features/integration/system_coordinator.py",
        "identity/lukhus_ultimate_test_suite.py",
        "core/interfaces/voice/voice_emotional/context_aware_modular_voice.py",
        "identity/backend/verifold/ledger_auditor.py",
        "bridge/message_bus.py",
        "orchestration/brain/core/orchestrator.py",
        "interfaces/api/v1/rest/middleware.py",
        "memory/core/interfaces/semantic_interface.py",
        "tests/core/memory/hooks/test_hooks.py",
        "memory/integration_test.py",
        "tests/test_quantized_cycles.py",
        "memory/systems/memory_orchestrator.py",
        "interfaces/api/v1/grpc/pb2.py",
        "memory/colonies/episodic_memory_colony.py",
        "creativity/engines/engine.py",
        "ethics/governor/dao_controller.py",
        "memory/replay/replay_buffer.py",
        "consciousness/reflection/lambda_mirror.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "core/infrastructure/node_manager.py",
        "ethics/quantum_mesh_integrator.py",
        "orchestration/core_modules/core_integrator.py",
        "memory/systems/memory_node.py",
        "core/identity_aware_base_colony.py",
        "memory/systems/memory_learning/memory_manager.py",
        "narrative/symbolic_weaver.py",
        "interfaces/protocols/awareness_protocol.py",
        "voice/bio_core/oscillator/orchestrator.py",
        "consciousness/service.py",
        "orchestration/base.py",
        "memory/systems/memory_helix_visualizer.py",
        "core/testing/plugin_test_framework.py",
        "orchestration/brain/rem/rem.py",
        "tests/memory_stress_tests.py",
        "benchmarks/bridge_system_benchmark.py",
        "orchestration/brain/consciousness/memory_identity.py",
        "consciousness/systems/integrator.py",
        "tests/memory/test_memory_optimization.py",
        "core/colonies/reasoning_colony.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "identity/mobile_platform/mobile_ui_renderer.py",
        "memory/colonies/base_memory_colony.py",
        "examples/unit_tests/test_brain_integration.py",
        "identity/qrg_showcase.py",
        "tests/active/test_event_bus_dynamic.py",
        "core/performance/orchestrator.py",
        "examples/unit_tests/test_autotest_system.py",
        "benchmarks/tests/actor_throughput_simple_test.py",
        "benchmarks/performance/run_quantized_benchmark.py",
        "benchmarks/simple_actor_benchmark.py",
        "core/oracle_nervous_system.py",
        "memory/core/colony_memory_validator.py",
        "core/automatic_testing_system.py",
        "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
        "core/p2p_communication.py",
        "foundry/lambda_mirror.py",
        "orchestration/core_modules/symbolic_handshake.py",
        "features/integration/dynamic_modality_broker.py",
        "core/quantum_identity_manager.py",
        "identity/auth_backend/cross_device_handshake.py",
        "identity/core/qrg/qrg_manager.py",
        "tests/ethics/policy_engines/test_base.py",
        "tests/active/test_compliance_engine_2.py",
        "consciousness/systems/dream_engine/dream_reflection_loop.py",
        "interfaces/api/v1/rest/routers/process.py",
        "identity/backend/verifold/verifold_chain.py",
        "core/examples/mailbox_demo.py",
        "reasoning/reasoning_engine.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "examples/ethics/demo_integration.py",
        "core/event_replay_snapshot.py",
        "identity/backend/verifold/journal_mode.py",
        "orchestration/brain/validate_pr_security_review.py",
        "benchmarks/learning_system_benchmark.py",
        "core/distributed_tracing.py",
        "memory/loop_monitor.py",
        "voice/synthesis.py",
        "core/interfaces/main.py",
        "orchestration/security/dast/intelligence.py",
        "tests/hold/dreams/test_dream_emotion_feedback.py",
        "creativity/dream/dream_engine/oracle_dream.py",
        "docs/documentation_updater.py",
        "benchmarks/tests/real_world_creativity_test.py",
        "core/coordination.py",
        "identity/backend/verifold/verifold_hash_pq.py",
        "memory/proteome/symbolic_proteome.py",
        "orchestration/brain/spine/self_reflect_cron.py",
        "consciousness/cognitive_architecture_controller.py",
        "core/swarm.py",
        "quantum/bio_multi_orchestrator.py",
        "reasoning/analysis/engine.py",
        "orchestration/monitoring/health_checks.py",
        "core/symbolism/archiver.py",
        "tests/core/symbolic/test_archiver.py",
        "benchmarks/performance/quantized_cycles_stress_test.py",
        "core/fault_tolerance.py",
        "quantum/quantum_waveform.py",
        "identity/backend/verifold/yubi_seeder.py",
        "identity/auth_utils/replay_protection.py",
        "creativity/voice_integrator.py",
        "orchestration/brain/orchestration/orchestrator.py",
        "ethics/meg_guard.py",
        "identity/auth_backend/trust_scorer.py",
        "identity/wearables_integration/entropy_beacon.py",
        "memory/systems/memory_lock.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "bio/symbolic/glyph_id_hash.py",
        "core/tier_aware_colony_proxy.py",
        "identity/auth_utils/attention_monitor.py",
        "core/p2p_fabric.py",
        "dashboard/core/test_execution_engine.py",
        "orchestration/brain/autonomous_github_manager.py",
        "core/supervision.py",
        "memory/test_lightweight_concurrency.py",
        "core/colonies/ethics_swarm_colony.py",
        "identity/lukhus_deployment_package.py",
        "orchestration/brain/logging/output_log.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "tests/core/test_supervision.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "core/resource_efficiency_analyzer.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "memory/repair/advanced_trauma_repair.py",
        "dashboard/core/test_performance_monitor.py",
        "creativity/dream/core.py",
        "quantum/dast_orchestrator.py",
        "tests/test_lambda_echo_detector.py",
        "quantum/phase_quantum_integration.py",
        "tests/advanced_memory_fold_test_suite.py",
        "core/meta_learning/remediator_agent.py",
        "identity/auth_backend/authentication_server.py",
        "identity/backend/verifold/verifold_replay_engine.py",
        "core/benchmark_swarm.py",
        "benchmarks/configuration_system_benchmark.py",
        "bio/symbolic/mito_quantum_attention.py",
        "orchestration/brain/orchestrator.py",
        "memory/core/interfaces/episodic_interface.py",
        "core/monitoring_observability.py",
        "orchestration/brain/brain_integration.py",
        "benchmarks/tests/dream_tools_functional_test.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "orchestration/brain/integration/brain_integration.py",
        "ethics/policy_engines/examples/gpt4_policy.py",
        "tools/interactive_test_suite.py",
        "memory/core/interfaces/memory_interface.py",
        "core/observability_steering.py",
        "memory/core/unified_memory_orchestrator.py",
        "tests/auditor_test_suite.py",
        "core/colonies/memory_colony_enhanced.py",
        "core/efficient_communication.py",
        "examples/orchestration/demo_guardian_system.py",
        "orchestration/security/dast/adapters.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "core/monitoring/drift_monitor.py",
        "ethics/self_reflective_debugger.py",
        "ethics/simulations/lambda_shield_tester.py",
        "identity/backend/verifold/verifold_gui.py",
        "examples/unit_tests/test_batch_efficiency.py",
        "memory/systems/memory_identity.py",
        "orchestration/brain/symbol_validator.py",
        "tests/core/test_energy_consumption_analysis.py",
        "orchestration/brain/monitoring/performance.py",
        "trace/drift_tools.py",
        "bio/systems/orchestration/bio_orchestrator.py",
        "core/integrator.py",
        "core/personality/personality.py",
        "identity/core/sent/consent_history.py",
        "core/resource_optimization_integration.py",
        "orchestration/master_orchestrator.py",
        "core/quantized_thought_cycles.py",
        "memory/systems/test_512_dim_optimization.py",
        "identity/backend/verifold/web_dashboard.py",
        "orchestration/brain/multi_brain_orchestrator.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "quantum/consensus_system.py",
        "core/swarm_identity_orchestrator.py",
        "core/integrated_system.py",
        "identity/auth/constitutional_gatekeeper.py",
        "consciousness/systems/lambda_mirror.py",
        "examples/orchestration/demo_complete_guardian.py",
        "tools/core_module_analyzer.py",
        "tests/active/test_voice_processing.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "orchestration/brain/quantum_annealed_consensus.py",
        "tests/test_optimized_memory_system.py",
        "tests/test_symbiotic_swarm_integration.py",
        "dashboard/core/test_management_system.py",
        "identity/auth/entropy_synchronizer.py",
        "quantum/bio_optimization_adapter.py",
        "identity/core/qrs_manager.py",
        "trace/drift_dashboard.py",
        "orchestration/brain/context_analyzer.py",
        "core/observability/collector.py",
        "memory/systems/hierarchical_data_store.py",
        "dashboard/core/universal_adaptive_dashboard.py",
        "quantum/ethics_engine.py",
        "examples/integration/integration_tests.py",
        "reasoning/causal_reasoning.py",
        "orchestration/core_modules/controller.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "memory/systems/memory_comprehensive.py",
        "benchmarks/security_system_benchmark.py",
        "creativity/healix_visualizer.py",
        "benchmarks/tests/run_comprehensive_test_suite.py",
        "orchestration/brain/ethics/ethical_hierarchy.py",
        "tests/test_drift_recovery.py",
        "features/creative_engine/engine.py",
        "core/tiered_state_management.py",
        "creativity/creative_engine.py",
        "reasoning/\u039bBot_reasoning.py",
        "core/colonies/tensor_colony_ops.py",
        "identity/core/sing/sso_engine.py",
        "tests/hold/dreams/test_recursive_dream_chain.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "identity/api/api.py",
        "tests/real_world_creativity_test.py",
        "memory/systems/neurosymbolic_integration.py",
        "identity/core/id_service/lambd_id_generator.py",
        "memory/consolidation/ripple_generator.py",
        "orchestration/brain/net/client.py",
        "core/colonies/base_colony.py",
        "memory/systems/meta_learning_patterns.py",
        "quantum/bio_test_oracle.py",
        "orchestration/agents/orchestrator.py",
        "orchestration/apis/drift_monitoring_api.py",
        "identity/tests/test_comprehensive.py",
        "orchestration/swarm_orchestration_adapter.py",
        "orchestration/security/dast/api.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "consciousness/brain_integration_20250620_013824.py",
        "orchestration/monitoring/sub_agents/memory_cleaner.py",
        "benchmarks/tests/dream_system_functional_test.py",
        "examples/integration/quantum_identity_integration_test.py",
        "orchestration/brain/cpu_friendly_compliance.py",
        "ethics/decision_node.py",
        "examples/identity/qrg_demo.py",
        "tests/active/test_compliance_engine.py",
        "ethics/compliance_engine20250503213400_p95.py",
        "identity/qrg_integration.py",
        "identity/core/brain_identity_connector.py",
        "tests/test_drift_monitoring.py",
        "reasoning/intent/intent_detector.py",
        "core/interfaces/socket.py",
        "features/api/dream_api.py",
        "reasoning/id_reasoning_engine.py",
        "memory/resonance/resonant_memory_access.py",
        "learning/meta_learning/federated_integration.py",
        "tools/cli/ctl.py",
        "examples/quantum/bio_quantum_radar_comprehensive_demo.py",
        "features/crista_optimizer/topology_manager.py",
        "tests/core/test_resource_optimization_integration.py",
        "identity/backend/dream_engine/assistant.py",
        "benchmarks/symbolic_system_benchmark.py",
        "identity/qrg_test_suite.py",
        "features/integration/neural_symbolic_bridge.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/specialized/enhancement_orchestrator.py",
        "memory/systems/test_lazy_loading.py",
        "identity/mobile/qr_code_animator.py",
        "core/validation.py",
        "reasoning/ethical_reasoning_system.py",
        "voice/bio_core/oscillator/bio_quantum_engine.py",
        "core/event_bus.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "ethics/governor/lambda_governor.py",
        "orchestration/config/migration_router.py",
        "core/event_sourcing.py",
        "orchestration/brain/demo.py",
        "core/agent_coordination.py",
        "memory/hippocampal/theta_oscillator.py",
        "orchestration/brain/identity_manager.py",
        "core/test_image_processing_pipeline.py",
        "identity/auth/adaptive_ui_controller.py",
        "identity/api/onboarding_api.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "memory/node.py",
        "symbolic/bio/mito_quantum_attention.py",
        "tests/test_reflection_standalone.py",
        "ethics/compliance_engine.py",
        "orchestration/migrated/brain_orchestrator.py",
        "ethics/ethical_auditor.py",
        "tests/test_integrated_safety_simple.py",
        "benchmarks/trace_system_benchmark.py",
        "orchestration/brain/monitor.py",
        "voice/integrator.py",
        "identity/core/auth/biometric_integration.py",
        "memory/persistence/orthogonal_persistence.py",
        "benchmarks/optimized_actor_benchmark.py",
        "orchestration/specialized/inter_agent_simulation.py",
        "memory/systems/memory_evolution.py",
        "tests/test_drift_regression.py",
        "memory/systems/memory_helix.py",
        "core/energy_consumption_analysis.py",
        "core/mailbox.py",
        "identity/api/auth/onboarding.py",
        "reasoning/goals/goal_manager.py",
        "identity/backend/verifold/web_qr_verifier.py",
        "tests/test_dream_system_integration.py",
        "core/image_processing_pipeline.py",
        "creativity/dream_systems/dream_convergence_tester.py",
        "learning/_dict_learning.py",
        "tests/test_affect_stagnation.py",
        "core/neural_architectures/neural_integrator.py",
        "examples/orchestration/demo_reflection_layer.py",
        "orchestration/core_modules/orchestration_service.py",
        "ethics/ethical_reasoning_system.py",
        "consciousness/systems/mapper.py",
        "orchestration/brain/governance/dao_governance_node.py",
        "orchestration/brain/autonomous_system.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "tests/test_event_replayer.py",
        "features/memory/hooks/registry.py",
        "identity/core/trace/activity_logger.py",
        "identity/api/routes/lambd_id_routes.py",
        "orchestration/brain/meta/compliance_engine_20250503213400.py",
        "reasoning/reasoning_colony.py",
        "identity/auth/qrg_generators.py",
        "identity/tools/onboarding_cli.py",
        "orchestration/core_modules/master_orchestrator.py",
        "core/infrastructure/node_registry.py",
        "bridge/shared_state.py",
        "memory/systems/symbolic_replay_engine.py",
        "examples/unit_tests/test_memory_comprehensive.py",
        "orchestration/security/dast/processors.py",
        "ethics/compliance/engine.py",
        "tools/collapse_simulator.py",
        "orchestration/core_modules/signals.py",
        "benchmarks/emotion_system_benchmark.py",
        "memory/systems/distributed_memory_fold.py",
        "memory/tools/lambda_archive_inspector.py",
        "tests/memory_stress_tests_light.py",
        "examples/ethics/ethical_sentinel_demo.py",
        "benchmarks/memory/memory_stress_tests/test_memory_stress_final.py",
        "core/verifold/verifold_unified.py",
        "orchestration/brain/MultiBrainSymphony.py",
        "memory_system_demo.py"
      ],
      "count": 438
    },
    {
      "module": "enum",
      "used_in": [
        "identity/core/onboarding/onboarding.py",
        "orchestration/brain/eu_awareness_engine.py",
        "core/ethics/__init__.py",
        "orchestration/brain/token_budget_controller.py",
        "memory/governance/ethical_drift_governor.py",
        "voice/context_aware_voice_modular.py",
        "examples/identity/qrg_standalone_demo.py",
        "emotion/dreamseed_upgrade.py",
        "orchestration/brain/eu_ai_transparency.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "emotion/tools/emotional_echo_detector.py",
        "identity/core/user_tier_mapping.py",
        "tools/prediction/prophet_predictor.py",
        "voice/systems/voice_synthesis.py",
        "memory/systems/simple_store.py",
        "identity/auth/cultural_profile_manager.py",
        "creativity/dream_systems/dream_glyph_bridge.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "identity/core/onboarding/onboarding_config.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "examples/integration/simple_integration_test.py",
        "ethics/policy_engines/base.py",
        "core/enhanced_swarm.py",
        "orchestration/colony_orchestrator.py",
        "orchestration/brain/lambda_bot_batch_processor.py",
        "orchestration/agents/adaptive_orchestrator.py",
        "features/docututor/symbolic_knowledge_core/knowledge_graph.py",
        "features/memory/fold_lineage_tracker.py",
        "orchestration/brain/spine/fold_engine.py",
        "orchestration/orchestrator.py",
        "identity/enterprise/auth.py",
        "identity/backend/verifold/entropy_fusion.py",
        "memory/distributed_state_manager.py",
        "memory/glyph_memory_integration.py",
        "orchestration/config/orchestrator_flags.py",
        "orchestration/monitoring/reflection_layer.py",
        "quantum/post_quantum_crypto.py",
        "identity/auth_utils/cognitive_load_estimator.py",
        "identity/core/commercial/commercial_module.py",
        "reasoning/conflict_resolver.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "core/id.py",
        "features/integration/executive_decision_integrator.py",
        "core/actor_system.py",
        "identity/backend/verifold/storage/verifold_exporter.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "learning/system.py",
        "identity/core/lambd_id_service.py",
        "orchestration/security/dast/engine.py",
        "reasoning/systems/id_reasoning_engine.py",
        "orchestration/brain/awareness_engine.py",
        "memory/lightweight_concurrency.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "core/plugin_registry.py",
        "quantum/bio_crista_optimizer_adapter.py",
        "quantum/certificate_manager.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "memory/memory_optimization.py",
        "features/crista_optimizer/symbolic_network.py",
        "features/integration/system_coordinator.py",
        "bridge/message_bus.py",
        "orchestration/brain/core/orchestrator.py",
        "memory/core/interfaces/semantic_interface.py",
        "memory/systems/memory_orchestrator.py",
        "tests/test_glyph_recall_drift_correlation.py",
        "orchestration/brain/australian_awareness_engine.py",
        "bio/endocrine_daily_operations.py",
        "creativity/engines/engine.py",
        "ethics/orchestrator.py",
        "memory/replay/replay_buffer.py",
        "consciousness/reflection/lambda_mirror.py",
        "bio/oscillator.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "ethics/compliance_simple.py",
        "ethics/quantum_mesh_integrator.py",
        "orchestration/core_modules/core_integrator.py",
        "core/integrated_safety_system.py",
        "memory/systems/memory_learning/memory_manager.py",
        "narrative/symbolic_weaver.py",
        "interfaces/protocols/awareness_protocol.py",
        "voice/bio_core/oscillator/orchestrator.py",
        "orchestration/base.py",
        "features/integration/neuro_symbolic_fusion_layer.py",
        "core/monitoring/collapse_tracker.py",
        "memory/systems/memory_helix_golden.py",
        "orchestration/resonance_orchestrator.py",
        "memory/emotional.py",
        "orchestration/brain/consciousness/memory_identity.py",
        "identity/backend/verifold/security/symbolic_adversary_agent.py",
        "consciousness/systems/integrator.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "identity/mobile_platform/mobile_ui_renderer.py",
        "memory/colonies/base_memory_colony.py",
        "orchestration/brain/symbolic_engine/symbolic_core.py",
        "core/performance/orchestrator.py",
        "core/oracle_nervous_system.py",
        "memory/core/colony_memory_validator.py",
        "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
        "orchestration/interfaces/plugin_registry.py",
        "identity/core/id_service/entropy_engine.py",
        "core/p2p_communication.py",
        "foundry/lambda_mirror.py",
        "memory/systems/memory_profiler.py",
        "orchestration/agents/types.py",
        "features/integration/dynamic_modality_broker.py",
        "features/symbolic/collapse/reasoner.py",
        "core/quantum_identity_manager.py",
        "core/consistency_manager.py",
        "identity/core/qrg/qrg_manager.py",
        "symbolic/neural/neuro_symbolic_fusion_layer.py",
        "memory/systems/causal_memory_chains.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "reasoning/collapse_reasoner.py",
        "core/event_replay_snapshot.py",
        "memory/systems/reflection_engine.py",
        "ethics/meta_ethics_governor.py",
        "orchestration/brain/consciousness.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "examples/integration/integrated_abot_demo.py",
        "memory/proteome/symbolic_proteome.py",
        "identity/core/tier/tier_manager.py",
        "bio/symbolic/anomaly_filter_colony.py",
        "consciousness/cognitive_architecture_controller.py",
        "core/swarm.py",
        "orchestration/brain/prediction/world_models.py",
        "quantum/bio_multi_orchestrator.py",
        "reasoning/analysis/engine.py",
        "reasoning/traceback_orchestrator.py",
        "memory/systems/colony_swarm_integration.py",
        "orchestration/monitoring/health_checks.py",
        "memory/systems/dream_trace_linker.py",
        "learning/meta_learning/symbolic_feedback.py",
        "core/fault_tolerance.py",
        "identity/backend/verifold/yubi_seeder.py",
        "orchestration/brain/orchestration/orchestrator.py",
        "ethics/glyph_ethics_validator.py",
        "orchestration/brain/abstract_reasoning/confidence_calibrator.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "quantum/metadata.py",
        "identity/auth_utils/attention_monitor.py",
        "orchestration/brain/compliance/ai_compliance_manager.py",
        "dashboard/core/test_execution_engine.py",
        "orchestration/brain/autonomous_github_manager.py",
        "core/supervision.py",
        "memory/systems/multimodal_memory_support.py",
        "core/colonies/ethics_swarm_colony.py",
        "identity/backend/verifold/visual/qr_tier_scanner.py",
        "core/common.py",
        "identity/auth_utils/grid_size_calculator.py",
        "interfaces/api/v1/rest/models.py",
        "dashboard/api/websocket_server.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "orchestration/brain/research_awareness_engine.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "memory/systems/fold_lineage_tracker.py",
        "orchestration/brain/cognitive_core.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "core/resource_efficiency_analyzer.py",
        "orchestration/brain/das_awareness_engine.py",
        "orchestration/brain/compliance/constitutional_ai.py",
        "memory/repair/advanced_trauma_repair.py",
        "dashboard/core/test_performance_monitor.py",
        "features/common/ethics.py",
        "creativity/dream/core.py",
        "core/meta_learning/remediator_agent.py",
        "identity/auth_backend/authentication_server.py",
        "dashboard/core/test_scheduler.py",
        "orchestration/brain/orchestrator.py",
        "core/monitoring_observability.py",
        "memory/systems/symbolic_delta_compression.py",
        "bridge/symbolic_memory_mapper.py",
        "orchestration/brain/brain_integration.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "identity/auth_utils/cultural_safety_checker.py",
        "orchestration/brain/integration/brain_integration.py",
        "orchestration/brain/uk_awareness_engine.py",
        "features/symbolic/glyphs/glyph.py",
        "memory/core/interfaces/memory_interface.py",
        "bio/symbolic/contextual_mapping_colony.py",
        "core/observability_steering.py",
        "memory/core/unified_memory_orchestrator.py",
        "dashboard/core/morphing_engine.py",
        "core/efficient_communication.py",
        "core/monitoring/drift_monitor.py",
        "ethics/self_reflective_debugger.py",
        "identity/backend/verifold/cryptography/crypto_router.py",
        "memory/systems/distributed_memory.py",
        "ethics/simulations/lambda_shield_tester.py",
        "consciousness/systems/engine_poetic.py",
        "memory/systems/memory_identity.py",
        "creativity/dream/engine/dream_engine_merged.py",
        "orchestration/brain/symbol_validator.py",
        "learning/tutor.py",
        "orchestration/system_orchestrator.py",
        "memory/evolution.py",
        "bio/systems/orchestration/bio_orchestrator.py",
        "core/integrator.py",
        "core/personality/personality.py",
        "memory/systems/memory_processing.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "identity/core/id_service/portability_system.py",
        "core/resource_optimization_integration.py",
        "bridge/symbolic_reasoning_adapter.py",
        "orchestration/master_orchestrator.py",
        "core/quantized_thought_cycles.py",
        "features/memory/fold_engine.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "dashboard/core/fallback_system.py",
        "core/swarm_identity_orchestrator.py",
        "features/common/base_health.py",
        "bridge/trace_logger.py",
        "identity/auth/constitutional_gatekeeper.py",
        "consciousness/systems/lambda_mirror.py",
        "identity/utils/symbolic_parser.py",
        "reasoning/oracle_predictor.py",
        "memory/systems/episodic_replay_buffer.py",
        "reasoning/symbolic_logic_engine.py",
        "bio/simulation_controller.py",
        "bio/base_oscillator.py",
        "dashboard/core/test_management_system.py",
        "identity/auth/entropy_synchronizer.py",
        "identity/core/qrs_manager.py",
        "bio/eeg_sync_bridge.py",
        "trace/drift_dashboard.py",
        "orchestration/brain/core/capability_levels.py",
        "consciousness/cognitive/adapter_complete.py",
        "memory/systems/identity_lineage_bridge.py",
        "quantum/oscillator.py",
        "memory/systems/hierarchical_data_store.py",
        "dashboard/core/universal_adaptive_dashboard.py",
        "quantum/ethics_engine.py",
        "examples/integration/integration_tests.py",
        "orchestration/core_modules/controller.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "quantum/systems/bio_integration/connectivity_consolidator.py",
        "memory/systems/replay_system.py",
        "orchestration/brain/ethics/ethical_hierarchy.py",
        "features/creative_engine/engine.py",
        "core/symbolism/tags.py",
        "core/tiered_state_management.py",
        "orchestration/brain/monitoring/guardian_reflector.py",
        "creativity/creative_engine.py",
        "orchestration/monitoring/remediator_agent.py",
        "emotion/dreamseed_unified.py",
        "orchestration/config/production_config.py",
        "ethics/compliance.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "identity/api/api.py",
        "dashboard/core/dashboard_colony_agent.py",
        "memory/systems/neurosymbolic_integration.py",
        "identity/core/id_service/lambd_id_generator.py",
        "memory/consolidation/ripple_generator.py",
        "orchestration/brain/net/client.py",
        "memory/systems/meta_learning_patterns.py",
        "quantum/bio_test_oracle.py",
        "orchestration/agents/orchestrator.py",
        "orchestration/apis/drift_monitoring_api.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "orchestration/swarm_orchestration_adapter.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "memory/systems/core.py",
        "consciousness/brain_integration_20250620_013824.py",
        "orchestration/migrated/ethics_orchestrator.py",
        "features/crista_optimizer/crista_optimizer.py",
        "core/identity_integration.py",
        "memory/systems/tier_system.py",
        "bio/symbolic/fallback_systems.py",
        "core/meta_learning/enhancement_system.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "identity/backend/verifold/storage/verifold_vault_viewer.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "orchestration/interfaces/orchestration_protocol.py",
        "identity/qrg_integration.py",
        "memory/systems/causal_identity_tracker.py",
        "identity/core/brain_identity_connector.py",
        "reasoning/id_reasoning_engine.py",
        "memory/resonance/resonant_memory_access.py",
        "learning/meta_learning/federated_integration.py",
        "orchestration/brain/core_system.py",
        "features/crista_optimizer/topology_manager.py",
        "orchestration/migrated/simple_test.py",
        "voice/processor.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/specialized/enhancement_orchestrator.py",
        "reasoning/ethical_reasoning_system.py",
        "foundry/lambda_sage.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "core/ai_interface.py",
        "ethics/governor/lambda_governor.py",
        "orchestration/config/migration_router.py",
        "core/agent_coordination.py",
        "memory/hippocampal/theta_oscillator.py",
        "orchestration/brain/core/types.py",
        "dashboard/core/self_healing_manager.py",
        "memory/systems/chatgpt_memory_integrator_legacy.py",
        "identity/core/id_service/lambd_id_validator.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "identity/auth/adaptive_ui_controller.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "bio/symbolic/bio_symbolic.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "tests/test_reflection_standalone.py",
        "identity/backend/verifold/hardware_entropy_seed.py",
        "memory/structural_conscience.py",
        "orchestration/migrated/brain_orchestrator.py",
        "orchestration/brain/collaborative_ai_agent_system.py",
        "bridge/openai_core_service.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "consciousness/systems/engine_complete.py",
        "identity/core/auth/biometric_integration.py",
        "dashboard/core/dynamic_tab_system.py",
        "memory/privacy_preserving_memory_vault.py",
        "memory/persistence/orthogonal_persistence.py",
        "learning/metalearningenhancementsystem.py",
        "orchestration/specialized/inter_agent_simulation.py",
        "features/docututor/plugin.py",
        "core/energy_consumption_analysis.py",
        "ethics/batch_guard.py",
        "core/mailbox.py",
        "core/image_processing_pipeline.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "memory/systems/dream_integrator.py",
        "identity/backend/verifold/identity/ethics_verifier.py",
        "core/neural_architectures/neural_integrator.py",
        "features/decision/bridge.py",
        "ethics/ethical_reasoning_system.py",
        "consciousness/systems/mapper.py",
        "learning/meta_learning_adapter.py",
        "orchestration/brain/governance/dao_governance_node.py",
        "bridge/explainability_interface_layer.py",
        "learning/plugin_learning_engine.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "quantum/web_integration.py",
        "features/memory/hooks/registry.py",
        "reasoning/reasoning_colony.py",
        "identity/auth/qrg_generators.py",
        "orchestration/core_modules/master_orchestrator.py",
        "core/task_manager.py",
        "bridge/shared_state.py",
        "quantum/abas_quantum_specialist.py",
        "identity/backend/verifold/security/glyph_mutation_simulator.py",
        "bio/systems/orchestration/base_orchestrator.py",
        "features/drift/unified_drift_system.py",
        "orchestration/core_modules/signals.py",
        "memory/systems/distributed_memory_fold.py",
        "orchestration/interfaces/agent_interface.py",
        "memory/tools/lambda_archive_inspector.py",
        "quantum/healix_mapper.py",
        "core/meta_learning/rate_modulator.py",
        "core/verifold/verifold_unified.py"
      ],
      "count": 361
    },
    {
      "module": "structlog",
      "used_in": [
        "memory/neocortical/semantic_extractor.py",
        "memory/systems/bio_symbolic_memory.py",
        "learning/adaptive_meta_learning.py",
        "reasoning/response_reasoning_delta_event.py",
        "core/interfaces/logic/agent_logic_architecture.py",
        "memory/systems/memoria_system.py",
        "features/integration/__init__.py",
        "core/ethics/__init__.py",
        "memory/governance/ethical_drift_governor.py",
        "tests/memory/test_fold_engine_integration.py",
        "voice/context_aware_voice_modular.py",
        "memory/neocortical/concept_hierarchy.py",
        "features/integration/safety/__init__.py",
        "orchestration/brain/integrity_probe.py",
        "emotion/dreamseed_upgrade.py",
        "core/interfaces/ui/adaptive/__init__.py",
        "emotion/tools/emotional_echo_detector.py",
        "identity/core/user_tier_mapping.py",
        "memory/systems/healix_memory_core.py",
        "memory/visualizer.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "reasoning/abstract_reasoning_demo.original.py",
        "learning/federated_learning_system.py",
        "learning/meta_learning_recovery.py",
        "core/interfaces/ui/components/__init__.py",
        "core/interfaces/logic/consent_manager.py",
        "core/interfaces/tools/research/__init__.py",
        "memory/systems/memoria/__init__.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "reasoning/response_reasoning_summary_delta_event.py",
        "features/integration/system_bridge.py",
        "memory/adapters/colony_memory_adapter.py",
        "features/memory/fold_lineage_tracker.py",
        "core/interfaces/custom_llm.py",
        "reasoning/analysis/__init__.py",
        "orchestration/monitoring/reflection_layer.py",
        "orchestration/monitoring/__init__.py",
        "trace/symbolic_drift_tracker.py",
        "ethics/intrinsic_governor.py",
        "memory/systems/memoria/dream_cron.py",
        "memory/tools/memory_drift_auditor.py",
        "reasoning/LBot_reasoning_processed.py",
        "features/integration/layer.py",
        "memory/base_manager.py",
        "core/interfaces/voice/__init__.py",
        "core/api_controllers.py",
        "reasoning/conflict_resolver.py",
        "memory/systems/memory_introspection_engine.py",
        "core/identity_aware_base.py",
        "memory/systems/in_memory_cache_storage_wrapper.py",
        "memory/systems/lukhas_memory_recall.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "voice/validator.py",
        "features/integration/executive_decision_integrator.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "learning/system.py",
        "core/interfaces/voice/core/__init__.py",
        "reasoning/systems/id_reasoning_engine.py",
        "features/symbolic/drift/trace_drift_tracker.py",
        "reasoning/response_reasoning_item.py",
        "voice/audio_engine.py",
        "quantum/bio_crista_optimizer_adapter.py",
        "quantum/certificate_manager.py",
        "reasoning/__init__.py",
        "core/interfaces/lukhas_as_agent/auth/__init__.py",
        "features/crista_optimizer/symbolic_network.py",
        "core/interfaces/lukhas_as_agent/widgets/__init__.py",
        "bridge/message_bus.py",
        "features/symbolic/collapse/engine.py",
        "interfaces/api/v1/rest/middleware.py",
        "memory/core/interfaces/semantic_interface.py",
        "memory/systems/in_memory_span_exporter.py",
        "memory/integration_test.py",
        "voice/recognition.py",
        "examples/unit_tests/test_meta_learning.py",
        "memory/systems/memory_orchestrator.py",
        "memory/colonies/episodic_memory_colony.py",
        "memory/systems/learn_to_learn.py",
        "memory/systems/integration_adapters.py",
        "memory/replay/replay_buffer.py",
        "consciousness/reflection/lambda_mirror.py",
        "features/integration/governance/policy_board.py",
        "bridge/__init__.py",
        "learning/usage_learning.py",
        "narrative/symbolic_weaver.py",
        "reasoning/reasoning_effort.py",
        "reasoning/response_reasoning_summary_part_added_event.py",
        "consciousness/service.py",
        "features/integration/neuro_symbolic_fusion_layer.py",
        "core/monitoring/collapse_tracker.py",
        "core/interfaces/tools/cli/__init__.py",
        "memory/emotional.py",
        "orchestration/immune/system_watchdog.py",
        "memory/systems/memory_advanced_manager.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "orchestration/brain/collapse_chain_simulator.py",
        "memory/systems/foldin.py",
        "memory/colonies/base_memory_colony.py",
        "memory/systems/hybrid_memory_fold.py",
        "memory/systems/agent_memory.py",
        "features/integration/safety/coordinator.py",
        "orchestration/brain/drift_pattern_analyzer.py",
        "simulation/agents_of_failure.py",
        "symbolic/drift/symbolic_drift_tracker_trace.py",
        "memory/core/colony_memory_validator.py",
        "core/automatic_testing_system.py",
        "foundry/lambda_mirror.py",
        "core/fallback_services.py",
        "memory/systems/memoria/gpt_reflection.py",
        "features/integration/dynamic_modality_broker.py",
        "core/symbolic_bridge/token_map.py",
        "memory/systems/memory_encryptor.py",
        "features/symbolic/collapse/reasoner.py",
        "features/integration/bio_awareness/__init__.py",
        "tools/dev/patch_utils.py",
        "creativity/creative_market.py",
        "core/interfaces/nias/__init__.py",
        "reasoning/reasoning_engine.py",
        "symbolic/neural/neuro_symbolic_fusion_layer.py",
        "memory/systems/causal_memory_chains.py",
        "orchestration/brain/brain_collapse_manager.py",
        "reasoning/collapse_reasoner.py",
        "memory/loop_monitor.py",
        "ethics/meta_ethics_governor.py",
        "docs/documentation_updater.py",
        "examples/integration/integrated_abot_demo.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "memory/proteome/symbolic_proteome.py",
        "features/config/__init__.py",
        "foundry/symbolic_foundry.py",
        "memory/quantum_manager.py",
        "quantum/bio_multi_orchestrator.py",
        "reasoning/analysis/engine.py",
        "reasoning/traceback_orchestrator.py",
        "memory/systems/colony_swarm_integration.py",
        "memory/systems/dream_trace_linker.py",
        "features/integration/meta_cognitive/__init__.py",
        "memory/systems/memory_safety_features.py",
        "core/interfaces/logic/context/context_builder.py",
        "reasoning/response_reasoning_summary_text_done_event.py",
        "memory/manager.py",
        "memory/systems/lazy_loading_embeddings.py",
        "orchestration/monitoring/sub_agents/ethics_guardian.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "core/interfaces/lukhas_as_agent/utils/constants.py",
        "memory/systems/memoria/dreams.py",
        "features/crista_optimizer/__init__.py",
        "features/api/__init__.py",
        "core/autotest_validation.py",
        "memory/systems/multimodal_memory_support.py",
        "core/interfaces/voice/voice_emotional/__init__.py",
        "core/personality/creative_expressions.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "core/monitoring/collapse_integration.py",
        "reasoning/systems/__init__.py",
        "features/integration/safety/emergency_override.py",
        "trace/restabilization_index.py",
        "core/ai/integration_manager.py",
        "memory/systems/memoria/replayer.py",
        "memory/systems/fold_lineage_tracker.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "core/interfaces/lukhas_as_agent/core/generate_image.py",
        "memory/repair/advanced_trauma_repair.py",
        "examples/integration/demo_ai_integration.py",
        "core/meta_learning/remediator_agent.py",
        "core/symbolic_bridge/integrator.py",
        "memory/compression/symbolic_delta.py",
        "memory/core/interfaces/episodic_interface.py",
        "core/monitoring_observability.py",
        "memory/systems/symbolic_delta_compression.py",
        "memory/systems/module_integrations.py",
        "core/interfaces/logic/voice/__init__.py",
        "memory/core/interfaces/memory_interface.py",
        "memory/core/unified_memory_orchestrator.py",
        "memory/systems/symbolic_drift_tracker.py",
        "core/interfaces/lukhas_as_agent/agent_logic/__init__.py",
        "examples/orchestration/demo_guardian_system.py",
        "learning/meta_learning.py",
        "core/monitoring/drift_monitor.py",
        "ethics/self_reflective_debugger.py",
        "ethics/simulations/lambda_shield_tester.py",
        "memory/systems/in_memory_log_exporter.py",
        "features/symbolic/security/glyph_redactor_engine.py",
        "learning/exponential_learning.py",
        "trace/drift_tools.py",
        "reasoning/response_reasoning_item_param.py",
        "core/integrator.py",
        "core/personality/personality.py",
        "orchestration/brain/collapse_bridge.py",
        "features/config/config.py",
        "features/memory/fold_engine.py",
        "orchestration/integration_engine.py",
        "memory/systems/helix_mapper.py",
        "memory/systems/attention_memory_layer.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "quantum/quantum_bio_coordinator.py",
        "features/integration/connectivity_engine.py",
        "core/interfaces/logic/delegate_logic.py",
        "creativity/affect_stagnation_detector.py",
        "core/interfaces/logic/context/__init__.py",
        "reasoning/response_reasoning_summary_done_event.py",
        "consciousness/systems/lambda_mirror.py",
        "examples/orchestration/demo_complete_guardian.py",
        "memory/systems/episodic_replay_buffer.py",
        "memory/systems/memory_recall.py",
        "reasoning/symbolic_logic_engine.py",
        "voice/speech_engine.py",
        "quantum/bio_components.py",
        "quantum/bio_optimization_adapter.py",
        "trace/drift_dashboard.py",
        "memory/systems/identity_lineage_bridge.py",
        "quantum/bio.py",
        "memory/__init__.py",
        "memory/systems/hierarchical_data_store.py",
        "reasoning/causal_reasoning.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "reasoning/response_reasoning_done_event.py",
        "quantum/awareness_system.py",
        "creativity/creative_engine.py",
        "orchestration/monitoring/remediator_agent.py",
        "emotion/dreamseed_unified.py",
        "orchestration/monitoring/sub_agents/__init__.py",
        "core/interfaces/logic/__init__.py",
        "memory/hippocampal/pattern_separator.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "core/quorum_override.py",
        "memory/systems/neurosymbolic_integration.py",
        "voice/audio_processor.py",
        "memory/consolidation/ripple_generator.py",
        "reasoning/symbolic_reasoning.py",
        "core/interfaces/lukhas_as_agent/news_and_social/__init__.py",
        "memory/systems/meta_learning_patterns.py",
        "quantum/bio_test_oracle.py",
        "orchestration/apis/drift_monitoring_api.py",
        "features/symbolic/collapse/bridge.py",
        "core/interfaces/lukhas_as_agent/core/__init__.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "memory/systems/foldout.py",
        "core/interfaces/tools/security/__init__.py",
        "memory/systems/core.py",
        "bridge/integration_bridge.py",
        "features/crista_optimizer/crista_optimizer.py",
        "core/identity_integration.py",
        "memory/systems/tier_system.py",
        "learning/service.py",
        "orchestration/monitoring/sub_agents/memory_cleaner.py",
        "core/interfaces/ui/__init__.py",
        "memory/dashboard.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "memory/repair/helix_repair_module.py",
        "reasoning/chat_completion_reasoning_effort.py",
        "memory/systems/lukhas_memory_encryptor.py",
        "core/interfaces/lukhas_as_agent/streamlit/__init__.py",
        "core/tier_unification_adapter.py",
        "ethics/oscillating_conscience.py",
        "memory/systems/causal_identity_tracker.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "memory/systems/adaptive_memory_engine.py",
        "memory/systems/integration_example.py",
        "orchestration/brain/collapse_chain_integrity.py",
        "memory/systems/memoria.py",
        "features/api/dream_api.py",
        "reasoning/id_reasoning_engine.py",
        "features/integration/meta_cognitive/meta_cognitive.py",
        "memory/resonance/resonant_memory_access.py",
        "reasoning/response_reasoning_summary_text_delta_event.py",
        "memory/systems/exponential_learning.py",
        "examples/quantum/bio_quantum_radar_comprehensive_demo.py",
        "features/crista_optimizer/topology_manager.py",
        "orchestration/core_modules/signal_middleware.py",
        "core/interfaces/ui/config/__init__.py",
        "orchestration/apis/code_process_integration_api.py",
        "reasoning/ethical_reasoning_system.py",
        "reasoning/response_reasoning_summary_part_done_event.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "ethics/governor/lambda_governor.py",
        "memory/hippocampal/theta_oscillator.py",
        "memory/systems/chatgpt_memory_integrator_legacy.py",
        "bio/symbolic/quantum_coherence_enhancer.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "core/helpers/__init__.py",
        "features/integration/bio_awareness/awareness.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "quantum/api_manager.py",
        "tests/test_reflection_standalone.py",
        "memory/structural_conscience.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "memory/privacy_preserving_memory_vault.py",
        "memory/persistence/orthogonal_persistence.py",
        "features/entropy/radar.py",
        "memory/systems/helix_dna.py",
        "examples/tests/bio_quantum_radar_integration_test.py",
        "creativity/dream_systems/dream_convergence_tester.py",
        "core/decorators.py",
        "core/interfaces/lukhas_as_agent/utils/__init__.py",
        "learning/_dict_learning.py",
        "features/decision/bridge.py",
        "examples/orchestration/demo_reflection_layer.py",
        "features/diagnostic_engine/__init__.py",
        "ethics/ethical_reasoning_system.py",
        "learning/meta_learning_adapter.py",
        "core/utils/__init__.py",
        "bridge/explainability_interface_layer.py",
        "learning/plugin_learning_engine.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "features/diagnostic_engine/diagnostic_payloads.py",
        "security/hardware_root.py",
        "memory/memoria.py",
        "creativity/quantum_creative_types.py",
        "creativity/dream_systems/dream_loop_generator.py",
        "core/interfaces/tools/dao/__init__.py",
        "memory/systems/dream_memory_manager.py",
        "bridge/shared_state.py",
        "core/quantized_cycle_manager.py",
        "learning/__init__.py",
        "memory/systems/memoria/reflector.py",
        "orchestration/brain/entropy_probe.py",
        "features/drift/unified_drift_system.py",
        "memory/dreamseed_example.py",
        "examples/reasoning/abstract_reasoning_demo.py",
        "memory/systems/distributed_memory_fold.py",
        "memory/tools/lambda_archive_inspector.py",
        "features/config/read_settings.py",
        "core/verifold/verifold_unified.py",
        "features/integration/governance/__init__.py",
        "examples/integration/test_integration_communication.py"
      ],
      "count": 328
    },
    {
      "module": "hashlib",
      "used_in": [
        "quantum/safe_blockchain.py",
        "features/symbolic/glyphs/glyph.py",
        "orchestration/migrated/memory_integration_orchestrator.py",
        "memory/systems/causal_identity_tracker.py",
        "memory/systems/memory_helix_golden.py",
        "identity/core/onboarding/onboarding.py",
        "examples/consciousness/quantum_creative_consciousness_demo.py",
        "orchestration/brain/eu_awareness_engine.py",
        "memory/core/unified_memory_orchestrator.py",
        "core/colonies/memory_colony_enhanced.py",
        "benchmarks/bridge_system_benchmark.py",
        "core/efficient_communication.py",
        "orchestration/brain/consciousness/memory_identity.py",
        "memory/governance/ethical_drift_governor.py",
        "ethics/self_reflective_debugger.py",
        "tests/test_memory_fold_simple.py",
        "reasoning/id_reasoning_engine.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "orchestration/brain/collapse_chain_simulator.py",
        "voice/context_aware_voice_modular.py",
        "learning/meta_learning/federated_integration.py",
        "memory/systems/distributed_memory.py",
        "examples/identity/qrg_standalone_demo.py",
        "orchestration/brain/visualization/memory_helix_visualizer.py",
        "memory/systems/hybrid_memory_fold.py",
        "emotion/dreamseed_upgrade.py",
        "memory/drift_memory_manager.py",
        "identity/qrg_100_percent_coverage.py",
        "ethics/ethical_drift_detector.py",
        "memory/systems/memory_identity.py",
        "core/output/message_hub.py",
        "memory/systems/trace_injector.py",
        "orchestration/brain/symbol_validator.py",
        "benchmarks/symbolic_system_benchmark.py",
        "identity/qrg_test_suite.py",
        "orchestration/brain/neural/cognitive_core.py",
        "memory/core/colony_memory_validator.py",
        "orchestration/apis/code_process_integration_api.py",
        "core/automatic_testing_system.py",
        "features/memory/integration_orchestrator.py",
        "core/identity/manager.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "identity/security/symbolic_vault.py",
        "tests/memory/test_identity_lineage_validation.py",
        "features/memory/memory_fold.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "core/p2p_communication.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "foundry/lambda_mirror.py",
        "identity/core/user_tier_mapping.py",
        "memory/systems/memory_media_file_storage.py",
        "memory/systems/healix_memory_core.py",
        "identity/core/id_service/portability_system.py",
        "identity/core/sent/consent_history.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "symbolic/symbolic_glyph_hash.py",
        "memory/systems/memory_fold_system.py",
        "tagging/tagging_system.py",
        "symbolic/bio/glyph_id_hash.py",
        "core/quantum_identity_manager.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "features/memory/fold_engine.py",
        "tests/test_memory_comprehensive.py",
        "identity/core/qrg/qrg_manager.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "orchestration/brain/dna/dna_link.py",
        "identity/backend/verifold/qr_encoder.py",
        "memory/systems/memory_collapse_verifier.py",
        "quantum/quantum_bio_coordinator.py",
        "features/symbolic/collapse/trace.py",
        "consciousness/awareness/bio_symbolic_awareness_adapter.py",
        "identity/backend/verifold/verifold_chain.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "identity/core/id_service/lambd_id_validator.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "identity/backend/seedra/seedra_core.py",
        "memory/systems/causal_memory_chains.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "consciousness/systems/quantum_creative_consciousness.py",
        "features/memory/fold_lineage_tracker.py",
        "core/event_replay_snapshot.py",
        "identity/enterprise/auth.py",
        "identity/backend/verifold/entropy_fusion.py",
        "benchmarks/learning_system_benchmark.py",
        "memory/distributed_state_manager.py",
        "memory/glyph_memory_integration.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "orchestration/config/orchestrator_flags.py",
        "symbolic/bio/mito_quantum_attention.py",
        "orchestration/brain/privacy_manager.py",
        "quantum/api_manager.py",
        "identity/backend/verifold/hardware_entropy_seed.py",
        "memory/structural_conscience.py",
        "ethics/compliance_engine.py",
        "memory/systems/memory_seeder.py",
        "consciousness/systems/lambda_mirror.py",
        "orchestration/monitoring/reflection_layer.py",
        "ethics/ethical_auditor.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "bridge/openai_core_service.py",
        "docs/documentation_updater.py",
        "memory/tools/memory_drift_auditor.py",
        "features/docututor/memory_evolution/voice_synthesis.py",
        "trace/vdf.py",
        "bridge/connectors/blockchain_bridge.py",
        "identity/core/commercial/commercial_module.py",
        "identity/backend/verifold/verifold_hash_pq.py",
        "orchestration/brain/spine/hash.py",
        "memory/proteome/symbolic_proteome.py",
        "quantum/bio_components.py",
        "consciousness/systems/engine_complete.py",
        "identity/backend/verifold/cryptography/zk_narrative_proof_adapter.py",
        "foundry/symbolic_foundry.py",
        "identity/core/auth/biometric_integration.py",
        "examples/unit_tests/test_quantum_creative_engine.py",
        "identity/auth_backend/qr_entropy_generator.py",
        "memory/systems/memory_utils.py",
        "memory/privacy_preserving_memory_vault.py",
        "identity/auth/entropy_synchronizer.py",
        "quantum/bio_multi_orchestrator.py",
        "quantum/bio_optimization_adapter.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "core/id.py",
        "creativity/creative_q_expression.py",
        "consciousness/systems/engine_codex.py",
        "core/practical_optimizations.py",
        "features/docututor/memory_evolution/version_control.py",
        "reasoning/traceback_orchestrator.py",
        "quantum/vault_manager.py",
        "quantum/privacy/zero_knowledge_system.py",
        "memory/systems/dream_trace_linker.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "learning/meta_learning/symbolic_feedback.py",
        "memory/systems/memory_safety_features.py",
        "memory/systems/identity_lineage_bridge.py",
        "consciousness/systems/engine.py",
        "identity/core/lambd_id_service.py",
        "quantum/oscillator.py",
        "memory/systems/hierarchical_data_store.py",
        "memory/systems/helix_dna.py",
        "quantum/ethics_engine.py",
        "identity/backend/verifold/yubi_seeder.py",
        "orchestration/core_modules/controller.py",
        "memory/systems/lazy_loading_embeddings.py",
        "identity/backend/verifold/web_qr_verifier.py",
        "orchestration/security/dast/engine.py",
        "benchmarks/security_system_benchmark.py",
        "core/image_processing_pipeline.py",
        "reasoning/systems/id_reasoning_engine.py",
        "benchmarks/dashboard_system_benchmark.py",
        "identity/backend/verifold/ai/narrative_alignment_checker.py",
        "orchestration/brain/awareness_engine.py",
        "identity/auth_backend/trust_scorer.py",
        "memory/systems/resonance_memory_retrieval.py",
        "orchestration/brain/main_bot.py",
        "identity/backend/verifold/compliance/symbolic_audit_mode.py",
        "identity/wearables_integration/entropy_beacon.py",
        "memory/systems/memory_lock.py",
        "bio/symbolic/glyph_id_hash.py",
        "creativity/creative_engine.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "emotion/dreamseed_unified.py",
        "quantum/metadata.py",
        "quantum/\u039bBot_quantum_security.py",
        "memory/hippocampal/pattern_separator.py",
        "identity/core/sing/sso_engine.py",
        "identity/backend/verifold/verifold_hash_utils.py",
        "identity/backend/app/crypto.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "features/symbolic/glyphs/glyph_engine.py",
        "quantum/web_integration.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "memory/systems/neurosymbolic_integration.py",
        "identity/core/id_service/lambd_id_generator.py",
        "memory/systems/multimodal_memory_support.py",
        "identity/core/trace/activity_logger.py",
        "quantum/certificate_manager.py",
        "core/colonies/ethics_swarm_colony.py",
        "identity/lukhus_deployment_package.py",
        "features/symbolic/glyphs/symbolic_foundry.py",
        "memory/systems/meta_learning_patterns.py",
        "quantum/bio_test_oracle.py",
        "identity/auth/qrg_generators.py",
        "symbolic/glyph_engine.py",
        "identity/tools/onboarding_cli.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "quantum/neuro_symbolic_engine.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "orchestration/apis/drift_monitoring_api.py",
        "identity/tests/test_comprehensive.py",
        "memory/systems/trauma_lock.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "ethics/export_report.py",
        "memory/systems/glyph_memory_bridge.py",
        "identity/backend/seedra/biometric_engine.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "orchestration/brain/research_awareness_engine.py",
        "identity/lukhus_ultimate_test_suite.py",
        "core/interfaces/voice/voice_emotional/context_aware_modular_voice.py",
        "identity/backend/verifold/ledger_auditor.py",
        "features/symbolic/collapse/engine.py",
        "quantum/creative_engine.py",
        "features/common/symbolic.py",
        "memory/integrity/collapse_hash.py",
        "memory/systems/fold_lineage_tracker.py",
        "orchestration/brain/cognitive_core.py",
        "quantum/abas_quantum_specialist.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "memory/systems/memory_orchestrator.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "orchestration/security/dast/processors.py",
        "orchestration/brain/australian_awareness_engine.py",
        "orchestration/brain/spine/accent_adapter.py",
        "tests/hold/test_security_fixes_verification.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "memory/systems/core.py",
        "memory/systems/tier_system.py",
        "features/drift/unified_drift_system.py",
        "consciousness/reflection/lambda_mirror.py",
        "bio/oscillator.py",
        "tests/core/symbolic/test_glyphs.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "core/meta_learning/remediator_agent.py",
        "identity/auth_backend/authentication_server.py",
        "identity/backend/verifold/verifold_replay_engine.py",
        "orchestration/brain/output/message_hub.py",
        "dashboard/core/test_scheduler.py",
        "memory/systems/distributed_memory_fold.py",
        "consciousness/systems/engine_alt.py",
        "identity/backend/app/encryption_core.py",
        "quantum/healix_mapper.py",
        "bio/symbolic/mito_quantum_attention.py",
        "memory/compression/symbolic_delta.py",
        "core/integrated_safety_system.py",
        "core/monitoring_observability.py",
        "memory/systems/memory_node.py",
        "core/verifold/verifold_unified.py",
        "identity/auth_backend/pqc_crypto_engine.py",
        "memory/systems/symbolic_delta_compression.py",
        "ethics/decision_node.py",
        "memory/systems/memory_learning/memory_manager.py",
        "narrative/symbolic_weaver.py",
        "examples/identity/qrg_demo.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "interfaces/protocols/awareness_protocol.py",
        "identity/qrg_integration.py",
        "orchestration/brain/uk_awareness_engine.py"
      ],
      "count": 252
    },
    {
      "module": "uuid",
      "used_in": [
        "core/module_registry.py",
        "features/symbolic/glyphs/glyph.py",
        "orchestration/migrated/memory_integration_orchestrator.py",
        "examples/creativity/dream_interpreter_demo.py",
        "core/monitoring/collapse_tracker.py",
        "memory/core/interfaces/memory_interface.py",
        "features/symbolic/tracer.py",
        "orchestration/brain/eu_awareness_engine.py",
        "core/observability_steering.py",
        "memory/systems/memoria_system.py",
        "creativity/emotion/voice_profiling_emotion_engine.py",
        "memory/systems/memory_advanced_manager.py",
        "core/efficient_communication.py",
        "benchmarks/bridge_system_benchmark.py",
        "orchestration/brain/consciousness/memory_identity.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "consciousness/systems/integrator.py",
        "ethics/self_reflective_debugger.py",
        "reasoning/id_reasoning_engine.py",
        "core/colonies/reasoning_colony.py",
        "memory/basic.py",
        "memory/resonance/resonant_memory_access.py",
        "orchestration/brain/core_system.py",
        "memory/colonies/base_memory_colony.py",
        "ethics/simulations/lambda_shield_tester.py",
        "memory/systems/memory_identity.py",
        "identity/backend/dream_engine/assistant.py",
        "benchmarks/symbolic_system_benchmark.py",
        "features/integration/neural_symbolic_bridge.py",
        "tests/test_replay_system.py",
        "orchestration/brain/eu_ai_transparency.py",
        "orchestration/brain/neural/cognitive_core.py",
        "memory/core/colony_memory_validator.py",
        "orchestration/apis/code_process_integration_api.py",
        "features/memory/integration_orchestrator.py",
        "quantum/\u039bBot_quantum_security.py",
        "core/identity/manager.py",
        "core/integrator.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "core/p2p_communication.py",
        "identity/mobile/qr_code_animator.py",
        "features/integration/dynamic_modality_broker.py",
        "memory/systems/memory_encryptor.py",
        "memory/systems/memory_fold_system.py",
        "reasoning/ethical_reasoning_system.py",
        "memory/systems/simple_store.py",
        "features/symbolic/collapse/reasoner.py",
        "voice/integrations/elevenlabs/elevenlabs_client.py",
        "orchestration/master_orchestrator.py",
        "features/memory/fold_engine.py",
        "core/event_bus.py",
        "features/memory/hooks/base.py",
        "memory/systems/helix_mapper.py",
        "ethics/governor/lambda_governor.py",
        "symbolic/neural/neural_symbolic_bridge.py",
        "core/interfaces/lukhas_as_agent/widgets/travel_widget.py",
        "core/event_sourcing.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "core/agent_coordination.py",
        "orchestration/brain/identity_manager.py",
        "orchestration/brain/core/types.py",
        "voice/symbolic_voice_core.py",
        "dashboard/core/self_healing_manager.py",
        "interfaces/api/v1/rest/routers/process.py",
        "dashboard/core/fallback_system.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "quantum/quantum_bio_coordinator.py",
        "memory/systems/chatgpt_memory_integrator_legacy.py",
        "features/symbolic/collapse/trace.py",
        "examples/integration/simple_integration_test.py",
        "reasoning/reasoning_engine.py",
        "orchestration/colony_orchestrator.py",
        "memory/adapters/colony_memory_adapter.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "tests/test_hybrid_memory.py",
        "orchestration/brain/spine/fold_engine.py",
        "reasoning/collapse_reasoner.py",
        "core/event_replay_snapshot.py",
        "memory/systems/reflection_engine.py",
        "benchmarks/learning_system_benchmark.py",
        "core/distributed_tracing.py",
        "memory/distributed_state_manager.py",
        "ethics/meta_ethics_governor.py",
        "bridge/llm_wrappers/unified_openai_client.py",
        "core/integrated_system.py",
        "ethics/compliance_engine.py",
        "bridge/symbolic_dream_bridge.py",
        "orchestration/brain/trace_memoria_logger.py",
        "voice/voice_profiling.py",
        "reasoning/LBot_reasoning_processed.py",
        "creativity/dream/hyperspace_dream_simulator.py",
        "examples/integration/integrated_abot_demo.py",
        "memory/systems/memory_recall.py",
        "memory/proteome/symbolic_proteome.py",
        "reasoning/symbolic_logic_engine.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "consciousness/cognitive_architecture_controller.py",
        "reasoning/conflict_resolver.py",
        "orchestration/core.py",
        "dashboard/core/dynamic_tab_system.py",
        "creativity/dream/dream_sandbox.py",
        "memory/privacy_preserving_memory_vault.py",
        "dashboard/core/test_management_system.py",
        "memory/persistence/orthogonal_persistence.py",
        "examples/orchestration/demo_orchestration_consolidation.py",
        "memory/systems/lukhas_memory_recall.py",
        "quantum/bio_multi_orchestrator.py",
        "memory/scaffold/atomic_memory_scaffold.py",
        "core/id.py",
        "reasoning/traceback_orchestrator.py",
        "features/integration/executive_decision_integrator.py",
        "core/actor_system.py",
        "memory/systems/memory_helix.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "memory/systems/hierarchical_data_store.py",
        "memory/systems/helix_dna.py",
        "core/mailbox.py",
        "tests/test_lambda_governor.py",
        "dashboard/core/universal_adaptive_dashboard.py",
        "orchestration/core_modules/controller.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "tests/test_dream_system_integration.py",
        "benchmarks/security_system_benchmark.py",
        "memory/systems/replay_system.py",
        "core/image_processing_pipeline.py",
        "reasoning/systems/id_reasoning_engine.py",
        "benchmarks/dashboard_system_benchmark.py",
        "identity/backend/app/session_manager.py",
        "core/tiered_state_management.py",
        "orchestration/brain/awareness_engine.py",
        "orchestration/brain/main_bot.py",
        "features/symbolic/memoria/symbolic_trace_map.py",
        "identity/backend/verifold/compliance/symbolic_audit_mode.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "quantum/metadata.py",
        "orchestration/monitoring/remediator_agent.py",
        "reasoning/\u039bBot_reasoning.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "memory/systems/dream_integrator.py",
        "core/neural_architectures/neural_integrator.py",
        "features/decision/bridge.py",
        "ethics/ethical_reasoning_system.py",
        "orchestration/brain/governance/dao_governance_node.py",
        "core/utils/__init__.py",
        "memory/systems/memoria/dreams.py",
        "bridge/explainability_interface_layer.py",
        "dashboard/core/dashboard_colony_agent.py",
        "dashboard/core/test_execution_engine.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "tests/test_event_replayer.py",
        "core/interfaces/lukhas_as_agent/news_and_social/s_dispatcher.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "memory/consolidation/ripple_generator.py",
        "quantum/certificate_manager.py",
        "core/colonies/base_colony.py",
        "core/colonies/ethics_swarm_colony.py",
        "orchestration/brain/meta/compliance_engine_20250503213400.py",
        "orchestration/brain/rem/lidar_emotion_interpreter.py",
        "benchmarks/api_system_benchmark.py",
        "features/symbolic/glyphs/symbolic_foundry.py",
        "reasoning/reasoning_colony.py",
        "memory/systems/collapse_trace.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "dashboard/api/websocket_server.py",
        "voice/interface.py",
        "core/interfaces/lukhas_as_agent/widgets/delivery_tracker_widget.py",
        "orchestration/apis/drift_monitoring_api.py",
        "core/router/llm_multiverse_router.py",
        "quantum/neuro_symbolic_engine.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "orchestration/brain/research_awareness_engine.py",
        "orchestration/core_modules/master_orchestrator.py",
        "features/integration/system_coordinator.py",
        "tests/test_reflection_engine.py",
        "core/task_manager.py",
        "core/infrastructure/node_registry.py",
        "bridge/message_bus.py",
        "bridge/shared_state.py",
        "features/symbolic/collapse/engine.py",
        "orchestration/swarm_orchestration_adapter.py",
        "memory/systems/memoria/replayer.py",
        "trace/restabilization_index.py",
        "core/ai/integration_manager.py",
        "memory/integrity/collapse_hash.py",
        "memory/neocortical/neocortical_network.py",
        "tests/core/memory/hooks/test_hooks.py",
        "voice/integrations/openai/dalle_client.py",
        "orchestration/brain/cognitive_core.py",
        "quantum/abas_quantum_specialist.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "memory/systems/memory_orchestrator.py",
        "orchestration/brain/australian_awareness_engine.py",
        "ethics/compliance/engine.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "memory/colonies/episodic_memory_colony.py",
        "creativity/dream/engine/dream_engine.py",
        "memory/systems/core.py",
        "consciousness/brain_integration_20250620_013824.py",
        "orchestration/brain/das_awareness_engine.py",
        "ethics/governor/dao_controller.py",
        "memory/replay/replay_buffer.py",
        "memory/repair/advanced_trauma_repair.py",
        "tests/test_dream_integration.py",
        "dashboard/core/test_performance_monitor.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "emotion/symbolic_user_intent.py",
        "examples/integration/demo_ai_integration.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "identity/auth_backend/authentication_server.py",
        "dashboard/core/test_scheduler.py",
        "orchestration/interfaces/agent_interface.py",
        "memory/systems/lukhas_memory_encryptor.py",
        "features/data_manager/crud_operations.py",
        "orchestration/brain/orchestrator.py",
        "core/monitoring_observability.py",
        "memory/systems/memory_node.py",
        "ethics/decision_node.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "orchestration/brain/orchestration/core.py",
        "memory/systems/memory_learning/memory_manager.py",
        "orchestration/brain/brain_integration.py",
        "orchestration/interfaces/orchestration_protocol.py",
        "orchestration/brain/adaptive_image_generator.py",
        "ethics/compliance_engine20250503213400_p95.py",
        "orchestration/brain/rem/generate_dream.py",
        "orchestration/brain/integration/brain_integration.py",
        "orchestration/brain/uk_awareness_engine.py",
        "orchestration/brain/rem/generate_dream_data.py"
      ],
      "count": 230
    },
    {
      "module": "collections",
      "used_in": [
        "memory/systems/causal_identity_tracker.py",
        "memory/neocortical/semantic_extractor.py",
        "core/monitoring/collapse_tracker.py",
        "memory/systems/memory_helix_golden.py",
        "tools/interactive_test_suite.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "bio/symbolic/contextual_mapping_colony.py",
        "core/observability_steering.py",
        "memory/emotional.py",
        "memory/core/unified_memory_orchestrator.py",
        "core/colonies/memory_colony_enhanced.py",
        "core/efficient_communication.py",
        "learning/meta_learning.py",
        "features/docututor/memory_evolution/document_analyzer.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "core/monitoring/drift_monitor.py",
        "tests/test_memory_fold_simple.py",
        "memory/systems/pin_memory.py",
        "ethics/self_reflective_debugger.py",
        "ethics/sentinel/ethical_drift_sentinel.py",
        "memory/resonance/resonant_memory_access.py",
        "memory/neocortical/concept_hierarchy.py",
        "orchestration/brain/spine/emotion_trend_tracker.py",
        "core/symbolic_arbitration.py",
        "memory/colonies/base_memory_colony.py",
        "memory/systems/hybrid_memory_fold.py",
        "features/crista_optimizer/topology_manager.py",
        "consciousness/systems/engine_poetic.py",
        "creativity/dream/engine/dream_engine_merged.py",
        "memory/systems/memory_drift_mirror.py",
        "orchestration/brain/monitoring/performance.py",
        "tools/digest_extractor.py",
        "memory/core/colony_memory_validator.py",
        "orchestration/apis/code_process_integration_api.py",
        "core/automatic_testing_system.py",
        "core/integrator.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "core/personality/personality.py",
        "identity/core/id_service/entropy_engine.py",
        "tools/import_path_fixer.py",
        "core/p2p_communication.py",
        "features/memory/memory_fold.py",
        "foundry/lambda_mirror.py",
        "memory/systems/memory_profiler.py",
        "emotion/tools/emotional_echo_detector.py",
        "ethics/safety/compliance_digest.py",
        "core/resource_optimization_integration.py",
        "features/docututor/memory_evolution/usage_learning.py",
        "memory/systems/memory_fold_system.py",
        "tools/prediction/prophet_predictor.py",
        "memory/tools/lambda_vault_scan.py",
        "memory/systems/simple_store.py",
        "creativity/dream/dream_stats.py",
        "learning/federated_learning_system.py",
        "reasoning/ethical_reasoning_system.py",
        "core/quantum_identity_manager.py",
        "core/quantized_thought_cycles.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "features/memory/fold_engine.py",
        "orchestration/master_orchestrator.py",
        "core/event_bus.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "foundry/lambda_sage.py",
        "ethics/governor/lambda_governor.py",
        "bio/symbolic/bio_symbolic_orchestrator.py",
        "emotion/mood_regulation/mood_entropy_tracker.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "core/agent_coordination.py",
        "ethics/stabilization/tuner.py",
        "orchestration/brain/identity_manager.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "orchestration/brain/rem/dream_stats.py",
        "core/test_image_processing_pipeline.py",
        "consciousness/awareness/bio_symbolic_awareness_adapter.py",
        "core/enhanced_swarm.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "orchestration/brain/visualization/healix_visualizer.py",
        "memory/systems/causal_memory_chains.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "orchestration/colony_orchestrator.py",
        "orchestration/brain/lambda_bot_batch_processor.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "core/swarm_identity_orchestrator.py",
        "memory/adapters/colony_memory_adapter.py",
        "core/colonies/governance_colony_enhanced.py",
        "features/memory/fold_lineage_tracker.py",
        "core/event_replay_snapshot.py",
        "memory/systems/reflection_engine.py",
        "core/distributed_tracing.py",
        "memory/glyph_memory_integration.py",
        "voice/synthesis.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "memory/systems/memory_planning.py",
        "consciousness/cognitive/reflective_introspection.py",
        "consciousness/systems/lambda_mirror.py",
        "identity/utils/symbolic_parser.py",
        "reasoning/oracle_predictor.py",
        "memory/systems/memory_tracker.py",
        "tests/core/symbolic/test_drift.py",
        "memory/systems/episodic_replay_buffer.py",
        "memory/tools/memory_drift_auditor.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "core/interfaces/lukhas_as_agent/streamlit/components/replay_graphs.py",
        "consciousness/systems/engine_complete.py",
        "bio/symbolic/anomaly_filter_colony.py",
        "consciousness/cognitive_architecture_controller.py",
        "foundry/symbolic_foundry.py",
        "core/test_p2p_communication.py",
        "dashboard/core/dynamic_tab_system.py",
        "orchestration/brain/spine/emotion_log_alt.py",
        "creativity/creative_q_expression.py",
        "reasoning/traceback_orchestrator.py",
        "core/practical_optimizations.py",
        "trace/drift_dashboard.py",
        "core/actor_system.py",
        "memory/systems/dream_trace_linker.py",
        "core/energy_consumption_analysis.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "learning/meta_learning/symbolic_feedback.py",
        "consciousness/cognitive/adapter_complete.py",
        "core/observability/collector.py",
        "memory/systems/memory_safety_features.py",
        "orchestration/brain/meta_cognitive/reflective_introspection_system.py",
        "features/entropy/radar.py",
        "memory/systems/hierarchical_data_store.py",
        "core/mailbox.py",
        "bio/symbolic/preprocessing_colony.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "memory/systems/lazy_loading_embeddings.py",
        "identity/auth_utils/replay_protection.py",
        "memory/systems/replay_system.py",
        "creativity/healix_visualizer.py",
        "learning/meta_adaptive/meta_learning.py",
        "core/image_processing_pipeline.py",
        "core/tiered_state_management.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "creativity/creative_engine.py",
        "orchestration/brain/meta/learning/system.py",
        "core/neural_architectures/neural_integrator.py",
        "ethics/ethical_reasoning_system.py",
        "orchestration/brain/symbolic_ai/modules/intent_inference.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "memory/lightweight_concurrency.py",
        "creativity/personality_engine.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "orchestration/brain/prediction/predictive_resource_manager.py",
        "features/memory/hooks/registry.py",
        "memory/systems/neurosymbolic_integration.py",
        "learning/federated_meta_learning.py",
        "features/analytics/clustering/dream_clustering_engine.py",
        "tools/path_validator.py",
        "memory/consolidation/ripple_generator.py",
        "core/colonies/ethics_swarm_colony.py",
        "features/symbolic/glyphs/symbolic_foundry.py",
        "memory/systems/meta_learning_patterns.py",
        "core/api_diff_analyzer.py",
        "orchestration/apis/drift_monitoring_api.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "memory/memory_optimization.py",
        "ethics/sentinel/ethical_sentinel_dashboard.py",
        "memory/systems/glyph_memory_bridge.py",
        "orchestration/brain/research_awareness_engine.py",
        "features/integration/system_coordinator.py",
        "core/interfaces/lukhas_as_agent/sys/nias/replay_visualizer.py",
        "identity/utils/entropy_calculator.py",
        "features/symbolic/collapse/engine.py",
        "bridge/personality_communication_engine.py",
        "orchestration/swarm_orchestration_adapter.py",
        "memory/core/interfaces/semantic_interface.py",
        "memory/neocortical/neocortical_network.py",
        "memory/systems/fold_lineage_tracker.py",
        "memory/systems/memory_orchestrator.py",
        "core/resource_efficiency_analyzer.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "orchestration/security/dast/processors.py",
        "memory/colonies/episodic_memory_colony.py",
        "creativity/dream/engine/dream_engine.py",
        "memory/replay/replay_buffer.py",
        "memory/repair/advanced_trauma_repair.py",
        "dashboard/core/test_performance_monitor.py",
        "bio/symbolic/fallback_systems.py",
        "consciousness/reflection/lambda_mirror.py",
        "orchestration/bio_symbolic_orchestrator.py",
        "core/interfaces/lukhas_as_agent/sys/nias/05_25_dream_clustering_engine.py",
        "memory/dashboard.py",
        "core/interfaces/ui/components/replay_graphs.py",
        "memory/tools/lambda_archive_inspector.py",
        "identity/utils/entropy_helpers.py",
        "learning/usage_learning.py",
        "orchestration/brain/orchestrator.py",
        "memory/compression/symbolic_delta.py",
        "core/integrated_safety_system.py",
        "core/monitoring_observability.py",
        "memory/systems/memory_node.py",
        "memory/systems/symbolic_delta_compression.py",
        "narrative/symbolic_weaver.py",
        "memory/systems/module_integrations.py",
        "bio/symbolic/adaptive_threshold_colony.py",
        "memory/systems/memory_research.py"
      ],
      "count": 201
    },
    {
      "module": "random",
      "used_in": [
        "core/monitoring/collapse_tracker.py",
        "creativity/dream/base/dream_refold/dream_refold.py",
        "memory/systems/memory_helix_golden.py",
        "identity/core/onboarding/onboarding.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "benchmarks/tests/bio_symbolic_coherence_test.py",
        "examples/consciousness/quantum_creative_consciousness_demo.py",
        "tests/memory_stress_tests.py",
        "creativity/emotion/voice_profiling_emotion_engine.py",
        "quantum/quantum_flux.py",
        "identity/public/lambda_id_previewer.py",
        "creativity/service.py",
        "features/api/dream_api.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "tests/test_memory_fold_simple.py",
        "identity/backend/app/id_generator.py",
        "creativity/dream_systems/quantum_dream_adapter.py",
        "examples/orchestration_src/demo_orchestrator.py",
        "examples/identity/qrg_standalone_demo.py",
        "identity/qrg_showcase.py",
        "ethics/simulations/lambda_shield_tester.py",
        "orchestration/brain/symbolic_ai/modules/dream_generator.py",
        "examples/bio_symbolic_comprehensive_test.py",
        "memory/dream_memory_manager.py",
        "orchestration/brain/dream_mutator.py",
        "tests/test_bio_symbolic_integration.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "core/symbolic_drift_analyzer.py",
        "core/circuit_breaker.py",
        "core/p2p_communication.py",
        "symbolic/bio/glyph_id_hash.py",
        "symbolic/swarm_tag_simulation.py",
        "symbolic/vocabularies/dream_vocabulary.py",
        "bio/systems/mitochondria_model.py",
        "core/orchestration/energy_aware_execution_planner.py",
        "tests/test_memory_comprehensive.py",
        "identity/core/qrg/qrg_manager.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "benchmarks/tests/bio_symbolic_coherence_optimization_test.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "core/enhanced_swarm.py",
        "memory/systems/optimized_hybrid_memory_fold.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "creativity/dream_systems/dream_stats.py",
        "consciousness/systems/quantum_creative_consciousness.py",
        "tests/core/symbolic/test_collapse.py",
        "bio/symbolic/bio_symbolic.py",
        "identity/api/onboarding_api.py",
        "examples/bio_symbolic_demo.py",
        "orchestration/config/orchestrator_flags.py",
        "symbolic/bio/mito_quantum_attention.py",
        "tests/test_reflection_standalone.py",
        "ethics/compliance_engine.py",
        "memory/systems/memory_seeder.py",
        "orchestration/monitoring/reflection_layer.py",
        "tests/test_memory_stress_final.py",
        "voice/voice_profiling.py",
        "creativity/dream/dream_engine/oracle_dream.py",
        "bridge/openai_core_service.py",
        "creativity/dream/dream_mutator.py",
        "memory/systems/episodic_replay_buffer.py",
        "tests/fixtures/memory_fixtures.py",
        "creativity/emotional_resonance.py",
        "core/interaction/symptom_reporter.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "creativity/dream_systems/dream_utils.py",
        "memory/proteome/symbolic_proteome.py",
        "orchestration/example_agents.py",
        "foundry/symbolic_foundry.py",
        "creativity/dream/dream_pipeline.py",
        "tests/test_optimized_memory_system.py",
        "quantum/layer.py",
        "quantum/service.py",
        "identity/core/qrs_manager.py",
        "tests/fixtures/symbolic_fixtures.py",
        "bio/eeg_sync_bridge.py",
        "memory/systems/memory_helix.py",
        "examples/bio_symbolic_coherence_optimization_test.py",
        "benchmarks/performance/quantized_cycles_stress_test.py",
        "creativity/legacy_creative_expressions.py",
        "creativity/dream/dream_data_sources.py",
        "quantum/quantum_waveform.py",
        "bio/bio_homeostasis.py",
        "creativity/dream/symbolic/vocabulary.py",
        "creativity/dream/dream_generator.py",
        "identity/wearables_integration/entropy_beacon.py",
        "bio/quantum_layer.py",
        "core/interfaces/lukhas_as_agent/sys/nias/symbolic_reply_generator.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "creativity/systems/voice_personality_creativity_engine.py",
        "bio/symbolic/glyph_id_hash.py",
        "creativity/advanced_haiku_generator.py",
        "tools/prediction/test_prophet.py",
        "memory/systems/dream_integrator.py",
        "orchestration/brain/governance/dao_governance_node.py",
        "tests/test_dream_system_complete.py",
        "consciousness/systems/cognitive_systems/voice_personality.py",
        "tests/test_memory_fold_performance.py",
        "creativity/systems/creative_expressions_creativity_engine.py",
        "benchmarks/tests/biological_memory_validation_test.py",
        "features/symbolic/glyphs/symbolic_foundry.py",
        "core/personality/creative_expressions.py",
        "orchestration/brain/personality/voice_personality.py",
        "identity/auth/qrg_generators.py",
        "identity/backend/verifold/narrative_utils.py",
        "identity/backend/verifold/security/consent_fuzz_tester.py",
        "examples/reasoning/oracle_demo.py",
        "voice/interface.py",
        "orchestration/brain/meta/cognition/reflection_layer.py",
        "core/interfaces/lukhas_as_agent/sys/nias/inject_message_simulator.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "identity/backend/seedra/biometric_engine.py",
        "orchestration/brain/research_awareness_engine.py",
        "identity/lukhus_ultimate_test_suite.py",
        "orchestration/swarm_orchestration_adapter.py",
        "creativity/dream_systems/dream_seed_simple.py",
        "creativity/dream_systems/dream_reflection_loop_simple.py",
        "core/resource_efficiency_analyzer.py",
        "tests/test_glyph_recall_drift_correlation.py",
        "orchestration/brain/spine/accent_adapter.py",
        "identity/backend/verifold/security/glyph_mutation_simulator.py",
        "orchestration/examples/endocrine_module_example.py",
        "creativity/creative_expression_core.py",
        "tools/collapse_simulator.py",
        "memory/repair/advanced_trauma_repair.py",
        "learning/service.py",
        "creativity/dream/core.py",
        "orchestration/monitoring/sub_agents/memory_cleaner.py",
        "tests/advanced_memory_fold_test_suite.py",
        "memory/systems/distributed_memory_fold.py",
        "examples/integration/quantum_identity_integration_test.py",
        "tests/memory_stress_tests_light.py",
        "bio/symbolic/mito_quantum_attention.py",
        "orchestration/brain/orchestrator.py",
        "benchmarks/memory/memory_stress_tests/test_memory_stress_final.py",
        "examples/identity/qrg_demo.py",
        "tests/bio/test_eeg_sync_bridge.py",
        "orchestration/brain/rem/generate_dream.py",
        "orchestration/brain/rem/generate_dream_data.py"
      ],
      "count": 140
    },
    {
      "module": "re",
      "used_in": [
        "memory/neocortical/semantic_extractor.py",
        "examples/creativity/dream_interpreter_demo.py",
        "tools/interactive_test_suite.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "reasoning/intent/intent_detector.py",
        "fix_import_paths.py",
        "tools/task_migration.py",
        "identity/public/lambda_id_previewer.py",
        "memory/governance/ethical_drift_governor.py",
        "core/introspection/introspector.py",
        "features/docututor/memory_evolution/document_analyzer.py",
        "quantum/fix_module_descriptions.py",
        "memory/systems/memory_consolidator.py",
        "tools/task_tracker.py",
        "features/symbolic/security/glyph_redactor_engine.py",
        "tests/emotion/test_emotion_feedback.py",
        "orchestration/brain/symbol_validator.py",
        "tools/digest_extractor.py",
        "tools/dev/add_verbose_core_descriptions.py",
        "quantum/add_module_descriptions.py",
        "tools/fix_headers.py",
        "core/apply_api_fixes.py",
        "orchestration/apis/code_process_integration_api.py",
        "quantum/add_poetic_headers.py",
        "orchestration/brain/consciousness/dream_narrator.py",
        "identity/core/id_service/entropy_engine.py",
        "tools/import_path_fixer.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "emotion/tools/emotional_echo_detector.py",
        "foundry/lambda_mirror.py",
        "memory/tools/lambda_vault_scan.py",
        "identity/auth/cultural_profile_manager.py",
        "tests/test_emotion_recursion.py",
        "foundry/lambda_sage.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py",
        "core/validation_script_fixes.py",
        "core/interfaces/tools/research/research_dashboard.py",
        "identity/backend/seedra/identity_validator.py",
        "tools/fix_remaining_issues.py",
        "identity/core/id_service/lambd_id_validator.py",
        "tests/hold/simple_security_test.py",
        "quantum/add_verbose_intelligent_descriptions.py",
        "reasoning/reasoning_engine.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "orchestration/brain/fix_lambda_symbols.py",
        "core/helpers/__init__.py",
        "quantum/regenerate_intelligent_descriptions.py",
        "tests/emotion/test_mood_entropy_tracker.py",
        "ethics/compliance_engine.py",
        "consciousness/systems/lambda_mirror.py",
        "identity/utils/symbolic_parser.py",
        "reasoning/oracle_predictor.py",
        "ethics/ethical_auditor.py",
        "orchestration/migrate_orchestrators.py",
        "docs/documentation_updater.py",
        "orchestration/brain/security_pr_analyzer.py",
        "memory/tools/memory_drift_auditor.py",
        "voice/voice_cultural_integrator.py",
        "voice/safety/voice_safety_guard.py",
        "identity/core/commercial/commercial_module.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "tools/dev/module_digest_extractor.py",
        "foundry/symbolic_foundry.py",
        "reasoning/conflict_resolver.py",
        "dashboard/core/test_management_system.py",
        "benchmarks/reasoning_system_benchmark.py",
        "memory/systems/dream_trace_linker.py",
        "memory/systems/memory_helix.py",
        "core/interfaces/tools/research/dev_dashboard.py",
        "tests/hold/test_security_fixes_validation.py",
        "ethics/batch_guard.py",
        "identity/core/lambd_id_service.py",
        "features/entropy/radar.py",
        "reasoning/openai_oracle_adapter.py",
        "reasoning/causal_reasoning.py",
        "orchestration/security/dast/engine.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "ethics/glyph_ethics_validator.py",
        "core/interfaces/dev_dashboard.py",
        "core/generate_autotest_docs.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "creativity/advanced_haiku_generator.py",
        "quantum/add_template_reference.py",
        "tests/analytics/test_drift_timeline_gen.py",
        "orchestration/brain/safety_guardrails.py",
        "orchestration/brain/net/async_client.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "memory/systems/neurosymbolic_integration.py",
        "core/interfaces/research_dashboard.py",
        "reasoning/symbolic_reasoning.py",
        "tools/fix_corrupted_lukhas.py",
        "memory/systems/meta_learning_patterns.py",
        "reasoning/reasoning_colony.py",
        "identity/backend/verifold/narrative_utils.py",
        "trace/commit_log_checker.py",
        "core/api_diff_analyzer.py",
        "voice/interface.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "core/targeted_api_fixes.py",
        "identity/tests/test_comprehensive.py",
        "core/notion_sync.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "identity/utils/entropy_calculator.py",
        "quantum/add_compliant_headers.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "identity/utils/qrg_parser.py",
        "orchestration/security/dast/processors.py",
        "orchestration/brain/spine/accent_adapter.py",
        "orchestration/brain/compliance/constitutional_ai.py",
        "consciousness/reflection/lambda_mirror.py",
        "emotion/symbolic_user_intent.py",
        "quantum/fix_proper_ascii.py",
        "quantum/add_intelligent_descriptions.py",
        "memory/tools/lambda_archive_inspector.py",
        "core/interfaces/app.py",
        "memory/compression/symbolic_delta.py",
        "memory/systems/memory_learning/memory_manager.py",
        "narrative/symbolic_weaver.py"
      ],
      "count": 118
    },
    {
      "module": "unittest",
      "used_in": [
        "tests/active/test_mood_tuning_feedback_loop.py",
        "tests/active/test_quantum_consensus.py",
        "tests/test_memory_evolution_recursion.py",
        "tests/identity/test_qrg_parser.py",
        "quantum/integration.py",
        "examples/unit_tests/test_integration.py",
        "tests/memory/test_glyph_memory_integration.py",
        "tests/test_symbolic_replay_engine.py",
        "tests/core/test_resource_scheduler.py",
        "tests/memory/test_fold_engine_integration.py",
        "orchestration/core_modules/orchestration_alt.py",
        "tests/test.py",
        "tests/dream/test_dream_feedback_controller.py",
        "tests/emotion/test_emotional_compat_mode.py",
        "identity/qrg_100_percent_coverage.py",
        "tests/emotion/test_emotion_feedback.py",
        "tests/test_emotion_core.py",
        "tests/active/test_dream_feedback_propagator.py",
        "tests/test_event_bus.py",
        "identity/qrg_test_suite.py",
        "tests/identity/test_identity_core.py",
        "tests/test_reasoning_engine_drift.py",
        "tests/memory/test_identity_lineage_validation.py",
        "tests/dream/test_dream_snapshot.py",
        "tests/test_emotion_recursion.py",
        "tests/runners/run_tests.py",
        "tests/dream/test_dream_governance_integration.py",
        "tests/hold/orchestration/test_orchestration_plugins.py",
        "tests/dream/test_dream_seed_entropy.py",
        "tests/test_policy_engines.py",
        "tests/hold/orchestration/test_orchestration.py",
        "tests/core/test_governance.py",
        "tests/test_creativity_core.py",
        "tests/suites/advanced_agi_test_suite.py",
        "tests/hold/dreams/test_affect_delta_detection.py",
        "tests/test_reasoning_metrics.py",
        "tests/bio/test_oscillator_drift_safety.py",
        "tests/emotion/affect/test_affect_stagnation.py",
        "examples/unit_tests/test_framework_security_engine.py",
        "tests/test_governance_engine.py",
        "tests/novel_tasks/test_generalization_v2.py",
        "examples/unit_tests/test_framework.py",
        "tests/dream/test_dream_ethics_integration.py",
        "tests/emotion/test_mood_entropy_tracker.py",
        "tests/test_memory_fold.py",
        "tests/hold/dreams/test_dream_emotion_feedback.py",
        "tests/active/test_voice_processing.py",
        "tests/security/test_moderator.py",
        "tests/dream/test_dream_limiter.py",
        "voice/safety/voice_safety_guard.py",
        "tests/test_glyph_memory_timeline.py",
        "reasoning/reasoning_diagnostics.py",
        "tests/bio/test_symbolic_validation.py",
        "tests/bio/test_simulation_controller.py",
        "tests/test_reasoning_node.py",
        "tests/test_reasoning_self_test_harness.py",
        "examples/unit_tests/test_drift_violations.py",
        "tests/core/test_actor_system.py",
        "tests/dream_system/test_dream_core.py",
        "tests/test_memory_introspection_engine.py",
        "tests/test_tier_system.py",
        "examples/unit_tests/test_core.py",
        "tests/test_ethical_drift_governor.py",
        "tests/test_learning_core.py",
        "tests/test_memory_drift_mirror.py",
        "tests/core/symbolic/test_archiver.py",
        "tests/dream/test_memoryscape_viewport.py",
        "tests/dream/test_dream_metrics_view.py",
        "tests/symbolic/vocabularies/test_emotion_vocabulary.py",
        "tests/test_actor_supervision.py",
        "tests/active/test_redirect_forecaster.py",
        "tests/dream/test_dream_sandbox.py",
        "tests/dream/test_tag_flow_visualization.py",
        "tests/active/test_intent_node.py",
        "tests/test_security_core.py",
        "tests/test_affect_stagnation.py",
        "tools/prediction/test_prophet.py",
        "tests/core/symbolic/test_tracer.py",
        "tests/test_dream_snapshot_export.py",
        "tests/dream/test_rl_dream_cycle.py",
        "tests/hold/dreams/test_recursive_dream_chain.py",
        "tests/analytics/test_drift_timeline_gen.py",
        "tests/memory/test_fold_entropy_visualizer.py",
        "tools/parsers/test_knowledge_loader.py",
        "examples/unit_tests/test_all.py",
        "tests/test_orchestration_src.py",
        "tests/identity/test_entropy_helpers.py",
        "identity/tests/test_comprehensive.py",
        "tests/bio/test_biosimulation_feedback.py",
        "tests/core/test_creativity_colony_fatigue.py",
        "tests/test_adaptive_reasoning_loop.py",
        "tests/test_symbolic_reasoning.py",
        "tests/test_memory_drift_tracker.py",
        "tests/bio/test_bio_phase_control.py",
        "tests/quantum/test_quantum_waveform.py",
        "identity/lukhus_ultimate_test_suite.py",
        "tests/core/test_observatory.py",
        "tests/core/test_symbiotic_swarm.py",
        "tests/test_glyph_recall_drift_correlation.py",
        "tests/run_orchestration_tests.py",
        "tests/bio/test_colony_self_repair.py",
        "tests/consciousness/test_consciousness_core.py",
        "tests/test_security_core_fixed.py",
        "tests/novel_tasks/test_generalization.py",
        "tests/test_security_core_broken.py",
        "tests/test_integrity_collapser.py",
        "tests/creativity/dream_systems/test_snapshot_redirection_controller.py",
        "tests/symbolic/test_emotion_vocabulary.py",
        "tests/bio/test_eeg_sync_bridge.py",
        "tests/bio/test_bio_drift_response.py",
        "tests/test_memory_core.py",
        "tests/test_lightweight_concurrency.py",
        "examples/integration/test_integration_communication.py"
      ],
      "count": 113
    },
    {
      "module": "pytest",
      "used_in": [
        "tests/active/test_mood_tuning_feedback_loop.py",
        "tests/config/test_config_comprehensive.py",
        "tests/active/test_quantum_consensus.py",
        "tests/quantum/test_quantum_glyph_registry.py",
        "tests/memory/test_memory_basic.py",
        "tests/core/test_core_basic.py",
        "tests/compliance/test_eu_awareness_engine.py",
        "tests/symbolic/test_symbolic_core.py",
        "tests/ethics/test_unified_engine.py",
        "tests/test_all_interactive.py",
        "tests/memory/test_memory_optimization.py",
        "tests/test_integration_complete.py",
        "examples/unit_tests/test_symbolic_anomaly_explorer.py",
        "tests/active/test_symbolic_nervous_system.py",
        "tests/compliance/test_ethical_auditor.py",
        "tests/orchestration/test_plugin_registry.py",
        "tests/compliance/test_global_institutional_framework.py",
        "tests/core/test_resource_optimization_integration.py",
        "tests/core/monitoring/test_collapse_tracker.py",
        "tests/emotion/test_emotional_compat_mode.py",
        "tests/test_symbolic_user_intent.py",
        "tests/monitoring/test_drift_monitor.py",
        "tests/core/test_energy_consumption_analysis.py",
        "tests/conftest.py",
        "core/test_tiered_state_management.py",
        "tests/test_replay_system.py",
        "tests/core/test_core_integration.py",
        "tests/monitoring/test_collapse_integration.py",
        "tests/active/test_context_analyzer.py",
        "tests/core/test_cluster_sharding.py",
        "tests/ethics/policy_engines/test_three_laws.py",
        "tests/active/test_resource_efficiency.py",
        "tests/unified_grammar/test_base_module.py",
        "tests/ethics/policy_engines/test_base.py",
        "tests/test_unified_ethics_orchestrator.py",
        "tests/active/test_compliance_engine_2.py",
        "core/test_image_processing_pipeline.py",
        "tests/active/test_immersive_ingestion.py",
        "tests/core/test_consistency_management.py",
        "tests/active/test_strategy_engine_core.py",
        "tests/core/symbolic/test_collapse.py",
        "orchestration/security/dast/tests.py",
        "tests/active/test_drift_loop_governance.py",
        "tests/test_entropy_radar.py",
        "examples/unit_tests/test_phase_quantum_integration.py",
        "tests/core/test_colony_dilemma_simulation.py",
        "tests/integration/test_critical_path.py",
        "tests/test_memory_fold.py",
        "tests/test_oracle_predictor.py",
        "tests/analytics/test_drift_affect_validator_json.py",
        "tests/core/symbolic/test_drift.py",
        "tests/active/test_voice_processing.py",
        "tests/diagnostics/test_prophet.py",
        "tests/integration/test_security_ethics_pipeline.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "tests/test_strategy_engine_integration.py",
        "core/test_p2p_communication.py",
        "tests/test_verifold_unified.py",
        "tests/test_symbiotic_swarm_integration.py",
        "tests/test_migration.py",
        "tests/ethics/policy_engines/test_ethical_drift.py",
        "tests/fixtures/symbolic_fixtures.py",
        "tests/test_drift_regression.py",
        "tests/memory/test_aliases.py",
        "tests/test_brain_colony_coordinator.py",
        "examples/unit_tests/test_memory_engines.py",
        "tests/test_lambda_governor.py",
        "tests/test_dream_system_integration.py",
        "tests/active/test_healix_mapper.py",
        "creativity/dream/oneiric_engine/tests/conftest.py",
        "tests/active/test_intent_node.py",
        "tests/test_drift_recovery.py",
        "tests/test_memory_fold_universal_integration.py",
        "tests/orchestration/test_agent_registry.py",
        "tools/prediction/test_prophet.py",
        "learning/tutor_learning_engine.py",
        "tests/test_ethics_hitlo_bridge.py",
        "tests/ethics/test_ethics_basic.py",
        "tests/test_colony_integrations.py",
        "tests/hold/dreams/test_dream_convergence_tester.py",
        "memory/test_lightweight_concurrency.py",
        "tests/active/test_emotion_mapper_alt.py",
        "tests/core/test_agent_coordination.py",
        "tests/unified_grammar/run_tests.py",
        "tests/unified_grammar/test_symbolic_vocabulary.py",
        "tests/test_runner.py",
        "tests/orchestration/test_agent_interface.py",
        "tests/test_adaptive_reasoning_loop.py",
        "tests/unified_grammar/test_grammar_compliance.py",
        "tests/test_reflection_engine.py",
        "tests/core/test_supervision.py",
        "tests/test_quantum_ethics_mesh.py",
        "tests/integration/test_core_agi_systems.py",
        "tests/core/memory/hooks/test_hooks.py",
        "examples/unit_tests/test_meta_learning.py",
        "examples/unit_tests/test_quantum_layer.py",
        "tests/core/test_mailbox.py",
        "tests/test_recursive_dream_fork.py",
        "creativity/dream/oneiric_engine/tests/test_api.py",
        "tests/test_dream_integration.py",
        "tests/test_ethical_drift_sentinel.py",
        "tests/test_lambda_echo_detector.py",
        "quantum/phase_quantum_integration.py",
        "tests/core/symbolic/test_glyphs.py",
        "tests/unified_grammar/test_module_integration.py",
        "tests/test_tagging_system.py",
        "tests/integration/test_fallback_systems.py",
        "tests/integration/test_import_verification.py",
        "tests/active/test_compliance_engine.py",
        "tests/test_dna_entanglement.py",
        "tests/memory/test_loop_monitor.py",
        "tests/core/plugins/test_plugin_registry.py",
        "tests/core/test_tensor_colony_ops.py"
      ],
      "count": 113
    },
    {
      "module": "math",
      "used_in": [
        "core/monitoring/collapse_tracker.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "bio/systems/orchestration/oscillator_orchestrator.py",
        "bio/prime_oscillator.py",
        "dashboard/core/morphing_engine.py",
        "orchestration/brain/abstract_reasoning/oscillator.py",
        "core/monitoring/drift_monitor.py",
        "creativity/dream_systems/quantum_dream_adapter.py",
        "identity/mobile_platform/mobile_ui_renderer.py",
        "memory/resonance/resonant_memory_access.py",
        "memory/neocortical/concept_hierarchy.py",
        "consciousness/systems/quantum_consciousness_visualizer.py",
        "memory/systems/hybrid_memory_fold.py",
        "bio/symbolic_entropy.py",
        "core/symbolic_drift_analyzer.py",
        "identity/core/id_service/entropy_engine.py",
        "symbolic/glyph_engine.py",
        "bio/symbolic/mito_ethics_sync.py",
        "identity/core/id_service/portability_system.py",
        "tools/prediction/prophet_predictor.py",
        "memory/tools/lambda_vault_scan.py",
        "features/symbolic/collapse/reasoner.py",
        "foundry/lambda_sage.py",
        "memory/systems/attention_memory_layer.py",
        "orchestration/brain/multi_brain_orchestrator.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "memory/hippocampal/theta_oscillator.py",
        "identity/core/id_service/lambd_id_validator.py",
        "symbolic/bio/symbolic_entropy.py",
        "bio/core.py",
        "symbolic/drift/symbolic_drift_tracker.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "features/memory/fold_lineage_tracker.py",
        "reasoning/collapse_reasoner.py",
        "features/symbolic/drift/symbolic_drift_tracker.py",
        "quantum/api_manager.py",
        "ethics/compliance_engine.py",
        "tests/test_oracle_predictor.py",
        "reasoning/oracle_predictor.py",
        "identity/auth_utils/cognitive_load_estimator.py",
        "core/services/location/tracker.py",
        "memory/systems/episodic_replay_buffer.py",
        "memory/tools/memory_drift_auditor.py",
        "creativity/emotional_resonance.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "memory/proteome/symbolic_proteome.py",
        "bio/simulation_controller.py",
        "reasoning/symbolic_logic_engine.py",
        "reasoning/conflict_resolver.py",
        "bio/base_oscillator.py",
        "orchestration/brain/prediction/world_models.py",
        "quantum/layer.py",
        "memory/systems/in_memory_cache_storage_wrapper.py",
        "quantum/service.py",
        "benchmarks/reasoning_system_benchmark.py",
        "memory/systems/dream_trace_linker.py",
        "core/energy_consumption_analysis.py",
        "learning/system.py",
        "symbolic/bio/mito_ethics_sync.py",
        "features/entropy/radar.py",
        "core/ethics/dream_ethics_injector.py",
        "memory/hippocampal/hippocampal_buffer.py",
        "memory/systems/resonance_memory_retrieval.py",
        "bio/quantum_layer.py",
        "memory/consolidation/consolidation_orchestrator.py",
        "tools/prediction/test_prophet.py",
        "identity/auth_utils/attention_monitor.py",
        "identity/backend/verifold/verifold_hash_utils.py",
        "features/symbolic/collapse/entropy_tracker.py",
        "memory/consolidation/sleep_cycle_manager.py",
        "memory/openai_memory_adapter.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "memory/systems/neurosymbolic_integration.py",
        "memory/consolidation/ripple_generator.py",
        "memory/systems/meta_learning_patterns.py",
        "identity/auth_utils/grid_size_calculator.py",
        "examples/reasoning/oracle_demo.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "orchestration/apis/drift_monitoring_api.py",
        "memory/memory_optimization.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "identity/utils/entropy_calculator.py",
        "features/symbolic/collapse/engine.py",
        "core/services/location/geofencing_manager.py",
        "memory/neocortical/neocortical_network.py",
        "memory/systems/fold_lineage_tracker.py",
        "quantum/abas_quantum_specialist.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "tests/test_glyph_recall_drift_correlation.py",
        "orchestration/brain/compliance/constitutional_ai.py",
        "memory/replay/replay_buffer.py",
        "memory/repair/advanced_trauma_repair.py",
        "identity/utils/entropy_helpers.py",
        "memory/compression/symbolic_delta.py",
        "ethics/oscillating_conscience.py",
        "orchestration/brain/MultiBrainSymphony.py",
        "orchestration/brain/integration/brain_integration.py"
      ],
      "count": 97
    },
    {
      "module": "abc",
      "used_in": [
        "memory/core/interfaces/memory_interface.py",
        "orchestration/brain/eu_awareness_engine.py",
        "orchestration/specialized/lambda_bot_orchestrator.py",
        "memory/basic.py",
        "memory/colonies/base_memory_colony.py",
        "orchestration/apis/code_process_integration_api.py",
        "quantum/\u039bBot_quantum_security.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "features/integration/dynamic_modality_broker.py",
        "tagging/tagging_system.py",
        "reasoning/ethical_reasoning_system.py",
        "voice/systems/voice_synthesis.py",
        "voice/bio_core/oscillator/bio_quantum_engine.py",
        "features/memory/hooks/base.py",
        "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
        "core/event_sourcing.py",
        "orchestration/brain/core/types.py",
        "ethics/policy_engines/base.py",
        "core/enhanced_swarm.py",
        "orchestration/colony_orchestrator.py",
        "ethics/bases.py",
        "memory/distributed_state_manager.py",
        "ethics/meta_ethics_governor.py",
        "memory/base_manager.py",
        "consciousness/systems/engine_complete.py",
        "consciousness/cognitive_architecture_controller.py",
        "core/identity_aware_base.py",
        "bio/base_oscillator.py",
        "memory/privacy_preserving_memory_vault.py",
        "creativity/creative_q_expression.py",
        "consciousness/systems/engine_codex.py",
        "core/practical_optimizations.py",
        "features/integration/executive_decision_integrator.py",
        "core/actor_system.py",
        "orchestration/brain/uk_awareness_engine.py",
        "learning/system.py",
        "consciousness/cognitive/adapter_complete.py",
        "consciousness/systems/engine.py",
        "quantum/oscillator.py",
        "features/common/base_module.py",
        "memory/systems/hierarchical_data_store.py",
        "examples/consciousness/consciousness_demo.py",
        "core/tiered_state_management.py",
        "orchestration/brain/awareness_engine.py",
        "orchestration/brain/abstract_reasoning/confidence_calibrator.py",
        "creativity/creative_engine.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "memory/systems/memory_research.py",
        "features/decision/bridge.py",
        "ethics/ethical_reasoning_system.py",
        "bridge/explainability_interface_layer.py",
        "core/supervision.py",
        "memory/systems/neurosymbolic_integration.py",
        "core/plugin_registry.py",
        "creativity/quantum_creative_types.py",
        "core/colonies/base_colony.py",
        "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
        "orchestration/apis/drift_monitoring_api.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "orchestration/brain/research_awareness_engine.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "orchestration/brain/australian_awareness_engine.py",
        "orchestration/brain/das_awareness_engine.py",
        "consciousness/brain_integration_20250620_013824.py",
        "bio/systems/orchestration/base_orchestrator.py",
        "orchestration/integration/human_in_the_loop_orchestrator.py",
        "consciousness/systems/engine_alt.py",
        "orchestration/interfaces/agent_interface.py",
        "orchestration/agents/base.py",
        "orchestration/brain/orchestrator.py",
        "core/monitoring_observability.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "core/identity_aware_base_colony.py",
        "interfaces/protocols/awareness_protocol.py",
        "memory/systems/memory_bases.py",
        "core/tier_unification_adapter.py",
        "orchestration/base.py"
      ],
      "count": 79
    },
    {
      "module": "traceback",
      "used_in": [
        "tools/interactive_test_suite.py",
        "core/testing/plugin_test_framework.py",
        "benchmarks/tests/bio_symbolic_coherence_test.py",
        "tests/memory_stress_tests.py",
        "tests/test_ethics_guardian_realignment.py",
        "core/test_mailbox_simple.py",
        "tests/test_memory_cleaner_cleanup.py",
        "creativity/dream/tools/run_dream_analysis.py",
        "orchestration/migrated/simple_test.py",
        "examples/unit_tests/test_autotest_system.py",
        "benchmarks/tests/actor_throughput_simple_test.py",
        "tests/test_memory_cleaner_dreams.py",
        "tests/test_dream_engine_integration.py",
        "benchmarks/simple_actor_benchmark.py",
        "core/automatic_testing_system.py",
        "memory/systems/test_lazy_loading.py",
        "foundry/lambda_mirror.py",
        "core/validation.py",
        "memory/systems/test_512_dim_optimization.py",
        "foundry/lambda_sage.py",
        "tests/test_memory_comprehensive.py",
        "orchestration/config/migration_router.py",
        "tests/test_guardian_system_integration.py",
        "tests/test_ethics_guardian_assessment.py",
        "benchmarks/tests/bio_symbolic_coherence_optimization_test.py",
        "ethics/extreme_ethical_testing.py",
        "examples/tests/debug_brain_test.py",
        "tests/test_quantum_import.py",
        "examples/unit_tests/test_beautiful_consciousness.py",
        "orchestration/migrated/test_migrations.py",
        "benchmarks/safety/integrated_safety_test_script_20250729_064441.py",
        "examples/ethics/lambda_governor_demo.py",
        "tests/test_simple_optimized_memory.py",
        "examples/dream_openai_demo.py",
        "tests/test_phase3b_memory_recurrence.py",
        "tests/test_reflection_standalone.py",
        "tests/test_integrated_safety.py",
        "tools/test_knowledge_integration.py",
        "consciousness/systems/lambda_mirror.py",
        "reasoning/oracle_predictor.py",
        "tools/core_module_analyzer.py",
        "tests/test_integrated_safety_simple.py",
        "identity/api/__init__.py",
        "core/api_controllers.py",
        "foundry/symbolic_foundry.py",
        "tests/test_voice_integration.py",
        "examples/tests/quantum_creative_integration_test.py",
        "tests/test_optimized_memory_system.py",
        "benchmarks/tests/test_swarm_coherence_integration.py",
        "core/actor_supervision_integration.py",
        "orchestration/monitoring/health_checks.py",
        "examples/bio_symbolic_coherence_optimization_test.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "benchmarks/safety/comprehensive_safety_test_reference.py",
        "examples/integration/integration_tests.py",
        "examples/integration/run_integration_tests.py",
        "memory/systems/memory_comprehensive.py",
        "tests/test_self_reflective_debugger_ml_models.py",
        "examples/orchestration/demo_reflection_layer.py",
        "core/supervision.py",
        "core/autotest_validation.py",
        "identity/lukhus_deployment_package.py",
        "tests/test_self_reflective_debugger_correlation.py",
        "tests/test_reflection_layer_metrics.py",
        "identity/lukhus_ultimate_test_suite.py",
        "examples/unit_tests/test_memory_comprehensive.py",
        "quantum/quantum_bio_bulletproof_system.py",
        "tools/collapse_simulator.py",
        "benchmarks/memory/optimized_memory_system_test_script.py",
        "consciousness/reflection/lambda_mirror.py",
        "identity/auth_backend/authentication_server.py",
        "memory/tools/lambda_archive_inspector.py",
        "tests/test_memory_cleaner_analysis.py",
        "memory/compression/symbolic_delta.py",
        "core/test_coordination_simple.py",
        "memory/systems/symbolic_delta_compression.py",
        "tests/test_documentation_single.py",
        "tests/test_quantum_coordinator.py"
      ],
      "count": 78
    },
    {
      "module": "unittest.mock",
      "used_in": [
        "tests/active/test_emotion_mapper_alt.py",
        "tests/active/test_mood_tuning_feedback_loop.py",
        "tests/dream/test_dream_governance_integration.py",
        "tests/active/test_quantum_consensus.py",
        "tests/hold/orchestration/test_orchestration_plugins.py",
        "examples/unit_tests/test_core.py",
        "tests/test_memory_evolution_recursion.py",
        "tests/test_learning_core.py",
        "tests/test_unified_ethics_orchestrator.py",
        "tests/unified_grammar/test_base_module.py",
        "tests/test_drift_regression.py",
        "tests/core/test_core_basic.py",
        "tests/core/symbolic/test_archiver.py",
        "tests/test_policy_engines.py",
        "tests/core/test_creativity_colony_fatigue.py",
        "tests/test_symbolic_reasoning.py",
        "tests/test_reflection_engine.py",
        "tests/test_creativity_core.py",
        "identity/lukhus_ultimate_test_suite.py",
        "tests/active/test_strategy_engine_core.py",
        "tests/suites/advanced_agi_test_suite.py",
        "tests/test_lambda_governor.py",
        "tests/core/test_symbiotic_swarm.py",
        "tests/test_quantum_ethics_mesh.py",
        "tests/core/test_supervision.py",
        "tests/memory/test_memory_optimization.py",
        "tests/emotion/test_emotion_feedback.py",
        "tests/emotion/affect/test_affect_stagnation.py",
        "tests/test_dream_system_integration.py",
        "examples/unit_tests/test_symbolic_anomaly_explorer.py",
        "tests/test_governance_engine.py",
        "tests/core/symbolic/test_collapse.py",
        "creativity/dream/oneiric_engine/tests/conftest.py",
        "tests/active/test_healix_mapper.py",
        "orchestration/security/dast/tests.py",
        "tests/compliance/test_ethical_auditor.py",
        "tests/active/test_drift_loop_governance.py",
        "tests/core/test_consciousness_phase.py",
        "tests/dream/test_dream_feedback_controller.py",
        "tests/core/test_resource_optimization_integration.py",
        "tests/test_dream_integration.py",
        "tests/core/monitoring/test_collapse_tracker.py",
        "orchestration/brain/monitoring/guardian_reflector.py",
        "tests/test_security_core_fixed.py",
        "identity/qrg_100_percent_coverage.py",
        "tests/test_ethical_drift_sentinel.py",
        "tests/test_lambda_echo_detector.py",
        "tests/test_oracle_predictor.py",
        "tests/test_emotion_core.py",
        "tests/core/symbolic/test_glyphs.py",
        "tests/test_security_core.py",
        "tests/test_affect_stagnation.py",
        "tools/prediction/test_prophet.py",
        "tests/test_security_core_broken.py",
        "tests/test_dream_snapshot_export.py",
        "tests/core/test_energy_consumption_analysis.py",
        "tests/conftest.py",
        "tests/core/symbolic/test_drift.py",
        "tests/test_replay_system.py",
        "tests/diagnostics/test_prophet.py",
        "tests/creativity/dream_systems/test_snapshot_redirection_controller.py",
        "tests/unified_grammar/test_module_integration.py",
        "tests/test_ethics_hitlo_bridge.py",
        "tests/memory/test_identity_lineage_validation.py",
        "tests/integration/test_fallback_systems.py",
        "tests/active/test_dream_feedback_propagator.py",
        "tests/core/test_symbolic_drift_analyzer.py",
        "tests/analytics/test_drift_timeline_gen.py",
        "tests/core/test_core_integration.py",
        "tests/test_strategy_engine_integration.py",
        "tests/test_memory_core.py",
        "tests/test_verifold_unified.py",
        "tests/test_emotion_recursion.py",
        "tests/core/test_actor_system.py",
        "tests/test_orchestration_src.py"
      ],
      "count": 75
    },
    {
      "module": "threading",
      "used_in": [
        "identity/lukhus_deployment_package.py",
        "benchmarks/optimized_actor_benchmark.py",
        "benchmarks/api_system_benchmark.py",
        "core/actor_model.py",
        "core/event_sourcing.py",
        "core/practical_optimizations.py",
        "core/actor_system.py",
        "consciousness/systems/dream_engine/dream_reflection_loop.py",
        "core/energy_consumption_analysis.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "core/observability_steering.py",
        "benchmarks/tests/actor_throughput_test.py",
        "core/notion_sync.py",
        "consciousness/cognitive/adapter_complete.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "features/integration/system_coordinator.py",
        "core/efficient_communication.py",
        "identity/auth_backend/entropy_health_api.py",
        "identity/lukhus_ultimate_test_suite.py",
        "bridge/shared_state.py",
        "consciousness/systems/integrator.py",
        "ethics/self_reflective_debugger.py",
        "memory/systems/in_memory_span_exporter.py",
        "orchestration/core_modules/controller.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "memory/systems/lazy_loading_embeddings.py",
        "core/event_replay_snapshot.py",
        "core/resource_efficiency_analyzer.py",
        "tests/test.py",
        "core/distributed_tracing.py",
        "memory/distributed_state_manager.py",
        "core/tiered_state_management.py",
        "consciousness/brain_integration_20250620_013824.py",
        "memory/systems/agent_memory.py",
        "memory/systems/in_memory_log_exporter.py",
        "identity/qrg_100_percent_coverage.py",
        "identity/backend/verifold/verifold_gui.py",
        "orchestration/brain/safe_subprocess_executor.py",
        "orchestration/brain/trace_memoria_logger.py",
        "orchestration/brain/symbol_validator.py",
        "voice/speech_processor.py",
        "memory/systems/pin_memory_cache.py",
        "benchmarks/tests/actor_throughput_simple_test.py",
        "orchestration/brain/monitoring/performance.py",
        "identity/qrg_test_suite.py",
        "quantum/quantum_glyph_registry.py",
        "benchmarks/simple_actor_benchmark.py",
        "memory/systems/episodic_replay_buffer.py",
        "core/neural_architectures/neural_integrator.py",
        "core/automatic_testing_system.py",
        "memory/evolution.py",
        "bio/systems/orchestration/bio_orchestrator.py",
        "core/circuit_breaker.py",
        "voice/interfaces/input/stream_handler.py",
        "core/minimal_actor.py",
        "core/p2p_fabric.py",
        "features/memory/memory_fold.py",
        "dashboard/core/test_execution_engine.py",
        "core/integration_hub.py",
        "examples/identity/qrg_demo.py",
        "features/integration/dynamic_modality_broker.py",
        "voice/message_handler.py",
        "consciousness/cognitive_architecture_controller.py",
        "orchestration/brain/brain_integration.py",
        "voice/bio_core/oscillator/orchestrator.py",
        "features/symbolic/glyphs/glyph_sentinel.py",
        "memory/systems/in_memory_cache_storage_wrapper.py",
        "dashboard/core/test_management_system.py",
        "memory/persistence/orthogonal_persistence.py",
        "orchestration/brain/integration/brain_integration.py",
        "core/orchestration/energy_aware_execution_planner.py"
      ],
      "count": 71
    },
    {
      "module": "argparse",
      "used_in": [
        "identity/lukhus_deployment_package.py",
        "update_documentation.py",
        "tests/unified_grammar/run_tests.py",
        "orchestration/brain/spine/main_loop.py",
        "ethics/stabilization/tuner.py",
        "creativity/dream/tools/dream_divergence_map.py",
        "examples/reasoning/oracle_demo.py",
        "identity/tools/onboarding_cli.py",
        "identity/backend/dao/log_viewer.py",
        "identity/backend/qrglyphs/qrglymph_public.py",
        "core/interfaces/tools/cli/dream_cli.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "core/notion_sync.py",
        "core/interfaces/lukhas_as_agent/sys/nias/inject_message_simulator.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "tools/symbolic_cli_test.py",
        "core/interfaces/web_formatter.py",
        "features/entropy/radar.py",
        "identity/backend/verifold/setup_project.py",
        "diagnostics/entropy_radar.py",
        "core/task_manager.py",
        "identity/backend/verifold/web_journal/web_journal_app.py",
        "core/introspection/introspector.py",
        "tests/run_test_suite.py",
        "orchestration/brain/pr_security_review_github_actions.py",
        "tests/test.py",
        "core/interfaces/main.py",
        "ethics/redteam_sim.py",
        "tools/cli/drift_analyzer_cli.py",
        "tools/cli/ctl.py",
        "creativity/dream/tools/run_dream_analysis.py",
        "tools/collapse_simulator.py",
        "core/interfaces/tools/dao/dao_propose.py",
        "ethics/simulations/lambda_shield_tester.py",
        "voice/interfaces/eleven_tts.py",
        "consciousness/reflection/lambda_mirror.py",
        "memory/systems/memory_viz.py",
        "tests/utils/symbolic_test_scaffold.py",
        "consciousness/systems/lambda_mirror.py",
        "reasoning/oracle_predictor.py",
        "orchestration/brain/symbol_validator.py",
        "identity/backend/dream_engine/assistant.py",
        "orchestration/brain/dream_engine/cli/dream_cli.py",
        "creativity/dream/dashboard/dream_metrics_view.py",
        "creativity/dream/dream_engine/oracle_dream.py",
        "docs/documentation_updater.py",
        "memory/tools/lambda_archive_inspector.py",
        "orchestration/brain/security_pr_analyzer.py",
        "memory/tools/memory_drift_auditor.py",
        "identity/governance/policy_board.py",
        "ethics/tools/quantum_mesh_visualizer.py",
        "emotion/tools/emotional_echo_detector.py",
        "tools/import_path_fixer.py",
        "creativity/dream/tools/symbolic_theme_clusterer.py",
        "orchestration/brain/spine/hash.py",
        "foundry/lambda_mirror.py",
        "orchestration/brain/autonomous_github_manager.py",
        "core/interfaces/tools/dao/dao_vote.py",
        "narrative/symbolic_weaver.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "tools/prediction/prophet_predictor.py",
        "foundry/symbolic_foundry.py",
        "core/interfaces/ui/components/audio_exporter.py",
        "memory/tools/lambda_vault_scan.py",
        "core/interfaces/lukhas_as_agent/news_and_social/s_dispatcher.py",
        "tools/path_validator.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "foundry/lambda_sage.py"
      ],
      "count": 69
    },
    {
      "module": "base64",
      "used_in": [
        "identity/backend/seedra/ethics/seedra_ethics_engine.py",
        "core/id.py",
        "identity/core/qrg/qrg_manager.py",
        "symbolic/neural/neural_symbolic_bridge.py",
        "memory/systems/memory_helix_golden.py",
        "identity/auth/qrg_generators.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "identity/backend/verifold/qr_encoder.py",
        "quantum/vault_manager.py",
        "identity/backend/qrglyphs/qrglymph_public.py",
        "api/glyph_exchange.py",
        "orchestration/brain/eu_awareness_engine.py",
        "memory/systems/trauma_lock.py",
        "reasoning/intent/intent_processor.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "identity/backend/seedra/biometric_engine.py",
        "orchestration/brain/visualization/golden_healix_mapper.py",
        "identity/backend/seedra/seedra_core.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "reasoning/id_reasoning_engine.py",
        "bridge/model_communication_engine.py",
        "voice/integrations/openai/dalle_client.py",
        "identity/backend/verifold/web_qr_verifier.py",
        "tests/api/test_glyph_exchange.py",
        "reasoning/systems/id_reasoning_engine.py",
        "memory/node.py",
        "identity/enterprise/auth.py",
        "examples/identity/qrg_standalone_demo.py",
        "orchestration/brain/spine/accent_adapter.py",
        "voice/synthesis.py",
        "quantum/api_manager.py",
        "orchestration/brain/privacy_manager.py",
        "memory/systems/memory_lock.py",
        "memory/systems/memory_viz.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "bio/symbolic/glyph_id_hash.py",
        "tests/advanced_memory_fold_test_suite.py",
        "creativity/dream/openai_dream_integration.py",
        "identity/backend/verifold/visual/glyph_stego_encoder.py",
        "features/integration/neural_symbolic_bridge.py",
        "orchestration/agents/multi_agent_collaboration.py",
        "creativity/emotional_resonance.py",
        "identity/backend/app/crypto.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "ethics/safety/compliance_dashboard_visual.py",
        "identity/mobile/qr_code_animator.py",
        "memory/systems/memory_profiler.py",
        "identity/core/id_service/portability_system.py",
        "orchestration/brain/net/async_client.py",
        "symbolic/bio/glyph_id_hash.py",
        "identity/core/auth/biometric_integration.py",
        "voice/integrations/openai/whisper_client.py",
        "quantum/web_integration.py",
        "memory/systems/simple_store.py",
        "identity/auth_backend/qr_entropy_generator.py",
        "voice/integrations/elevenlabs/elevenlabs_client.py",
        "memory/privacy_preserving_memory_vault.py",
        "memory/systems/multimodal_memory_support.py",
        "quantum/certificate_manager.py"
      ],
      "count": 60
    },
    {
      "module": "subprocess",
      "used_in": [
        "core/direct_ai_router.py",
        "identity/lukhus_deployment_package.py",
        "dashboard/core/test_management_system.py",
        "tools/interactive_test_suite.py",
        "core/testing/plugin_test_framework.py",
        "core/interfaces/tools/research/research_dashboard.py",
        "voice/symbolic_voice_core.py",
        "core/interfaces/tools/research/dev_dashboard.py",
        "core/interfaces/tools/cli/dream_cli.py",
        "tests/hold/test_security_fixes_validation.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "core/notion_sync.py",
        "identity/backend/app/tests.py",
        "examples/orchestration/demo_guardian_system.py",
        "identity/backend/verifold/setup_project.py",
        "orchestration/brain/pr_security_review_starter.py",
        "core/ai/integration_manager.py",
        "identity/backend/verifold/web_journal/launch_web_journal.py",
        "tests/run_test_suite.py",
        "core/interfaces/voice/edge_voice.py",
        "tests/test.py",
        "orchestration/brain/validate_pr_security_review.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "tests/hold/test_security_fixes_verification.py",
        "core/interfaces/main.py",
        "orchestration/brain/pr_security_review_task.py",
        "core/interfaces/dev_dashboard.py",
        "ethics/security/secure_utils.py",
        "identity/backend/dream_engine/html_social_generator.py",
        "tests/runners/run_tests_resilient.py",
        "memory/systems/memory_viz.py",
        "tests/utils/validate_test_env.py",
        "orchestration/brain/safe_subprocess_executor.py",
        "orchestration/brain/dream_engine/cli/dream_cli.py",
        "identity/backend/dream_engine/assistant.py",
        "voice/speech_processor.py",
        "memory/systems/memoria/dream_cron.py",
        "dashboard/core/test_scheduler.py",
        "orchestration/brain/core/azure_openai_client.py",
        "tests/diagnostics/test_entropy_radar.py",
        "orchestration/brain/security_pr_analyzer.py",
        "orchestration/apis/code_process_integration_api.py",
        "core/automatic_testing_system.py",
        "core/interfaces/app.py",
        "orchestration/brain/cpu_friendly_compliance.py",
        "examples/integration/integrated_abot_demo.py",
        "dashboard/core/test_execution_engine.py",
        "voice/interfaces/voice_interface.py",
        "orchestration/brain/autonomous_github_manager.py",
        "orchestration/brain/spine/self_reflect_cron.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "core/interfaces/ui/components/audio_exporter.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "core/interfaces/research_dashboard.py",
        "tests/test_all_interactive.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py"
      ],
      "count": 56
    },
    {
      "module": "__future__",
      "used_in": [
        "core/symbolic/collapse/vector_ops.py",
        "bio/eeg_sync_bridge.py",
        "interfaces/api/v1/rest/models.py",
        "api/glyph_exchange.py",
        "creativity/creative_market.py",
        "creativity/dream/rl/rl_dream_cycle.py",
        "ethics/training/alignment_overseer.py",
        "quantum/quantum_flux.py",
        "ethics/fallback/ethics_layer.py",
        "ethics/utils/tag_misinterpretation_sim.py",
        "memory/fold_entropy_visualizer.py",
        "features/symbolic/collapse/bridge.py",
        "quantum/quantum_waveform.py",
        "diagnostics/entropy_radar.py",
        "memory/systems/symbolic_replay_engine.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware_unified.py",
        "orchestration/init/seed_chain_bootstrapper.py",
        "creativity/dream/visualization/memoryscape_viewport.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware.py",
        "memory/loop_monitor.py",
        "ethics/redteam_sim.py",
        "memory/systems/memory_planning.py",
        "memory/systems/memory_session_storage.py",
        "emotion/symbolic_user_intent.py",
        "creativity/creative_engine.py",
        "core/event_replayer.py",
        "core/colonies/tensor_colony_ops.py",
        "creativity/dream/dashboard/dream_metrics_view.py",
        "quantum/quantum_glyph_registry.py",
        "reasoning/response_reasoning_item_param.py",
        "memory/systems/integrity_collapser.py",
        "symbolic/service_analysis.py",
        "memory/systems/memory_media_file_storage.py",
        "symbolic/symbolic_glyph_hash.py",
        "creativity/dream/modifiers/quantum_state_modifier.py",
        "tagging/tagging_system.py",
        "security/moderator.py",
        "symbolic/swarm_tag_simulation.py",
        "creativity/dream/dream_sandbox.py",
        "core/plugin_registry.py",
        "memory/systems/in_memory_cache_storage_wrapper.py",
        "reasoning/reasoning_effort.py",
        "orchestration/brain/net/client.py",
        "memory/systems/memory_research.py"
      ],
      "count": 44
    },
    {
      "module": "fastapi",
      "used_in": [
        "benchmarks/api_system_benchmark.py",
        "interfaces/api/v1/rest/routers/tasks.py",
        "identity/backend/app/tier_manager.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_unified.py",
        "dashboard/api/websocket_server.py",
        "api/glyph_exchange.py",
        "interfaces/api/v1/rest/routers/process.py",
        "api/memory.py",
        "identity/backend/app/logs_api.py",
        "interfaces/api/v1/rest/routers/health.py",
        "api/dream.py",
        "identity/backend/app/tests.py",
        "api/colony_endpoints.py",
        "interfaces/api/v1/rest/middleware.py",
        "identity/backend/app/logs.py",
        "identity/backend/app/vault.py",
        "tests/api/test_glyph_exchange.py",
        "api/emotion.py",
        "interfaces/api/v1/rest/app.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware.py",
        "identity/backend/app/auth.py",
        "orchestration/api.py",
        "creativity/dream/oneiric_engine/oneiric_core/main.py",
        "tests/active/test_task_announce_api.py",
        "orchestration/brain/neural/neural_intelligence_api.py",
        "identity/backend/app/institution_manager.py",
        "interfaces/api/v1/common/auth.py",
        "interfaces/api/lambda_bot_api_integration.py",
        "api/consciousness.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_fastapi.py",
        "main.py",
        "interfaces/api/v1/rest/routers/metrics.py",
        "identity/backend/app/admin_tools.py",
        "identity/api/api.py",
        "identity/backend/app/users.py",
        "quantum/main.py",
        "core/tier_unification_adapter.py",
        "identity/backend/app/compliance.py",
        "orchestration/brain/access/tier_manager.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware_unified.py",
        "identity/backend/app/vault_downloads.py"
      ],
      "count": 41
    },
    {
      "module": "pydantic",
      "used_in": [
        "interfaces/api/v1/rest/routers/tasks.py",
        "features/docututor/plugin.py",
        "interfaces/api/v1/rest/models.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_unified.py",
        "api/glyph_exchange.py",
        "orchestration/brain/eu_awareness_engine.py",
        "api/memory.py",
        "orchestration/brain/us_institutional_awareness_engine.py",
        "orchestration/brain/research_awareness_engine.py",
        "api/dream.py",
        "api/colony_endpoints.py",
        "core/config.py",
        "creativity/dream/oneiric_engine/oneiric_core/settings.py",
        "api/emotion.py",
        "features/docututor/symbolic_knowledge_core/knowledge_graph.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware.py",
        "core/interfaces/custom_llm.py",
        "orchestration/brain/australian_awareness_engine.py",
        "orchestration/api.py",
        "core/interfaces/lukhas_as_agent/widgets/widget_config.py",
        "orchestration/brain/das_awareness_engine.py",
        "orchestration/brain/awareness_engine.py",
        "creativity/dream/oneiric_engine/oneiric_core/db/user_repository.py",
        "orchestration/brain/neural/neural_intelligence_api.py",
        "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
        "interfaces/api/lambda_bot_api_integration.py",
        "api/consciousness.py",
        "learning/tutor.py",
        "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_fastapi.py",
        "config/settings.py",
        "orchestration/brain/awareness_engine_elevated.py",
        "identity/api/api.py",
        "learning/plugin_learning_engine.py",
        "orchestration/brain/GlobalInstitutionalFramework.py",
        "quantum/main.py",
        "orchestration/brain/canadian_awareness_engine.py",
        "features/docututor/content_generation_engine/doc_generator.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware_unified.py",
        "orchestration/brain/uk_awareness_engine.py"
      ],
      "count": 39
    },
    {
      "module": "tempfile",
      "used_in": [
        "benchmarks/api_system_benchmark.py",
        "benchmarks/voice_system_benchmark.py",
        "tests/hold/test_security_fixes_validation.py",
        "identity/tests/test_comprehensive.py",
        "core/test_image_processing_pipeline.py",
        "core/test_mailbox_simple.py",
        "tests/memory/test_glyph_memory_integration.py",
        "benchmarks/bridge_system_benchmark.py",
        "tests/test_symbolic_replay_engine.py",
        "examples/unit_tests/test_symbolic_anomaly_explorer.py",
        "benchmarks/security_system_benchmark.py",
        "tests/orchestration/test_plugin_registry.py",
        "tests/test_drift_recovery.py",
        "benchmarks/dashboard_system_benchmark.py",
        "tests/core/test_mailbox.py",
        "tests/test_entropy_radar.py",
        "tests/hold/test_security_fixes_verification.py",
        "benchmarks/learning_system_benchmark.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "tests/core/monitoring/test_collapse_tracker.py",
        "memory/systems/memory_viz.py",
        "tests/analytics/test_sid_entropy_radar.py",
        "tests/test_lambda_echo_detector.py",
        "tests/test_oracle_predictor.py",
        "orchestration/brain/safe_subprocess_executor.py",
        "benchmarks/symbolic_system_benchmark.py",
        "tools/prediction/test_prophet.py",
        "orchestration/apis/code_process_integration_api.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py",
        "tests/memory/test_identity_lineage_validation.py",
        "memory/systems/test_lazy_loading.py",
        "memory/systems/memory_profiler.py",
        "tools/parsers/test_knowledge_loader.py",
        "tests/test_ethics_redteam_sim.py",
        "voice/integrations/openai/whisper_client.py",
        "voice/systems/voice_synthesis.py",
        "tests/test_symbiotic_swarm_integration.py",
        "benchmarks/reasoning_system_benchmark.py"
      ],
      "count": 38
    },
    {
      "module": "secrets",
      "used_in": [
        "identity/backend/seedra/ethics/seedra_ethics_engine.py",
        "core/id.py",
        "examples/quantum/quantum_steganographic_demo.py",
        "identity/auth/qrg_generators.py",
        "quantum/vault_manager.py",
        "examples/identity/lukhus_qrg_complete_demo.py",
        "identity/core/lambd_id_service.py",
        "benchmarks/bridge_system_benchmark.py",
        "identity/backend/verifold/yubi_seeder.py",
        "reasoning/id_reasoning_engine.py",
        "core/config.py",
        "creativity/dream/oneiric_engine/oneiric_core/settings.py",
        "benchmarks/security_system_benchmark.py",
        "reasoning/systems/id_reasoning_engine.py",
        "identity/enterprise/auth.py",
        "benchmarks/dashboard_system_benchmark.py",
        "benchmarks/learning_system_benchmark.py",
        "quantum/api_manager.py",
        "identity/backend/verifold/hardware_entropy_seed.py",
        "identity/qrg_100_percent_coverage.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "quantum/post_quantum_crypto.py",
        "benchmarks/symbolic_system_benchmark.py",
        "identity/qrg_test_suite.py",
        "memory/privacy_preserving_memory_vault.py",
        "quantum/\u039bBot_quantum_security.py",
        "identity/utils/entropy_helpers.py",
        "identity/core/sing/sso_engine.py",
        "identity/backend/verifold/verifold_hash_utils.py",
        "identity/auth_backend/pqc_crypto_engine.py",
        "identity/core/id_service/portability_system.py",
        "quantum/web_integration.py",
        "identity/auth_backend/qr_entropy_generator.py",
        "core/quantum_identity_manager.py",
        "identity/core/id_service/lambd_id_generator.py",
        "identity/qrg_integration.py",
        "quantum/certificate_manager.py"
      ],
      "count": 38
    },
    {
      "module": "streamlit",
      "used_in": [
        "ethics/safety/compliance_dashboard.py",
        "orchestration/brain/logging/output_log.py",
        "core/interfaces/research_dashboard.py",
        "core/interfaces/tools/research/research_dashboard.py",
        "core/interfaces/lukhas_as_agent/streamlit/components/tier_visualizer.py",
        "core/interfaces/tools/research/dev_dashboard.py",
        "core/notion_sync.py",
        "core/interfaces/logic/agent_self.py",
        "ethics/sentinel/ethical_sentinel_dashboard.py",
        "core/interfaces/ui/components/dream_export_streamlit.py",
        "core/interfaces/ui/components/voice_preview_streamlit.py",
        "identity/router.py",
        "creativity/dream_systems/dream_export_streamlit.py",
        "core/interfaces/lukhas_as_agent/streamlit/components/dream_export_streamlit.py",
        "core/interfaces/dev_dashboard.py",
        "core/output/message_hub.py",
        "orchestration/brain/output/message_hub.py",
        "core/interfaces/ui/components/replay_graphs.py",
        "core/interfaces/lukhas_as_agent/agent_logic/agent_self.py",
        "core/interfaces/lukhas_as_agent/streamlit/components/voice_preview_streamlit.py",
        "trace/drift_dashboard_visual.py",
        "core/interfaces/lukhas_as_agent/sys/nias/dream_export_streamlit.py",
        "identity/backend/verifold/ai/gpt_symbolic_narrator.py",
        "core/interfaces/app.py",
        "identity/backend/dream_engine/dream_export_streamlit.py",
        "core/interfaces/ui/app.py",
        "ethics/safety/compliance_dashboard_visual.py",
        "core/interfaces/ui/components/tier_visualizer.py",
        "core/interfaces/lukhas_as_agent/streamlit/components/replay_graphs.py",
        "memory/visualizer.py",
        "reasoning/dashboard/trace_dashboard.py",
        "memory/systems/memory_visualizer.py",
        "examples/tests/streamlit_mesh_test.py",
        "core/interfaces/lukhas_as_agent/streamlit/app.py",
        "orchestration/brain/config/settings_editor.py"
      ],
      "count": 35
    },
    {
      "module": "shutil",
      "used_in": [
        "tests/hold/orchestration/test_orchestration_plugins.py",
        "identity/backend/app/cloud_bridge_manager.py",
        "tools/cleanup_and_organize.py",
        "core/spine/integration_orchestrator.py",
        "memory/protection/symbolic_quarantine_sanctum.py",
        "identity/tests/test_comprehensive.py",
        "benchmarks/safety/integrated_safety_test_script_20250729_064441.py",
        "identity/backend/app/game_state_bridge.py",
        "memory/systems/memory_consolidator.py",
        "identity/backend/app/vault.py",
        "examples/unit_tests/test_symbolic_anomaly_explorer.py",
        "tests/orchestration/test_plugin_registry.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "voice/interfaces/eleven_tts.py",
        "tests/test_oracle_predictor.py",
        "tests/test_integrated_safety_simple.py",
        ".vscode/vscode-archive/files_moves_2.py",
        "tests/test_dream_snapshot_export.py",
        "orchestration/migrate_orchestrators.py",
        "tests/conftest.py",
        "orchestration/apis/code_process_integration_api.py",
        "tests/memory/test_identity_lineage_validation.py",
        "memory/systems/test_lazy_loading.py",
        "identity/backend/app/cloud_storage.py",
        "learning/meta_learning_recovery.py",
        "examples/orchestration/demo_agent_orchestration.py",
        "memory/persistence/orthogonal_persistence.py",
        "quantum/certificate_manager.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py"
      ],
      "count": 29
    },
    {
      "module": "openai",
      "used_in": [
        "orchestration/brain/dna/dna_link.py",
        "identity/backend/verifold/narrative_utils.py",
        "orchestration/brain/unified_self_merge_divergence.py",
        "orchestration/brain/output/report_generator.py",
        "core/notion_sync.py",
        "core/interfaces/logic/agent_self.py",
        "quantum/add_verbose_intelligent_descriptions.py",
        "identity/backend/verifold/journal_mode.py",
        "bridge/llm_wrappers/unified_openai_client.py",
        "quantum/regenerate_intelligent_descriptions.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "bridge/llm_wrappers/azure_openai_wrapper.py",
        "identity/backend/dream_engine/assistant.py",
        "ethics/ethical_auditor.py",
        "core/interfaces/lukhas_as_agent/agent_logic/agent_self.py",
        "tools/dev/add_verbose_core_descriptions.py",
        "core/interfaces/voice/listen.py",
        "creativity/dream/openai_dream_integration.py",
        "bridge/openai_core_service.py",
        "orchestration/brain/core/azure_openai_client.py",
        "quantum/add_intelligent_descriptions.py",
        "orchestration/brain/spine/unified_self.py",
        "memory/systems/memoria/dreams.py",
        "memory/systems/memoria/gpt_reflection.py",
        "orchestration/brain/spine/trait_sync_gpt_synb_ref.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "ethics/meg_openai_guard.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py"
      ],
      "count": 28
    },
    {
      "module": "statistics",
      "used_in": [
        "benchmarks/api_system_benchmark.py",
        "quantum/bio_test_oracle.py",
        "orchestration/apis/drift_monitoring_api.py",
        "identity/tests/test_comprehensive.py",
        "benchmarks/performance/quantized_cycles_stress_test.py",
        "benchmarks/bridge_system_benchmark.py",
        "tests/test_reflection_engine.py",
        "identity/backend/verifold/ledger_auditor.py",
        "quantum/systems/bio_integration/test_oracle.py",
        "benchmarks/security_system_benchmark.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "identity/core/id_service/lambd_id_entropy.py",
        "memory/systems/reflection_engine.py",
        "benchmarks/dashboard_system_benchmark.py",
        "benchmarks/learning_system_benchmark.py",
        "dashboard/core/test_performance_monitor.py",
        "benchmarks/symbolic_system_benchmark.py",
        "tools/prediction/test_prophet.py",
        "benchmarks/performance/run_quantized_benchmark.py",
        "identity/auth_utils/cognitive_load_estimator.py",
        "identity/auth_utils/attention_monitor.py",
        "core/symbolic_drift_analyzer.py",
        "core/monitoring_observability.py",
        "tools/prediction/prophet_predictor.py",
        "orchestration/brain/prediction/predictive_resource_manager.py",
        "core/quantum_identity_manager.py"
      ],
      "count": 26
    },
    {
      "module": "psutil",
      "used_in": [
        "core/practical_optimizations.py",
        "orchestration/monitoring/health_checks.py",
        "tests/memory_stress_tests.py",
        "benchmarks/memory/memory_stress_tests/memory_optimization_analysis.py",
        "core/energy_consumption_analysis.py",
        "orchestration/specialized/content_enterprise_orchestrator.py",
        "identity/tests/test_comprehensive.py",
        "benchmarks/performance/quantized_cycles_stress_test.py",
        "memory/memory_optimization.py",
        "core/observability/collector.py",
        "memory/systems/lazy_loading_embeddings.py",
        "benchmarks/tests/run_comprehensive_test_suite.py",
        "core/resource_efficiency_analyzer.py",
        "dashboard/core/test_performance_monitor.py",
        "orchestration/monitoring/sub_agents/memory_cleaner.py",
        "tests/test_memory_stress_final.py",
        "orchestration/brain/monitoring/performance.py",
        "tests/memory_stress_tests_light.py",
        "core/automatic_testing_system.py",
        "orchestration/brain/cpu_friendly_compliance.py",
        "benchmarks/memory/memory_stress_tests/test_memory_stress_final.py",
        "core/monitoring_observability.py",
        "dashboard/core/test_execution_engine.py",
        "core/resource_efficiency.py",
        "memory_optimization_analysis.py"
      ],
      "count": 25
    },
    {
      "module": "requests",
      "used_in": [
        "symbolic/neural/neural_symbolic_bridge.py",
        "voice/symbolic_voice_core.py",
        "reasoning/intent/intent_processor.py",
        "orchestration/brain/lambda_bot_batch_processor.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
        "memory/node.py",
        "examples/api_usage_examples.py",
        "identity/enterprise/auth.py",
        "voice/synthesis.py",
        "orchestration/brain/pr_security_review_task.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "features/integration/neural_symbolic_bridge.py",
        "orchestration/brain/security_pr_analyzer.py",
        "orchestration/agents/multi_agent_collaboration.py",
        "bridge/llm_wrappers/perplexity_wrapper.py",
        "orchestration/brain/autonomous_github_manager.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "voice/systems/voice_synthesis.py",
        "orchestration/brain/github_vulnerability_manager.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py"
      ],
      "count": 21
    },
    {
      "module": "importlib.util",
      "used_in": [
        "tests/dream/test_dream_governance_integration.py",
        "core/testing/plugin_test_framework.py",
        "core/interfaces/research_dashboard.py",
        "core/interfaces/tools/research/research_dashboard.py",
        "core/spine/integration_orchestrator.py",
        "tests/test_brain_colony_coordinator.py",
        "tests/api/test_glyph_exchange.py",
        "quantum/systems/bio_integration/connectivity_consolidator.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "bridge/integration_bridge.py",
        "tests/runners/run_tests_resilient.py",
        "tests/active/test_task_announce_api.py",
        "tools/core_module_analyzer.py",
        "tests/dream/test_dream_limiter.py",
        "orchestration/interfaces/plugin_registry.py",
        "memory/systems/memory_profiler.py",
        "examples/tests/quantum_creative_integration_test.py",
        "dashboard/core/test_management_system.py",
        "examples/unit_tests/test_all.py",
        "quantum/bio_multi_orchestrator.py"
      ],
      "count": 20
    },
    {
      "module": "io",
      "used_in": [
        "identity/backend/verifold/qr_decoder.py",
        "reasoning/analysis/engine.py",
        "symbolic/neural/neural_symbolic_bridge.py",
        "identity/auth/qrg_generators.py",
        "reasoning/intent/intent_processor.py",
        "examples/integration/integration_tests.py",
        "memory/systems/foldin.py",
        "memory/node.py",
        "voice/synthesis.py",
        "memory/systems/memory_viz.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "creativity/dream/openai_dream_integration.py",
        "identity/backend/verifold/visual/glyph_stego_encoder.py",
        "features/integration/neural_symbolic_bridge.py",
        "orchestration/agents/multi_agent_collaboration.py",
        "creativity/emotional_resonance.py",
        "identity/mobile/qr_code_animator.py",
        "identity/core/id_service/portability_system.py",
        "identity/auth_backend/qr_entropy_generator.py",
        "memory/systems/multimodal_memory_support.py"
      ],
      "count": 20
    },
    {
      "module": "concurrent.futures",
      "used_in": [
        "benchmarks/api_system_benchmark.py",
        "identity/tests/test_comprehensive.py",
        "quantum/oscillator.py",
        "features/integration/system_coordinator.py",
        "bridge/message_bus.py",
        "interfaces/registries/intelligence_engine_registry.py",
        "orchestration/brain/cognitive_core.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "tests/advanced_memory_fold_test_suite.py",
        "orchestration/brain/symbol_validator.py",
        "orchestration/brain/monitoring/performance.py",
        "memory/systems/distributed_memory_fold.py",
        "bio/systems/orchestration/bio_orchestrator.py",
        "orchestration/brain/autonomous_github_manager.py",
        "examples/identity/qrg_demo.py",
        "consciousness/cognitive_architecture_controller.py",
        "tests/test_symbiotic_swarm_integration.py",
        "dashboard/core/test_management_system.py",
        "core/orchestration/energy_aware_execution_planner.py"
      ],
      "count": 19
    },
    {
      "module": "cryptography.fernet",
      "used_in": [
        "memory/systems/helix_mapper.py",
        "quantum/vault_manager.py",
        "identity/backend/qrglyphs/qrglymph_public.py",
        "orchestration/brain/orchestration/orchestrator_core.py",
        "orchestration/guardian/guardian_cli_test.py",
        "memory/systems/trauma_lock.py",
        "orchestration/core_modules/orchestrator_core_oxn.py",
        "identity/backend/seedra/seedra_core.py",
        "orchestration/brain/consciousness/memory_identity.py",
        "memory/systems/helix_dna.py",
        "identity/enterprise/auth.py",
        "orchestration/brain/spine/accent_adapter.py",
        "quantum/api_manager.py",
        "orchestration/brain/privacy_manager.py",
        "memory/systems/memory_lock.py",
        "memory/systems/memory_identity.py",
        "identity/core/id_service/portability_system.py",
        "memory/privacy_preserving_memory_vault.py",
        "orchestration/brain/spine/emotion_log_alt.py"
      ],
      "count": 19
    },
    {
      "module": "functools",
      "used_in": [
        "core/module_registry.py",
        "ethics/meg_guard.py",
        "core/identity_integration.py",
        "memory/systems/tier_system.py",
        "core/decorators.py",
        "memory/systems/memory_viz.py",
        "core/practical_optimizations.py",
        "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware_unified.py",
        "creativity/creative_engine.py",
        "tools/dev/patch_utils.py",
        "core/api_controllers.py",
        "core/tier_unification_adapter.py",
        "core/identity_aware_base.py",
        "ethics/tier_enforcer.py",
        "orchestration/brain/monitoring/performance.py",
        "core/tier_aware_colony_proxy.py",
        "creativity/dream/tools/symbolic_anomaly_explorer.py",
        "memory/memory_optimization.py"
      ],
      "count": 18
    },
    {
      "module": "aiohttp",
      "used_in": [
        "orchestration/security/dast/adapters.py",
        "benchmarks/api_system_benchmark.py",
        "core/monitoring_observability.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "core/ai/integration_manager.py",
        "voice/integrations/openai/dalle_client.py",
        "orchestration/brain/net/async_client.py",
        "voice/integrations/openai/whisper_client.py",
        "creativity/dream/openai_dream_integration.py",
        "dashboard/core/test_scheduler.py",
        "memory/systems/distributed_memory_fold.py",
        "docs/documentation_updater.py",
        "voice/integrations/elevenlabs/elevenlabs_client.py",
        "benchmarks/tests/api_performance_benchmark.py",
        "orchestration/brain/lambdabot_autonomous_fixer.py",
        "quantum/certificate_manager.py",
        "bridge/llm_wrappers/unified_openai_client.py"
      ],
      "count": 17
    },
    {
      "module": "ast",
      "used_in": [
        "core/utils/__init__.py",
        "ethics/security/secure_utils.py",
        "tools/import_path_fixer.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "core/introspection/introspector.py",
        "tests/utils/test_collector.py",
        "core/testing/plugin_test_framework.py",
        "features/docututor/content_generation_engine/doc_generator.py",
        "orchestration/brain/symbol_validator.py",
        "core/api_diff_analyzer.py",
        "orchestration/specialized/lambda_dependa_bot.py",
        "tests/hold/test_security_fixes_validation.py",
        "tests/utils/orphan_test_scanner.py",
        "tools/path_validator.py",
        "dashboard/core/test_management_system.py",
        "tests/unified_grammar/test_grammar_compliance.py"
      ],
      "count": 16
    },
    {
      "module": "importlib",
      "used_in": [
        "tests/integration/test_fallback_systems.py",
        "orchestration/interfaces/plugin_registry.py",
        "core/infrastructure/node_registry.py",
        "identity/backend/verifold/tests/test_zk_narrative_proof_adapter.py",
        "ethics/compliance_engine.py",
        "tools/interactive_test_suite.py",
        "tests/utils/validate_test_env.py",
        "tests/memory/test_aliases.py",
        "identity/backend/verifold/tests/test_symbolic_audit_mode.py",
        "orchestration/core_modules/plugin_loader.py",
        "identity/backend/verifold/tests/test_glyph_stego_encoder.py",
        "identity/backend/verifold/tests/test_crypto_router.py",
        "tests/test.py",
        "identity/backend/qrglyphs/tests/test_create_qrglyph.py",
        "identity/backend/verifold/tests/test_ethics_verifier.py",
        "consciousness/brain_integration_20250620_013824.py"
      ],
      "count": 16
    },
    {
      "module": "queue",
      "used_in": [
        "voice/interfaces/input/stream_handler.py",
        "core/minimal_actor.py",
        "benchmarks/optimized_actor_benchmark.py",
        "core/actor_model.py",
        "dashboard/core/test_execution_engine.py",
        "memory/systems/pin_memory.py",
        "core/actor_system.py",
        "voice/message_handler.py",
        "consciousness/cognitive_architecture_controller.py",
        "voice/speech_processor.py",
        "benchmarks/tests/actor_throughput_simple_test.py",
        "orchestration/brain/monitoring/performance.py",
        "benchmarks/simple_actor_benchmark.py",
        "benchmarks/tests/actor_throughput_test.py",
        "dashboard/core/test_management_system.py"
      ],
      "count": 15
    },
    {
      "module": "cryptography.hazmat.primitives",
      "used_in": [
        "quantum/api_manager.py",
        "identity/backend/seedra/ethics/seedra_ethics_engine.py",
        "orchestration/brain/privacy_manager.py",
        "core/id.py",
        "creativity/creative_q_expression.py",
        "memory/systems/memory_lock.py",
        "identity/core/id_service/portability_system.py",
        "reasoning/id_reasoning_engine.py",
        "quantum/post_quantum_crypto_enhanced.py",
        "quantum/vault_manager.py",
        "quantum/neural_symbolic_engine.py",
        "memory/systems/trauma_lock.py",
        "identity/enterprise/auth.py",
        "reasoning/systems/id_reasoning_engine.py",
        "memory/privacy_preserving_memory_vault.py"
      ],
      "count": 15
    },
    {
      "module": "base",
      "used_in": [
        "orchestration/agents/registry.py",
        "orchestration/migrated/ethics_orchestrator.py",
        "ethics/policy_engines/examples/three_laws.py",
        "orchestration/agents/__init__.py",
        "ethics/policy_engines/examples/gpt4_policy.py",
        "learning/_dict_learning.py",
        "ethics/policy_engines/integration.py",
        "orchestration/endocrine_orchestrator.py",
        "ethics/policy_engines/__init__.py",
        "orchestration/resonance_orchestrator.py",
        "orchestration/agents/builtin/jules.py",
        "features/memory/hooks/registry.py",
        "orchestration/system_orchestrator.py",
        "orchestration/module_orchestrator.py",
        "features/memory/hooks/__init__.py"
      ],
      "count": 15
    },
    {
      "module": "contextlib",
      "used_in": [
        "ethics/meg_guard.py",
        "orchestration/config/migration_router.py",
        "core/monitoring_observability.py",
        "creativity/dream/oneiric_engine/oneiric_core/db/db.py",
        "core/practical_optimizations.py",
        "memory/systems/memory_media_file_storage.py",
        "bridge/model_communication_engine.py",
        "creativity/creative_engine.py",
        "dashboard/core/test_execution_engine.py",
        "consciousness/cognitive_architecture_controller.py",
        "orchestration/brain/monitoring/performance.py",
        "core/distributed_tracing.py",
        "orchestration/brain/net/client.py",
        "memory/persistence/orthogonal_persistence.py"
      ],
      "count": 14
    },
    {
      "module": "pickle",
      "used_in": [
        "learning/system.py",
        "memory/systems/meta_learning_patterns.py",
        "core/mailbox.py",
        "quantum/quantum_consensus_system_enhanced.py",
        "memory/systems/memory_viz.py",
        "core/practical_optimizations.py",
        "memory/integrity/collapse_hash.py",
        "memory/systems/lazy_loading_embeddings.py",
        "memory/systems/memory_tracker.py",
        "core/event_replay_snapshot.py",
        "memory/systems/neurosymbolic_integration.py",
        "memory/systems/episodic_replay_buffer.py",
        "memory/memory_optimization.py",
        "memory/persistence/orthogonal_persistence.py"
      ],
      "count": 14
    },
    {
      "module": "copy",
      "used_in": [
        "core/colonies/temporal_colony.py",
        "bridge/shared_state.py",
        "memory/systems/pin_memory.py",
        "memory/integrity/collapse_hash.py",
        "orchestration/brain/attention/quantum_attention.py",
        "orchestration/agents/meta_cognitive_orchestrator_alt.py",
        "voice/voice_profiling.py",
        "orchestration/agents/meta_cognitive_orchestrator.py",
        "quantum/abas_quantum_specialist.py",
        "quantum/systems/bio_integration/multi_orchestrator.py",
        "core/event_replay_snapshot.py",
        "core/neural_architectures/abas/abas_quantum_specialist.py",
        "creativity/emotion/voice_profiling_emotion_engine.py",
        "quantum/bio_multi_orchestrator.py"
      ],
      "count": 14
    },
    {
      "module": "types",
      "used_in": [
        "orchestration/agents/registry.py",
        "tests/dream/test_dream_governance_integration.py",
        "orchestration/brain/reasoning/symbolic_validator.py",
        "orchestration/agents/__init__.py",
        "ethics/compliance_simple.py",
        "tests/api/test_glyph_exchange.py",
        "orchestration/brain/net/client.py",
        "orchestration/agents/builtin/jules.py",
        "creativity/dream/dream_sandbox.py",
        "ethics/compliance.py",
        "orchestration/agents/base.py",
        "tests/dream/test_dream_limiter.py",
        "memory/systems/memory_research.py",
        "tests/core/test_consciousness_phase.py"
      ],
      "count": 14
    },
    {
      "module": "PIL",
      "used_in": [
        "identity/backend/verifold/qr_decoder.py",
        "identity/core/qrg/qrg_manager.py",
        "examples/integration/integration_tests.py",
        "identity/auth/qrg_generators.py",
        "memory/visualizer.py",
        "identity/backend/verifold/qr_encoder.py",
        "creativity/dream/oneiric_engine/demo/dream_interpreter.py",
        "memory/systems/memory_visualizer.py",
        "core/image_processing_pipeline.py",
        "identity/auth_backend/qr_entropy_generator.py",
        "core/test_image_processing_pipeline.py",
        "identity/backend/verifold/visual/glyph_stego_encoder.py",
        "memory/systems/multimodal_memory_support.py"
      ],
      "count": 13
    }
  ],
  "module_locations": {
    "demo_documentation_update": "demo_documentation_update.py",
    "memory_system_demo": "memory_system_demo.py",
    "setup": "setup.py",
    "fix_import_paths": "fix_import_paths.py",
    "update_documentation": "update_documentation.py",
    "main": "features/symbolic/security/main.py",
    "memory_optimization_analysis": "benchmarks/memory/memory_stress_tests/memory_optimization_analysis.py",
    "DigestExtractor": "tools/digest_extractor.py",
    "SymbolicResolver": "tools/symbolic_cli_test.py",
    "core_module_analyzer": "tools/core_module_analyzer.py",
    "task_migration": "tools/task_migration.py",
    "test_knowledge_integration": "tools/test_knowledge_integration.py",
    "WorkspaceOrganizer": "tools/cleanup_and_organize.py",
    "fix_corrupted_lukhas": "tools/fix_corrupted_lukhas.py",
    "sandbox_runner": "tools/sandbox_runner.py",
    "__init__": "quantum/quantum_processing/__init__.py",
    "fix_remaining_issues": "tools/fix_remaining_issues.py",
    "ImportPathAnalyzer": "tools/import_path_fixer.py",
    "ImportAnalyzer": "tools/path_validator.py",
    "fix_headers": "tools/fix_headers.py",
    "SafeWorkspaceAnalyzer": "tools/safe_workspace_analyzer.py",
    "CollapseSimulator": "tools/collapse_simulator.py",
    "MockInfo": "tools/interactive_test_suite.py",
    "TaskTracker": "tools/task_tracker.py",
    "TestSymbolicKnowledgeLoader": "tools/parsers/test_knowledge_loader.py",
    "SymbolicConcept": "tools/parsers/knowledge_loader.py",
    "TestSymbolicMetrics": "tools/prediction/test_prophet.py",
    "prophet_demo": "tools/prediction/prophet_demo.py",
    "AlertLevel": "tools/prediction/prophet_predictor.py",
    "VisionPromptHelper": "tools/vision/vision_prompt_helper.py",
    "DriftAnalyzerCLI": "tools/cli/drift_analyzer_cli.py",
    "ctl": "tools/cli/ctl.py",
    "patch_utils": "tools/dev/patch_utils.py",
    "add_verbose_core_descriptions": "tools/dev/add_verbose_core_descriptions.py",
    "ModuleDigest": "tools/dev/module_digest_extractor.py",
    "ArchetypalFamily": "foundry/lambda_sage.py",
    "EntropyZone": "foundry/symbolic_foundry.py",
    "ReflectionType": "orchestration/monitoring/reflection_layer.py",
    "HormoneModulation": "bio/endocrine_integration.py",
    "StressSignal": "bio/stress_signal.py",
    "CuriositySpark": "bio/curiosity_spark.py",
    "TrustBinder": "bio/trust_binder.py",
    "ResilienceBoost": "bio/resilience_boost.py",
    "HormoneType": "bio/simulation_controller.py",
    "SecurityContext": "bio/oscillator.py",
    "bio_homeostasis": "bio/bio_homeostasis.py",
    "symbolic_entropy": "symbolic/bio/symbolic_entropy.py",
    "BioSimulationController": "bio/__init__.py",
    "BioCore": "bio/core.py",
    "PrimeHarmonicOscillator": "orchestration/brain/prime_oscillator.py",
    "QuantumBioConfig": "bio/quantum_layer.py",
    "ProteinSynthesizer": "bio/protein_synthesizer.py",
    "BioRecoveryProtocol": "bio/recovery_protocol.py",
    "SymbolicEntropyObserver": "symbolic/bio/symbolic_entropy_observer.py",
    "OscillationType": "bio/base_oscillator.py",
    "BrainwaveBand": "bio/eeg_sync_bridge.py",
    "TaskPriority": "orchestration/security/dast/engine.py",
    "bio_affect_model": "bio/bio_affect_model.py",
    "colony_self_repair": "bio/colony_self_repair.py",
    "StabilityAnchor": "bio/stability_anchor.py",
    "CristaOptimizer": "symbolic/bio/crista_optimizer.py",
    "bio_symbolic_architectures": "symbolic/bio/bio_symbolic_architectures.py",
    "CoherenceMetrics": "bio/symbolic/bio_symbolic_orchestrator.py",
    "ContextLayer": "bio/symbolic/contextual_mapping_colony.py",
    "bio_systems_inspiration": "symbolic/bio/bio_systems_inspiration.py",
    "AnomalyType": "creativity/dream/tools/symbolic_anomaly_explorer.py",
    "MitoEthicsSync": "symbolic/bio/mito_ethics_sync.py",
    "StressGate": "symbolic/bio/stress_gate.py",
    "GlyphIDHasher": "symbolic/bio/glyph_id_hash.py",
    "QuantumTunnelFilter": "symbolic/bio/mito_quantum_attention.py",
    "QuantumState": "quantum/quantum_colony.py",
    "FallbackLevel": "bio/symbolic/fallback_systems.py",
    "SymbolicGlyph": "bio/symbolic/bio_symbolic.py",
    "BioPreprocessingColony": "bio/symbolic/preprocessing_colony.py",
    "quantum_attention": "symbolic/bio/quantum_attention.py",
    "DNASimulator": "bio/symbolic/dna_simulator.py",
    "AdaptiveThresholdColony": "bio/symbolic/adaptive_threshold_colony.py",
    "MitochondriaModel": "bio/systems/mitochondria_model.py",
    "compatibility": "bio/systems/orchestration/compatibility.py",
    "ModuleHealth": "bio/systems/orchestration/base_orchestrator.py",
    "IdentityAwareBioOrchestrator": "bio/systems/orchestration/identity_aware_bio_orchestrator.py",
    "BioOrchestrator": "bio/systems/orchestration/bio_orchestrator.py",
    "OrchestratorConfig": "bio/systems/orchestration/oscillator_orchestrator.py",
    "VoiceBioAdapter": "bio/systems/orchestration/adapters/voice_adapter.py",
    "commit_log_checker": "trace/commit_log_checker.py",
    "drift_dashboard_visual": "trace/drift_dashboard_visual.py",
    "EntropyProfile": "trace/drift_tools.py",
    "DriftHarmonizer": "trace/drift_harmonizer.py",
    "vdf": "trace/vdf.py",
    "SymbolicDriftTracker": "symbolic/drift/symbolic_drift_tracker_trace.py",
    "symbolic_trace_logger": "trace/symbolic_trace_logger.py",
    "RestabilizationIndex": "trace/restabilization_index.py",
    "snapshot_divergence_plot": "trace/snapshot_divergence_plot.py",
    "DriftAlignmentController": "trace/drift_alignment_controller.py",
    "DriftTracker": "trace/drift_metrics.py",
    "DriftSeverity": "trace/drift_dashboard.py",
    "Actor": "core/actor_model.py",
    "api_controllers": "core/api_controllers.py",
    "SupervisionStrategy": "core/fault_tolerance.py",
    "apply_api_fixes": "core/apply_api_fixes.py",
    "DistributedAISystem": "core/integrated_system.py",
    "LukhusAITaskType": "core/ai_interface.py",
    "IntegrationConfig": "core/integration_hub.py",
    "ResourceState": "core/resource_optimization_integration.py",
    "ResourceType": "orchestration/brain/prediction/predictive_resource_manager.py",
    "generate_autotest_docs": "core/generate_autotest_docs.py",
    "QuorumOverride": "core/quorum_override.py",
    "SwarmResourceScheduler": "core/resource_scheduler.py",
    "unified_bot": "core/unified_bot.py",
    "PluginType": "orchestration/interfaces/plugin_registry.py",
    "SymbolicContract": "core/symbolic_contract.py",
    "SupervisedActorSystem": "core/actor_supervision_integration.py",
    "EnhancedCoreConfig": "core/integrator.py",
    "LukhasConfig": "core/config.py",
    "config_manager": "core/config_manager.py",
    "AccessTier": "orchestration/core_modules/core_integrator.py",
    "TraceSpan": "core/distributed_tracing.py",
    "autotest_validation": "core/autotest_validation.py",
    "APICall": "core/api_diff_analyzer.py",
    "P2PNode": "core/p2p_fabric.py",
    "benchmark_swarm": "core/benchmark_swarm.py",
    "EventReplayer": "core/event_replayer.py",
    "EventType": "core/event_replay_snapshot.py",
    "DriftAlertLevel": "core/symbolic_drift_analyzer.py",
    "OracleCapabilityType": "core/oracle_nervous_system.py",
    "SafetyEventType": "core/integrated_safety_system.py",
    "TierSystemAdapter": "core/tier_unification_adapter.py",
    "SymbolicBootstrap": "core/symbolic_boot.py",
    "ShardManager": "core/cluster_sharding.py",
    "test_coordination_simple": "core/test_coordination_simple.py",
    "AgentState": "core/enhanced_swarm.py",
    "Event": "core/event_bus.py",
    "Counter": "core/test_mailbox_simple.py",
    "ReasoningColony": "core/colonies/reasoning_colony.py",
    "TagConflictResolver": "core/symbolic_arbitration.py",
    "LukhasCore": "core/core_system.py",
    "BioSymbolicSwarmHub": "core/bio_symbolic_swarm_hub.py",
    "EnergyComponent": "core/energy_consumption_analysis.py",
    "test_p2p_communication": "core/test_p2p_communication.py",
    "OptimizationStrategy": "core/practical_optimizations.py",
    "FallbackEthicsService": "core/fallback_services.py",
    "Consistency": "core/consistency_manager.py",
    "ModuleInfo": "core/module_registry.py",
    "ProjectManagerAgent": "core/demo_coordination.py",
    "LambdaLoggerAdapter": "core/notion_sync.py",
    "SupervisionDirective": "core/supervision.py",
    "ComponentStatus": "core/common.py",
    "CircuitState": "core/circuit_breaker.py",
    "MessagePriority": "bridge/message_bus.py",
    "ObservabilityLevel": "core/observability_steering.py",
    "IntegrityProbe": "orchestration/brain/integrity_probe.py",
    "ReactiveDataPipeline": "core/collaboration.py",
    "TaskStatus": "core/agent_coordination.py",
    "validation_script_fixes": "core/validation_script_fixes.py",
    "MockEventStore": "core/test_tiered_state_management.py",
    "working_bot": "core/working_bot.py",
    "TestOperation": "core/automatic_testing_system.py",
    "IdentityValidationError": "core/identity_aware_base_colony.py",
    "AlertSeverity": "core/monitoring_observability.py",
    "QuantumSecurityLevel": "quantum/web_integration.py",
    "SwarmSyncState": "core/swarm_identity_orchestrator.py",
    "CyclePhase": "core/quantized_thought_cycles.py",
    "QuantizedCycleManager": "core/quantized_cycle_manager.py",
    "StateType": "memory/distributed_state_manager.py",
    "targeted_api_fixes": "core/targeted_api_fixes.py",
    "DirectAIRouter": "core/direct_ai_router.py",
    "IdentityAwareService": "core/identity_aware_base.py",
    "ContractNetInitiator": "core/coordination.py",
    "swarm_visualizer": "core/swarm_visualizer.py",
    "memoria": "memory/systems/memoria.py",
    "TierMappingConfig": "core/identity_integration.py",
    "ResourceEfficiencyAnalyzer": "core/resource_efficiency.py",
    "EventCollector": "core/test_image_processing_pipeline.py",
    "ProxyInitializationError": "core/tier_aware_colony_proxy.py",
    "ActorState": "core/actor_system.py",
    "PeerStatus": "core/p2p_communication.py",
    "GovernanceLayer": "core/governance.py",
    "StateManager": "core/state_management.py",
    "validation": "core/validation.py",
    "Observatory": "core/observatory.py",
    "TierLevel": "identity/core/tier/tier_system.py",
    "client_event": "orchestration/brain/net/client_event.py",
    "MemoryAgent": "core/colonies/memory_colony_enhanced.py",
    "TemporalColony": "core/colonies/temporal_colony.py",
    "CreativityColony": "core/colonies/creativity_colony.py",
    "OracleQuery": "core/colonies/oracle_colony.py",
    "tensor_colony_ops": "core/colonies/tensor_colony_ops.py",
    "MemoryColony": "core/colonies/memory_colony.py",
    "BaseColony": "core/colonies/base_colony.py",
    "SupervisorAgent": "core/colonies/supervisor_agent.py",
    "EthicsAgent": "core/colonies/governance_colony_enhanced.py",
    "GovernanceColony": "core/governance/governance_colony.py",
    "EthicalDecisionType": "core/colonies/ethics_swarm_colony.py",
    "BridgeTokenMap": "core/symbolic_bridge/token_map.py",
    "SymbolicBridgeIntegrator": "core/symbolic_bridge/integrator.py",
    "IdentityMapper": "core/identity/mapper.py",
    "id_manager": "core/identity/id_manager.py",
    "IdentityProcessor": "core/identity/processor.py",
    "IdentityEngine": "core/identity/engine.py",
    "PersonaEngine": "core/identity/persona_engine.py",
    "EmotionalMemoryVector": "core/identity/manager.py",
    "ComponentInfo": "core/spine/integration_orchestrator.py",
    "emotion_mapper_alt": "orchestration/brain/spine/emotion_mapper_alt.py",
    "InteractionContext": "core/personality/personality.py",
    "LucasAGI": "core/personality/creative_personality_clean.py",
    "NeuroHaikuGenerator": "creativity/legacy_creative_expressions.py",
    "TraceRepairEngine": "core/symbolic_diagnostics/trace_repair_engine.py",
    "bio_signals": "core/unified/bio_signals.py",
    "integration": "core/unified/integration.py",
    "orchestration": "core/unified/orchestration.py",
    "message_hub": "orchestration/brain/output/message_hub.py",
    "symbolic_utils": "symbolic/utils/symbolic_utils.py",
    "dream_utils": "creativity/dream_systems/dream_utils.py",
    "ActorMetric": "core/observability/collector.py",
    "ModuleIntrospector": "core/introspection/introspector.py",
    "streamlit_lidar": "orchestration/brain/rem/streamlit_lidar.py",
    "sleep_cycle": "orchestration/brain/rem/sleep_cycle.py",
    "visualizer": "core/rem/visualizer.py",
    "TestCase": "core/testing/plugin_test_framework.py",
    "SymbolicTrace": "core/symbolic_reasoning/symbolic_trace.py",
    "EthicalFramework": "orchestration/brain/monitoring/guardian_reflector.py",
    "EthicalAnnotation": "core/ethics/dream_ethics_injector.py",
    "AITask": "core/ai/integration_manager.py",
    "SequentialCounterActor": "core/examples/mailbox_demo.py",
    "MethylationModel": "core/symbolism/methylation_model.py",
    "TagScope": "core/symbolism/tags.py",
    "SymbolicShellArchiver": "core/symbolism/archiver.py",
    "VeriFoldCollapseType": "core/verifold/verifold_unified.py",
    "EnergyProfile": "core/orchestration/energy_aware_execution_planner.py",
    "AdaptationStrategy": "core/meta_learning/rate_modulator.py",
    "RemediationLevel": "core/meta_learning/remediator_agent.py",
    "IntentNodeHistory": "core/meta_learning/symbolic_feedback.py",
    "LearningMetrics": "learning/meta_learning.py",
    "EnhancementMode": "core/meta_learning/enhancement_system.py",
    "vector_ops": "core/symbolic/collapse/vector_ops.py",
    "TextHandler": "core/user_interface_manager/text_handler.py",
    "VoiceHandler": "core/user_interface_manager/voice_handler.py",
    "CollapseAlertLevel": "core/monitoring/collapse_tracker.py",
    "CollapseIntegration": "core/monitoring/collapse_integration.py",
    "DriftType": "orchestration/apis/drift_monitoring_api.py",
    "IdentityClient": "identity/interface.py",
    "IntentNode": "reasoning/intent/intent_processor.py",
    "Node": "core/infrastructure/base_node.py",
    "NodeRegistry": "core/infrastructure/node_registry.py",
    "NodeManager": "core/infrastructure/node_manager.py",
    "DreamRecorder": "core/modules/nias/dream_recorder.py",
    "NeuralMode": "core/neural_architectures/neural_integrator.py",
    "QuantumBioCapabilityLevel": "quantum/abas_quantum_specialist.py",
    "SymptomReporter": "core/interaction/symptom_reporter.py",
    "GeofenceRegion": "core/services/location/geofencing_manager.py",
    "LocationUpdate": "core/services/location/tracker.py",
    "personas": "core/services/personality/personas.py",
    "empathy": "core/services/personality/empathy.py",
    "research_dashboard": "core/interfaces/tools/research/research_dashboard.py",
    "cli": "core/interfaces/cli.py",
    "app": "core/interfaces/lukhas_as_agent/streamlit/app.py",
    "CustomLlm": "core/interfaces/custom_llm.py",
    "launcher": "core/interfaces/lukhas_as_agent/sys/dast/launcher.py",
    "dev_dashboard": "core/interfaces/tools/research/dev_dashboard.py",
    "socket": "core/interfaces/socket.py",
    "dashboad": "core/interfaces/dashboad.py",
    "web_formatter": "core/interfaces/web_formatter.py",
    "gui_launcher": "core/interfaces/ui/gui_launcher.py",
    "dashboard_settings": "features/config/dashboard_settings.py",
    "dream_export_streamlit": "creativity/dream/dream_export_streamlit.py",
    "voice_preview_streamlit": "core/interfaces/lukhas_as_agent/streamlit/components/voice_preview_streamlit.py",
    "SecurityError": "ethics/security/secure_utils.py",
    "replay_graphs": "core/interfaces/lukhas_as_agent/streamlit/components/replay_graphs.py",
    "tier_visualizer": "core/interfaces/lukhas_as_agent/streamlit/components/tier_visualizer.py",
    "payload_builder": "core/interfaces/lukhas_as_agent/streamlit/components/payload_builder.py",
    "AdaptiveUI": "orchestration/specialized/ui_orchestrator.py",
    "session_logger": "core/interfaces/tools/security/session_logger.py",
    "dao_vote": "core/interfaces/tools/dao/dao_vote.py",
    "dao_propose": "core/interfaces/tools/dao/dao_propose.py",
    "speak": "core/interfaces/tools/cli/speak.py",
    "dream_cli": "orchestration/brain/dream_engine/cli/dream_cli.py",
    "command_registry": "core/interfaces/tools/cli/command_registry.py",
    "NIASPlugin": "core/interfaces/nias/__init__.py",
    "generate_nias_docs": "core/interfaces/nias/generate_nias_docs.py",
    "consent_manager": "core/interfaces/logic/consent_manager.py",
    "delegate_logic": "core/interfaces/logic/delegate_logic.py",
    "agent_logic_architecture": "core/interfaces/logic/agent_logic_architecture.py",
    "voice_narration_player": "core/interfaces/lukhas_as_agent/agent_logic/voice_narration_player.py",
    "agent_self": "core/interfaces/lukhas_as_agent/agent_logic/agent_self.py",
    "agent_core": "core/interfaces/logic/agent_core.py",
    "orchestrator": "orchestration/brain/symbolic_ai/orchestrator.py",
    "safety_filter": "core/interfaces/lukhas_as_agent/agent_logic/safety_filter.py",
    "memory_handler": "memory/systems/memory_handler.py",
    "context_builder": "core/interfaces/logic/context/context_builder.py",
    "voice_renderer": "core/interfaces/logic/voice/voice_renderer.py",
    "voice_agent": "core/interfaces/voice/voice_agent.py",
    "listen": "core/interfaces/voice/listen.py",
    "edge_voice": "core/interfaces/voice/edge_voice.py",
    "sayit": "core/interfaces/voice/core/sayit.py",
    "NLPEngine": "core/interfaces/voice/voice_emotional/context_aware_modular_voice.py",
    "agent_handoff": "core/interfaces/lukhas_as_agent/core/agent_handoff.py",
    "lukhas_nias_filter": "core/interfaces/lukhas_as_agent/core/lukhas_nias_filter.py",
    "nias_filter": "core/interfaces/lukhas_as_agent/core/nias_filter.py",
    "duet_conductor": "voice/duet_conductor.py",
    "checkout_handler": "core/interfaces/lukhas_as_agent/core/checkout_handler.py",
    "reward_reputation": "core/interfaces/lukhas_as_agent/core/reward_reputation.py",
    "affiliate_log": "core/interfaces/lukhas_as_agent/news_and_social/affiliate_log.py",
    "vision_prompts": "core/interfaces/lukhas_as_agent/core/vision_prompts.py",
    "vendor_sync": "core/interfaces/lukhas_as_agent/core/vendor_sync.py",
    "generate_image": "core/interfaces/lukhas_as_agent/core/generate_image.py",
    "generate_video": "core/interfaces/lukhas_as_agent/core/generate_video.py",
    "render_ai": "core/interfaces/lukhas_as_agent/core/render_ai.py",
    "overview_log": "core/interfaces/lukhas_as_agent/core/overview_log.py",
    "filter_gpt": "core/interfaces/lukhas_as_agent/core/filter_gpt.py",
    "gatekeeper": "core/interfaces/lukhas_as_agent/core/gatekeeper.py",
    "scheduler": "core/interfaces/lukhas_as_agent/core/scheduler.py",
    "voice_duet": "learning/systems/voice_duet.py",
    "emotion_log": "orchestration/brain/spine/emotion_log.py",
    "wallet": "core/interfaces/lukhas_as_agent/core/wallet.py",
    "vendor_hospitality_sync": "core/interfaces/lukhas_as_agent/auth/vendor_hospitality_sync.py",
    "registry": "core/interfaces/lukhas_as_agent/auth/registry.py",
    "trace_log_viewer": "core/interfaces/lukhas_as_agent/sample_payloads/trace_log_viewer.py",
    "constants": "core/interfaces/lukhas_as_agent/utils/constants.py",
    "symbolic_github_export": "core/interfaces/lukhas_as_agent/utils/symbolic_github_export.py",
    "main_loop": "core/interfaces/lukhas_as_agent/sys/nias/main_loop.py",
    "replay_queue": "core/interfaces/lukhas_as_agent/sys/nias/replay_queue.py",
    "voice_narrator": "core/interfaces/lukhas_as_agent/sys/nias/voice_narrator.py",
    "delivery_loop": "core/interfaces/lukhas_as_agent/sys/nias/delivery_loop.py",
    "feedback_log_viewer": "core/interfaces/lukhas_as_agent/sys/nias/feedback_log_viewer.py",
    "dream_narrator_queue": "creativity/dream/dream_narrator_queue.py",
    "validate_payload": "core/interfaces/lukhas_as_agent/sys/nias/validate_payload.py",
    "nias_core": "core/interfaces/lukhas_as_agent/sys/nias/nias_core.py",
    "replay_heatmap": "core/interfaces/lukhas_as_agent/sys/nias/replay_heatmap.py",
    "inject_message_simulator": "core/interfaces/lukhas_as_agent/sys/nias/inject_message_simulator.py",
    "trace_logger": "orchestration/brain/utils/trace_logger.py",
    "generate_payload_cli": "core/interfaces/lukhas_as_agent/sys/nias/generate_payload_cli.py",
    "symbolic_reply_generator": "core/interfaces/lukhas_as_agent/sys/nias/symbolic_reply_generator.py",
    "05_25_dream_clustering_engine": "core/interfaces/lukhas_as_agent/sys/nias/05_25_dream_clustering_engine.py",
    "symbolic_matcher": "core/interfaces/lukhas_as_agent/sys/nias/symbolic_matcher.py",
    "dream_log_viewer": "creativity/dream/visualization/dream_log_viewer.py",
    "consent_filter": "core/interfaces/lukhas_as_agent/sys/nias/consent_filter.py",
    "replay_visualizer": "core/interfaces/lukhas_as_agent/sys/nias/replay_visualizer.py",
    "dream_recorder": "core/interfaces/lukhas_as_agent/sys/nias/dream_recorder.py",
    "feedback_loop": "core/interfaces/lukhas_as_agent/sys/nias/feedback_loop.py",
    "feedback_insight_cli": "core/interfaces/lukhas_as_agent/sys/nias/feedback_insight_cli.py",
    "narration_controller": "learning/aid/dream_engine/narration_controller.py",
    "dast_core": "core/interfaces/lukhas_as_agent/sys/dast/dast_core.py",
    "store": "core/interfaces/lukhas_as_agent/sys/dast/store.py",
    "partner_sdk": "core/interfaces/lukhas_as_agent/sys/dast/partner_sdk.py",
    "aggregator": "core/interfaces/lukhas_as_agent/sys/dast/aggregator.py",
    "dast": "core/interfaces/lukhas_as_agent/sys/dast/dast.py",
    "schedule_manager": "core/interfaces/lukhas_as_agent/sys/dast/schedule_manager.py",
    "dast_logger": "core/interfaces/lukhas_as_agent/sys/dast/dast_logger.py",
    "abas": "core/interfaces/lukhas_as_agent/sys/abas/abas.py",
    "live_renderer_widget": "core/interfaces/lukhas_as_agent/widgets/live_renderer_widget.py",
    "terminal_widget": "core/interfaces/lukhas_as_agent/widgets/terminal_widget.py",
    "widget_engine": "core/interfaces/lukhas_as_agent/widgets/widget_engine.py",
    "widget_archive": "core/interfaces/lukhas_as_agent/widgets/widget_archive.py",
    "travel_widget": "core/interfaces/lukhas_as_agent/widgets/travel_widget.py",
    "delivery_tracker_widget": "core/interfaces/lukhas_as_agent/widgets/delivery_tracker_widget.py",
    "WidgetConfig": "core/interfaces/lukhas_as_agent/widgets/widget_config.py",
    "s_dispatcher": "core/interfaces/lukhas_as_agent/news_and_social/s_dispatcher.py",
    "llm_multiverse_router": "core/router/llm_multiverse_router.py",
    "enhanced_memory_manager": "memory/enhanced_memory_manager.py",
    "MemoryOpenAIAdapter": "memory/openai_memory_adapter.py",
    "MemoryService": "memory/service.py",
    "DreamMemoryManager": "memory/systems/dream_memory_manager.py",
    "MemoryManager": "memory/systems/memory_bases.py",
    "memory_manager": "memory/memory_manager.py",
    "MoralDecisionType": "memory/structural_conscience.py",
    "EnhancedMemoryManager": "memory/manager.py",
    "EvolutionType": "memory/evolution.py",
    "EmotionVector": "emotion/models.py",
    "BaseMemoryManager": "memory/base_manager.py",
    "MemoryTier": "memory/systems/hierarchical_data_store.py",
    "MemoryHealthMetrics": "memory/dashboard.py",
    "PrivacyLevel": "memory/privacy_preserving_memory_vault.py",
    "MemoryEntry": "memory/basic.py",
    "SymbolAwareTieredMemory": "memory/symbol_aware_tiered_memory.py",
    "GlyphBinding": "memory/glyph_memory_integration.py",
    "EmotionalMemoryManager": "memory/emotional_memory_manager.py",
    "symbolic_integration": "memory/symbolic_integration.py",
    "DriftMemoryManager": "memory/drift_memory_manager.py",
    "test_lightweight_concurrency": "memory/test_lightweight_concurrency.py",
    "FoldEntropyVisualizer": "memory/fold_entropy_visualizer.py",
    "dreamseed_example": "memory/dreamseed_example.py",
    "UnifiedEmotionalMemoryManager": "memory/emotional_memory_manager_unified.py",
    "MemoryNode": "features/symbolic/collapse/engine.py",
    "LoopInfo": "memory/loop_monitor.py",
    "ActorPriority": "memory/lightweight_concurrency.py",
    "enhanced_memory_fold": "memory/enhanced_memory_fold.py",
    "QuantumMemoryManager": "memory/quantum_memory_manager.py",
    "CoreMemoriaConfig": "memory/memoria.py",
    "TestResult": "examples/integration/integration_tests.py",
    "VisualizationConfig": "memory/systems/memory_visualizer.py",
    "SymbolicVaultScanner": "memory/tools/lambda_vault_scan.py",
    "MemoryDriftAuditor": "memory/tools/memory_drift_auditor.py",
    "EpisodicMemoryRecord": "memory/colonies/episodic_memory_colony.py",
    "ColonyRole": "memory/systems/colony_swarm_integration.py",
    "ValidationMode": "memory/core/colony_memory_validator.py",
    "MemoryType": "orchestration/brain/spine/fold_engine.py",
    "EpisodicContext": "memory/core/interfaces/episodic_interface.py",
    "SemanticRelationType": "memory/core/interfaces/semantic_interface.py",
    "ProteinType": "memory/proteome/symbolic_proteome.py",
    "OscillationPhase": "memory/hippocampal/theta_oscillator.py",
    "PatternSeparator": "memory/hippocampal/pattern_separator.py",
    "HippocampalState": "memory/hippocampal/hippocampal_buffer.py",
    "drift_tracker": "memory/episodic/drift_tracker.py",
    "recaller": "memory/episodic/recaller.py",
    "Memoria": "memory/systems/memory_checkpoint.py",
    "MemoryTraceHarmonizer": "memory/convergence/memory_trace_harmonizer.py",
    "CreativityMemoryAdapter": "memory/adapters/creativity_adapter.py",
    "ColonyMemoryStats": "memory/adapters/colony_memory_adapter.py",
    "QuarantineStatus": "memory/protection/symbolic_quarantine_sanctum.py",
    "ResonanceMode": "memory/resonance/resonant_memory_access.py",
    "PersistenceMode": "memory/persistence/orthogonal_persistence.py",
    "SymbolicMotif": "memory/compression/symbolic_delta.py",
    "EthicalSeverity": "memory/governance/ethical_drift_governor.py",
    "HashAlgorithm": "memory/integrity/collapse_hash.py",
    "ReplayMode": "memory/systems/replay_system.py",
    "NucleusState": "memory/scaffold/atomic_memory_scaffold.py",
    "memory_recall": "memory/systems/memory_recall.py",
    "Category": "memory/systems/memory_profiler.py",
    "InMemoryCacheStorageWrapper": "memory/systems/in_memory_cache_storage_wrapper.py",
    "MemoryDriftMirror": "memory/systems/memory_drift_mirror.py",
    "SymbolicSnapshot": "memory/systems/symbolic_snapshot.py",
    "lukhas_memory_encryptor": "memory/systems/lukhas_memory_encryptor.py",
    "DriftMetrics": "tests/core/symbolic/test_drift.py",
    "AttentionConfig": "memory/systems/attention_memory_layer.py",
    "AdaptiveMemoryEngine": "memory/systems/adaptive_memory_engine.py",
    "MemoryLoopRebuilder": "memory/systems/memory_loop_rebuilder.py",
    "MemoryEvolution": "features/docututor/memory_evolution/memory_evolution.py",
    "ModalityType": "features/integration/dynamic_modality_broker.py",
    "dream_memory_export": "memory/systems/dream_memory_export.py",
    "optimized_memory_item": "memory/systems/optimized_memory_item.py",
    "GlyphMemoryIndex": "memory/systems/glyph_memory_bridge.py",
    "memory_reflector": "memory/systems/memory_reflector.py",
    "TraumaLockSystem": "memory/systems/trauma_lock.py",
    "VoiceMemoryHelix": "memory/systems/memory_helix.py",
    "CausalRelationType": "memory/systems/causal_memory_chains.py",
    "MemoryAccessPolicy": "orchestration/brain/consciousness/memory_identity.py",
    "memoria_system": "memory/systems/memoria_system.py",
    "ProtectionLevel": "memory/systems/identity_lineage_bridge.py",
    "symbolic_drift_tracker": "memory/systems/symbolic_drift_tracker.py",
    "foldout_simple": "memory/systems/foldout_simple.py",
    "MemoryResonanceAnalyzer": "memory/systems/memory_resonance_analyzer.py",
    "EmotionalState": "memory/systems/memory_processing.py",
    "InMemorySpanExporter": "memory/systems/in_memory_span_exporter.py",
    "NodeState": "memory/systems/distributed_memory_fold.py",
    "EnhancedMemoryIntegration": "memory/systems/integration_example.py",
    "pin_memory": "memory/systems/pin_memory.py",
    "MemoryOperationType": "memory/systems/memory_orchestrator.py",
    "memory_comprehensive": "memory/systems/memory_comprehensive.py",
    "foldout": "memory/systems/foldout.py",
    "MemoryFile": "memory/systems/memory_media_file_storage.py",
    "MemoryStrand": "quantum/healix_mapper.py",
    "memory_format": "memory/systems/memory_format.py",
    "memory_cloud": "memory/systems/memory_cloud.py",
    "MemorySessionStorage": "memory/systems/memory_session_storage.py",
    "HelixMemory": "memory/systems/helix_dna.py",
    "LiveRange": "memory/systems/memory_planning.py",
    "InMemoryLogExporter": "memory/systems/in_memory_log_exporter.py",
    "simple_512_test": "memory/systems/simple_512_test.py",
    "MemoryProcessor": "memory/systems/processor.py",
    "MetaLearningSystem": "orchestration/brain/learn_to_learn.py",
    "integration_bridge": "memory/systems/integration_bridge.py",
    "ChatGPTMemoryConfig": "memory/systems/chatgpt_memory_integrator_legacy.py",
    "MemoryValidator": "memory/systems/memory_validator.py",
    "OptimizedVectorStorageLayer": "memory/systems/optimized_hybrid_memory_fold.py",
    "MemoryProfileDispatchMode": "memory/systems/memory_tracker.py",
    "MemoryTrace": "memory/systems/trace_injector.py",
    "test_lazy_loading": "memory/systems/test_lazy_loading.py",
    "test_512_dim_optimization": "memory/systems/test_512_dim_optimization.py",
    "CausationType": "features/memory/fold_lineage_tracker.py",
    "AgentMemory": "memory/systems/simple_memory.py",
    "memory_trace": "memory/systems/memory_trace.py",
    "memory_voice_helix": "memory/systems/memory_voice_helix.py",
    "MemoryIntrospectionEngine": "memory/systems/memory_introspection_engine.py",
    "memory_trace_logger": "memory/systems/memory_trace_logger.py",
    "MemoryEngine": "memory/systems/engine.py",
    "memory_encryptor": "memory/systems/memory_encryptor.py",
    "foldin_simple": "memory/systems/foldin_simple.py",
    "HelixMapper": "memory/systems/helix_mapper.py",
    "QuantumAssociativeMemoryBank": "memory/systems/quantum_memory_architecture.py",
    "HybridMemoryItem": "memory/systems/hybrid_memory_fold.py",
    "MemoryOrchestrator": "memory/systems/orchestrator.py",
    "PinMemoryCache": "memory/systems/pin_memory_cache.py",
    "LKFPackError": "memory/systems/foldin.py",
    "EmotionalModulator": "memory/systems/emotional_memory_manager.py",
    "AdvancedMemoryManager": "memory/systems/memory_advanced_manager.py",
    "MemorySegment": "memory/systems/healix_memory_core.py",
    "RecallHandler": "memory/systems/recall_handler.py",
    "memory_encoder": "memory/systems/memory_encoder.py",
    "ReplayStrategy": "memory/systems/episodic_replay_buffer.py",
    "MemoryDriftStabilizer": "memory/systems/memory_drift_stabilizer.py",
    "memory_seeder": "memory/systems/memory_seeder.py",
    "MemoryHelixVisualizer": "orchestration/brain/visualization/memory_helix_visualizer.py",
    "VerifoldRegistryAdapter": "memory/systems/integration_adapters.py",
    "LearningModuleIntegration": "memory/systems/module_integrations.py",
    "CompressionState": "memory/systems/symbolic_delta_compression.py",
    "ExponentialLearningSystem": "learning/exponential_learning.py",
    "GlyphResonanceLevel": "memory/systems/dream_trace_linker.py",
    "ReplayEvent": "identity/backend/verifold/verifold_replay_engine.py",
    "DreamState": "memory/systems/dream_integrator.py",
    "lukhas_memory_recall": "memory/systems/lukhas_memory_recall.py",
    "EmbeddingCacheEntry": "memory/systems/lazy_loading_embeddings.py",
    "MemoryConsolidationEngine": "memory/systems/memory_consolidation.py",
    "IdentityLinkType": "memory/systems/causal_identity_tracker.py",
    "PatternType": "memory/systems/meta_learning_patterns.py",
    "MemoryItem": "memory/systems/memory_fold_system.py",
    "CollapseBuffer": "features/symbolic/collapse/buffer.py",
    "MemorySystemConsolidator": "memory/systems/memory_consolidator.py",
    "WorkingMemoryBuffer": "memory/systems/bio_symbolic_memory.py",
    "Bytes": "memory/systems/memory_viz.py",
    "CollapseTrace": "features/symbolic/collapse/trace.py",
    "SymbolicRelationType": "memory/systems/neurosymbolic_integration.py",
    "MemoryObjectStreamStatistics": "memory/systems/memory_research.py",
    "agent_memory_trace_animator": "memory/systems/agent_memory_trace_animator.py",
    "memoria_codex": "memory/systems/memoria_codex.py",
    "chatgpt_memory_integrator": "memory/systems/chatgpt_memory_integrator.py",
    "MemoryUtils": "memory/systems/memory_utils.py",
    "MemoryDriftTracker": "memory/systems/memory_drift_tracker.py",
    "integrity_collapser": "memory/systems/integrity_collapser.py",
    "VoiceMemoryBridge": "memory/systems/voice_memory_bridge.py",
    "MemoryAccessError": "memory/systems/memory_learning/memory_manager.py",
    "_MockChoiceContentDreamsDP": "memory/systems/memoria/dreams.py",
    "replayer": "memory/systems/memoria/replayer.py",
    "reflector": "memory/systems/memoria/reflector.py",
    "dream_cron": "memory/systems/memoria/dream_cron.py",
    "dreams_alt": "memory/systems/memoria/dreams_alt.py",
    "_MockChoiceContent": "memory/systems/memoria/gpt_reflection.py",
    "SleepStage": "memory/consolidation/consolidation_orchestrator.py",
    "CircadianPhase": "memory/consolidation/sleep_cycle_manager.py",
    "RippleType": "memory/consolidation/ripple_generator.py",
    "TraumaType": "memory/repair/advanced_trauma_repair.py",
    "HelixRepairModule": "memory/repair/helix_repair_module.py",
    "ConceptNode": "memory/neocortical/concept_hierarchy.py",
    "CorticalLayer": "memory/neocortical/neocortical_network.py",
    "SemanticExtractor": "memory/neocortical/semantic_extractor.py",
    "TestQRGCore": "identity/qrg_test_suite.py",
    "QRGType": "examples/identity/lukhus_qrg_complete_demo.py",
    "trace": "identity/trace.py",
    "diagnostics": "identity/diagnostics.py",
    "DeploymentConfig": "identity/lukhus_deployment_package.py",
    "QRGShowcase": "identity/qrg_showcase.py",
    "TestQRGEdgeCases": "identity/qrg_100_percent_coverage.py",
    "router": "identity/router.py",
    "MultiUserSync": "identity/auth_backend/multi_user_sync.py",
    "CrossDeviceHandshake": "identity/auth_backend/cross_device_handshake.py",
    "WebRTCPeerSync": "identity/auth_backend/webrtc_peer_sync.py",
    "LukhasTrustScorer": "identity/auth_backend/trust_scorer.py",
    "DataProcessingBasis": "identity/auth_backend/authentication_server.py",
    "audit_logger": "identity/backend/app/audit_logger.py",
    "entropy_health_api": "identity/auth_backend/entropy_health_api.py",
    "PQCKeyPair": "identity/auth_backend/pqc_crypto_engine.py",
    "QREntropyGenerator": "identity/auth_backend/qr_entropy_generator.py",
    "OnboardingCLI": "identity/tools/onboarding_cli.py",
    "CulturalContext": "identity/auth/cultural_profile_manager.py",
    "shared_logging": "identity/auth_utils/shared_logging.py",
    "GridPattern": "identity/auth_utils/grid_size_calculator.py",
    "AttentionState": "identity/auth_utils/attention_monitor.py",
    "CognitiveLoadLevel": "identity/auth_utils/cognitive_load_estimator.py",
    "ReplayProtection": "identity/auth_utils/replay_protection.py",
    "SymbolicLoginType": "identity/core/qrs_manager.py",
    "LambdaTier": "identity/core/user_tier_mapping.py",
    "BrainIdentityConnector": "identity/core/brain_identity_connector.py",
    "VeriFoldConnector": "identity/core/verifold_connector.py",
    "EntropyLevel": "identity/core/id_service/lambd_id_entropy.py",
    "RecoveryMethod": "identity/core/id_service/portability_system.py",
    "ValidationLevel": "identity/core/id_service/lambd_id_validator.py",
    "Mnemonic": "identity/core/id_service/mnemonic.py",
    "UserContext": "identity/core/id_service/lambd_id_generator.py",
    "LambdaTraceLogger": "identity/core/trace/activity_logger.py",
    "SymbolicPatternAnalyzer": "identity/core/trace/pattern_analyzer.py",
    "BiometricType": "identity/core/auth/biometric_integration.py",
    "LambdaConsentManager": "identity/core/sent/consent_manager.py",
    "ConsentHistoryManager": "identity/core/sent/consent_history.py",
    "ConsentPolicyEngine": "identity/core/sent/policy_engine.py",
    "SymbolicScopesManager": "identity/core/sent/symbolic_scopes.py",
    "CommercialTier": "identity/core/commercial/commercial_module.py",
    "QRGGenerator": "identity/core/qrs/qrg_generator.py",
    "SessionReplayManager": "identity/core/qrs/session_replay.py",
    "OnboardingComplexity": "identity/core/onboarding/onboarding_config.py",
    "OnboardingStage": "identity/core/onboarding/onboarding.py",
    "LambdaSSOEngine": "identity/core/sing/sso_engine.py",
    "CrossDeviceTokenManager": "identity/core/sing/cross_device_manager.py",
    "TierValidator": "identity/core/tier/tier_validator.py",
    "AuthenticationMethod": "identity/enterprise/auth.py",
    "LucasAwarenessProtocol": "consciousness/awareness/awareness_protocol.py",
    "kyi_check": "identity/lukhas_identity/security/kyi_check.py",
    "EntropyBeacon": "identity/wearables_integration/entropy_beacon.py",
    "SymbolicVault": "identity/security/symbolic_vault.py",
    "accessibility_overlay": "identity/auth/accessibility_overlay.py",
    "ConstitutionalLevel": "identity/auth/constitutional_gatekeeper.py",
    "CognitiveSyncAdapter": "identity/auth/cognitive_sync_adapter.py",
    "DeviceType": "identity/auth/entropy_synchronizer.py",
    "UIAdaptationMode": "identity/auth/adaptive_ui_controller.py",
    "claude_sync_relay": "identity/tests/claude_sync_relay.py",
    "LambdaIDCoreTests": "identity/tests/test_comprehensive.py",
    "EntropyScore": "identity/utils/entropy_calculator.py",
    "EntropyCalculator": "identity/utils/entropy_helpers.py",
    "SymbolicCategory": "identity/utils/symbolic_parser.py",
    "hash_utilities": "identity/utils/hash_utilities.py",
    "QRGParser": "identity/utils/qrg_parser.py",
    "trust_sharing_manager": "identity/backend/database/trust_sharing_manager.py",
    "crud": "identity/backend/database/crud.py",
    "cloud_storage": "identity/backend/app/cloud_storage.py",
    "auth": "interfaces/api/v1/common/auth.py",
    "incident_reporter": "identity/backend/app/incident_reporter.py",
    "id_generator": "identity/backend/app/id_generator.py",
    "context_manager": "identity/backend/app/context_manager.py",
    "admin_tools": "identity/backend/app/admin_tools.py",
    "logs_api": "identity/backend/app/logs_api.py",
    "journey_log_manager": "identity/backend/app/journey_log_manager.py",
    "qrglyph_generator": "identity/backend/app/qrglyph_generator.py",
    "compliance": "identity/backend/app/compliance.py",
    "users": "identity/backend/app/users.py",
    "encryption_core": "identity/backend/app/encryption_core.py",
    "tier_manager": "orchestration/brain/access/tier_manager.py",
    "badge_manager": "identity/backend/app/badge_manager.py",
    "session_manager": "identity/backend/app/session_manager.py",
    "cloud_storage_policy": "identity/backend/app/cloud_storage_policy.py",
    "game_state_bridge": "identity/backend/app/game_state_bridge.py",
    "vault_downloads": "identity/backend/app/vault_downloads.py",
    "symbolic_score": "identity/backend/app/symbolic_score.py",
    "email_logs": "identity/backend/app/email_logs.py",
    "crypto": "identity/backend/app/crypto.py",
    "cloud_bridge_manager": "identity/backend/app/cloud_bridge_manager.py",
    "replay_manager": "identity/backend/app/replay_manager.py",
    "vault": "identity/backend/app/vault.py",
    "logs": "identity/backend/app/logs.py",
    "emailer": "identity/backend/app/emailer.py",
    "external_authenticator": "identity/backend/app/external_authenticator.py",
    "tests": "identity/backend/app/tests.py",
    "institution_manager": "identity/backend/app/institution_manager.py",
    "device_registry": "identity/backend/app/device_registry.py",
    "token_handler": "identity/backend/app/token_handler.py",
    "analytics_engine": "identity/backend/app/analytics_engine.py",
    "log_viewer": "identity/backend/dao/log_viewer.py",
    "dao_core": "identity/backend/dao/dao_core.py",
    "IdentityProfile": "identity/backend/seedra/seedra_core.py",
    "BiometricTemplate": "identity/backend/seedra/biometric_engine.py",
    "ValidationRule": "identity/backend/seedra/identity_validator.py",
    "SEEDRAv3Ethics": "identity/backend/seedra/ethics/seedra_ethics_engine.py",
    "seedra_vault_manager": "identity/backend/seedra/vault/seedra_vault_manager.py",
    "seedra_registry": "identity/backend/seedra/vault/seedra_registry.py",
    "EmotionType": "identity/backend/verifold/entropy_fusion.py",
    "CollapseHashSetup": "identity/backend/verifold/setup_project.py",
    "CollapseQREncoder": "identity/backend/verifold/qr_encoder.py",
    "HardwareType": "identity/backend/verifold/hardware_entropy_seed.py",
    "verifold_cli": "identity/backend/verifold/verifold_cli.py",
    "QRVerificationRequest": "identity/backend/verifold/web_qr_verifier.py",
    "CollapseHashGUI": "identity/backend/verifold/verifold_gui.py",
    "VerifoldGenerator": "identity/backend/verifold/verifold_hash_pq.py",
    "DashboardDataLoader": "identity/backend/verifold/web_dashboard.py",
    "KeyManager": "identity/backend/verifold/verifold_hash_utils.py",
    "qr_decoder": "identity/backend/verifold/qr_decoder.py",
    "YubiDeviceType": "identity/backend/verifold/yubi_seeder.py",
    "verifold_verifier": "identity/backend/verifold/verifold_verifier.py",
    "CollapseChain": "identity/backend/verifold/verifold_chain.py",
    "LedgerAuditor": "identity/backend/verifold/ledger_auditor.py",
    "EmotionVocabulary": "identity/backend/verifold/narrative_utils.py",
    "JournalEntry": "identity/backend/verifold/journal_mode.py",
    "verifier_test_suite": "identity/backend/verifold/verifier_test_suite.py",
    "EthicsViolationType": "ethics/compliance_simple.py",
    "RecoveryShare": "identity/backend/verifold/identity/lukhas_recovery_protocols.py",
    "launch_web_journal": "identity/backend/verifold/web_journal/launch_web_journal.py",
    "VeriFoldWebJournal": "identity/backend/verifold/web_journal/web_journal_app.py",
    "ConsentFuzzTester": "identity/backend/verifold/security/consent_fuzz_tester.py",
    "AdversaryType": "identity/backend/verifold/security/symbolic_adversary_agent.py",
    "MutationType": "identity/backend/verifold/security/glyph_mutation_simulator.py",
    "FSPIBEParams": "identity/backend/verifold/cryptography/forward_secure_pibe.py",
    "SecurityTier": "identity/backend/verifold/cryptography/crypto_router.py",
    "SymbolicNarrative": "identity/backend/verifold/cryptography/zk_narrative_proof_adapter.py",
    "test_glyph_stego_encoder": "identity/backend/verifold/tests/test_glyph_stego_encoder.py",
    "test_symbolic_audit_mode": "identity/backend/verifold/tests/test_symbolic_audit_mode.py",
    "test_crypto_router": "identity/backend/verifold/tests/test_crypto_router.py",
    "test_zk_narrative_proof_adapter": "identity/backend/verifold/tests/test_zk_narrative_proof_adapter.py",
    "test_ethics_verifier": "identity/backend/verifold/tests/test_ethics_verifier.py",
    "BlockchainEvent": "identity/backend/verifold/web3/verifold_bridge_adapter.py",
    "EmotionMetadata": "identity/backend/verifold/web3/emotion_nft_standard.py",
    "image_parser": "identity/backend/verifold/utils/image_parser.py",
    "AuditEvent": "identity/backend/verifold/compliance/symbolic_audit_mode.py",
    "ExportFormat": "identity/backend/verifold/storage/verifold_exporter.py",
    "UploadResult": "identity/backend/verifold/storage/filecoin_uploader.py",
    "ViewMode": "identity/backend/verifold/storage/verifold_vault_viewer.py",
    "scanner_api": "identity/backend/verifold/scanner_pwa/scanner_api.py",
    "ScannerBackend": "identity/backend/verifold/scanner_pwa/scanner_backend.py",
    "NarrativeAlignmentChecker": "identity/backend/verifold/ai/narrative_alignment_checker.py",
    "gpt_symbolic_narrator": "identity/backend/verifold/ai/gpt_symbolic_narrator.py",
    "GLYMPHData": "identity/backend/verifold/visual/glyph_stego_encoder.py",
    "ScanResult": "identity/backend/verifold/visual/qr_tier_scanner.py",
    "qrglymph_public": "identity/backend/qrglyphs/qrglymph_public.py",
    "test_create_qrglyph": "identity/backend/qrglyphs/tests/test_create_qrglyph.py",
    "html_social_generator": "identity/backend/dream_engine/html_social_generator.py",
    "dream_registry_dashboard": "learning/aid/dream_engine/dream_registry_dashboard.py",
    "LanguageModelChatMessage": "identity/backend/dream_engine/assistant.py",
    "dream_replay": "creativity/dream/dream_replay.py",
    "publish_queue_manager": "identity/backend/dream_engine/publish_queue_manager.py",
    "dream_seed_vote": "identity/backend/dream_engine/dream_seed_vote.py",
    "dream_injector": "learning/aid/dream_engine/dream_injector.py",
    "dream_summary_generator": "learning/aid/dream_engine/dream_summary_generator.py",
    "TouchGesture": "identity/mobile_platform/mobile_ui_renderer.py",
    "PreviewResult": "identity/public/lambda_id_previewer.py",
    "MobileWebSocketClient": "identity/mobile/__init__.py",
    "QRCodeAnimator": "identity/mobile/qr_code_animator.py",
    "insight_cli": "identity/diagnostics/insight_cli.py",
    "PolicyProposal": "identity/governance/policy_board.py",
    "UserProfileRequest": "identity/api/api.py",
    "EnhancedOnboardingManager": "identity/api/onboarding_api.py",
    "onboarding": "identity/api/auth/onboarding.py",
    "flows": "identity/api/auth/flows.py",
    "LambdaIDController": "identity/api/routes/lambd_id_routes.py",
    "FallbackSettings": "config/fallback_settings.py",
    "validators": "interfaces/api/v1/common/validators.py",
    "Settings": "creativity/dream/oneiric_engine/oneiric_core/settings.py",
    "SymbolicKnowledgeIntegrator": "config/knowledge/symbolic_knowledge_integration.py",
    "HardwareRoot": "security/hardware_root.py",
    "SymbolicComplianceRules": "security/moderator.py",
    "AffectStagnationDetector": "emotion/affect_detection/affect_stagnation_detector.py",
    "CreativeQuantumLikeState": "creativity/creative_q_expression.py",
    "CreativityService": "creativity/service.py",
    "ShynessModule": "creativity/personality_engine.py",
    "DreamTimelineVisualizer": "creativity/dream/visualization/dream_timeline_visualizer.py",
    "creative_expression_processor": "creativity/creative_expression_processor.py",
    "HealixVisualizer": "orchestration/brain/visualization/healix_visualizer.py",
    "CreativeExpression": "creativity/quantum_creative_types.py",
    "CreativeItem": "creativity/creative_market.py",
    "creative_expressions_engine": "creativity/creative_expressions_engine.py",
    "personality_refiner": "creativity/personality_refiner.py",
    "CreativeStyle": "creativity/creative_engine.py",
    "EmotionalResonance": "creativity/emotional_resonance.py",
    "AdvancedHaikuGenerator": "creativity/advanced_haiku_generator.py",
    "EnhancedVoiceConfig": "voice/integrator.py",
    "QuantumCreativeBridge": "quantum/creative_integration.py",
    "creative_core": "creativity/creative_core.py",
    "ContentType": "features/docututor/plugin.py",
    "CreativeExpressionsCreativityEngine": "creativity/systems/creative_expressions_creativity_engine.py",
    "VocabularyCreativityEngine": "creativity/systems/vocabulary_creativity_engine.py",
    "VoicePersonalityCreativityEngine": "creativity/systems/voice_personality_creativity_engine.py",
    "DreamPhase": "orchestration/brain/consciousness/dream_narrator.py",
    "DreamLog": "creativity/dream_systems/dream_log.py",
    "DreamLoopGenerator": "creativity/dream_systems/dream_loop_generator.py",
    "DreamSeed": "creativity/dream_systems/dream_seed_simple.py",
    "DreamConvergenceTester": "creativity/dream_systems/dream_convergence_tester.py",
    "DreamStatistics": "creativity/dream_systems/dream_stats.py",
    "DreamSnapshotStore": "creativity/dream_systems/dream_snapshot.py",
    "EnhancedDreamEngine": "creativity/dream_systems/dream_engine.py",
    "VoiceParameter": "features/docututor/memory_evolution/voice_synthesis.py",
    "DreamFeedbackController": "creativity/dream_systems/dream_feedback_controller.py",
    "DreamEmotionBridge": "creativity/dream_systems/dream_emotion_bridge.py",
    "DreamReflectionLoop": "creativity/dream_systems/dream_reflection_loop_simple.py",
    "dream_seed": "creativity/dream/dream_seed.py",
    "DreamDeliveryManager": "creativity/dream_systems/dream_delivery_manager.py",
    "SnapshotRedirectionController": "creativity/dream_systems/snapshot_redirection_controller.py",
    "LegalComplianceAssistant": "orchestration/brain/ethics/ethics_guard.py",
    "DreamQuantumConfig": "quantum/dream_adapter.py",
    "DreamLimiterConfig": "creativity/dream_systems/dream_limiter.py",
    "dream_viewer": "creativity/dream/visualization/dream_viewer.py",
    "dream_log": "orchestration/brain/rem/dream_log.py",
    "RedirectJustifier": "creativity/dream/redirect_justifier.py",
    "quantum_dream_config": "creativity/dream/quantum_dream_config.py",
    "UnifiedDreamPipeline": "creativity/dream/dream_pipeline.py",
    "SimulationType": "creativity/dream/hyperspace_dream_simulator.py",
    "dream_stats": "orchestration/brain/rem/dream_stats.py",
    "dream_director": "creativity/dream/dream_director.py",
    "oracle_dream": "creativity/dream/oracle_dream.py",
    "tag_debug": "creativity/dream/tag_debug.py",
    "dream_mutator": "orchestration/brain/dream_mutator.py",
    "DreamFeedbackPropagator": "creativity/dream/feedback_propagator.py",
    "RedirectTraceReplayer": "creativity/dream/redirect_trace_replayer.py",
    "OpenAIDreamIntegration": "creativity/dream/openai_dream_integration.py",
    "immersive_ingestion": "creativity/dream/immersive_ingestion.py",
    "MediaInput": "creativity/dream/dream_sandbox.py",
    "dream_generator": "orchestration/brain/symbolic_ai/modules/dream_generator.py",
    "DreamDataCollector": "creativity/dream/dream_data_sources.py",
    "DreamMemoryscapeViewport": "creativity/dream/visualization/memoryscape_viewport.py",
    "visualizer_core": "orchestration/brain/dream_engine/visualizer_core.py",
    "QuantumLikeStateModifier": "creativity/dream/modifiers/quantum_state_modifier.py",
    "MotifInstance": "creativity/dream/tools/symbolic_theme_clusterer.py",
    "run_dream_analysis": "creativity/dream/tools/run_dream_analysis.py",
    "DreamSession": "creativity/dream/tools/dream_divergence_map.py",
    "WebDreamInterpreter": "creativity/dream/oneiric_engine/demo/web_app.py",
    "DreamSymbol": "examples/creativity/dream_interpreter_demo.py",
    "env": "creativity/dream/oneiric_engine/oneiric_core/migrations/env.py",
    "20250726_add_unified_tier_support": "creativity/dream/oneiric_engine/oneiric_core/migrations/versions/20250726_add_unified_tier_support.py",
    "20250710_add_users_table": "creativity/dream/oneiric_engine/oneiric_core/migrations/versions/20250710_add_users_table.py",
    "drift_score": "creativity/dream/oneiric_engine/oneiric_core/analysis/drift_score.py",
    "AuthUser": "creativity/dream/oneiric_engine/oneiric_core/identity/auth_middleware.py",
    "DreamLogger": "creativity/dream/oneiric_engine/oneiric_core/utils/symbolic_logger.py",
    "db": "creativity/dream/oneiric_engine/oneiric_core/db/db.py",
    "UserRecord": "creativity/dream/oneiric_engine/oneiric_core/db/user_repository.py",
    "DreamRequest": "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_unified.py",
    "conftest": "tests/conftest.py",
    "test_api": "creativity/dream/oneiric_engine/tests/test_api.py",
    "DreamProcessor": "orchestration/brain/dream_engine/cli/dream_processor.py",
    "dream_replay_cli": "orchestration/brain/dream_engine/dream_replay_cli.py",
    "DreamMetricsDB": "creativity/dream/dashboard/dream_metrics_db.py",
    "DreamMetrics": "creativity/dream/dashboard/dream_metrics_view.py",
    "DreamProcessorIntegration": "orchestration/brain/rem/dream_processor_integrator.py",
    "RedirectForecaster": "creativity/dream/stability/redirect_forecaster.py",
    "DreamOperation": "creativity/dream/symbolic/vocabulary.py",
    "OracleDreamGenerator": "creativity/dream/dream_engine/oracle_dream.py",
    "DreamEngine": "creativity/dream/engine/dream_engine.py",
    "AdvancedDreamEngine": "creativity/dream/engine/advanced_dream_engine.py",
    "DreamEngineOptimizer": "creativity/dream/engine/dream_engine_optimizer.py",
    "DreamEngineSystem": "creativity/dream/engine/legacy_dream_engine.py",
    "RLDreamCycle": "creativity/dream/rl/rl_dream_cycle.py",
    "dream_loop": "creativity/dream/base/dream_loop/dream_loop.py",
    "DreamWeaver": "creativity/dream/base/dream_refold/dream_refold.py",
    "VoiceProfilingEmotionEngine": "creativity/emotion/voice_profiling_emotion_engine.py",
    "MemoryMapType": "bridge/symbolic_memory_mapper.py",
    "ExplanationType": "bridge/explainability_interface_layer.py",
    "VoiceModulator": "voice/modulator.py",
    "InterColonyBridge": "bridge/colony_bridge.py",
    "PluginModuleAdapter": "bridge/integration_bridge.py",
    "OpenAICapability": "bridge/openai_core_service.py",
    "TraceLevel": "bridge/trace_logger.py",
    "SymbolicDreamContext": "bridge/symbolic_dream_bridge.py",
    "StateAccessLevel": "bridge/shared_state.py",
    "ReasoningMode": "bridge/symbolic_reasoning_adapter.py",
    "ModelCommunicationEngine": "bridge/model_communication_engine.py",
    "blockchain_bridge": "bridge/connectors/blockchain_bridge.py",
    "PerplexityWrapper": "bridge/llm_wrappers/perplexity_wrapper.py",
    "ConversationMessage": "bridge/llm_wrappers/unified_openai_client.py",
    "GeminiWrapper": "bridge/llm_wrappers/gemini_wrapper.py",
    "AnthropicWrapper": "bridge/llm_wrappers/anthropic_wrapper.py",
    "AzureOpenaiWrapper": "bridge/llm_wrappers/azure_openai_wrapper.py",
    "env_loader": "bridge/llm_wrappers/env_loader.py",
    "FederatedModel": "orchestration/brain/meta/learning/system.py",
    "LearningService": "learning/service.py",
    "LearningType": "learning/system.py",
    "edu_module": "learning/edu_module.py",
    "Enhancementmode": "learning/metalearningenhancementsystem.py",
    "UserInteraction": "features/docututor/memory_evolution/usage_learning.py",
    "LukhasFederatedModel": "learning/federated_learning_system.py",
    "TestTutorLearningEngine": "learning/tutor_learning_engine.py",
    "neural_integrator": "learning/neural_integrator.py",
    "FederatedLearningManager": "learning/federated_learning.py",
    "LearningPhase": "learning/meta_learning_adapter.py",
    "doc_generator_learning_engine": "learning/doc_generator_learning_engine.py",
    "AdaptiveMetaLearningSystem": "learning/adaptive_meta_learning.py",
    "_BaseSparseCoding": "learning/_dict_learning.py",
    "MetaLearningRecovery": "learning/meta_learning_recovery.py",
    "LearningAgent": "learning/federated_colony_learning.py",
    "LearningStyle": "learning/tutor.py",
    "GenerativeReflex": "learning/embodied_thought/generative_reflex.py",
    "system": "learning/meta_adaptive/system.py",
    "AdaptiveInterfaceGenerator": "learning/meta_adaptive/adaptive_interface_generator.py",
    "adaptive_ux_core": "learning/meta_adaptive/adaptive_ux_core.py",
    "trace_reader": "learning/results/trace_reader.py",
    "symbolic_feedback": "learning/adaptive_agi/Meta_Learning/symbolic_feedback.py",
    "monitor_dashboard": "learning/adaptive_agi/Meta_Learning/monitor_dashboard.py",
    "Federationstrategy": "learning/meta_learning/federated_integration.py",
    "MetaCore": "learning/meta_learning/meta_core.py",
    "Feedbacktype": "learning/meta_learning/symbolic_feedback.py",
    "intent_language": "learning/systems/intent_language.py",
    "core_system": "learning/systems/core_system.py",
    "symbolic_voice_loop": "learning/systems/symbolic_voice_loop.py",
    "assistant": "learning/aid/dream_engine/assistant.py",
    "ConsciousnessService": "consciousness/service.py",
    "CognitiveConfig": "consciousness/cognitive_architecture_controller.py",
    "ConsciousnessOpenAIAdapter": "consciousness/openai_consciousness_adapter.py",
    "QuantumCreativeConsciousness": "consciousness/systems/quantum_consciousness_integration.py",
    "BrainIntegrationConfig": "consciousness/brain_integration_20250620_013824.py",
    "CognitiveState": "consciousness/cognitive/adapter.py",
    "ReflectiveIntrospectionSystem": "orchestration/brain/meta_cognitive/reflective_introspection_system.py",
    "CognitiveAdapterConfig": "consciousness/cognitive/adapter_complete.py",
    "SymbolicTraceLogger": "consciousness/awareness/symbolic_trace_logger.py",
    "BioSymbolicAwarenessAdapter": "consciousness/awareness/bio_symbolic_awareness_adapter.py",
    "SystemAwareness": "orchestration/brain/cognitive/awareness/awareness.py",
    "ConsciousnessValidator": "consciousness/systems/validator.py",
    "ConsciousnessState": "orchestration/brain/consciousness.py",
    "ConsciousnessEngineConfig": "consciousness/systems/engine_complete.py",
    "MetaCognition": "consciousness/systems/consciousness.py",
    "QuantumConsciousnessVisualizer": "consciousness/systems/quantum_consciousness_visualizer.py",
    "DistributedConsciousnessEngine": "consciousness/systems/consciousness_colony_integration.py",
    "QuantumCreativeDemo": "examples/consciousness/quantum_creative_consciousness_demo.py",
    "SelfReflectionEngine": "consciousness/systems/self_reflection_engine.py",
    "AwarenessEngine": "consciousness/systems/awareness_engine.py",
    "\u039bBotConsciousnessMonitor": "consciousness/systems/\u039bBot_consciousness_monitor.py",
    "AwarenessProcessor": "consciousness/systems/awareness_processor.py",
    "AwarenessTracker": "consciousness/systems/awareness_tracker.py",
    "VoicePersonalityIntegrator": "orchestration/brain/personality/voice_personality.py",
    "DreamReflectionConfig": "consciousness/systems/dream_engine/dream_reflection_loop.py",
    "reflection": "consciousness/systems/reflection/reflection.py",
    "SymbolicIntegrityError": "features/errors.py",
    "MemoryIntegrationOrchestrator": "features/memory/integration_orchestrator.py",
    "connection_visualizer": "features/memory/connection_visualizer.py",
    "BridgeConfiguration": "features/memory/fold_universal_bridge.py",
    "MemoryFoldConfig": "features/memory/memory_fold.py",
    "DreamSnapshot": "features/memory/dream_memory_fold.py",
    "HookRegistrationError": "features/memory/hooks/registry.py",
    "HookExecutionError": "features/memory/hooks/base.py",
    "NodeType": "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
    "DocSection": "features/docututor/content_generation_engine/doc_generator.py",
    "KnowledgeNode": "features/docututor/memory_evolution/knowledge_adaptation.py",
    "DocumentStructureAnalyzer": "features/docututor/memory_evolution/document_analyzer.py",
    "DocVersion": "features/docututor/memory_evolution/version_control.py",
    "BioOscillatorAdapter": "features/docututor/memory_evolution/bio_oscillator.py",
    "config": "features/config/config.py",
    "interface_dashboard_settings": "features/config/interface_dashboard_settings.py",
    "settings": "orchestration/brain/config/settings.py",
    "lukhas_settings": "features/config/lukhas_settings.py",
    "read_settings": "orchestration/brain/config/read_settings.py",
    "NeuralSymbolicIntegration": "symbolic/neural/neural_symbolic_bridge.py",
    "SystemState": "features/integration/system_coordinator.py",
    "IntegrationMode": "features/integration/executive_decision_integrator.py",
    "FusionMode": "symbolic/neural/neuro_symbolic_fusion_layer.py",
    "ConnectivityEngine": "features/integration/connectivity_engine.py",
    "IntegrationLayer": "features/integration/layer.py",
    "SystemBridge": "features/integration/system_bridge.py",
    "EnhancedSafetyCoordinator": "features/integration/safety/coordinator.py",
    "EnhancedEmergencyOverride": "features/integration/safety/emergency_override.py",
    "EnhancedPolicyProposal": "features/integration/governance/policy_board.py",
    "EnhancedMetaCognitiveOrchestrator": "features/integration/meta_cognitive/meta_cognitive.py",
    "EnhancedSystemAwareness": "features/integration/bio_awareness/awareness.py",
    "EntropyRadar": "features/entropy/radar.py",
    "CreationType": "features/creative_engine/engine.py",
    "DriftDimension": "features/drift/unified_drift_system.py",
    "diagnostic_payloads": "features/diagnostic_engine/diagnostic_payloads.py",
    "DiagnosticEngine": "features/diagnostic_engine/engine.py",
    "DataManagerCRUD": "features/data_manager/crud_operations.py",
    "BaseConfig": "features/common/base_config.py",
    "HealthStatus": "orchestration/monitoring/health_checks.py",
    "SymbolicReference": "features/common/symbolic.py",
    "logger": "features/common/logger.py",
    "EthicalPrinciple": "quantum/ethics_engine.py",
    "BaseModule": "features/common/base_module.py",
    "OptimizationMode": "features/crista_optimizer/crista_optimizer.py",
    "NetworkHealth": "features/crista_optimizer/topology_manager.py",
    "dream_api": "features/api/dream_api.py",
    "DecisionType": "orchestration/brain/eu_ai_transparency.py",
    "MemoryReflectionTemplate": "features/symbolic/memory_reflection_template.py",
    "MoralAgentTemplate": "features/symbolic/moral_agent_template.py",
    "CausalReasonerTemplate": "features/symbolic/causal_reasoner_template.py",
    "glyphs": "features/symbolic/glyphs.py",
    "InferenceStep": "features/symbolic/tracer.py",
    "SymbolicTraceVerifier": "features/symbolic/trace_verifier.py",
    "GlyphType": "features/symbolic/glyphs/glyph.py",
    "FusionCandidate": "features/symbolic/glyphs/symbolic_foundry.py",
    "GlyphEngine": "features/symbolic/glyphs/glyph_engine.py",
    "DecayState": "features/symbolic/glyphs/glyph_sentinel.py",
    "IGlyphMetadataProvider": "features/symbolic/security/glyph_redactor_engine.py",
    "CollapseType": "reasoning/collapse_reasoner.py",
    "CollapseBridge": "orchestration/brain/collapse_bridge.py",
    "CollapsePhase": "features/symbolic/collapse/entropy_tracker.py",
    "DriftPhase": "symbolic/drift/symbolic_drift_tracker.py",
    "DriftScore": "features/symbolic/drift/score.py",
    "RecallHooks": "features/symbolic/memoria/recall_hooks.py",
    "SymbolicTraceMap": "features/symbolic/memoria/symbolic_trace_map.py",
    "lambda_sage": "features/analytics/archetype/lambda_sage.py",
    "dream_clustering_engine": "features/analytics/clustering/dream_clustering_engine.py",
    "memory_stress_tests_light": "tests/memory_stress_tests_light.py",
    "test_priority_modules": "tests/test_priority_modules.py",
    "MockHITLO": "tests/test_ethics_hitlo_bridge.py",
    "test_documentation_single": "tests/test_documentation_single.py",
    "TestSecurity": "tests/test_security_core_fixed.py",
    "TestAdaptiveReasoningLoop": "tests/test_adaptive_reasoning_loop.py",
    "RecallQuality": "tests/test_glyph_recall_drift_correlation.py",
    "ColonyActor": "tests/test_actor_colony_integration.py",
    "TestCreativity": "tests/test_creativity_core.py",
    "TestAffectStagnation": "tests/emotion/affect/test_affect_stagnation.py",
    "test_integration_simple": "tests/test_integration_simple.py",
    "TestDriftRegression": "tests/test_drift_regression.py",
    "test_quantized_cycles": "tests/test_quantized_cycles.py",
    "AuditorTestSuite": "tests/auditor_test_suite.py",
    "TestEmotionRecursion": "tests/test_emotion_recursion.py",
    "TestPolicyEngines": "tests/test_policy_engines.py",
    "TestOrchestrationIntegration": "tests/test_integration_complete.py",
    "test_self_reflective_debugger_correlation": "tests/test_self_reflective_debugger_correlation.py",
    "TestEntropyRadar": "tests/test_entropy_radar.py",
    "DummyCreativityColony": "tests/test_recursive_dream_fork.py",
    "test_memory_cleaner_analysis": "tests/test_memory_cleaner_analysis.py",
    "TestEventBus": "tests/test_event_bus.py",
    "test_tagging_system": "tests/test_tagging_system.py",
    "TestMemoryFold": "tests/test_memory_fold.py",
    "TestTemporalIndex": "tests/test_replay_system.py",
    "TestMemoryFoldUniversalIntegration": "tests/test_memory_fold_universal_integration.py",
    "TestLambdaGovernor": "tests/test_lambda_governor.py",
    "TestSymbolicUserIntent": "tests/test_symbolic_user_intent.py",
    "TestEthicalDriftSentinel": "tests/test_ethical_drift_sentinel.py",
    "MemoryStressTester": "tests/memory_stress_tests.py",
    "TestQuantumEthicsMeshIntegrator": "tests/test_quantum_ethics_mesh.py",
    "TestMultiCycleRecursion": "tests/test_memory_evolution_recursion.py",
    "test_ai_functionality": "tests/test_ai_functionality.py",
    "test_attention_memory": "tests/test_attention_memory.py",
    "test_reflection_layer_metrics": "tests/test_reflection_layer_metrics.py",
    "test_integrated_safety": "tests/test_integrated_safety.py",
    "TestMemoryDriftTracker": "tests/test_memory_drift_tracker.py",
    "test_dream_engine_integration": "tests/test_dream_engine_integration.py",
    "SecurityLevel": "quantum/post_quantum_crypto_enhanced.py",
    "TestMemoryDriftMirror": "tests/test_memory_drift_mirror.py",
    "DreamSystemTester": "tests/test_dream_system_complete.py",
    "TestEthicalDriftGovernor": "tests/test_ethical_drift_governor.py",
    "test_all_interactive": "tests/test_all_interactive.py",
    "TestPatternDetector": "tests/test_reflection_engine.py",
    "test_migration": "tests/test_migration.py",
    "test_integrated_safety_simple": "tests/test_integrated_safety_simple.py",
    "test_memory_cleaner_dreams": "tests/test_memory_cleaner_dreams.py",
    "TestReasoningSelfTestHarness": "tests/test_reasoning_self_test_harness.py",
    "MockMemoryEvent": "tests/test_glyph_memory_timeline.py",
    "test_quantum_coordinator": "tests/test_quantum_coordinator.py",
    "AdvancedMemoryFoldTester": "tests/advanced_memory_fold_test_suite.py",
    "TestLearning": "tests/test_learning_core.py",
    "TestColonyIntegrations": "tests/test_colony_integrations.py",
    "test_drift_monitoring": "tests/test_drift_monitoring.py",
    "TestSymbolicReplayEngine": "tests/test_symbolic_replay_engine.py",
    "TestReasoningMetrics": "tests/test_reasoning_metrics.py",
    "test_ethics_guardian_assessment": "tests/test_ethics_guardian_assessment.py",
    "TestEmotion": "tests/test_emotion_core.py",
    "run_orchestration_tests": "tests/run_orchestration_tests.py",
    "TestStrategyEngineCore": "tests/test_strategy_engine_integration.py",
    "test_hybrid_memory": "tests/test_hybrid_memory.py",
    "TestArchetypeDetector": "tests/test_lambda_echo_detector.py",
    "test_security_fixes": "tests/hold/test_security_fixes.py",
    "test_event_replayer": "tests/test_event_replayer.py",
    "test_runner": "tests/test_runner.py",
    "TestSymbolicState": "tests/test_oracle_predictor.py",
    "test_memory_fold_performance": "tests/test_memory_fold_performance.py",
    "TestIntegrityCollapser": "tests/test_integrity_collapser.py",
    "TestEntropyProfile": "tests/test_drift_recovery.py",
    "TestCoreMemory": "tests/test_memory_core.py",
    "test_voice_integration": "tests/test_voice_integration.py",
    "TestDreamMemoryLinker": "tests/test_dream_integration.py",
    "TestDreamSnapshotExport": "tests/test_dream_snapshot_export.py",
    "TestGovernanceEngine": "tests/test_governance_engine.py",
    "test_optimized_memory_system": "tests/test_optimized_memory_system.py",
    "test_all_integrations": "tests/test_all_integrations.py",
    "TestLightweightConcurrency": "tests/test_lightweight_concurrency.py",
    "TestSymbolicReasoning": "tests/test_symbolic_reasoning.py",
    "TestOrchestrationSrc": "tests/test_orchestration_src.py",
    "SimplifiedMemoryFold": "tests/test_memory_fold_simple.py",
    "TestVeriFoldUnifiedSystem": "tests/test_verifold_unified.py",
    "test_memory_cleaner_cleanup": "tests/test_memory_cleaner_cleanup.py",
    "test_connectivity_index": "tests/test_connectivity_index.py",
    "test_self_reflective_debugger_ml_models": "tests/test_self_reflective_debugger_ml_models.py",
    "test_adversarial_dreaming": "tests/test_adversarial_dreaming.py",
    "test_ethics_guardian_realignment": "tests/test_ethics_guardian_realignment.py",
    "test_simple_optimized_memory": "tests/test_simple_optimized_memory.py",
    "TestMemoryIntrospectionEngine": "tests/test_memory_introspection_engine.py",
    "test_quantum_import": "tests/test_quantum_import.py",
    "SupervisorActor": "tests/test_actor_supervision.py",
    "test_simple_dream_integration": "tests/test_simple_dream_integration.py",
    "test_ethics_redteam_sim": "tests/test_ethics_redteam_sim.py",
    "test_guardian_system_integration": "tests/test_guardian_system_integration.py",
    "test_memory_stress_final": "benchmarks/memory/memory_stress_tests/test_memory_stress_final.py",
    "test_brain_colony_coordinator": "tests/test_brain_colony_coordinator.py",
    "test_phase3b_memory_recurrence": "tests/test_phase3b_memory_recurrence.py",
    "test_dna_entanglement": "tests/test_dna_entanglement.py",
    "BioSymbolicTestSuite": "tests/test_bio_symbolic_integration.py",
    "real_world_creativity_test": "benchmarks/tests/real_world_creativity_test.py",
    "DummyModel": "tests/test_mitochondria_priority.py",
    "test_memory_safety_demo": "tests/test_memory_safety_demo.py",
    "TestReasoningEngineDrift": "tests/test_reasoning_engine_drift.py",
    "MemorySystemTestSuite": "tests/test_memory_comprehensive.py",
    "test_dream_metrics_db": "tests/test_dream_metrics_db.py",
    "MockPolicyRegistry": "tests/test_unified_ethics_orchestrator.py",
    "TestEventSourcingIntegration": "tests/test_symbiotic_swarm_integration.py",
    "TestTierSystem": "tests/test_tier_system.py",
    "TestReasoningNode": "tests/test_reasoning_node.py",
    "TestDreamSystemInteroperability": "tests/test_dream_system_integration.py",
    "run_test_suite": "tests/run_test_suite.py",
    "TestEEGSyncBridge": "tests/bio/test_eeg_sync_bridge.py",
    "FailingUnit": "tests/bio/test_colony_self_repair.py",
    "TestOscillatorDriftSafety": "tests/bio/test_oscillator_drift_safety.py",
    "TestBioSimulationFeedback": "tests/bio/test_biosimulation_feedback.py",
    "TestSymbolicValidation": "tests/bio/test_symbolic_validation.py",
    "TestBioDriftResponse": "tests/bio/test_bio_drift_response.py",
    "TestSimulationController": "tests/bio/test_simulation_controller.py",
    "TestBioPhaseControl": "tests/bio/test_bio_phase_control.py",
    "test_vdf": "tests/trace/test_vdf.py",
    "TestGovernanceLayer": "tests/core/test_governance.py",
    "TestSupervisor": "tests/core/test_symbiotic_swarm.py",
    "TestActor": "tests/core/test_actor_system.py",
    "TestEntropyCalculations": "tests/core/test_symbolic_drift_analyzer.py",
    "TestSkillRegistry": "tests/core/test_agent_coordination.py",
    "TestEnergyMetric": "tests/core/test_energy_consumption_analysis.py",
    "test_vector_collapse": "tests/core/test_vector_collapse.py",
    "TestResourceMetrics": "tests/core/test_resource_optimization_integration.py",
    "TestCoreIntegration": "tests/core/test_core_integration.py",
    "_BaseModule": "tests/core/test_consciousness_phase.py",
    "TestCreativityColonyFatigue": "tests/core/test_creativity_colony_fatigue.py",
    "TestMailboxBasics": "tests/core/test_mailbox.py",
    "test_temporal_colony": "tests/core/test_temporal_colony.py",
    "test_cluster_sharding": "tests/core/test_cluster_sharding.py",
    "test_consistency_management": "tests/core/test_consistency_management.py",
    "test_tensor_colony_ops": "tests/core/test_tensor_colony_ops.py",
    "TestObservatory": "tests/core/test_observatory.py",
    "TestCoreBasics": "tests/core/test_core_basic.py",
    "TestSwarmResourceScheduler": "tests/core/test_resource_scheduler.py",
    "WorkerActor": "tests/core/test_supervision.py",
    "test_reasoning_colony_dream_context": "tests/core/test_reasoning_colony_dream_context.py",
    "test_task_escalation": "tests/core/test_task_escalation.py",
    "test_colony_dilemma_simulation": "tests/core/test_colony_dilemma_simulation.py",
    "TestMemoryItem": "tests/core/memory/hooks/test_hooks.py",
    "DummyPlugin": "tests/core/plugins/test_plugin_registry.py",
    "TestSymbolicShellArchiver": "tests/core/symbolic/test_archiver.py",
    "CollapseEvent": "tests/core/symbolic/test_collapse.py",
    "Glyph": "tests/core/symbolic/test_glyphs.py",
    "TestSymbolicTracer": "tests/core/symbolic/test_tracer.py",
    "TestCollapseTracker": "tests/core/monitoring/test_collapse_tracker.py",
    "test_loop_monitor": "tests/memory/test_loop_monitor.py",
    "TestMemoryEntry": "tests/memory/test_memory_basic.py",
    "TestGlyphMemoryIntegration": "tests/memory/test_glyph_memory_integration.py",
    "test_symbol_aware_tiered_memory": "tests/memory/test_symbol_aware_tiered_memory.py",
    "TestIdentityLineageValidation": "tests/memory/test_identity_lineage_validation.py",
    "test_aliases": "tests/memory/test_aliases.py",
    "MemoryTypeGlobal": "tests/memory/test_fold_engine_integration.py",
    "TestFoldEntropyVisualizer": "tests/memory/test_fold_entropy_visualizer.py",
    "TestMemoryObject": "tests/memory/test_memory_optimization.py",
    "test_integrity_chain": "tests/memory/test_integrity_chain.py",
    "TestQRGParser": "tests/identity/test_qrg_parser.py",
    "TestLukhasIDSystem": "tests/identity/test_identity_core.py",
    "TestEntropyHelpers": "tests/identity/test_entropy_helpers.py",
    "Colors": "tests/suites/advanced_agi_test_suite.py",
    "A": "tests/connectivity/fixtures/module_a.py",
    "B": "tests/connectivity/fixtures/module_b.py",
    "TestSettings": "tests/config/test_config_comprehensive.py",
    "test_settings": "tests/config/test_settings.py",
    "TestModerationWrapper": "tests/security/test_moderator.py",
    "test_creative_market": "tests/creativity/test_creative_market.py",
    "TestSnapshotRedirectionController": "tests/creativity/dream_systems/test_snapshot_redirection_controller.py",
    "test_blockchain_anchor": "tests/bridge/test_blockchain_anchor.py",
    "TestConfigFallbacks": "tests/integration/test_fallback_systems.py",
    "test_security_ethics_pipeline": "tests/integration/test_security_ethics_pipeline.py",
    "TestCriticalPathInitialization": "tests/integration/test_critical_path.py",
    "TestMemorySystems": "tests/integration/test_core_agi_systems.py",
    "TestOrchestrationInterfaces": "tests/integration/test_import_verification.py",
    "TestConsciousnessService": "tests/consciousness/test_consciousness_core.py",
    "test_prophet_predictor": "tests/prediction/test_prophet_predictor.py",
    "test_agents_of_failure": "tests/simulation/test_agents_of_failure.py",
    "TestGeneralizationV2": "tests/novel_tasks/test_generalization_v2.py",
    "TestGeneralization": "tests/novel_tasks/test_generalization.py",
    "orphan_test_scanner": "tests/utils/orphan_test_scanner.py",
    "symbolic_test_scaffold": "tests/utils/symbolic_test_scaffold.py",
    "TestCollector": "tests/utils/test_collector.py",
    "validate_test_env": "tests/utils/validate_test_env.py",
    "test_collapse_hash": "tests/collapse/test_collapse_hash.py",
    "TestEUConfig": "tests/compliance/test_eu_awareness_engine.py",
    "TestAuditContext": "tests/compliance/test_ethical_auditor.py",
    "MockGlobalReasoner": "tests/compliance/test_global_institutional_framework.py",
    "test_governance": "tests/ethics/test_governance.py",
    "test_self_reflection": "tests/ethics/test_self_reflection.py",
    "TestDecision": "tests/ethics/policy_engines/test_base.py",
    "test_unified_engine": "tests/ethics/test_unified_engine.py",
    "test_fallback_ethics_layer": "tests/ethics/test_fallback_ethics_layer.py",
    "TestThreeLawsPolicy": "tests/ethics/policy_engines/test_three_laws.py",
    "TestEthicalDrift": "tests/ethics/policy_engines/test_ethical_drift.py",
    "test_entropy_radar": "tests/diagnostics/test_entropy_radar.py",
    "TestProphetSystemAvailability": "tests/diagnostics/test_prophet.py",
    "TestAgentMetadata": "tests/orchestration/test_agent_interface.py",
    "test_seed_chain_bootstrapper": "tests/orchestration/test_seed_chain_bootstrapper.py",
    "TestPluginMetadata": "tests/orchestration/test_plugin_registry.py",
    "DummyAgent": "tests/orchestration/test_agent_registry.py",
    "TestDreamSystem": "tests/dream_system/test_dream_core.py",
    "test_module_digest_extractor": "tests/internal_tools/test_module_digest_extractor.py",
    "DummyBridge": "tests/api/test_glyph_exchange.py",
    "TestModuleIntegration": "tests/unified_grammar/test_module_integration.py",
    "run_tests": "tests/runners/run_tests.py",
    "TestGrammarCompliance": "tests/unified_grammar/test_grammar_compliance.py",
    "TestSymbolicVocabularyStructure": "tests/unified_grammar/test_symbolic_vocabulary.py",
    "TestModule": "tests/unified_grammar/test_base_module.py",
    "symbolic_fixtures": "tests/fixtures/symbolic_fixtures.py",
    "memory_fixtures": "tests/fixtures/memory_fixtures.py",
    "ResilientTestRunner": "tests/runners/run_tests_resilient.py",
    "test_body_state": "tests/embodiment/test_body_state.py",
    "TestEmotionVocabulary": "tests/symbolic/vocabularies/test_emotion_vocabulary.py",
    "test_glyph_engine": "tests/symbolic/test_glyph_engine.py",
    "TestGlyphModules": "tests/symbolic/test_symbolic_core.py",
    "test_symbolic_glyph_hash": "tests/symbolic/test_symbolic_glyph_hash.py",
    "test_swarm_tag_simulation": "tests/symbolic/test_swarm_tag_simulation.py",
    "test_service_analysis": "tests/symbolic/test_service_analysis.py",
    "test_sensor_fusion": "tests/perception/test_sensor_fusion.py",
    "TestDreamFeedbackPropagator": "tests/active/test_dream_feedback_propagator.py",
    "DummyManager": "tests/active/test_symbolic_nervous_system.py",
    "test_compliance_engine_2": "tests/active/test_compliance_engine_2.py",
    "TestSelfReflectiveDebugger": "tests/active/test_strategy_engine_core.py",
    "TestRedirectForecaster": "tests/active/test_redirect_forecaster.py",
    "TestIntentNode": "tests/active/test_intent_node.py",
    "EmotionMapper": "orchestration/brain/spine/emotion_mapper.py",
    "TestMoodTuningFeedbackLoop": "tests/active/test_mood_tuning_feedback_loop.py",
    "HealixMapper": "orchestration/brain/spine/healix_mapper.py",
    "ComplianceEngine": "orchestration/brain/meta/compliance_engine_20250503213400.py",
    "test_event_bus_dynamic": "tests/active/test_event_bus_dynamic.py",
    "test_task_announce_api": "tests/active/test_task_announce_api.py",
    "test_trace_logger": "tests/active/test_trace_logger.py",
    "test_resource_efficiency": "tests/active/test_resource_efficiency.py",
    "test_drift_loop_governance": "tests/active/test_drift_loop_governance.py",
    "test_quantized_cycle_manager": "tests/active/test_quantized_cycle_manager.py",
    "test_immersive_ingestion": "tests/active/test_immersive_ingestion.py",
    "test_symptom_reporter": "tests/active/test_symptom_reporter.py",
    "TestSpeechProcessor": "tests/active/test_voice_processing.py",
    "TestQuantumConsensus": "tests/active/test_quantum_consensus.py",
    "test_helix_memory_encryption": "tests/active/test_helix_memory_encryption.py",
    "ContextAnalyzer": "orchestration/brain/context_analyzer.py",
    "DummyOrchestrator": "tests/monitoring/test_collapse_integration.py",
    "TestDriftMonitor": "tests/monitoring/test_drift_monitor.py",
    "TestDreamMetricsView": "tests/dream/test_dream_metrics_view.py",
    "TestTagFlowVisualization": "tests/dream/test_tag_flow_visualization.py",
    "test_emotional_repair_loop": "tests/dream/test_emotional_repair_loop.py",
    "TestRLDreamCycle": "tests/dream/test_rl_dream_cycle.py",
    "TestDreamEthicsIntegration": "tests/dream/test_dream_ethics_integration.py",
    "TestDreamMemoryscapeViewport": "tests/dream/test_memoryscape_viewport.py",
    "TestDreamSnapshot": "tests/dream/test_dream_snapshot.py",
    "TestDreamSeedEntropy": "tests/dream/test_dream_seed_entropy.py",
    "TestDreamSandbox": "tests/dream/test_dream_sandbox.py",
    "TestDreamFeedbackController": "tests/dream/test_dream_feedback_controller.py",
    "TestDreamLimiter": "tests/dream/test_dream_limiter.py",
    "TestDreamGovernanceIntegration": "tests/dream/test_dream_governance_integration.py",
    "simple_security_test": "tests/hold/simple_security_test.py",
    "test_security_fixes_verification": "tests/hold/test_security_fixes_verification.py",
    "test_security_fixes_validation": "tests/hold/test_security_fixes_validation.py",
    "TestOrchestrationPlugins": "tests/hold/orchestration/test_orchestration_plugins.py",
    "TestInterAgentSimulation": "tests/hold/orchestration/test_orchestration.py",
    "test_dream_logger": "tests/hold/dreams/test_dream_logger.py",
    "TestRecursiveDreamChain": "tests/hold/dreams/test_recursive_dream_chain.py",
    "TestAffectDeltaDetection": "tests/hold/dreams/test_affect_delta_detection.py",
    "TestDreamConvergence": "tests/hold/dreams/test_dream_convergence_tester.py",
    "TestDreamEmotionFeedback": "tests/hold/dreams/test_dream_emotion_feedback.py",
    "test_boot": "tests/hold/genesis/test_boot.py",
    "TestEmotionFeedback": "tests/emotion/test_emotion_feedback.py",
    "TestMoodEntropyTracker": "tests/emotion/test_mood_entropy_tracker.py",
    "TestEmotionalCompatMode": "tests/emotion/test_emotional_compat_mode.py",
    "TestDriftTimelineGen": "tests/analytics/test_drift_timeline_gen.py",
    "DriftAffectSIDValidator": "tests/analytics/test_drift_affect_validator_json.py",
    "test_sid_entropy_radar": "tests/analytics/test_sid_entropy_radar.py",
    "test_api_version": "tests/interfaces/api/test_api_version.py",
    "test_models": "tests/interfaces/api/test_models.py",
    "test_quantum_glyph_registry": "tests/quantum/test_quantum_glyph_registry.py",
    "TestQuantumWaveform": "tests/quantum/test_quantum_waveform.py",
    "FragmentType": "narrative/symbolic_weaver.py",
    "HEADER_FOOTER_TEMPLATE": "meta/HEADER_FOOTER_TEMPLATE.py",
    "HEADER_FOOTER_STANDARD": "meta/HEADER_FOOTER_STANDARD.py",
    "HEADER_TEMPLATE": "meta/HEADER_TEMPLATE.py",
    "FailureMetrics": "simulation/agents_of_failure.py",
    "DocumentationConfig": "docs/documentation_updater.py",
    "ThreeLawsEthics": "docs/examples/three_laws_ethics.py",
    "CompressionHook": "docs/examples/compression_hook.py",
    "Translator": "docs/examples/translation_agent.py",
    "coherence_patch_validator": "reasoning/coherence_patch_validator.py",
    "reasoning_effort": "reasoning/reasoning_effort.py",
    "ResponseReasoningSummaryTextDeltaEvent": "reasoning/response_reasoning_summary_text_delta_event.py",
    "ResponseReasoningSummaryDoneEvent": "reasoning/response_reasoning_summary_done_event.py",
    "SymbolicEthicalWarning": "reasoning/reasoning_engine.py",
    "SymbolicPathState": "reasoning/symbolic_logic_engine.py",
    "ConflictType": "reasoning/conflict_resolver.py",
    "Part": "reasoning/response_reasoning_summary_part_added_event.py",
    "ReasoningError": "reasoning/reasoning_errors.py",
    "AdvancedReasoningRequest": "reasoning/LBot_reasoning_processed.py",
    "TestReasoningDiagnostics": "reasoning/reasoning_diagnostics.py",
    "PredictionHorizon": "reasoning/oracle_predictor.py",
    "SymbolicEngine": "reasoning/symbolic_reasoning.py",
    "OraclePromptTemplate": "reasoning/openai_oracle_adapter.py",
    "ResponseReasoningSummaryDeltaEvent": "reasoning/response_reasoning_summary_delta_event.py",
    "symbolic_loop_harmonizer": "reasoning/symbolic_loop_harmonizer.py",
    "AdaptiveReasoningLoop": "reasoning/adaptive_reasoning_loop.py",
    "causal_program_inducer": "reasoning/causal_program_inducer.py",
    "Summary": "reasoning/response_reasoning_item_param.py",
    "master_loop": "reasoning/master_loop.py",
    "ResponseReasoningDoneEvent": "reasoning/response_reasoning_done_event.py",
    "reasoning": "reasoning/reasoning.py",
    "CausalReasoningModule": "reasoning/causal_reasoning.py",
    "ResponseReasoningDeltaEvent": "reasoning/response_reasoning_delta_event.py",
    "chat_completion_reasoning_effort": "reasoning/chat_completion_reasoning_effort.py",
    "ReasonerType": "reasoning/reasoning_colony.py",
    "scaffold_modules_reasoning_engine": "reasoning/scaffold_modules_reasoning_engine.py",
    "TracebackType": "reasoning/traceback_orchestrator.py",
    "reasoning_metrics": "reasoning/reasoning_metrics.py",
    "AbstractReasoningBrainInterface": "orchestration/brain/abstract_reasoning/interface.py",
    "trace_summary_builder": "reasoning/trace_summary_builder.py",
    "ResponseReasoningSummaryTextDoneEvent": "reasoning/response_reasoning_summary_text_done_event.py",
    "ReasoningReportGenerator": "reasoning/reporting/reasoning_report_generator.py",
    "LucasAnalyzeEngine": "reasoning/analysis/__init__.py",
    "AnalysisType": "reasoning/analysis/engine.py",
    "GoalManagementNode": "reasoning/goals/goal_manager.py",
    "AgenticTrace": "reasoning/utils/agentic_trace.py",
    "trace_dashboard": "reasoning/dashboard/trace_dashboard.py",
    "dream_reflect_hook": "reasoning/hooks/dream_reflect_hook.py",
    "TraceMapper": "reasoning/diagnostics/trace_mapper.py",
    "Tag": "tagging/tagging_system.py",
    "PerformanceMetricType": "dashboard/core/test_performance_monitor.py",
    "TestType": "dashboard/core/test_management_system.py",
    "DashboardAgentRole": "dashboard/core/dashboard_colony_agent.py",
    "TabVisibilityRule": "dashboard/core/dynamic_tab_system.py",
    "DashboardMorphState": "dashboard/core/universal_adaptive_dashboard.py",
    "DashboardFallbackLevel": "dashboard/core/fallback_system.py",
    "ScheduleType": "dashboard/core/test_scheduler.py",
    "HealingPriority": "dashboard/core/self_healing_manager.py",
    "ExecutionStatus": "dashboard/core/test_execution_engine.py",
    "MorphingStrategy": "dashboard/core/morphing_engine.py",
    "StreamType": "dashboard/api/websocket_server.py",
    "ethical_safety_alignment": "ethics/ethical_safety_alignment.py",
    "EthicsService": "ethics/service.py",
    "tracing": "ethics/tracing.py",
    "policy_validator": "ethics/policy_validator.py",
    "policy_engine": "ethics/policy_engine.py",
    "monitor": "orchestration/brain/monitor.py",
    "ethical_guardian": "ethics/ethical_guardian.py",
    "OscillatingConscience": "ethics/oscillating_conscience.py",
    "legacy_ethics_jury": "ethics/legacy_ethics_jury.py",
    "governance_engine": "ethics/governance_engine.py",
    "IntrinsicEthicalGovernor": "ethics/intrinsic_governor.py",
    "Complianceengine": "ethics/compliance_engine20250503213400_p95.py",
    "EthicsLevel": "ethics/batch_guard.py",
    "tier_enforcer": "ethics/tier_enforcer.py",
    "policy_manager": "ethics/policy_manager.py",
    "audit_ethics_monitor": "ethics/audit_ethics_monitor.py",
    "ethical_drift_detector": "ethics/ethical_drift_detector.py",
    "community_feedback": "ethics/community_feedback.py",
    "HashableDict": "ethics/redteam_sim.py",
    "SpikethicknessValidator": "ethics/_spikethickness.py",
    "EthicsNode": "ethics/decision_node.py",
    "EthicsReportExporter": "ethics/export_report.py",
    "EthicsRiskLevel": "ethics/quantum_mesh_integrator.py",
    "AuditContext": "ethics/ethical_auditor.py",
    "EnhancedAnomalyType": "ethics/self_reflective_debugger.py",
    "EthicsEngine": "orchestration/brain/ethics/ethics_engine.py",
    "DefaultGuardian": "ethics/guardian.py",
    "EthicsUtils": "ethics/utils.py",
    "EthicalViolationType": "ethics/glyph_ethics_validator.py",
    "EthicsMode": "orchestration/migrated/ethics_orchestrator.py",
    "governance_checker": "ethics/governance_checker.py",
    "EthicsEscalationRule": "ethics/hitlo_bridge.py",
    "ExtremEthicalTesting": "ethics/extreme_ethical_testing.py",
    "MEGConfig": "ethics/meg_guard.py",
    "ethics": "ethics/ethics.py",
    "governance_validator": "ethics/governance_validator.py",
    "decision_framework": "ethics/decision_framework.py",
    "MEGChatCompletion": "ethics/meg_openai_guard.py",
    "MEGPolicyBridge": "ethics/meg_bridge.py",
    "governance_model": "ethics/governance_model.py",
    "EthicalEvaluator": "ethics/ethical_evaluator.py",
    "dao_community": "ethics/dao_community.py",
    "ComplianceValidator": "ethics/compliance_validator.py",
    "StabilizationAction": "ethics/stabilization/tuner.py",
    "QuantumMeshVisualizer": "ethics/tools/quantum_mesh_visualizer.py",
    "lambda_auditor": "ethics/tools/lambda_auditor.py",
    "ActionDecision": "ethics/governor/lambda_governor.py",
    "DAOGovernanceNode": "ethics/governor/dao_controller.py",
    "FallbackEthicsLayer": "ethics/fallback/ethics_layer.py",
    "MainNodeSecurityEngine": "ethics/security/main_node_security_engine.py",
    "emergency_override": "ethics/security/emergency_override.py",
    "SecurityEngine": "ethics/security/security_engine.py",
    "LukhasFlagshipSecurityEngine": "ethics/security/flagship_security_engine.py",
    "PrivacyManager": "orchestration/brain/privacy_manager.py",
    "alignment_overseer": "ethics/training/alignment_overseer.py",
    "tag_misinterpretation_sim": "ethics/utils/tag_misinterpretation_sim.py",
    "_CorePrivateEthicsEngine": "ethics/compliance/engine.py",
    "EscalationTier": "ethics/sentinel/ethical_drift_sentinel.py",
    "ethical_sentinel_dashboard": "ethics/sentinel/ethical_sentinel_dashboard.py",
    "entropy_tuning": "ethics/safety/entropy_tuning.py",
    "compliance_hooks": "ethics/safety/compliance_hooks.py",
    "compliance_dashboard": "ethics/safety/compliance_dashboard.py",
    "LUKHASSafetyBridge": "ethics/safety/integration_bridge.py",
    "compliance_digest": "ethics/safety/compliance_digest.py",
    "compliance_dashboard_visual": "ethics/safety/compliance_dashboard_visual.py",
    "DivergenceReport": "ethics/simulations/colony_dilemma_simulation.py",
    "AttackVectorType": "ethics/simulations/lambda_shield_tester.py",
    "GovernanceDecision": "ethics/policy_engines/integration.py",
    "RiskLevel": "ethics/policy_engines/base.py",
    "GPT4Config": "ethics/policy_engines/examples/gpt4_policy.py",
    "ThreeLawsPolicy": "ethics/policy_engines/examples/three_laws.py",
    "VoiceValidator": "voice/validator.py",
    "VoiceEmotionalModulator": "voice/emotional_modulator.py",
    "VoiceRecognition": "voice/recognition.py",
    "VoiceMessage": "voice/message_handler.py",
    "symbolic_voice_core": "voice/symbolic_voice_core.py",
    "voice_replay": "voice/voice_replay.py",
    "VoiceCulturalIntegrator": "voice/voice_cultural_integrator.py",
    "VoiceIntegrationLayer": "voice/voice_integration.py",
    "memory_helix": "voice/memory_helix.py",
    "SpeechEngine": "voice/speech_engine.py",
    "dream_voice_pipeline": "voice/dream_voice_pipeline.py",
    "CognitiveVoice": "voice/cognitive_voice.py",
    "VoiceProfile": "voice/systems/synthesis.py",
    "VoiceNode": "voice/interface.py",
    "VoiceMode": "voice/processor.py",
    "VoiceSwarmAgent": "voice/swarm_voice_generator.py",
    "AudioProcessor": "voice/audio_processor.py",
    "lukhas_voice_narrator": "voice/lukhas_voice_narrator.py",
    "AudioEngine": "voice/audio_engine.py",
    "SpeechProcessor": "voice/speech_processor.py",
    "SpeechFramework": "voice/speech_framework.py",
    "EmotionState": "voice/context_aware_voice_modular.py",
    "VoiceAdaptationModule": "voice/adaptation_module.py",
    "VoiceSystemIntegrator": "voice/voice_system_integrator.py",
    "LucasVoiceSystem": "voice/modularity_system.py",
    "VoiceSynthesis": "voice/synthesis.py",
    "VoiceQuantumConfig": "quantum/voice_enhancer.py",
    "BrainSymphonyConfig": "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
    "QuantumConfig": "voice/bio_core/oscillator/quantum_layer.py",
    "HealthState": "voice/bio_core/oscillator/orchestrator.py",
    "VoiceSafetyGuard": "voice/safety/voice_safety_guard.py",
    "ElevenLabsClient": "voice/integrations/elevenlabs/elevenlabs_client.py",
    "DALLEClient": "voice/integrations/openai/dalle_client.py",
    "WhisperClient": "voice/integrations/openai/whisper_client.py",
    "orchestration_adapter": "voice/adapters/orchestration_adapter.py",
    "VoiceEmotion": "voice/systems/voice_synthesis.py",
    "eleven_tts": "voice/interfaces/eleven_tts.py",
    "VoiceInterface": "voice/interfaces/voice_interface.py",
    "SymbolicPattern": "voice/interfaces/input/stream_handler.py",
    "tags_debug": "devtools/tags_debug.py",
    "P2PActor": "examples/p2p_collaboration_demo.py",
    "bio_symbolic_coherence_diagnostic": "examples/bio_symbolic_coherence_diagnostic.py",
    "bio_symbolic_coherence_optimization_test": "benchmarks/tests/bio_symbolic_coherence_optimization_test.py",
    "BioSymbolicDemo": "examples/bio_symbolic_demo.py",
    "test_bio_symbolic_enhanced": "examples/test_bio_symbolic_enhanced.py",
    "dream_openai_demo": "examples/dream_openai_demo.py",
    "LUKHASAPIClient": "examples/api_usage_examples.py",
    "bio_symbolic_comprehensive_test": "examples/bio_symbolic_comprehensive_test.py",
    "id_trace_demo": "examples/identity/id_trace_demo.py",
    "DemoResult": "examples/identity/qrg_demo.py",
    "test_voice": "examples/unit_tests/test_voice.py",
    "test_beautiful_consciousness": "examples/unit_tests/test_beautiful_consciousness.py",
    "test_all": "examples/unit_tests/test_all.py",
    "MockPlugin": "examples/integration/test_integration_communication.py",
    "TestPlaceholder": "examples/unit_tests/test_phase_quantum_integration.py",
    "test_chatgpt_memory_integrator": "examples/unit_tests/test_chatgpt_memory_integrator.py",
    "test_autotest_system": "examples/unit_tests/test_autotest_system.py",
    "TestCoreModule": "examples/unit_tests/test_core.py",
    "TestFrameworkSecurityEngine": "examples/unit_tests/test_framework_security_engine.py",
    "test_memory_engines": "examples/unit_tests/test_memory_engines.py",
    "MockQuantumContext": "quantum/creative_engine.py",
    "LukhasAGIIntegrationTest": "examples/unit_tests/test_brain_integration.py",
    "test_introspection": "examples/unit_tests/test_introspection.py",
    "test_quantum_layer": "examples/unit_tests/test_quantum_layer.py",
    "MockFederatedModel": "examples/unit_tests/test_cretivity.py",
    "test_batch_efficiency": "examples/unit_tests/test_batch_efficiency.py",
    "TestBioSymbolicIntegration": "examples/unit_tests/test_integration.py",
    "TestDriftViolations": "examples/unit_tests/test_drift_violations.py",
    "LucasTestFramework": "examples/unit_tests/test_framework.py",
    "test_memory_comprehensive": "examples/unit_tests/test_memory_comprehensive.py",
    "MemoriaLogger": "examples/unit_tests/test_logger.py",
    "TestSymbolicAnomalyExplorer": "examples/unit_tests/test_symbolic_anomaly_explorer.py",
    "MockReasoningColony": "examples/integration/quantum_identity_integration_test.py",
    "core_integration_demo": "examples/integration/core_integration_demo.py",
    "SubscriptionTierDemo": "examples/integration/integrated_abot_demo.py",
    "content_enterprise_integration_demo": "examples/integration/content_enterprise_integration_demo.py",
    "run_integration_tests": "examples/integration/run_integration_tests.py",
    "SubscriptionTier": "examples/integration/simple_integration_test.py",
    "LukhasIntegrationShowcaseDemo": "examples/integration/demo_ai_integration.py",
    "demo_reflection_layer": "examples/orchestration/demo_reflection_layer.py",
    "ConsciousnessLevel": "examples/consciousness/consciousness_demo.py",
    "streamlit_mesh_test": "examples/tests/streamlit_mesh_test.py",
    "bio_quantum_radar_integration_test": "examples/tests/bio_quantum_radar_integration_test.py",
    "QuantumCreativeIntegrationTest": "examples/tests/quantum_creative_integration_test.py",
    "debug_brain_test": "examples/tests/debug_brain_test.py",
    "OracleDemo": "examples/reasoning/oracle_demo.py",
    "AdaptiveAGIDemo": "orchestration/brain/demo.py",
    "DemoOrchestrator": "examples/orchestration_src/demo_orchestrator.py",
    "demo_integration": "examples/ethics/demo_integration.py",
    "ethical_demo": "examples/ethics/ethical_demo.py",
    "SentinelDemo": "examples/ethics/ethical_sentinel_demo.py",
    "GovernorDemo": "examples/ethics/lambda_governor_demo.py",
    "demo_guardian_system": "examples/orchestration/demo_guardian_system.py",
    "GuardianSystemDemo": "examples/orchestration/demo_complete_guardian.py",
    "OrchestrationTester": "examples/orchestration/demo_orchestration_consolidation.py",
    "FaultyAgent": "examples/orchestration/demo_agent_orchestration.py",
    "quantum_security_integration_demo": "examples/quantum/quantum_security_integration_demo.py",
    "BioQuantumRadarDemo": "examples/quantum/bio_quantum_radar_comprehensive_demo.py",
    "QuantumInfluence": "examples/quantum/quantum_steganographic_demo.py",
    "RealPerceptionSystemBenchmark": "benchmarks/perception_system_benchmark.py",
    "RealDashboardSystemBenchmark": "benchmarks/dashboard_system_benchmark.py",
    "RealBridgeSystemBenchmark": "benchmarks/bridge_system_benchmark.py",
    "RealSecuritySystemBenchmark": "benchmarks/security_system_benchmark.py",
    "RealAPISystemBenchmark": "benchmarks/api_system_benchmark.py",
    "FastActor": "benchmarks/tests/actor_throughput_test.py",
    "SimpleActor": "benchmarks/tests/actor_throughput_simple_test.py",
    "RealReasoningSystemBenchmark": "benchmarks/reasoning_system_benchmark.py",
    "RealTraceSystemBenchmark": "benchmarks/trace_system_benchmark.py",
    "RealConfigurationSystemBenchmark": "benchmarks/configuration_system_benchmark.py",
    "RealEmotionSystemBenchmark": "benchmarks/emotion_system_benchmark.py",
    "RealLearningSystemBenchmark": "benchmarks/learning_system_benchmark.py",
    "RealSymbolicSystemBenchmark": "benchmarks/symbolic_system_benchmark.py",
    "RealVoiceSystemBenchmark": "benchmarks/voice_system_benchmark.py",
    "optimized_memory_system_test_script": "benchmarks/memory/optimized_memory_system_test_script.py",
    "BiologicalMemoryTestResults": "benchmarks/tests/biological_memory_validation_test.py",
    "LukhasAISystem": "benchmarks/ethics/ethical_compliance.py",
    "comprehensive_functional_test": "benchmarks/tests/comprehensive_functional_test.py",
    "real_functional_test": "benchmarks/tests/real_functional_test.py",
    "bio_symbolic_coherence_test": "benchmarks/tests/bio_symbolic_coherence_test.py",
    "test_swarm_coherence_integration": "benchmarks/tests/test_swarm_coherence_integration.py",
    "APIPerformanceBenchmark": "benchmarks/tests/api_performance_benchmark.py",
    "functional_capability_test": "benchmarks/tests/functional_capability_test.py",
    "run_comprehensive_test_suite": "benchmarks/tests/run_comprehensive_test_suite.py",
    "dream_tools_functional_test": "benchmarks/tests/dream_tools_functional_test.py",
    "dream_system_functional_test": "benchmarks/tests/dream_system_functional_test.py",
    "comprehensive_safety_test_reference": "benchmarks/safety/comprehensive_safety_test_reference.py",
    "integrated_safety_test_script_20250729_064441": "benchmarks/safety/integrated_safety_test_script_20250729_064441.py",
    "run_quantized_benchmark": "benchmarks/performance/run_quantized_benchmark.py",
    "visualize_quantized_performance": "benchmarks/performance/visualize_quantized_performance.py",
    "StressTestRunner": "benchmarks/performance/quantized_cycles_stress_test.py",
    "entropy_radar": "diagnostics/entropy_radar.py",
    "signal_router": "orchestration/signal_router.py",
    "ModulePriority": "orchestration/system_orchestrator.py",
    "OrchestratorMigrator": "orchestration/migrate_orchestrators.py",
    "WorkflowEngine": "orchestration/core_modules/workflow_engine.py",
    "BioSymbolicMode": "orchestration/bio_symbolic_orchestrator.py",
    "StressLevel": "orchestration/resonance_orchestrator.py",
    "ColonyType": "orchestration/colony_orchestrator.py",
    "OrchestrationCore": "orchestration/brain/orchestration/core.py",
    "AdaptiveAGISystem": "orchestration/brain/orchestration/main_node.py",
    "ModuleOrchestratorConfig": "orchestration/module_orchestrator.py",
    "LukhasIntegrationEngine": "orchestration/integration_engine.py",
    "LukhasCyclePhase": "orchestration/master_orchestrator.py",
    "Query": "orchestration/api.py",
    "EndocrineOrchestratorConfig": "orchestration/endocrine_orchestrator.py",
    "orchestrator_core": "orchestration/orchestrator_core.py",
    "AgentOrchestrator": "orchestration/agent_orchestrator.py",
    "OrchestrationMode": "orchestration/brain/orchestration/orchestrator.py",
    "AnalyzerAgent": "orchestration/example_agents.py",
    "QuorumOrchestrator": "orchestration/quorum_orchestrator.py",
    "OrchestratorState": "orchestration/base.py",
    "SwarmOperationType": "orchestration/swarm_orchestration_adapter.py",
    "seed_chain_bootstrapper": "orchestration/init/seed_chain_bootstrapper.py",
    "CodeLanguage": "orchestration/apis/code_process_integration_api.py",
    "EchoController": "orchestration/echo/echo_controller.py",
    "OrchestrationResult": "orchestration/config/migration_router.py",
    "Environment": "orchestration/config/production_config.py",
    "EthicsLoopGuard": "orchestration/security/ethics_loop_guard.py",
    "SymbolicOversightValidator": "orchestration/security/LGOV_validator.py",
    "EnhancedDASTOrchestrator": "orchestration/security/dast_orchestrator.py",
    "TaskIntelligence": "orchestration/security/dast/intelligence.py",
    "LucasDASTAPI": "orchestration/security/dast/api.py",
    "TaskProcessor": "orchestration/security/dast/processors.py",
    "verify": "orchestration/security/dast/verify.py",
    "TestLucasDASTIntegration": "orchestration/security/dast/tests.py",
    "AdapterConfig": "orchestration/security/dast/adapters.py",
    "vendor_sync_orchestrator": "orchestration/integration/vendor_sync_orchestrator.py",
    "DecisionPriority": "orchestration/integration/human_in_the_loop_orchestrator.py",
    "AGICapabilityLevel": "orchestration/brain/core/capability_levels.py",
    "AgentRegistry": "orchestration/agents/registry.py",
    "MultiAgentCollaboration": "orchestration/agents/multi_agent_collaboration.py",
    "VisionaryMode": "orchestration/agents/adaptive_orchestrator.py",
    "AgentCapability": "orchestration/agents/types.py",
    "EnhancementState": "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
    "OrchestrationAgent": "orchestration/agents/base.py",
    "Codex": "orchestration/agents/builtin/codex.py",
    "Jules01Agent": "orchestration/agents/builtin/jules.py",
    "\u039bSelfHealingAction": "orchestration/specialized/lambda_dependa_bot.py",
    "\u039bDependaBoT_robust": "orchestration/specialized/\u039bDependaBoT_robust.py",
    "ComponentOrchestrator": "orchestration/specialized/component_orchestrator.py",
    "freeze_protection_check": "orchestration/specialized/freeze_protection_check.py",
    "BotProtocol": "orchestration/specialized/lambda_bot_orchestrator.py",
    "ServiceStatus": "orchestration/specialized/content_enterprise_orchestrator.py",
    "LukhasOrchestratorEmotionEngine": "orchestration/specialized/orchestrator_emotion_engine.py",
    "LUKHASCommericalDeployment": "orchestration/specialized/deployment_orchestrator.py",
    "AgentType": "orchestration/specialized/inter_agent_simulation.py",
    "LoopRecoverySimulation": "orchestration/specialized/loop_recovery_simulator.py",
    "SystemWatchdog": "orchestration/immune/system_watchdog.py",
    "MemoryOrchestratorConfig": "orchestration/migrated/memory_orchestrator.py",
    "test_migrations": "orchestration/migrated/test_migrations.py",
    "ResourcePriority": "orchestration/migrated/brain_orchestrator.py",
    "TestConfig": "orchestration/migrated/simple_test.py",
    "MemoryIntegrationOrchestratorConfig": "orchestration/migrated/memory_integration_orchestrator.py",
    "EndocrineAwareModule": "orchestration/examples/endocrine_module_example.py",
    "ComplianceLevel": "orchestration/brain/compliance/ai_compliance_manager.py",
    "PIPEDALegalBasis": "orchestration/brain/canadian_awareness_engine.py",
    "pr_security_review_github_actions": "orchestration/brain/pr_security_review_github_actions.py",
    "QuantumAnnealedEthicalConsensus": "quantum/consensus_system.py",
    "SpecializedBrainCore": "orchestration/brain/MultiBrainSymphony.py",
    "USLegalBasis": "orchestration/brain/us_institutional_awareness_engine.py",
    "AdvancedAGIController": "orchestration/brain/controller.py",
    "ComplianceStatus": "orchestration/brain/awareness_engine.py",
    "MetaCognitiveOrchestrator": "orchestration/brain/meta/cognition/orchestrator.py",
    "UserProfile": "orchestration/brain/dynamic_adaptive_dashboard.py",
    "integration_manager": "orchestration/brain/integration_manager.py",
    "validate_pr_security_review": "orchestration/brain/validate_pr_security_review.py",
    "cognitive_enhancement": "orchestration/brain/cognitive_enhancement.py",
    "GDPRLegalBasis": "orchestration/brain/eu_awareness_engine.py",
    "AdaptiveImageGenerator": "orchestration/brain/adaptive_image_generator.py",
    "ResearchType": "orchestration/brain/research_awareness_engine.py",
    "NotificationPriority": "orchestration/brain/autonomous_github_manager.py",
    "pr_security_review_starter": "orchestration/brain/pr_security_review_starter.py",
    "UKGDPRLawfulBasis": "orchestration/brain/uk_awareness_engine.py",
    "LucasLLM": "orchestration/brain/llm_engine.py",
    "SecurityIssue": "orchestration/brain/security_pr_analyzer.py",
    "VulnerabilitySeverity": "orchestration/brain/github_vulnerability_manager.py",
    "LUKHASBrainBridge": "orchestration/brain/integration_bridge.py",
    "SafeSubprocessExecutor": "orchestration/brain/safe_subprocess_executor.py",
    "SafetyGuardrails": "orchestration/brain/safety_guardrails.py",
    "IdentityManager": "orchestration/brain/identity_manager.py",
    "BatchableIssue": "orchestration/brain/lambda_bot_batch_processor.py",
    "_StubColony": "orchestration/brain/colony_coordinator.py",
    "CollapseChainIntegrity": "orchestration/brain/collapse_chain_integrity.py",
    "LucasBrain": "orchestration/brain/brain.py",
    "AutonomousFixResult": "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
    "FullyAutonomousAGI": "orchestration/brain/autonomous_system.py",
    "BrainCollapseManager": "orchestration/brain/brain_collapse_manager.py",
    "LukhasAGIConfig": "orchestration/brain/orchestrator.py",
    "CognitiveEngine": "orchestration/brain/cognitive_core.py",
    "DriftPatternAnalyzer": "orchestration/brain/drift_pattern_analyzer.py",
    "FixStrategy": "orchestration/brain/lambdabot_autonomous_fixer.py",
    "fix_lambda_symbols": "orchestration/brain/fix_lambda_symbols.py",
    "AustralianPrivacyPrinciple": "orchestration/brain/australian_awareness_engine.py",
    "\u039bbot_brain_system": "orchestration/brain/\u039bbot_brain_system.py",
    "emotional_resonance": "orchestration/brain/emotional_resonance.py",
    "SecurityPR": "orchestration/brain/pr_security_review_task.py",
    "ExperienceManager": "orchestration/brain/experience_manager.py",
    "InstitutionalComplianceLevel": "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
    "vulnerability_dashboard": "orchestration/brain/vulnerability_dashboard.py",
    "EnhancedAGIBot": "orchestration/brain/main_bot.py",
    "TraceMemoriaLogger": "orchestration/brain/trace_memoria_logger.py",
    "BudgetPriority": "orchestration/brain/token_budget_controller.py",
    "CollapseChainSimulator": "orchestration/brain/collapse_chain_simulator.py",
    "AgentTier": "orchestration/brain/collaborative_ai_agent_system.py",
    "expression": "orchestration/brain/expression.py",
    "unified_self_merge_divergence": "orchestration/brain/unified_self_merge_divergence.py",
    "ComplianceRegistry": "orchestration/brain/compliance_registry.py",
    "EntropyProbe": "orchestration/brain/entropy_probe.py",
    "AIComplianceManager": "orchestration/brain/ai_compliance.py",
    "Jurisdiction": "orchestration/brain/GlobalInstitutionalFramework.py",
    "cpu_friendly_compliance": "orchestration/brain/cpu_friendly_compliance.py",
    "CollapseNode": "orchestration/brain/mesh/collapse_mesh.py",
    "trace_tools": "orchestration/brain/tracing/trace_tools.py",
    "QuantumInspiredAttention": "quantum/neuro_symbolic_engine.py",
    "curious_lukhas": "orchestration/brain/cognitive/curious_lukhas.py",
    "CognitiveVoiceEngine": "orchestration/brain/cognitive/voice_engine.py",
    "cognitive_voice": "orchestration/brain/cognitive/cognitive_voice.py",
    "cognitive_ai_client": "orchestration/brain/cognitive/cognitive_ai_client.py",
    "cognitive_updater": "orchestration/brain/cognitive/cognitive_updater.py",
    "UseClientDefault": "orchestration/brain/net/client.py",
    "AsyncInferenceClient": "orchestration/brain/net/async_client.py",
    "context_sync": "orchestration/brain/context/context_sync.py",
    "AzureFreeStrategy": "orchestration/brain/core/azure_free_tier_strategy.py",
    "AGIResponse": "orchestration/brain/core/response_types.py",
    "capability_analyzer": "orchestration/brain/core/capability_analyzer.py",
    "LukhASAzureOpenAI": "orchestration/brain/core/azure_openai_client.py",
    "SystemMode": "orchestration/brain/core/orchestrator.py",
    "ai_config": "orchestration/brain/core/ai_config.py",
    "brand_manager": "orchestration/brain/core/brand_manager.py",
    "core_integrator": "orchestration/brain/core/core_integrator.py",
    "Goal": "orchestration/brain/spine/main_loop.py",
    "emotion_trend_tracker": "orchestration/brain/spine/emotion_trend_tracker.py",
    "self_reflect_cron": "orchestration/brain/spine/self_reflect_cron.py",
    "unified_self": "orchestration/brain/spine/unified_self.py",
    "emotional_sorter": "orchestration/brain/spine/emotional_sorter.py",
    "emotion_log_alt": "orchestration/brain/spine/emotion_log_alt.py",
    "trait_manager": "orchestration/brain/spine/trait_manager.py",
    "emotion_intent_link": "orchestration/brain/spine/emotion_intent_link.py",
    "AccentAdapter": "orchestration/brain/spine/accent_adapter.py",
    "trait_sync": "orchestration/brain/spine/trait_sync.py",
    "hash": "orchestration/brain/spine/hash.py",
    "guardian": "orchestration/brain/spine/guardian.py",
    "trait_sync_gpt_synb_ref": "orchestration/brain/spine/trait_sync_gpt_synb_ref.py",
    "ConsentTierManager": "orchestration/brain/lukhas_data/consent_manager.py",
    "settings_editor": "orchestration/brain/config/settings_editor.py",
    "paths": "orchestration/brain/config/paths.py",
    "settings_loader": "orchestration/brain/config/settings_loader.py",
    "EnhancedEmotionalProcessor": "orchestration/brain/integration/brain_integration.py",
    "federated_integrator": "orchestration/brain/integration/federated_integrator.py",
    "personality": "orchestration/brain/personality/personality.py",
    "creative_personality": "orchestration/brain/personality/creative_personality.py",
    "creative_expressions": "orchestration/brain/personality/creative_expressions.py",
    "PersonalityRefiner": "orchestration/brain/personality/personality_refiner.py",
    "WorldModelType": "orchestration/brain/prediction/world_models.py",
    "AwarenessAdapter": "orchestration/brain/unified_integration/adapters/awareness_adapter.py",
    "BioInspiredAdapter": "orchestration/brain/unified_integration/adapters/bio_adapter.py",
    "DreamEngineAdapter": "orchestration/brain/unified_integration/adapters/dream_adapter.py",
    "VoiceAdapter": "orchestration/brain/unified_integration/adapters/voice_adapter.py",
    "LegacyComponentAdapter": "orchestration/brain/unified_integration/adapters/legacy_adapter.py",
    "CognitiveAdapter": "orchestration/brain/unified_integration/adapters/cognitive_adapter.py",
    "OscillatorAdapter": "orchestration/brain/unified_integration/adapters/oscillator_adapter.py",
    "IntentNodeAdapter": "orchestration/brain/unified_integration/adapters/intent_adapter.py",
    "BrainAdapter": "orchestration/brain/unified_integration/adapters/brain_adapter.py",
    "UncertaintyType": "orchestration/brain/abstract_reasoning/confidence_calibrator.py",
    "AbstractReasoningBrainOscillator": "orchestration/brain/abstract_reasoning/oscillator.py",
    "AbstractReasoningBrainCore": "orchestration/brain/abstract_reasoning/core.py",
    "bio_quantum_radar_integration": "orchestration/brain/abstract_reasoning/bio_quantum_radar_integration.py",
    "report_generator": "orchestration/brain/output/report_generator.py",
    "EnhancementRequest": "orchestration/brain/meta/integrations/bot_enhancement.py",
    "MetaLearner": "orchestration/brain/self_improvement/meta_learner.py",
    "qrly": "orchestration/brain/qrl_code/qrly.py",
    "com_validator": "orchestration/brain/qrl_code/com_validator.py",
    "ethical_engine": "orchestration/brain/compliance/ethical_engine.py",
    "SafetyLevel": "orchestration/brain/compliance/constitutional_ai.py",
    "symbolic_loop": "orchestration/brain/reasoning/symbolic_loop.py",
    "ValidationSeverity": "orchestration/brain/reasoning/symbolic_validator.py",
    "intent_inference": "orchestration/brain/symbolic_ai/modules/intent_inference.py",
    "dissonance_detector": "orchestration/brain/symbolic_ai/modules/dissonance_detector.py",
    "episodic_recall": "orchestration/brain/symbolic_ai/modules/episodic_recall.py",
    "generate_dream": "orchestration/brain/rem/generate_dream.py",
    "lidar_emotion_interpreter": "orchestration/brain/rem/lidar_emotion_interpreter.py",
    "rem_visualizer": "orchestration/brain/rem/rem_visualizer.py",
    "generate_dream_data": "orchestration/brain/rem/generate_dream_data.py",
    "rem": "orchestration/brain/rem/rem.py",
    "SymbolicReasoningEngine": "orchestration/brain/symbolic_engine/semantic_reasoner.py",
    "SymbolicWorld": "orchestration/brain/symbolic_engine/symbolic_core.py",
    "UnifiedPatternRecognition": "orchestration/brain/symbolic_engine/pattern_recognition.py",
    "NeuralSymbolicBridge": "orchestration/brain/neuro_symbolic/bridge.py",
    "NeuroSymbolicIntegrator": "orchestration/brain/neuro_symbolic/hybrid_integration.py",
    "NeuralProcessor": "orchestration/brain/neuro_symbolic/neural_processor.py",
    "NeuroSymbolicIntegration": "orchestration/brain/neuro_symbolic/neuro_symbolic_integration.py",
    "SymbolicActionProtocol": "orchestration/brain/neuro_symbolic/governance/symbolic_action_protocol.py",
    "symbolic_action_prrotocol": "orchestration/brain/neuro_symbolic/governance/symbolic_action_prrotocol.py",
    "EthicalProtestModule": "orchestration/brain/emotional/ethical_stop.py",
    "ethical_conflict_resolution": "orchestration/brain/emotional/ethical_conflict_resolution.py",
    "SeamlessExperience": "orchestration/brain/seamless/experience_core.py",
    "EmotionRequest": "orchestration/brain/emotional/core.py",
    "GlobalComplianceFramework": "quantum/quantum_oscillator.py",
    "OrchestratorCore": "orchestration/core_modules/orchestrator_core_oxn.py",
    "EmotionalOscillator": "orchestration/monitoring/emotional_oscillator.py",
    "ProposalType": "orchestration/brain/governance/dao_governance_node.py",
    "LucasDNALink": "orchestration/brain/dna/dna_link.py",
    "rate_modulator": "orchestration/brain/monitoring/rate_modulator.py",
    "remediator_agent": "orchestration/brain/monitoring/remediator_agent.py",
    "governance_monitor": "orchestration/brain/monitoring/governance_monitor.py",
    "PerformanceMetrics": "orchestration/brain/monitoring/performance.py",
    "replay": "orchestration/brain/dream_engine/cli/replay.py",
    "IntelligenceRequest": "orchestration/brain/neural/neural_intelligence_api.py",
    "LukhasNeuralIntelligence": "orchestration/brain/neural/neural_intelligence_main.py",
    "NeuralIntelligenceSystem": "orchestration/brain/neural/cognitive_core.py",
    "output_log": "orchestration/brain/logging/output_log.py",
    "symbolic_tuner": "orchestration/user_feedback/symbolic_tuner.py",
    "feedback_collector": "orchestration/user_feedback/feedback_collector.py",
    "guardian_cli_test": "orchestration/guardian/guardian_cli_test.py",
    "SystemOrchestrator": "orchestration/core_modules/system_orchestrator.py",
    "SignalType": "orchestration/core_modules/signals.py",
    "plugin_loader": "orchestration/core_modules/plugin_loader.py",
    "ComplianceContext": "orchestration/core_modules/controller.py",
    "MasterMultiBrainOrchestrator": "orchestration/core_modules/master_orchestrator_alt.py",
    "symbolic_signal_router": "orchestration/core_modules/symbolic_signal_router.py",
    "TestModularIntelligenceOrchestrator": "orchestration/core_modules/orchestration_alt.py",
    "WebsiteIntelligence": "orchestration/core_modules/master_orchestrator.py",
    "OrchestrationService": "orchestration/core_modules/orchestration_service.py",
    "SystemSnapshot": "orchestration/core_modules/orchestrator_core.py",
    "ProcessOrchestrator": "orchestration/core_modules/process_orchestrator.py",
    "SymbolicHandshake": "orchestration/core_modules/symbolic_handshake.py",
    "SignalMiddleware": "orchestration/core_modules/signal_middleware.py",
    "RemediationType": "orchestration/monitoring/remediator_agent.py",
    "MemoryCleaner": "orchestration/monitoring/sub_agents/memory_cleaner.py",
    "EthicsGuardian": "orchestration/monitoring/sub_agents/ethics_guardian.py",
    "MessageType": "orchestration/interfaces/orchestration_protocol.py",
    "AgentStatus": "orchestration/interfaces/agent_interface.py",
    "MemoryCreateRequest": "api/memory.py",
    "GlyphImportItem": "api/glyph_exchange.py",
    "ConsciousnessStateRequest": "api/consciousness.py",
    "ColonySpawnRequest": "api/colony_endpoints.py",
    "DreamLogRequest": "api/dream.py",
    "EmotionAnalysisRequest": "api/emotion.py",
    "ProprioceptiveState": "embodiment/body_state.py",
    "SymbolicReasoningColony": "symbolic/colony_tag_propagation.py",
    "service_analysis": "symbolic/service_analysis.py",
    "SimAgent": "symbolic/swarm_tag_simulation.py",
    "glyph_engine": "symbolic/glyph_engine.py",
    "symbolic_glyph_hash": "symbolic/symbolic_glyph_hash.py",
    "Voicesymbol": "symbolic/vocabularies/voice_vocabulary.py",
    "dream_vocabulary": "symbolic/vocabularies/dream_vocabulary.py",
    "identity_vocabulary": "symbolic/vocabularies/identity_vocabulary.py",
    "SymbolicLogger": "symbolic/vocabularies/usage_examples.py",
    "Visualsymbol": "symbolic/vocabularies/vision_vocabulary.py",
    "bio_vocabulary": "symbolic/vocabularies/bio_vocabulary.py",
    "vocabulary_template": "symbolic/vocabularies/vocabulary_template.py",
    "emotion_vocabulary": "symbolic/vocabularies/emotion_vocabulary.py",
    "BioSymbolic": "symbolic/bio/bio_symbolic.py",
    "SensoryEcho": "perception/symbolic_nervous_system.py",
    "sensor_fusion": "perception/sensor_fusion.py",
    "cross_modal_validation": "perception/cross_modal_validation.py",
    "copilot_file_moves": ".vscode/vscode-archive/copilot_file_moves.py",
    "move_files_gpt": ".vscode/vscode-archive/move_files_gpt.py",
    "pre_analyzer": ".vscode/vscode-archive/pre_analyzer.py",
    "files_moves_2": ".vscode/vscode-archive/files_moves_2.py",
    "EmotionalColony": "emotion/colony_emotions.py",
    "EmotionalTier": "emotion/dreamseed_unified.py",
    "multimodal_sentiment": "emotion/multimodal_sentiment.py",
    "UserIntent": "emotion/symbolic_user_intent.py",
    "EmotionCycler": "emotion/cycler.py",
    "RecurringEmotionTracker": "emotion/affect_detection/recurring_emotion_tracker.py",
    "MoodRegulator": "emotion/mood_regulation/mood_regulator.py",
    "ArchetypePattern": "emotion/tools/emotional_echo_detector.py",
    "MoodEntropyTracker": "emotion/mood_regulation/mood_entropy_tracker.py",
    "EngineType": "interfaces/registries/intelligence_engine_registry.py",
    "ThoughtProcessingRequest": "interfaces/api/lambda_bot_api_integration.py",
    "LukhasServicer": "interfaces/api/v1/grpc/server.py",
    "LukhasServiceServicer": "interfaces/api/v1/grpc/pb2_grpc.py",
    "LukhasGRPCClient": "interfaces/api/v1/grpc/client.py",
    "ProcessRequest": "interfaces/api/v1/grpc/pb2.py",
    "APIError": "interfaces/api/v1/rest/app.py",
    "ProcessingMode": "interfaces/api/v1/rest/models.py",
    "AuthMiddleware": "interfaces/api/v1/rest/middleware.py",
    "metrics": "interfaces/api/v1/rest/routers/metrics.py",
    "CapabilityAnnouncement": "interfaces/api/v1/rest/routers/tasks.py",
    "health": "interfaces/api/v1/rest/routers/health.py",
    "process": "interfaces/api/v1/rest/routers/process.py",
    "AwarenessType": "interfaces/protocols/awareness_protocol.py",
    "add_module_descriptions": "quantum/add_module_descriptions.py",
    "QuantumValidator": "quantum/systems/quantum_validator.py",
    "QuantumWaveform": "quantum/quantum_waveform.py",
    "identity_engine": "quantum/identity_engine.py",
    "QuantumAGISystem": "quantum/system_orchestrator.py",
    "QuantumCoordinator": "quantum/coordinator.py",
    "QuantumService": "quantum/service.py",
    "QuantumFlux": "quantum/quantum_flux.py",
    "UnifiedQuantumConfig": "quantum/system.py",
    "neural_symbolic_processor": "quantum/neural_symbolic_processor.py",
    "SymbolicDimension": "quantum/metadata.py",
    "add_poetic_headers": "quantum/add_poetic_headers.py",
    "QuantumUIOptimizer": "quantum/ui_generator.py",
    "AwarenessQuantumConfig": "quantum/awareness_system.py",
    "fix_proper_ascii": "quantum/fix_proper_ascii.py",
    "TestOracleType": "quantum/systems/bio_integration/test_oracle.py",
    "QuantumBioOptimizationConfig": "quantum/bio_optimization_adapter.py",
    "MitochondrialQuantumBridge": "quantum/systems/bio_integration/awareness/quantum_bio.py",
    "fix_ascii_headers": "quantum/fix_ascii_headers.py",
    "OscillatorState": "quantum/oscillator.py",
    "regenerate_intelligent_descriptions": "quantum/regenerate_intelligent_descriptions.py",
    "QuantumInspiredProcessor": "quantum/systems/quantum_processor.py",
    "ProtonGradient": "quantum/bio_components.py",
    "TestQuantumIntegration": "quantum/integration.py",
    "DistributedQuantumSafeOrchestrator": "quantum/distributed_quantum_architecture.py",
    "fix_module_descriptions": "quantum/fix_module_descriptions.py",
    "VeriFoldQR": "quantum/vault_manager.py",
    "CristaeTopologyType": "quantum/bio_crista_optimizer_adapter.py",
    "CertificateStatus": "quantum/certificate_manager.py",
    "QuantumBioCoordinator": "quantum/quantum_bio_coordinator.py",
    "EnhancedQuantumEngine": "quantum/engine.py",
    "add_compliant_headers": "quantum/add_compliant_headers.py",
    "setup_api_keys": "quantum/setup_api_keys.py",
    "QuantumLikeState": "quantum/layer.py",
    "QuantumThreat": "quantum/\u039bBot_quantum_security.py",
    "add_intelligent_descriptions": "quantum/add_intelligent_descriptions.py",
    "QuantumSafeAuditBlockchain": "quantum/safe_blockchain.py",
    "QuantumProcessingCore": "quantum/systems/quantum_processing_core.py",
    "QuantumConsciousness\u039bBot": "quantum/main.py",
    "DASTQuantumConfig": "quantum/dast_orchestrator.py",
    "add_verbose_intelligent_descriptions": "quantum/add_verbose_intelligent_descriptions.py",
    "TaskType": "quantum/systems/bio_integration/multi_orchestrator.py",
    "QuantumGlyphRegistry": "quantum/quantum_glyph_registry.py",
    "add_template_reference": "quantum/add_template_reference.py",
    "ConsensusAlgorithm": "quantum/quantum_consensus_system_enhanced.py",
    "\u039biDProfile": "quantum/api_manager.py",
    "QuantumEntanglement": "quantum/systems/quantum_entanglement.py",
    "QuantumIntegrationTestSuite": "quantum/phase_quantum_integration.py",
    "QuantumNeuralSymbolicProcessor": "quantum/neural_symbolic_engine.py",
    "LukhasTestResult": "quantum/quantum_bio_bulletproof_system.py",
    "ZeroKnowledgePrivacyEngine": "quantum/privacy/zero_knowledge_system.py",
    "Quantumoscillator": "quantum/systems/quantum_engine.py",
    "quantum_states": "quantum/systems/quantum_states.py",
    "bulletproof_system": "quantum/systems/bio_integration/bulletproof_system.py",
    "optimization_adapter": "quantum/systems/bio_integration/optimization_adapter.py",
    "ConnectivityState": "quantum/systems/bio_integration/connectivity_consolidator.py",
    "QuantumOscillator": "quantum/quantum_processing/quantum_engine.py"
  }
}