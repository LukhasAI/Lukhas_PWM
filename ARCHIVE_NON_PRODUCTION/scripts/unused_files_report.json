{
  "total_files": 2540,
  "unused_files": 1332,
  "usage_rate": 0.4755905511811024,
  "categorized": {
    "benchmarks": [
      "benchmarks/api_system_benchmark.py",
      "benchmarks/bridge_system_benchmark.py",
      "benchmarks/configuration_system_benchmark.py",
      "benchmarks/dashboard_system_benchmark.py",
      "benchmarks/emotion_system_benchmark.py",
      "benchmarks/ethics/ethical_compliance.py",
      "benchmarks/learning_system_benchmark.py",
      "benchmarks/optimized_actor_benchmark.py",
      "benchmarks/perception_system_benchmark.py",
      "benchmarks/performance/run_quantized_benchmark.py",
      "benchmarks/performance/visualize_quantized_performance.py",
      "benchmarks/reasoning_system_benchmark.py",
      "benchmarks/scripts/daily_benchmark_organizer.py",
      "benchmarks/security_system_benchmark.py",
      "benchmarks/simple_actor_benchmark.py",
      "benchmarks/symbolic_system_benchmark.py",
      "benchmarks/tests/api_performance_benchmark.py",
      "benchmarks/tests/ethical_compliance.py",
      "benchmarks/trace_system_benchmark.py",
      "benchmarks/voice_system_benchmark.py"
    ],
    "tests": [
      "tests/__init__.py",
      "tests/connectivity/__init__.py",
      "tests/connectivity/fixtures/module_b.py",
      "tests/core/__init__.py",
      "tests/core/memory/__init__.py",
      "tests/core/plugins/__init__.py",
      "tests/core/symbolic/__init__.py",
      "tests/fixtures/__init__.py",
      "tests/fixtures/memory_fixtures.py",
      "tests/fixtures/symbolic_fixtures.py",
      "tests/hold/orchestration/__init__.py",
      "tests/integration/__init__.py",
      "tests/interfaces/__init__.py",
      "tests/interfaces/api/__init__.py",
      "tests/internal_tools/__init__.py",
      "tests/memory_stress_tests.py",
      "tests/memory_stress_tests_light.py",
      "tests/orchestration/__init__.py",
      "tests/run_orchestration_tests.py",
      "tests/runners/run_tests.py",
      "tests/runners/run_tests_resilient.py",
      "tests/symbolic/__init__.py",
      "tests/unified_grammar/__init__.py",
      "tests/unified_grammar/run_tests.py"
    ],
    "tools": [
      "tools/__init__.py",
      "tools/cleanup_and_organize.py",
      "tools/cli/ctl.py",
      "tools/cli/drift_analyzer_cli.py",
      "tools/core_module_analyzer.py",
      "tools/dev/__init__.py",
      "tools/dev/add_verbose_core_descriptions.py",
      "tools/digest_extractor.py",
      "tools/fix_corrupted_lukhas.py",
      "tools/fix_headers.py",
      "tools/fix_remaining_issues.py",
      "tools/import_path_fixer.py",
      "tools/parsers/__init__.py",
      "tools/path_validator.py",
      "tools/prediction/prophet_predictor.py",
      "tools/safe_workspace_analyzer.py",
      "tools/task_migration.py",
      "tools/task_tracker.py",
      "tools/vision/vision_prompt_helper.py"
    ],
    "examples": [],
    "core_modules": [
      "api/glyph_exchange.py",
      "api/memory_endpoints.py",
      "bio/bio_affect_model.py",
      "bio/bio_homeostasis.py",
      "bio/colony_self_repair.py",
      "bio/endocrine_daily_operations.py",
      "bio/protein_synthesizer.py",
      "bio/quantum_layer.py",
      "bio/recovery_protocol.py",
      "bio/symbolic/bio_systems_inspiration.py",
      "bio/symbolic/core/__init__.py",
      "bio/symbolic/quantum_coherence_enhancer.py",
      "bio/symbolic_entropy_observer.py",
      "bio/systems/orchestration/__init__.py",
      "bio/systems/orchestration/adapters/__init__.py",
      "bio/systems/orchestration/adapters/voice_adapter.py",
      "bio/systems/orchestration/base_orchestrator.py",
      "bio/systems/orchestration/compatibility.py",
      "bio/systems/orchestration/identity_aware_bio_orchestrator.py",
      "bio/systems/orchestration/oscillator_orchestrator.py",
      "consciousness/awareness/__init__.py",
      "consciousness/awareness/awareness_protocol.py",
      "consciousness/cognitive/__init__.py",
      "consciousness/cognitive/adapter.py",
      "consciousness/cognitive/adapter_complete.py",
      "consciousness/dream_bridge.py",
      "consciousness/openai_consciousness_adapter.py",
      "consciousness/reflection/__init__.py",
      "consciousness/systems/__init__.py",
      "consciousness/systems/awareness_processor.py",
      "consciousness/systems/awareness_tracker.py",
      "consciousness/systems/cognitive_systems/__init__.py",
      "consciousness/systems/cognitive_systems/voice_personality.py",
      "consciousness/systems/engine_alt.py",
      "consciousness/systems/engine_codex.py",
      "consciousness/systems/engine_complete.py",
      "consciousness/systems/engine_poetic.py",
      "consciousness/systems/mapper.py",
      "consciousness/systems/quantum_consciousness_integration.py",
      "consciousness/systems/quantum_consciousness_visualizer.py",
      "consciousness/systems/quantum_creative_consciousness.py",
      "consciousness/systems/reflection/__init__.py",
      "consciousness/systems/reflection/reflection.py",
      "consciousness/systems/self_reflection_engine.py",
      "consciousness/systems/validator.py",
      "consciousness/systems/\u039bBot_consciousness_monitor.py",
      "core/actor_model.py",
      "core/actor_supervision_integration.py",
      "core/adaptive_ai/Meta_Learning/__init__.py",
      "core/ai/integration_manager.py",
      "core/ai_interface.py",
      "core/api_controllers.py",
      "core/api_diff_analyzer.py",
      "core/apply_api_fixes.py",
      "core/benchmark_swarm.py",
      "core/circuit_breaker.py",
      "core/collaboration.py",
      "core/consistency_manager.py",
      "core/core_system.py",
      "core/direct_ai_router.py",
      "core/ethics/__init__.py",
      "core/ethics/dream_ethics_injector.py",
      "core/event_replay_snapshot.py",
      "core/governance/governance_colony.py",
      "core/identity/__init__.py",
      "core/identity/engine.py",
      "core/identity/id_manager.py",
      "core/identity/manager.py",
      "core/identity/mapper.py",
      "core/identity/persona_engine.py",
      "core/identity/processor.py",
      "core/identity/vault/__init__.py",
      "core/infrastructure/base_node.py",
      "core/infrastructure/node_collection.py",
      "core/infrastructure/node_manager.py",
      "core/integrator.py",
      "core/integrity_probe.py",
      "core/interaction/__init__.py",
      "core/interfaces/cli.py",
      "core/interfaces/common_interfaces.py",
      "core/interfaces/custom_llm.py",
      "core/interfaces/dashboad.py",
      "core/interfaces/dev_dashboard.py",
      "core/interfaces/launcher.py",
      "core/interfaces/logic/__init__.py",
      "core/interfaces/logic/agent_core.py",
      "core/interfaces/logic/agent_logic_architecture.py",
      "core/interfaces/logic/agent_self.py",
      "core/interfaces/logic/consent_manager.py",
      "core/interfaces/logic/context/__init__.py",
      "core/interfaces/logic/delegate_logic.py",
      "core/interfaces/logic/memory_handler.py",
      "core/interfaces/logic/orchestrator.py",
      "core/interfaces/logic/safety_filter.py",
      "core/interfaces/logic/voice/__init__.py",
      "core/interfaces/logic/voice_narration_player.py",
      "core/interfaces/lukhas_as_agent/agent_logic/__init__.py",
      "core/interfaces/lukhas_as_agent/agent_logic/agent_self.py",
      "core/interfaces/lukhas_as_agent/agent_logic/memory_handler.py",
      "core/interfaces/lukhas_as_agent/agent_logic/orchestrator.py",
      "core/interfaces/lukhas_as_agent/agent_logic/safety_filter.py",
      "core/interfaces/lukhas_as_agent/agent_logic/voice_narration_player.py",
      "core/interfaces/lukhas_as_agent/auth/__init__.py",
      "core/interfaces/lukhas_as_agent/auth/registry.py",
      "core/interfaces/lukhas_as_agent/auth/vendor_hospitality_sync.py",
      "core/interfaces/lukhas_as_agent/core/__init__.py",
      "core/interfaces/lukhas_as_agent/core/affiliate_log.py",
      "core/interfaces/lukhas_as_agent/core/agent_handoff.py",
      "core/interfaces/lukhas_as_agent/core/checkout_handler.py",
      "core/interfaces/lukhas_as_agent/core/duet_conductor.py",
      "core/interfaces/lukhas_as_agent/core/emotion_log.py",
      "core/interfaces/lukhas_as_agent/core/filter_gpt.py",
      "core/interfaces/lukhas_as_agent/core/generate_image.py",
      "core/interfaces/lukhas_as_agent/core/generate_video.py",
      "core/interfaces/lukhas_as_agent/core/lukhas_nias_filter.py",
      "core/interfaces/lukhas_as_agent/core/nias_filter.py",
      "core/interfaces/lukhas_as_agent/core/overview_log.py",
      "core/interfaces/lukhas_as_agent/core/render_ai.py",
      "core/interfaces/lukhas_as_agent/core/reward_reputation.py",
      "core/interfaces/lukhas_as_agent/core/scheduler.py",
      "core/interfaces/lukhas_as_agent/core/vendor_sync.py",
      "core/interfaces/lukhas_as_agent/core/vision_prompts.py",
      "core/interfaces/lukhas_as_agent/core/voice_duet.py",
      "core/interfaces/lukhas_as_agent/core/wallet.py",
      "core/interfaces/lukhas_as_agent/news_and_social/__init__.py",
      "core/interfaces/lukhas_as_agent/news_and_social/affiliate_log.py",
      "core/interfaces/lukhas_as_agent/news_and_social/s_dispatcher.py",
      "core/interfaces/lukhas_as_agent/sample_payloads/__init__.py",
      "core/interfaces/lukhas_as_agent/sample_payloads/trace_log_viewer.py",
      "core/interfaces/lukhas_as_agent/streamlit/__init__.py",
      "core/interfaces/lukhas_as_agent/streamlit/components/__init__.py",
      "core/interfaces/lukhas_as_agent/streamlit/components/dream_export_streamlit.py",
      "core/interfaces/lukhas_as_agent/streamlit/components/replay_graphs.py",
      "core/interfaces/lukhas_as_agent/streamlit/components/tier_visualizer.py",
      "core/interfaces/lukhas_as_agent/streamlit/components/voice_preview_streamlit.py",
      "core/interfaces/lukhas_as_agent/sys/abas/__init__.py",
      "core/interfaces/lukhas_as_agent/sys/dast/__init__.py",
      "core/interfaces/lukhas_as_agent/sys/dast/aggregator.py",
      "core/interfaces/lukhas_as_agent/sys/dast/dast_logger.py",
      "core/interfaces/lukhas_as_agent/sys/dast/launcher.py",
      "core/interfaces/lukhas_as_agent/sys/dast/partner_sdk.py",
      "core/interfaces/lukhas_as_agent/sys/dast/schedule_manager.py",
      "core/interfaces/lukhas_as_agent/sys/dast/store.py",
      "core/interfaces/lukhas_as_agent/sys/nias/05_25_dream_clustering_engine.py",
      "core/interfaces/lukhas_as_agent/sys/nias/__init__.py",
      "core/interfaces/lukhas_as_agent/sys/nias/delivery_loop.py",
      "core/interfaces/lukhas_as_agent/sys/nias/dream_export_streamlit.py",
      "core/interfaces/lukhas_as_agent/sys/nias/dream_log_viewer.py",
      "core/interfaces/lukhas_as_agent/sys/nias/dream_narrator_queue.py",
      "core/interfaces/lukhas_as_agent/sys/nias/dream_recorder.py",
      "core/interfaces/lukhas_as_agent/sys/nias/feedback_insight_cli.py",
      "core/interfaces/lukhas_as_agent/sys/nias/feedback_log_viewer.py",
      "core/interfaces/lukhas_as_agent/sys/nias/feedback_loop.py",
      "core/interfaces/lukhas_as_agent/sys/nias/generate_payload_cli.py",
      "core/interfaces/lukhas_as_agent/sys/nias/inject_message_simulator.py",
      "core/interfaces/lukhas_as_agent/sys/nias/main_loop.py",
      "core/interfaces/lukhas_as_agent/sys/nias/replay_heatmap.py",
      "core/interfaces/lukhas_as_agent/sys/nias/replay_queue.py",
      "core/interfaces/lukhas_as_agent/sys/nias/replay_visualizer.py",
      "core/interfaces/lukhas_as_agent/sys/nias/symbolic_reply_generator.py",
      "core/interfaces/lukhas_as_agent/sys/nias/validate_payload.py",
      "core/interfaces/lukhas_as_agent/sys/nias/voice_narrator.py",
      "core/interfaces/lukhas_as_agent/utils/__init__.py",
      "core/interfaces/lukhas_as_agent/utils/symbolic_github_export.py",
      "core/interfaces/lukhas_as_agent/widgets/__init__.py",
      "core/interfaces/lukhas_as_agent/widgets/delivery_tracker_widget.py",
      "core/interfaces/lukhas_as_agent/widgets/live_renderer_widget.py",
      "core/interfaces/lukhas_as_agent/widgets/terminal_widget.py",
      "core/interfaces/lukhas_as_agent/widgets/travel_widget.py",
      "core/interfaces/lukhas_as_agent/widgets/widget_archive.py",
      "core/interfaces/lukhas_as_agent/widgets/widget_engine.py",
      "core/interfaces/nias/__init__.py",
      "core/interfaces/nias/generate_nias_docs.py",
      "core/interfaces/research_dashboard.py",
      "core/interfaces/socket.py",
      "core/interfaces/tools/cli/__init__.py",
      "core/interfaces/tools/cli/command_registry.py",
      "core/interfaces/tools/cli/dream_cli.py",
      "core/interfaces/tools/cli/speak.py",
      "core/interfaces/tools/dao/__init__.py",
      "core/interfaces/tools/dao/dao_propose.py",
      "core/interfaces/tools/dao/dao_vote.py",
      "core/interfaces/tools/research/__init__.py",
      "core/interfaces/tools/research/dev_dashboard.py",
      "core/interfaces/tools/research/research_dashboard.py",
      "core/interfaces/tools/security/__init__.py",
      "core/interfaces/tools/security/session_logger.py",
      "core/interfaces/ui/__init__.py",
      "core/interfaces/ui/adaptive/__init__.py",
      "core/interfaces/ui/adaptive/ui_orchestrator.py",
      "core/interfaces/ui/components/__init__.py",
      "core/interfaces/ui/components/audio_exporter.py",
      "core/interfaces/ui/components/dream_export_streamlit.py",
      "core/interfaces/ui/components/replay_graphs.py",
      "core/interfaces/ui/components/tier_visualizer.py",
      "core/interfaces/ui/components/voice_preview_streamlit.py",
      "core/interfaces/ui/config/__init__.py",
      "core/interfaces/ui/config/dashboard_settings.py",
      "core/interfaces/ui/gui_launcher.py",
      "core/interfaces/voice/__init__.py",
      "core/interfaces/voice/core/__init__.py",
      "core/interfaces/voice/input/__init__.py",
      "core/interfaces/voice/integrations/elevenlabs/__init__.py",
      "core/interfaces/voice/listen.py",
      "core/interfaces/voice/voice_agent.py",
      "core/interfaces/voice/voice_emotional/__init__.py",
      "core/interfaces/web_formatter.py",
      "core/memoria.py",
      "core/meta_learning/enhancement_system.py",
      "core/meta_learning/remediator_agent.py",
      "core/modules/__init__.py",
      "core/net/__init__.py",
      "core/net/client_event.py",
      "core/neural_architectures/__init__.py",
      "core/neural_architectures/abas/__init__.py",
      "core/neural_architectures/abas/abas_quantum_specialist.py",
      "core/notion_sync.py",
      "core/observability/collector.py",
      "core/output/__init__.py",
      "core/output/message_hub.py",
      "core/p2p_fabric.py",
      "core/performance/__init__.py",
      "core/performance/orchestrator.py",
      "core/personality/__init__.py",
      "core/personality/creative_personality.py",
      "core/personality/creative_personality_clean.py",
      "core/personality/personality.py",
      "core/quantized_cycle_manager.py",
      "core/quorum_override.py",
      "core/rem/__init__.py",
      "core/rem/sleep_cycle.py",
      "core/rem/streamlit_lidar.py",
      "core/rem/visualizer.py",
      "core/resource_efficiency.py",
      "core/resource_efficiency_analyzer.py",
      "core/router/__init__.py",
      "core/router/llm_multiverse_router.py",
      "core/security/__init__.py",
      "core/services/location/__init__.py",
      "core/services/location/tracker.py",
      "core/services/personality/__init__.py",
      "core/services/personality/empathy.py",
      "core/services/personality/personas.py",
      "core/specialized_colonies.py",
      "core/spine/__init__.py",
      "core/spine/emotion_mapper_alt.py",
      "core/spine/integration_orchestrator.py",
      "core/state_management.py",
      "core/swarm_visualizer.py",
      "core/symbolic_arbitration.py",
      "core/symbolic_bridge/integrator.py",
      "core/symbolic_bridge/token_map.py",
      "core/symbolic_contract.py",
      "core/symbolic_diagnostics/__init__.py",
      "core/symbolic_reasoning/symbolic_trace.py",
      "core/targeted_api_fixes.py",
      "core/testing/__init__.py",
      "core/unified_bot.py",
      "core/user_interface_manager/__init__.py",
      "core/utils/__init__.py",
      "core/utils/dream_utils.py",
      "core/validation.py",
      "core/validation_script_fixes.py",
      "core/working_bot.py",
      "identity/api/__init__.py",
      "identity/api/api.py",
      "identity/api/auth/__init__.py",
      "identity/api/auth/flows.py",
      "identity/api/auth/onboarding.py",
      "identity/api/controllers/__init__.py",
      "identity/api/onboarding_api.py",
      "identity/api/routes/__init__.py",
      "identity/auth/__init__.py",
      "identity/auth/accessibility_overlay.py",
      "identity/auth/adaptive_ui_controller.py",
      "identity/auth/cognitive_sync_adapter.py",
      "identity/auth/qrg_generators.py",
      "identity/auth_backend/__init__.py",
      "identity/auth_backend/authentication_server.py",
      "identity/auth_backend/cross_device_handshake.py",
      "identity/auth_backend/entropy_health_api.py",
      "identity/auth_backend/multi_user_sync.py",
      "identity/auth_backend/qr_entropy_generator.py",
      "identity/auth_backend/webrtc_peer_sync.py",
      "identity/auth_utils/__init__.py",
      "identity/auth_utils/attention_monitor.py",
      "identity/auth_utils/cognitive_load_estimator.py",
      "identity/auth_utils/cultural_safety_checker.py",
      "identity/auth_utils/grid_size_calculator.py",
      "identity/auth_utils/replay_protection.py",
      "identity/backend/app/__init__.py",
      "identity/backend/app/admin_tools.py",
      "identity/backend/app/analytics_engine.py",
      "identity/backend/app/auth.py",
      "identity/backend/app/badge_manager.py",
      "identity/backend/app/cloud_bridge_manager.py",
      "identity/backend/app/cloud_storage_policy.py",
      "identity/backend/app/context_manager.py",
      "identity/backend/app/device_registry.py",
      "identity/backend/app/encryption_core.py",
      "identity/backend/app/external_authenticator.py",
      "identity/backend/app/game_state_bridge.py",
      "identity/backend/app/incident_reporter.py",
      "identity/backend/app/journey_log_manager.py",
      "identity/backend/app/logs.py",
      "identity/backend/app/qrglyph_generator.py",
      "identity/backend/app/replay_manager.py",
      "identity/backend/app/session_manager.py",
      "identity/backend/app/tests.py",
      "identity/backend/app/users.py",
      "identity/backend/app/vault.py",
      "identity/backend/app/vault_downloads.py",
      "identity/backend/dao/__init__.py",
      "identity/backend/dao/dao_core.py",
      "identity/backend/dao/log_viewer.py",
      "identity/backend/database/__init__.py",
      "identity/backend/database/crud.py",
      "identity/backend/database/trust_sharing_manager.py",
      "identity/backend/dream_engine/__init__.py",
      "identity/backend/dream_engine/assistant.py",
      "identity/backend/dream_engine/dream_export_streamlit.py",
      "identity/backend/dream_engine/dream_injector.py",
      "identity/backend/dream_engine/dream_log_viewer.py",
      "identity/backend/dream_engine/dream_narrator_queue.py",
      "identity/backend/dream_engine/dream_registry_dashboard.py",
      "identity/backend/dream_engine/dream_replay.py",
      "identity/backend/dream_engine/dream_seed_vote.py",
      "identity/backend/dream_engine/dream_summary_generator.py",
      "identity/backend/dream_engine/html_social_generator.py",
      "identity/backend/dream_engine/narration_controller.py",
      "identity/backend/qrglyphs/__init__.py",
      "identity/backend/qrglyphs/qrglymph_public.py",
      "identity/backend/qrglyphs/tests/__init__.py",
      "identity/backend/seedra/__init__.py",
      "identity/backend/seedra/ethics/__init__.py",
      "identity/backend/seedra/ethics/seedra_ethics_engine.py",
      "identity/backend/seedra/vault/__init__.py",
      "identity/backend/seedra/vault/seedra_registry.py",
      "identity/backend/seedra/vault/seedra_vault_manager.py",
      "identity/backend/verifold/__init__.py",
      "identity/backend/verifold/ai/__init__.py",
      "identity/backend/verifold/ai/gpt_symbolic_narrator.py",
      "identity/backend/verifold/ai/narrative_alignment_checker.py",
      "identity/backend/verifold/compliance/__init__.py",
      "identity/backend/verifold/compliance/symbolic_audit_mode.py",
      "identity/backend/verifold/cryptography/__init__.py",
      "identity/backend/verifold/cryptography/crypto_router.py",
      "identity/backend/verifold/cryptography/forward_secure_pibe.py",
      "identity/backend/verifold/cryptography/zk_narrative_proof_adapter.py",
      "identity/backend/verifold/entropy_fusion.py",
      "identity/backend/verifold/hardware_entropy_seed.py",
      "identity/backend/verifold/identity/__init__.py",
      "identity/backend/verifold/journal_mode.py",
      "identity/backend/verifold/ledger_auditor.py",
      "identity/backend/verifold/narrative_utils.py",
      "identity/backend/verifold/qr_decoder.py",
      "identity/backend/verifold/qr_encoder.py",
      "identity/backend/verifold/scanner_pwa/__init__.py",
      "identity/backend/verifold/scanner_pwa/scanner_api.py",
      "identity/backend/verifold/security/__init__.py",
      "identity/backend/verifold/security/consent_fuzz_tester.py",
      "identity/backend/verifold/security/glyph_mutation_simulator.py",
      "identity/backend/verifold/security/symbolic_adversary_agent.py",
      "identity/backend/verifold/setup_project.py",
      "identity/backend/verifold/storage/__init__.py",
      "identity/backend/verifold/storage/filecoin_uploader.py",
      "identity/backend/verifold/storage/verifold_exporter.py",
      "identity/backend/verifold/storage/verifold_vault_viewer.py",
      "identity/backend/verifold/tests/__init__.py",
      "identity/backend/verifold/utils/__init__.py",
      "identity/backend/verifold/utils/image_parser.py",
      "identity/backend/verifold/verifold_chain.py",
      "identity/backend/verifold/verifold_cli.py",
      "identity/backend/verifold/verifold_gui.py",
      "identity/backend/verifold/verifold_hash_pq.py",
      "identity/backend/verifold/verifold_hash_utils.py",
      "identity/backend/verifold/verifold_replay_engine.py",
      "identity/backend/verifold/visual/__init__.py",
      "identity/backend/verifold/visual/glyph_stego_encoder.py",
      "identity/backend/verifold/visual/qr_tier_scanner.py",
      "identity/backend/verifold/web3/__init__.py",
      "identity/backend/verifold/web3/emotion_nft_standard.py",
      "identity/backend/verifold/web3/verifold_bridge_adapter.py",
      "identity/backend/verifold/web_dashboard.py",
      "identity/backend/verifold/web_journal/__init__.py",
      "identity/backend/verifold/web_journal/launch_web_journal.py",
      "identity/backend/verifold/web_qr_verifier.py",
      "identity/backend/verifold/yubi_seeder.py",
      "identity/config/__init__.py",
      "identity/connector.py",
      "identity/core/__init__.py",
      "identity/core/auth/__init__.py",
      "identity/core/brain_identity_connector.py",
      "identity/core/commercial/__init__.py",
      "identity/core/id_service/__init__.py",
      "identity/core/onboarding/__init__.py",
      "identity/core/qrg/__init__.py",
      "identity/core/qrs/__init__.py",
      "identity/core/qrs/qrg_generator.py",
      "identity/core/qrs/session_replay.py",
      "identity/core/sent/__init__.py",
      "identity/core/sing/__init__.py",
      "identity/core/sing/cross_device_manager.py",
      "identity/core/sing/sso_engine.py",
      "identity/core/tier/__init__.py",
      "identity/core/trace/__init__.py",
      "identity/core/trace/pattern_analyzer.py",
      "identity/core/verifold_connector.py",
      "identity/diagnostics.py",
      "identity/diagnostics/__init__.py",
      "identity/diagnostics/insight_cli.py",
      "identity/enterprise/__init__.py",
      "identity/enterprise/auth.py",
      "identity/governance/__init__.py",
      "identity/governance/policy_board.py",
      "identity/identity/__init__.py",
      "identity/lukhas_identity/security/__init__.py",
      "identity/lukhas_identity/security/awareness_protocol.py",
      "identity/lukhas_identity/security/kyi_check.py",
      "identity/lukhus_deployment_package.py",
      "identity/mobile/__init__.py",
      "identity/mobile/websocket_client.py",
      "identity/mobile_platform/__init__.py",
      "identity/mobile_platform/mobile_ui_renderer.py",
      "identity/public/__init__.py",
      "identity/public/lambda_id_previewer.py",
      "identity/qrg_100_percent_coverage.py",
      "identity/qrg_schemas/__init__.py",
      "identity/qrg_showcase.py",
      "identity/router.py",
      "identity/security/__init__.py",
      "identity/security/symbolic_vault.py",
      "identity/tests/__init__.py",
      "identity/tests/claude_sync_relay.py",
      "identity/tools/__init__.py",
      "identity/tools/onboarding_cli.py",
      "identity/trace.py",
      "identity/utils/__init__.py",
      "identity/wearables_integration/__init__.py",
      "identity/wearables_integration/entropy_beacon.py",
      "learning/_dict_learning.py",
      "learning/adaptive_agi/Meta_Learning/__init__.py",
      "learning/adaptive_agi/Meta_Learning/monitor_dashboard.py",
      "learning/adaptive_agi/Meta_Learning/symbolic_feedback.py",
      "learning/adaptive_agi/__init__.py",
      "learning/aid/dream_engine/__init__.py",
      "learning/aid/dream_engine/assistant.py",
      "learning/aid/dream_engine/dream_injector.py",
      "learning/aid/dream_engine/dream_registry_dashboard.py",
      "learning/aid/dream_engine/dream_summary_generator.py",
      "learning/aid/dream_engine/narration_controller.py",
      "learning/doc_generator_learning_engine.py",
      "learning/edu_module.py",
      "learning/embodied_thought/generative_reflex.py",
      "learning/exponential_learning.py",
      "learning/federated_colony_learning.py",
      "learning/federated_learning.py",
      "learning/federated_learning_system.py",
      "learning/federated_meta_learning.py",
      "learning/flagship/__init__.py",
      "learning/meta_adaptive/adaptive_interface_generator.py",
      "learning/meta_adaptive/adaptive_ux_core.py",
      "learning/meta_adaptive/meta_learning.py",
      "learning/meta_adaptive/system.py",
      "learning/meta_learning/federated_integration.py",
      "learning/meta_learning/meta_core.py",
      "learning/meta_learning/symbolic_feedback.py",
      "learning/meta_learning_adapter.py",
      "learning/meta_learning_recovery.py",
      "learning/metalearningenhancementsystem.py",
      "learning/neural_integrator.py",
      "learning/plugin_learning_engine.py",
      "learning/results/__init__.py",
      "learning/results/trace_reader.py",
      "learning/systems/__init__.py",
      "learning/systems/core_system.py",
      "learning/systems/duet_conductor.py",
      "learning/systems/intent_language.py",
      "learning/systems/symbolic_voice_loop.py",
      "learning/tutor_learning_engine.py",
      "learning/usage_learning.py",
      "memory/adapters/__init__.py",
      "memory/colonies/episodic_memory_colony.py",
      "memory/consolidation/__init__.py",
      "memory/convergence/memory_trace_harmonizer.py",
      "memory/core/unified_memory_orchestrator.py",
      "memory/dashboard.py",
      "memory/emotional_memory_manager_unified.py",
      "memory/enhanced_memory_fold.py",
      "memory/episodic/drift_tracker.py",
      "memory/episodic/recaller.py",
      "memory/evolution.py",
      "memory/hippocampal/__init__.py",
      "memory/memory_systems/__init__.py",
      "memory/memory_systems/memoria-checkpoint.py",
      "memory/neocortical/__init__.py",
      "memory/neocortical/concept_hierarchy.py",
      "memory/neocortical/semantic_extractor.py",
      "memory/node.py",
      "memory/openai_memory_adapter.py",
      "memory/repair/advanced_trauma_repair.py",
      "memory/replay/__init__.py",
      "memory/resonance/resonant_memory_access.py",
      "memory/service.py",
      "memory/symbolic_integration.py",
      "memory/systems/__init__.py",
      "memory/systems/adaptive_memory_engine.py",
      "memory/systems/agent_memory_trace_animator.py",
      "memory/systems/bio_symbolic_memory.py",
      "memory/systems/causal_memory_chains.py",
      "memory/systems/chatgpt_memory_integrator.py",
      "memory/systems/chatgpt_memory_integrator_legacy.py",
      "memory/systems/collapse_buffer.py",
      "memory/systems/collapse_trace.py",
      "memory/systems/dream_integrator.py",
      "memory/systems/dream_memory_export.py",
      "memory/systems/dream_memory_manager.py",
      "memory/systems/dream_trace_linker.py",
      "memory/systems/engine.py",
      "memory/systems/episodic_replay_buffer.py",
      "memory/systems/exponential_learning.py",
      "memory/systems/glyph_memory_bridge.py",
      "memory/systems/identity_lineage_bridge.py",
      "memory/systems/in_memory_cache_storage_wrapper.py",
      "memory/systems/in_memory_log_exporter.py",
      "memory/systems/in_memory_span_exporter.py",
      "memory/systems/integration_bridge.py",
      "memory/systems/integrity_collapser.py",
      "memory/systems/learn_to_learn.py",
      "memory/systems/lukhas_memory_encryptor.py",
      "memory/systems/lukhas_memory_recall.py",
      "memory/systems/memoria/__init__.py",
      "memory/systems/memoria/dream_cron.py",
      "memory/systems/memoria/dreams.py",
      "memory/systems/memoria/dreams_alt.py",
      "memory/systems/memoria/reflector.py",
      "memory/systems/memoria/replayer.py",
      "memory/systems/memoria_codex.py",
      "memory/systems/memoria_system.py",
      "memory/systems/memory_advanced_manager.py",
      "memory/systems/memory_bases.py",
      "memory/systems/memory_checkpoint.py",
      "memory/systems/memory_cloud.py",
      "memory/systems/memory_comprehensive.py",
      "memory/systems/memory_consolidation.py",
      "memory/systems/memory_consolidator.py",
      "memory/systems/memory_drift_mirror.py",
      "memory/systems/memory_encoder.py",
      "memory/systems/memory_encryptor.py",
      "memory/systems/memory_evolution.py",
      "memory/systems/memory_format.py",
      "memory/systems/memory_handler.py",
      "memory/systems/memory_helix.py",
      "memory/systems/memory_helix_golden.py",
      "memory/systems/memory_helix_visualizer.py",
      "memory/systems/memory_introspection_engine.py",
      "memory/systems/memory_learning/__init__.py",
      "memory/systems/memory_learning/memory_manager.py",
      "memory/systems/memory_lock.py",
      "memory/systems/memory_media_file_storage.py",
      "memory/systems/memory_node.py",
      "memory/systems/memory_orchestrator.py",
      "memory/systems/memory_planning.py",
      "memory/systems/memory_processing.py",
      "memory/systems/memory_profiler.py",
      "memory/systems/memory_recall.py",
      "memory/systems/memory_reflector.py",
      "memory/systems/memory_research.py",
      "memory/systems/memory_resonance_analyzer.py",
      "memory/systems/memory_seeder.py",
      "memory/systems/memory_session_storage.py",
      "memory/systems/memory_trace.py",
      "memory/systems/memory_trace_logger.py",
      "memory/systems/memory_tracker.py",
      "memory/systems/memory_utils.py",
      "memory/systems/memory_validator.py",
      "memory/systems/memory_viz.py",
      "memory/systems/memory_voice_helix.py",
      "memory/systems/meta_learning_patterns.py",
      "memory/systems/multimodal_memory_support.py",
      "memory/systems/neurosymbolic_integration.py",
      "memory/systems/orchestrator.py",
      "memory/systems/pin_memory.py",
      "memory/systems/pin_memory_cache.py",
      "memory/systems/processing/__init__.py",
      "memory/systems/processor.py",
      "memory/systems/quantum_memory_architecture.py",
      "memory/systems/recall_handler.py",
      "memory/systems/reflection_engine.py",
      "memory/systems/remvix/__init__.py",
      "memory/systems/replay_system.py",
      "memory/systems/resonance_memory_retrieval.py",
      "memory/systems/simple_memory.py",
      "memory/systems/symbolic_delta_compression.py",
      "memory/systems/symbolic_replay_engine.py",
      "memory/systems/symbolic_snapshot.py",
      "memory/systems/test_memory_store/__init__.py",
      "memory/systems/trace_injector.py",
      "memory/systems/trauma_lock.py",
      "memory/systems/voice_memory_bridge.py",
      "memory/tools/lambda_archive_inspector.py",
      "memory/tools/lambda_vault_scan.py",
      "memory/tools/memory_drift_auditor.py",
      "memory/visualizer.py",
      "memory/voice_memory_manager.py",
      "orchestration/agents/adaptive_orchestrator.py",
      "orchestration/agents/meta_cognitive_orchestrator.py",
      "orchestration/agents/meta_cognitive_orchestrator_alt.py",
      "orchestration/agents/multi_agent_collaboration.py",
      "orchestration/api.py",
      "orchestration/apis/code_process_integration_api.py",
      "orchestration/apis/drift_monitoring_api.py",
      "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
      "orchestration/brain/GlobalInstitutionalFramework.py",
      "orchestration/brain/__init__.py",
      "orchestration/brain/abstract_reasoning/__init__.py",
      "orchestration/brain/access/__init__.py",
      "orchestration/brain/access/tier_manager.py",
      "orchestration/brain/adaptive_image_generator.py",
      "orchestration/brain/ai_compliance.py",
      "orchestration/brain/attention/__init__.py",
      "orchestration/brain/australian_awareness_engine.py",
      "orchestration/brain/autonomous_github_manager.py",
      "orchestration/brain/autonomous_system.py",
      "orchestration/brain/awareness_engine.py",
      "orchestration/brain/awareness_engine_elevated.py",
      "orchestration/brain/brain_collapse_manager.py",
      "orchestration/brain/canadian_awareness_engine.py",
      "orchestration/brain/cognitive/__init__.py",
      "orchestration/brain/cognitive/awareness/__init__.py",
      "orchestration/brain/cognitive/awareness/awareness.py",
      "orchestration/brain/cognitive/cognitive_ai_client.py",
      "orchestration/brain/cognitive/cognitive_updater.py",
      "orchestration/brain/cognitive/cognitive_voice.py",
      "orchestration/brain/cognitive/curious_lukhas.py",
      "orchestration/brain/cognitive_enhancement.py",
      "orchestration/brain/collaborative_ai_agent_system.py",
      "orchestration/brain/collapse_bridge.py",
      "orchestration/brain/collapse_chain_simulator.py",
      "orchestration/brain/colony_coordinator.py",
      "orchestration/brain/compliance/__init__.py",
      "orchestration/brain/compliance/ai_compliance_manager.py",
      "orchestration/brain/compliance/constitutional_ai.py",
      "orchestration/brain/compliance_registry.py",
      "orchestration/brain/config/__init__.py",
      "orchestration/brain/config/paths.py",
      "orchestration/brain/config/read_settings.py",
      "orchestration/brain/config/settings.py",
      "orchestration/brain/config/settings_editor.py",
      "orchestration/brain/consciousness/__init__.py",
      "orchestration/brain/consciousness/dream_narrator.py",
      "orchestration/brain/consciousness/memory_identity.py",
      "orchestration/brain/context/__init__.py",
      "orchestration/brain/context/context_sync.py",
      "orchestration/brain/controller.py",
      "orchestration/brain/core/__init__.py",
      "orchestration/brain/core/ai_config.py",
      "orchestration/brain/core/azure_free_tier_strategy.py",
      "orchestration/brain/core/azure_openai_client.py",
      "orchestration/brain/core/brand_manager.py",
      "orchestration/brain/core/capability_analyzer.py",
      "orchestration/brain/core/core_integrator.py",
      "orchestration/brain/core/orchestrator.py",
      "orchestration/brain/core/types.py",
      "orchestration/brain/core_system.py",
      "orchestration/brain/cpu_friendly_compliance.py",
      "orchestration/brain/das_awareness_engine.py",
      "orchestration/brain/dna/__init__.py",
      "orchestration/brain/dna/dna_link.py",
      "orchestration/brain/dream_engine/cli/dream_cli.py",
      "orchestration/brain/dream_engine/cli/dream_processor.py",
      "orchestration/brain/dream_engine/cli/replay.py",
      "orchestration/brain/dream_engine/dream_replay_cli.py",
      "orchestration/brain/dream_engine/visualizer_core.py",
      "orchestration/brain/dream_mutator.py",
      "orchestration/brain/drift_pattern_analyzer.py",
      "orchestration/brain/emotional/core.py",
      "orchestration/brain/emotional/ethical_conflict_resolution.py",
      "orchestration/brain/emotional/ethical_stop.py",
      "orchestration/brain/emotional_resonance.py",
      "orchestration/brain/entropy_probe.py",
      "orchestration/brain/ethics/__init__.py",
      "orchestration/brain/ethics/ethical_conflict_resolution.py",
      "orchestration/brain/ethics/ethical_hierarchy.py",
      "orchestration/brain/ethics/ethical_stop.py",
      "orchestration/brain/ethics/ethics_engine.py",
      "orchestration/brain/ethics/ethics_guard.py",
      "orchestration/brain/eu_awareness_engine.py",
      "orchestration/brain/experience_manager.py",
      "orchestration/brain/expression.py",
      "orchestration/brain/fix_lambda_symbols.py",
      "orchestration/brain/governance/__init__.py",
      "orchestration/brain/governance/dao_governance_node.py",
      "orchestration/brain/integration/__init__.py",
      "orchestration/brain/integration/federated_integrator.py",
      "orchestration/brain/integration_bridge.py",
      "orchestration/brain/integration_manager.py",
      "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
      "orchestration/brain/learn_to_learn.py",
      "orchestration/brain/llm_engine.py",
      "orchestration/brain/logging/__init__.py",
      "orchestration/brain/logging/output_log.py",
      "orchestration/brain/lukhas_data/__init__.py",
      "orchestration/brain/lukhas_data/consent_manager.py",
      "orchestration/brain/main_bot.py",
      "orchestration/brain/main_node.py",
      "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
      "orchestration/brain/meta/__init__.py",
      "orchestration/brain/meta/cognition/__init__.py",
      "orchestration/brain/meta/cognition/orchestrator.py",
      "orchestration/brain/meta/cognition/reflection_layer.py",
      "orchestration/brain/meta/compliance_engine_20250503213400.py",
      "orchestration/brain/meta/integrations/__init__.py",
      "orchestration/brain/meta/integrations/bot_enhancement.py",
      "orchestration/brain/meta/learning/__init__.py",
      "orchestration/brain/meta/learning/system.py",
      "orchestration/brain/meta_cognitive/__init__.py",
      "orchestration/brain/monitor.py",
      "orchestration/brain/monitoring/__init__.py",
      "orchestration/brain/monitoring/governance_monitor.py",
      "orchestration/brain/monitoring/guardian_reflector.py",
      "orchestration/brain/monitoring/performance.py",
      "orchestration/brain/monitoring/rate_modulator.py",
      "orchestration/brain/monitoring/remediator_agent.py",
      "orchestration/brain/multi_brain_orchestrator.py",
      "orchestration/brain/net/__init__.py",
      "orchestration/brain/net/async_client.py",
      "orchestration/brain/net/client.py",
      "orchestration/brain/net/client_event.py",
      "orchestration/brain/neural/__init__.py",
      "orchestration/brain/neuro_symbolic/__init__.py",
      "orchestration/brain/neuro_symbolic/bridge.py",
      "orchestration/brain/neuro_symbolic/governance/__init__.py",
      "orchestration/brain/neuro_symbolic/governance/symbolic_action_protocol.py",
      "orchestration/brain/neuro_symbolic/governance/symbolic_action_prrotocol.py",
      "orchestration/brain/neuro_symbolic/hybrid_integration.py",
      "orchestration/brain/neuro_symbolic/neural_processor.py",
      "orchestration/brain/neuro_symbolic/neuro_symbolic_integration.py",
      "orchestration/brain/nodes/__init__.py",
      "orchestration/brain/orchestration/main_node.py",
      "orchestration/brain/orchestration/orchestrator_core.py",
      "orchestration/brain/output/__init__.py",
      "orchestration/brain/output/message_hub.py",
      "orchestration/brain/output/report_generator.py",
      "orchestration/brain/personality/__init__.py",
      "orchestration/brain/personality/creative_personality.py",
      "orchestration/brain/personality/voice_personality.py",
      "orchestration/brain/pr_security_review_github_actions.py",
      "orchestration/brain/pr_security_review_starter.py",
      "orchestration/brain/pr_security_review_task.py",
      "orchestration/brain/prediction/__init__.py",
      "orchestration/brain/prediction/world_models.py",
      "orchestration/brain/prime_oscillator.py",
      "orchestration/brain/qrl_code/__init__.py",
      "orchestration/brain/qrl_code/com_validator.py",
      "orchestration/brain/qrl_code/qrly.py",
      "orchestration/brain/quantum_annealed_consensus.py",
      "orchestration/brain/reasoning/__init__.py",
      "orchestration/brain/reasoning/symbolic_loop.py",
      "orchestration/brain/reasoning/symbolic_validator.py",
      "orchestration/brain/rem/__init__.py",
      "orchestration/brain/rem/dream_processor_integrator.py",
      "orchestration/brain/rem/dream_stats.py",
      "orchestration/brain/rem/generate_dream.py",
      "orchestration/brain/rem/generate_dream_data.py",
      "orchestration/brain/rem/lidar_emotion_interpreter.py",
      "orchestration/brain/rem/rem.py",
      "orchestration/brain/rem/rem_visualizer.py",
      "orchestration/brain/rem/sleep_cycle.py",
      "orchestration/brain/rem/streamlit_lidar.py",
      "orchestration/brain/research_awareness_engine.py",
      "orchestration/brain/seamless/__init__.py",
      "orchestration/brain/seamless/experience_core.py",
      "orchestration/brain/self_improvement/__init__.py",
      "orchestration/brain/self_improvement/meta_learner.py",
      "orchestration/brain/spine/__init__.py",
      "orchestration/brain/spine/emotion_intent_link.py",
      "orchestration/brain/spine/emotion_log.py",
      "orchestration/brain/spine/emotion_log_alt.py",
      "orchestration/brain/spine/emotion_mapper.py",
      "orchestration/brain/spine/emotion_trend_tracker.py",
      "orchestration/brain/spine/emotional_sorter.py",
      "orchestration/brain/spine/guardian.py",
      "orchestration/brain/spine/hash.py",
      "orchestration/brain/spine/main_loop.py",
      "orchestration/brain/spine/self_reflect_cron.py",
      "orchestration/brain/spine/trait_sync.py",
      "orchestration/brain/spine/trait_sync_gpt_synb_ref.py",
      "orchestration/brain/spine/unified_self.py",
      "orchestration/brain/subsystems/__init__.py",
      "orchestration/brain/symbol_validator.py",
      "orchestration/brain/symbolic_ai/__init__.py",
      "orchestration/brain/symbolic_ai/modules/__init__.py",
      "orchestration/brain/symbolic_ai/modules/dissonance_detector.py",
      "orchestration/brain/symbolic_ai/modules/dream_generator.py",
      "orchestration/brain/symbolic_ai/modules/episodic_recall.py",
      "orchestration/brain/symbolic_ai/modules/intent_inference.py",
      "orchestration/brain/symbolic_ai/orchestrator.py",
      "orchestration/brain/symbolic_engine/__init__.py",
      "orchestration/brain/symbolic_engine/pattern_recognition.py",
      "orchestration/brain/symbolic_engine/semantic_reasoner.py",
      "orchestration/brain/trace_memoria_logger.py",
      "orchestration/brain/tracing/__init__.py",
      "orchestration/brain/tracing/trace_tools.py",
      "orchestration/brain/uk_awareness_engine.py",
      "orchestration/brain/unified_integration/adapters/__init__.py",
      "orchestration/brain/unified_integration/adapters/awareness_adapter.py",
      "orchestration/brain/unified_integration/adapters/bio_adapter.py",
      "orchestration/brain/unified_integration/adapters/brain_adapter.py",
      "orchestration/brain/unified_integration/adapters/cognitive_adapter.py",
      "orchestration/brain/unified_integration/adapters/dream_adapter.py",
      "orchestration/brain/unified_integration/adapters/intent_adapter.py",
      "orchestration/brain/unified_integration/adapters/legacy_adapter.py",
      "orchestration/brain/unified_integration/adapters/oscillator_adapter.py",
      "orchestration/brain/unified_integration/adapters/voice_adapter.py",
      "orchestration/brain/unified_self_merge_divergence.py",
      "orchestration/brain/us_institutional_awareness_engine.py",
      "orchestration/brain/utils/__init__.py",
      "orchestration/brain/utils/trace_logger.py",
      "orchestration/brain/validate_pr_security_review.py",
      "orchestration/brain/visualization/__init__.py",
      "orchestration/brain/visualization/healix_visualizer.py",
      "orchestration/brain/visualization/memory_helix_visualizer.py",
      "orchestration/brain/vulnerability_dashboard.py",
      "orchestration/brain/\u039bbot_brain_system.py",
      "orchestration/config/__init__.py",
      "orchestration/core_modules/__init__.py",
      "orchestration/core_modules/controller.py",
      "orchestration/core_modules/core_integrator.py",
      "orchestration/core_modules/master_orchestrator.py",
      "orchestration/core_modules/master_orchestrator_alt.py",
      "orchestration/core_modules/orchestration_alt.py",
      "orchestration/core_modules/orchestration_service.py",
      "orchestration/core_modules/orchestrator_core.py",
      "orchestration/core_modules/orchestrator_core_oxn.py",
      "orchestration/core_modules/plugin_loader.py",
      "orchestration/core_modules/process_orchestrator.py",
      "orchestration/core_modules/signal_middleware.py",
      "orchestration/core_modules/symbolic_handshake.py",
      "orchestration/core_modules/symbolic_signal_router.py",
      "orchestration/core_modules/system_orchestrator.py",
      "orchestration/core_modules/workflow_engine.py",
      "orchestration/echo/echo_controller.py",
      "orchestration/immune/__init__.py",
      "orchestration/immune/system_watchdog.py",
      "orchestration/integration/vendor_sync_orchestrator.py",
      "orchestration/integration_engine.py",
      "orchestration/interfaces/__init__.py",
      "orchestration/main_node.py",
      "orchestration/migrate_orchestrators.py",
      "orchestration/migrated/memory_integration_orchestrator.py",
      "orchestration/migrated/unified_agi_enhancement_orchestrator.py",
      "orchestration/monitoring/emotional_oscillator.py",
      "orchestration/monitoring/the_oscillator.py",
      "orchestration/resonance_orchestrator.py",
      "orchestration/security/LGOV_validator.py",
      "orchestration/security/dast/__init__.py",
      "orchestration/security/dast/tests.py",
      "orchestration/security/dast/verify.py",
      "orchestration/security/dast_orchestrator.py",
      "orchestration/security/ethics_loop_guard.py",
      "orchestration/specialized/component_orchestrator.py",
      "orchestration/specialized/content_enterprise_orchestrator.py",
      "orchestration/specialized/deployment_orchestrator.py",
      "orchestration/specialized/enhancement_orchestrator.py",
      "orchestration/specialized/freeze_protection_check.py",
      "orchestration/specialized/integrated_system_orchestrator.py",
      "orchestration/specialized/inter_agent_simulation.py",
      "orchestration/specialized/lambda_bot_orchestrator.py",
      "orchestration/specialized/lambda_dependa_bot.py",
      "orchestration/specialized/loop_recovery_simulator.py",
      "orchestration/specialized/orchestrator_emotion_engine.py",
      "orchestration/specialized/ui_orchestrator.py",
      "orchestration/specialized/\u039bDependaBoT_robust.py",
      "orchestration/user_feedback/feedback_collector.py",
      "orchestration/user_feedback/symbolic_tuner.py",
      "quantum/abas_quantum_specialist.py",
      "quantum/add_compliant_headers.py",
      "quantum/add_intelligent_descriptions.py",
      "quantum/add_module_descriptions.py",
      "quantum/add_poetic_headers.py",
      "quantum/add_template_reference.py",
      "quantum/add_verbose_intelligent_descriptions.py",
      "quantum/api_manager.py",
      "quantum/audit/__init__.py",
      "quantum/bio_components.py",
      "quantum/bio_crista_optimizer_adapter.py",
      "quantum/bio_multi_orchestrator.py",
      "quantum/bio_optimization_adapter.py",
      "quantum/bio_system.py",
      "quantum/certificate_manager.py",
      "quantum/cloud/__init__.py",
      "quantum/consensus_system.py",
      "quantum/creative_engine.py",
      "quantum/creative_integration.py",
      "quantum/dream_adapter.py",
      "quantum/entanglement.py",
      "quantum/ethics_engine.py",
      "quantum/fix_ascii_headers.py",
      "quantum/fix_module_descriptions.py",
      "quantum/fix_proper_ascii.py",
      "quantum/healix_mapper.py",
      "quantum/integration/__init__.py",
      "quantum/layer.py",
      "quantum/metadata.py",
      "quantum/neural_symbolic_engine.py",
      "quantum/neural_symbolic_processor.py",
      "quantum/neuro_symbolic_engine.py",
      "quantum/phase_quantum_integration.py",
      "quantum/post_quantum_crypto_enhanced.py",
      "quantum/privacy/__init__.py",
      "quantum/privacy/zero_knowledge_system.py",
      "quantum/quantum_bio_bulletproof_system.py",
      "quantum/quantum_consensus_system_enhanced.py",
      "quantum/quantum_meta/__init__.py",
      "quantum/quantum_oscillator.py",
      "quantum/quantum_processing/__init__.py",
      "quantum/quantum_systems/__init__.py",
      "quantum/regenerate_intelligent_descriptions.py",
      "quantum/safe_blockchain.py",
      "quantum/security/__init__.py",
      "quantum/setup_api_keys.py",
      "quantum/system_orchestrator.py",
      "quantum/systems/__init__.py",
      "quantum/systems/bio_integration/__init__.py",
      "quantum/systems/bio_integration/awareness/quantum_bio.py",
      "quantum/systems/bio_integration/bulletproof_system.py",
      "quantum/systems/bio_integration/connectivity_consolidator.py",
      "quantum/systems/bio_integration/multi_orchestrator.py",
      "quantum/systems/bio_integration/optimization_adapter.py",
      "quantum/systems/quantum_entanglement.py",
      "quantum/systems/quantum_processor.py",
      "quantum/systems/quantum_states.py",
      "quantum/systems/quantum_validator.py",
      "quantum/ui_generation/__init__.py",
      "quantum/ui_generator.py",
      "quantum/validator.py",
      "quantum/vault_manager.py",
      "quantum/voice_enhancer.py",
      "quantum/web_integration.py",
      "quantum/\u039bBot_quantum_security.py",
      "symbolic/bio/bio_symbolic_architectures.py",
      "symbolic/bio/bio_systems_inspiration.py",
      "symbolic/bio/crista_optimizer.py",
      "symbolic/bio/glyph_id_hash.py",
      "symbolic/bio/mito_ethics_sync.py",
      "symbolic/bio/mito_quantum_attention.py",
      "symbolic/bio/stress_gate.py",
      "symbolic/colony_tag_propagation.py",
      "symbolic/drift/symbolic_drift_tracker_trace.py",
      "symbolic/neural/neural_symbolic_bridge.py",
      "symbolic/neural/neuro_symbolic_fusion_layer.py",
      "symbolic/utils/__init__.py",
      "symbolic/vocabularies/vocabulary_template.py"
    ],
    "other": [
      ".vscode/vscode-archive/files_moves_2.py",
      ".vscode/vscode-archive/move_files_gpt.py",
      ".vscode/vscode-archive/pre_analyzer.py",
      "bridge/__init__.py",
      "bridge/colony_bridge.py",
      "bridge/connectors/blockchain_bridge.py",
      "bridge/explainability_interface_layer.py",
      "bridge/integration_bridge.py",
      "bridge/llm_wrappers/__init__.py",
      "bridge/model_communication_engine.py",
      "bridge/personality_communication_engine.py",
      "bridge/symbolic_memory_mapper.py",
      "bridge/symbolic_reasoning_adapter.py",
      "bridge/trace_logger.py",
      "colony/swarm_integration.py",
      "creativity/affect_stagnation_detector.py",
      "creativity/creative_core.py",
      "creativity/creative_expression_core.py",
      "creativity/creative_expression_processor.py",
      "creativity/creative_expressions_engine.py",
      "creativity/dream/base/dream_loop/__init__.py",
      "creativity/dream/base/dream_loop/dream_loop.py",
      "creativity/dream/base/dream_refold/__init__.py",
      "creativity/dream/base/dream_refold/dream_refold.py",
      "creativity/dream/cli/__init__.py",
      "creativity/dream/cli/dream_cli.py",
      "creativity/dream/cli/dream_processor.py",
      "creativity/dream/cli/dream_replay_cli.py",
      "creativity/dream/dream_engine/__init__.py",
      "creativity/dream/dream_engine/oracle_dream.py",
      "creativity/dream/dream_export_streamlit.py",
      "creativity/dream/dream_injector.py",
      "creativity/dream/dream_log.py",
      "creativity/dream/dream_mutator.py",
      "creativity/dream/dream_narrator_queue.py",
      "creativity/dream/dream_replay.py",
      "creativity/dream/dream_stats.py",
      "creativity/dream/dream_summary_generator.py",
      "creativity/dream/engine/dream_engine_merged.py",
      "creativity/dream/engine/legacy_dream_engine.py",
      "creativity/dream/feedback_propagator.py",
      "creativity/dream/modifiers/__init__.py",
      "creativity/dream/modifiers/quantum_state_modifier.py",
      "creativity/dream/oneiric_engine/oneiric_core/engine/dream_engine_unified.py",
      "creativity/dream/oneiric_engine/oneiric_core/migrations/env.py",
      "creativity/dream/oneiric_engine/oneiric_core/migrations/versions/20250710_add_users_table.py",
      "creativity/dream/oneiric_engine/oneiric_core/migrations/versions/20250726_add_unified_tier_support.py",
      "creativity/dream/oracle_dream.py",
      "creativity/dream/processors/dream_processor.py",
      "creativity/dream/processors/dream_processor_integrator.py",
      "creativity/dream/quantum_dream_config.py",
      "creativity/dream/redirect_trace_replayer.py",
      "creativity/dream/symbolic/vocabulary.py",
      "creativity/dream/tools/run_dream_analysis.py",
      "creativity/dream/tools/symbolic_theme_clusterer.py",
      "creativity/dream/visualization/dream_log_viewer.py",
      "creativity/dream/visualization/dream_timeline_visualizer.py",
      "creativity/dream/visualization/dream_viewer.py",
      "creativity/dream/visualization/visualizer_core.py",
      "creativity/dream_engine/__init__.py",
      "creativity/dream_systems/__init__.py",
      "creativity/dream_systems/dream_convergence_tester.py",
      "creativity/dream_systems/dream_emotion_bridge.py",
      "creativity/dream_systems/dream_export_streamlit.py",
      "creativity/dream_systems/dream_glyph_bridge.py",
      "creativity/dream_systems/dream_log_viewer.py",
      "creativity/dream_systems/dream_loop_generator.py",
      "creativity/dream_systems/dream_replay.py",
      "creativity/dream_systems/dream_seed_simple.py",
      "creativity/dream_systems/dream_stats.py",
      "creativity/dream_systems/dream_utils.py",
      "creativity/dream_systems/dream_viewer.py",
      "creativity/dream_timeline_visualizer.py",
      "creativity/emotion/__init__.py",
      "creativity/emotion/voice_profiling_emotion_engine.py",
      "creativity/engines/__init__.py",
      "creativity/legacy_creative_expressions.py",
      "creativity/personality_engine.py",
      "creativity/personality_refiner.py",
      "creativity/quantum_creative_integration.py",
      "creativity/service.py",
      "creativity/systems/__init__.py",
      "creativity/systems/creative_expressions_creativity_engine.py",
      "creativity/systems/vocabulary_creativity_engine.py",
      "creativity/systems/voice_personality_creativity_engine.py",
      "creativity/voice_integrator.py",
      "dashboard/api/websocket_server.py",
      "devtools/tags_debug.py",
      "diagnostics/__init__.py",
      "embodiment/__init__.py",
      "emotion/affect_detection/recurring_emotion_tracker.py",
      "emotion/colony_emotions.py",
      "emotion/cycler.py",
      "emotion/dreamseed_unified.py",
      "emotion/multimodal_sentiment.py",
      "ethics/_spikethickness.py",
      "ethics/audit_ethics_monitor.py",
      "ethics/bases.py",
      "ethics/batch_guard.py",
      "ethics/community_feedback.py",
      "ethics/compliance_engine20250503213400_p95.py",
      "ethics/compliance_simple.py",
      "ethics/dao_community.py",
      "ethics/decision_framework.py",
      "ethics/decision_node.py",
      "ethics/ethical_evaluator.py",
      "ethics/ethical_reasoning_system.py",
      "ethics/ethical_safety_alignment.py",
      "ethics/export_report.py",
      "ethics/extreme_ethical_testing.py",
      "ethics/fallback/ethics_layer.py",
      "ethics/glyph_ethics_validator.py",
      "ethics/governance_model.py",
      "ethics/governance_validator.py",
      "ethics/governor/__init__.py",
      "ethics/governor/dao_controller.py",
      "ethics/legacy_ethics_jury.py",
      "ethics/lukhas_ethics_guard.py",
      "ethics/meg_openai_guard.py",
      "ethics/monitor.py",
      "ethics/orchestrator.py",
      "ethics/oscillating_conscience.py",
      "ethics/policy_engines/integration.py",
      "ethics/policy_manager.py",
      "ethics/policy_validator.py",
      "ethics/redteam_sim.py",
      "ethics/safety/__init__.py",
      "ethics/safety/compliance_dashboard.py",
      "ethics/safety/compliance_dashboard_visual.py",
      "ethics/safety/compliance_digest.py",
      "ethics/safety/compliance_hooks.py",
      "ethics/safety/entropy_tuning.py",
      "ethics/safety/integration_bridge.py",
      "ethics/security/flagship_security_engine.py",
      "ethics/security/main_node_security_engine.py",
      "ethics/security/privacy.py",
      "ethics/sentinel/ethical_sentinel_dashboard.py",
      "ethics/service.py",
      "ethics/simulations/__init__.py",
      "ethics/simulations/lambda_shield_tester.py",
      "ethics/stabilization/__init__.py",
      "ethics/tier_enforcer.py",
      "ethics/tools/__init__.py",
      "ethics/tools/lambda_auditor.py",
      "ethics/tracing.py",
      "ethics/training/__init__.py",
      "ethics/training/alignment_overseer.py",
      "ethics/utils.py",
      "ethics/utils/__init__.py",
      "ethics/utils/tag_misinterpretation_sim.py",
      "features/analytics/archetype/__init__.py",
      "features/analytics/clustering/dream_clustering_engine.py",
      "features/api/__init__.py",
      "features/api/dream_api.py",
      "features/autotest/__init__.py",
      "features/common/__init__.py",
      "features/config/__init__.py",
      "features/config/config.py",
      "features/config/dashboard_settings.py",
      "features/config/interface_dashboard_settings.py",
      "features/config/lukhas_settings.py",
      "features/config/read_settings.py",
      "features/creative_engine/__init__.py",
      "features/crista_optimizer/__init__.py",
      "features/data_manager/__init__.py",
      "features/data_manager/crud_operations.py",
      "features/decision/bridge.py",
      "features/diagnostic_engine/__init__.py",
      "features/diagnostic_engine/diagnostic_payloads.py",
      "features/diagnostic_engine/engine.py",
      "features/docututor/__init__.py",
      "features/docututor/content_generation_engine/__init__.py",
      "features/docututor/memory_evolution/__init__.py",
      "features/docututor/memory_evolution/bio_oscillator.py",
      "features/docututor/memory_evolution/document_analyzer.py",
      "features/docututor/memory_evolution/memory_evolution.py",
      "features/docututor/memory_evolution/voice_synthesis.py",
      "features/docututor/plugin.py",
      "features/docututor/symbolic_knowledge_core/__init__.py",
      "features/drift/unified_drift_system.py",
      "features/entropy/__init__.py",
      "features/errors.py",
      "features/governance/__init__.py",
      "features/integration/__init__.py",
      "features/integration/bio_awareness/__init__.py",
      "features/integration/executive_decision_integrator.py",
      "features/integration/governance/__init__.py",
      "features/integration/layer.py",
      "features/integration/meta_cognitive/__init__.py",
      "features/integration/meta_cognitive/meta_cognitive.py",
      "features/integration/neural_symbolic_bridge.py",
      "features/integration/neuro_symbolic_fusion_layer.py",
      "features/integration/safety/__init__.py",
      "features/integration/safety/coordinator.py",
      "features/integration/safety/emergency_override.py",
      "features/integration/system_bridge.py",
      "features/memory/__init__.py",
      "features/memory/connection_visualizer.py",
      "features/memory/fold_universal_bridge.py",
      "features/memory/hooks/__init__.py",
      "features/memory/integration_orchestrator.py",
      "features/symbolic/__init__.py",
      "features/symbolic/causal_reasoner_template.py",
      "features/symbolic/collapse/bridge.py",
      "features/symbolic/collapse/buffer.py",
      "features/symbolic/collapse/engine.py",
      "features/symbolic/collapse/entropy_tracker.py",
      "features/symbolic/collapse/reasoner.py",
      "features/symbolic/collapse/trace.py",
      "features/symbolic/drift/score.py",
      "features/symbolic/memoria/recall_hooks.py",
      "features/symbolic/memoria/symbolic_trace_map.py",
      "features/symbolic/memory_reflection_template.py",
      "features/symbolic/moral_agent_template.py",
      "features/symbolic/security/__init__.py",
      "features/symbolic/trace_verifier.py",
      "features/symbolic/tracer.py",
      "fix_import_paths.py",
      "foundry/__init__.py",
      "foundry/lambda_mirror.py",
      "foundry/lambda_sage.py",
      "foundry/symbolic_foundry.py",
      "interfaces/api/lambda_bot_api_integration.py",
      "interfaces/api/v1/__init__.py",
      "interfaces/api/v1/common/__init__.py",
      "interfaces/api/v1/common/auth.py",
      "interfaces/api/v1/grpc/__init__.py",
      "interfaces/api/v1/grpc/client.py",
      "interfaces/api/v1/grpc/pb2.py",
      "interfaces/api/v1/grpc/pb2_grpc.py",
      "interfaces/api/v1/grpc/server.py",
      "interfaces/api/v1/rest/__init__.py",
      "interfaces/api/v1/rest/middleware.py",
      "memory_optimization_analysis.py",
      "meta/HEADER_FOOTER_STANDARD.py",
      "meta/HEADER_FOOTER_TEMPLATE.py",
      "meta/HEADER_TEMPLATE.py",
      "perception/__init__.py",
      "perception/cross_modal_validation.py",
      "reasoning/LBot_reasoning_processed.py",
      "reasoning/analysis/__init__.py",
      "reasoning/chat_completion_reasoning_effort.py",
      "reasoning/coherence_patch_validator.py",
      "reasoning/conflict_resolver.py",
      "reasoning/dashboard/trace_dashboard.py",
      "reasoning/diagnostics/trace_mapper.py",
      "reasoning/ethical_reasoning_system.py",
      "reasoning/goals/goal_manager.py",
      "reasoning/hooks/dream_reflect_hook.py",
      "reasoning/id_reasoning_engine.py",
      "reasoning/intent/intent_detector.py",
      "reasoning/intent/intent_processor.py",
      "reasoning/master_loop.py",
      "reasoning/reasoning_colony.py",
      "reasoning/reasoning_diagnostics.py",
      "reasoning/reporting/reasoning_report_generator.py",
      "reasoning/response_reasoning_delta_event.py",
      "reasoning/response_reasoning_done_event.py",
      "reasoning/response_reasoning_item.py",
      "reasoning/response_reasoning_item_param.py",
      "reasoning/response_reasoning_summary_delta_event.py",
      "reasoning/response_reasoning_summary_done_event.py",
      "reasoning/response_reasoning_summary_part_added_event.py",
      "reasoning/response_reasoning_summary_part_done_event.py",
      "reasoning/response_reasoning_summary_text_delta_event.py",
      "reasoning/response_reasoning_summary_text_done_event.py",
      "reasoning/scaffold_modules_reasoning_engine.py",
      "reasoning/symbolic_loop_harmonizer.py",
      "reasoning/systems/__init__.py",
      "reasoning/systems/id_reasoning_engine.py",
      "reasoning/traceback_orchestrator.py",
      "reasoning/utils/agentic_trace.py",
      "reasoning/\u039bBot_reasoning.py",
      "simulation/__init__.py",
      "testing/__init__.py",
      "trace/__init__.py",
      "trace/commit_log_checker.py",
      "trace/drift_dashboard_visual.py",
      "trace/restabilization_index.py",
      "trace/snapshot_divergence_plot.py",
      "trace/symbolic_trace_logger.py",
      "update_documentation.py",
      "voice/adaptation_module.py",
      "voice/adapters/__init__.py",
      "voice/adapters/orchestration_adapter.py",
      "voice/audio_engine.py",
      "voice/audio_processor.py",
      "voice/bio_core/__init__.py",
      "voice/bio_core/oscillator/__init__.py",
      "voice/bio_core/oscillator/bio_quantum_engine.py",
      "voice/bio_core/oscillator/quantum_layer.py",
      "voice/bio_core/voice/__init__.py",
      "voice/context_aware_voice_modular.py",
      "voice/dream_voice_pipeline.py",
      "voice/duet_conductor.py",
      "voice/integrations/openai/dalle_client.py",
      "voice/integrations/openai/whisper_client.py",
      "voice/integrator.py",
      "voice/interfaces/__init__.py",
      "voice/interfaces/eleven_tts.py",
      "voice/interfaces/input/__init__.py",
      "voice/interfaces/input/stream_handler.py",
      "voice/interfaces/voice_emotional/__init__.py",
      "voice/lukhas_voice_narrator.py",
      "voice/memory_helix.py",
      "voice/modularity_system.py",
      "voice/personality.py",
      "voice/recognition.py",
      "voice/speech_engine.py",
      "voice/speech_framework.py",
      "voice/swarm_voice_generator.py",
      "voice/symbolic_voice_core.py",
      "voice/validator.py",
      "voice/voice_cultural_integrator.py",
      "voice/voice_replay.py"
    ]
  },
  "unused_list": [
    "quantum/quantum_consensus_system_enhanced.py",
    "core/p2p_fabric.py",
    "orchestration/brain/tracing/trace_tools.py",
    "core/interfaces/lukhas_as_agent/core/nias_filter.py",
    "quantum/security/__init__.py",
    "orchestration/brain/integration/__init__.py",
    "perception/__init__.py",
    "api/glyph_exchange.py",
    "orchestration/brain/meta/integrations/__init__.py",
    "core/circuit_breaker.py",
    "orchestration/brain/spine/guardian.py",
    "memory/systems/symbolic_replay_engine.py",
    "orchestration/config/__init__.py",
    "orchestration/brain/symbolic_ai/__init__.py",
    "benchmarks/trace_system_benchmark.py",
    "core/symbolic_reasoning/symbolic_trace.py",
    "reasoning/response_reasoning_item.py",
    "orchestration/brain/rem/rem_visualizer.py",
    "reasoning/coherence_patch_validator.py",
    "identity/backend/verifold/security/__init__.py",
    "identity/core/qrs/session_replay.py",
    "features/docututor/plugin.py",
    "quantum/add_poetic_headers.py",
    "identity/core/qrs/__init__.py",
    "orchestration/specialized/enhancement_orchestrator.py",
    "memory/systems/memory_trace.py",
    "core/neural_architectures/abas/abas_quantum_specialist.py",
    "identity/core/id_service/__init__.py",
    "orchestration/brain/output/message_hub.py",
    "orchestration/user_feedback/feedback_collector.py",
    "features/memory/fold_universal_bridge.py",
    "orchestration/security/dast_orchestrator.py",
    "identity/backend/dream_engine/assistant.py",
    "orchestration/brain/output/report_generator.py",
    "learning/meta_adaptive/system.py",
    "orchestration/brain/attention/__init__.py",
    "features/integration/safety/__init__.py",
    "identity/backend/verifold/verifold_chain.py",
    "core/ai_interface.py",
    "features/symbolic/moral_agent_template.py",
    "quantum/post_quantum_crypto_enhanced.py",
    "quantum/systems/bio_integration/__init__.py",
    "memory/systems/causal_memory_chains.py",
    "creativity/dream_systems/dream_seed_simple.py",
    "orchestration/monitoring/emotional_oscillator.py",
    "creativity/dream/dream_stats.py",
    "orchestration/brain/meta/cognition/reflection_layer.py",
    "orchestration/brain/config/__init__.py",
    "memory/systems/reflection_engine.py",
    "interfaces/api/v1/grpc/client.py"
  ]
}