{
  "directory": "lukhas/symbolic",
  "timestamp": "2025-07-28T17:40:44.183504",
  "summary": {
    "total_modules": 24,
    "total_symbols": 259,
    "total_dependencies": 81,
    "missed_opportunities": 11
  },
  "modules": {
    "lukhas.symbolic.service_analysis": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08695652173913043
      },
      "symbols": [
        {
          "name": "compute_digital_friction",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "compute_modularity_score",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.swarm_tag_simulation": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 0,
        "unused_symbols": 10,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.30434782608695654
      },
      "symbols": [
        {
          "name": "SimAgent",
          "kind": "dataclass",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SwarmNetwork",
          "kind": "class",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "agent_id",
          "kind": "constant",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "network",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tags",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "survival_score",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_collision",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "consensus",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.symbolic.symbolic_glyph_hash": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.13043478260869565
      },
      "symbols": [
        {
          "name": "compute_glyph_hash",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "entropy_delta",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.glyph_engine": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.21739130434782608
      },
      "symbols": [
        {
          "name": "generate_glyph",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "evaluate_entropy",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "evaluate_resonance",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "detect_attractors",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.vocabularies.dream_vocabulary": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 0,
        "unused_symbols": 10,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043478260869565216
      },
      "symbols": [
        {
          "name": "dream_cycle_start",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "dream_phase_transition",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "pattern_discovered",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "insight_generated",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "emotional_context",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "memory_processing",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "cycle_completion",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_dream_symbol",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_dream_narrative",
          "kind": "function",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_visual_hint",
          "kind": "function",
          "line": 268,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.vocabularies.usage_examples": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043478260869565216
      },
      "symbols": [
        {
          "name": "log_bio_state",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_dream_phase",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "perform_identity_operation",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "log_any_symbol",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "SymbolicLogger",
          "kind": "class",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_state",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_bio",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.vocabularies.voice_vocabulary": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 0,
        "unused_symbols": 20,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.13043478260869565
      },
      "symbols": [
        {
          "name": "Voicesymbol",
          "kind": "dataclass",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Voicesymbolicvocabulary",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "symbol",
          "kind": "constant",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meaning",
          "kind": "constant",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_weight",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "vocal_properties",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "usage_contexts",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_synthesis_symbols",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_emotion_symbols",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_provider_symbols",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_quality_symbols",
          "kind": "function",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_expression_symbols",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_symbol_for_emotion",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_symbol_for_provider",
          "kind": "function",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_synthesis_phrase",
          "kind": "function",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_quality_indicators",
          "kind": "function",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_all_symbols",
          "kind": "function",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_context_symbols",
          "kind": "function",
          "line": 307,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "analyze_emotional_weight",
          "kind": "function",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.vocabularies.bio_vocabulary": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 0,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "get_bio_symbol",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_bio_message",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "format_bio_log",
          "kind": "function",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.vocabularies.__init__": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.21739130434782608
      },
      "symbols": [
        {
          "name": "get_symbol",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.vocabularies.emotion_vocabulary": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "get_emotion_symbol",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_guardian_weight",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.crista_optimizer": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "CristaOptimizer",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "optimize",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_induce_fission",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_induce_fusion",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_stabilize_topology",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "report_state",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.symbolic_entropy": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08695652173913043
      },
      "symbols": [
        {
          "name": "calculate_entropy_delta",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "entropy_state_snapshot",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.mito_ethics_sync": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08695652173913043
      },
      "symbols": [
        {
          "name": "MitoEthicsSync",
          "kind": "class",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "update_phase",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "assess_alignment",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "is_synchronized",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.glyph_id_hash": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.17391304347826086
      },
      "symbols": [
        {
          "name": "GlyphIDHasher",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_digest_component",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_signature",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_base64_glyph",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.stress_gate": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043478260869565216
      },
      "symbols": [
        {
          "name": "StressGate",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_stress",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_decay_stress",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "should_fallback",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reset",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "report",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.bio_symbolic": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 1,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 1,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "BioSymbolic",
          "kind": "class",
          "line": 5,
          "used": true,
          "used_by": [
            "lukhas/symbolic/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.symbolic_entropy_observer": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08695652173913043
      },
      "symbols": [
        {
          "name": "SymbolicEntropyObserver",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_latest_entropy_snapshot",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_entropy_history",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.utils.symbolic_utils": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 2,
        "unused_symbols": 0,
        "import_count": 0,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "tier_label",
          "kind": "function",
          "line": 10,
          "used": true,
          "used_by": [
            "lukhas/symbolic/utils/__init__.py"
          ],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "summarize_emotion_vector",
          "kind": "function",
          "line": 43,
          "used": true,
          "used_by": [
            "lukhas/symbolic/utils/__init__.py"
          ],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.bio.mito_quantum_attention": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.2608695652173913
      },
      "symbols": [
        {
          "name": "QuantumTunnelFilter",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CristaGate",
          "kind": "class",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "VivoxAttention",
          "kind": "class",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "OxintusReasoner",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MAELayer",
          "kind": "class",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "RespiModule",
          "kind": "class",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ATPAllocator",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "generate_cl_signature",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "VivoxSection",
          "kind": "class",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "OxintusBrass",
          "kind": "class",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MAEPercussion",
          "kind": "class",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MitochondrialConductor",
          "kind": "class",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CristaOptimizer",
          "kind": "class",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "forward",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "allocate",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_bind_resource",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "play",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_calculate_cristae_topology",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_route_to_instrument",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_synchronize",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "perform",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "optimize",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_induce_fission",
          "kind": "function",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_induce_fusion",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.symbolic.neural.neural_symbolic_bridge": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.34782608695652173
      },
      "symbols": [
        {
          "name": "NeuralSymbolicIntegration",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_neural_process",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_symbolic_process",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_integrate_results",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.drift.symbolic_drift_tracker_trace": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 0,
        "unused_symbols": 11,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08695652173913043
      },
      "symbols": [
        {
          "name": "SymbolicDriftTracker",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "record_drift",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_drift",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_entropy",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_phase_mismatch",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "summarize_drift",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_symbolic_drift",
          "kind": "function",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_symbolic_state",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "detect_recursive_drift_loops",
          "kind": "function",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "emit_drift_alert",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.vocabularies.vision_vocabulary": {
      "metrics": {
        "total_symbols": 27,
        "used_symbols": 0,
        "unused_symbols": 27,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.13043478260869565
      },
      "symbols": [
        {
          "name": "Visualsymbol",
          "kind": "dataclass",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Visionsymbolicvocabulary",
          "kind": "class",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "symbol",
          "kind": "constant",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meaning",
          "kind": "constant",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "visual_weight",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "analysis_properties",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "usage_contexts",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "color_associations",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_analysis_symbols",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_object_symbols",
          "kind": "function",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_color_symbols",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_emotion_symbols",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_composition_symbols",
          "kind": "function",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_provider_symbols",
          "kind": "function",
          "line": 343,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_quality_symbols",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_init_symbolic_elements",
          "kind": "function",
          "line": 417,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_symbol_for_analysis_type",
          "kind": "function",
          "line": 478,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_symbol_for_provider",
          "kind": "function",
          "line": 494,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_dominant_color_symbol",
          "kind": "function",
          "line": 506,
          "used": false,
          "used_by": [],
          "complexity": 23,
          "has_docstring": true
        },
        {
          "name": "create_analysis_phrase",
          "kind": "function",
          "line": 533,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_emotional_color_mapping",
          "kind": "function",
          "line": 551,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_symbolic_composition",
          "kind": "function",
          "line": 564,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_quality_indicators",
          "kind": "function",
          "line": 586,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_all_symbols",
          "kind": "function",
          "line": 615,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_context_symbols",
          "kind": "function",
          "line": 628,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "calculate_visual_harmony",
          "kind": "function",
          "line": 639,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.neural.neuro_symbolic_fusion_layer": {
      "metrics": {
        "total_symbols": 38,
        "used_symbols": 0,
        "unused_symbols": 38,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.43478260869565216
      },
      "symbols": [
        {
          "name": "FusionMode",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FusionContext",
          "kind": "dataclass",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NeuroSymbolicPattern",
          "kind": "class",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NeuroSymbolicFusionLayer",
          "kind": "class",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_nsfl_instance",
          "kind": "function",
          "line": 504,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "task_type",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_threshold",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "neural_weight",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_weight",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_budget",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "calculate_coherence",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_default_config",
          "kind": "function",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_fusion_context",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "fuse_neural_symbolic",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "translate_neural_to_symbolic",
          "kind": "function",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "translate_symbolic_to_neural",
          "kind": "function",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "adapt_fusion_weights",
          "kind": "function",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_fusion_metrics",
          "kind": "function",
          "line": 343,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_fusion_mode",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_energy_cost",
          "kind": "function",
          "line": 390,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_fusion_strength",
          "kind": "function",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_store_pattern",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_extract_pattern_signature",
          "kind": "function",
          "line": 410,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_find_symbolic_templates",
          "kind": "function",
          "line": 415,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_classify_neural_pattern",
          "kind": "function",
          "line": 420,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_pattern_complexity",
          "kind": "function",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_predicates",
          "kind": "function",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_translation_confidence",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_features",
          "kind": "function",
          "line": 446,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_symbolic_to_neural_embedding",
          "kind": "function",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_bio_transformations",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_normalize_neural_pattern",
          "kind": "function",
          "line": 473,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_enhance_pattern_coherence",
          "kind": "function",
          "line": 478,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_minimal_pattern",
          "kind": "function",
          "line": 485,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_low_energy_pattern",
          "kind": "function",
          "line": 490,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_error_pattern",
          "kind": "function",
          "line": 496,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.symbolic.drift.symbolic_drift_tracker": {
      "metrics": {
        "total_symbols": 54,
        "used_symbols": 0,
        "unused_symbols": 54,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.391304347826087
      },
      "symbols": [
        {
          "name": "DriftPhase",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftScore",
          "kind": "dataclass",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicState",
          "kind": "dataclass",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicDriftTracker",
          "kind": "class",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "overall_score",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy_delta",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "glyph_divergence",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_drift",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_drift",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "temporal_decay",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recursive_indicators",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_level",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbols",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_vector",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_alignment",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_metadata",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hash_signature",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "calculate_symbolic_drift",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "register_symbolic_state",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "detect_recursive_drift_loops",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "emit_drift_alert",
          "kind": "function",
          "line": 345,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_symbol_set_drift",
          "kind": "function",
          "line": 406,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_emotional_drift",
          "kind": "function",
          "line": 444,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_entropy_drift",
          "kind": "function",
          "line": 463,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_ethical_drift",
          "kind": "function",
          "line": 476,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_temporal_decay",
          "kind": "function",
          "line": 488,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_apply_nonlinear_scaling",
          "kind": "function",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_state_entropy",
          "kind": "function",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_shannon_entropy",
          "kind": "function",
          "line": 540,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_state_hash",
          "kind": "function",
          "line": 558,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_drift_for_session",
          "kind": "function",
          "line": 568,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_detect_exact_sequence_loops",
          "kind": "function",
          "line": 601,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_detect_similar_pattern_loops",
          "kind": "function",
          "line": 620,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_detect_frequency_oscillations",
          "kind": "function",
          "line": 647,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_is_oscillating_pattern",
          "kind": "function",
          "line": 669,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_detect_cascade_patterns",
          "kind": "function",
          "line": 684,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_trigger_cascade_safety_measures",
          "kind": "function",
          "line": 707,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_implement_symbolic_quarantine",
          "kind": "function",
          "line": 725,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_alert_collapse_reasoner",
          "kind": "function",
          "line": 742,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_emit_to_external_systems",
          "kind": "function",
          "line": 760,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "record_drift",
          "kind": "function",
          "line": 802,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_drift",
          "kind": "function",
          "line": 835,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_entropy",
          "kind": "function",
          "line": 852,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "log_phase_mismatch",
          "kind": "function",
          "line": 865,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_phase_mismatch_score",
          "kind": "function",
          "line": 889,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "summarize_drift",
          "kind": "function",
          "line": 910,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_count_active_quarantines",
          "kind": "function",
          "line": 989,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 997,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    }
  },
  "missed_opportunities": [
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.swarm_tag_simulation has 9 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.swarm_tag_simulation"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: SimAgent, SwarmNetwork, agent_id, network, tags..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.vocabularies.dream_vocabulary has 10 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.vocabularies.dream_vocabulary"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: dream_cycle_start, dream_phase_transition, pattern_discovered, insight_generated, emotional_context..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.vocabularies.usage_examples has 8 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.vocabularies.usage_examples"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: log_bio_state, log_dream_phase, perform_identity_operation, log_any_symbol, get_system_status..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.vocabularies.voice_vocabulary has 14 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.vocabularies.voice_vocabulary"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: Voicesymbol, Voicesymbolicvocabulary, symbol, meaning, emotional_weight..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.bio.mito_quantum_attention has 18 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.bio.mito_quantum_attention"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: QuantumTunnelFilter, CristaGate, VivoxAttention, OxintusReasoner, MAELayer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.drift.symbolic_drift_tracker_trace has 10 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.drift.symbolic_drift_tracker_trace"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SymbolicDriftTracker, record_drift, register_drift, calculate_entropy, log_phase_mismatch..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.vocabularies.vision_vocabulary has 18 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.vocabularies.vision_vocabulary"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: Visualsymbol, Visionsymbolicvocabulary, symbol, meaning, visual_weight..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.neural.neuro_symbolic_fusion_layer has 18 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.neural.neuro_symbolic_fusion_layer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: FusionMode, FusionContext, NeuroSymbolicPattern, NeuroSymbolicFusionLayer, create_nsfl_instance..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.symbolic.drift.symbolic_drift_tracker has 31 unused public symbols",
      "affected_files": [
        "lukhas.symbolic.drift.symbolic_drift_tracker"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: DriftPhase, DriftScore, SymbolicState, SymbolicDriftTracker, overall_score..."
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.symbolic.vocabularies.emotion_vocabulary is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.symbolic.vocabularies.emotion_vocabulary"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.symbolic.bio.crista_optimizer is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.symbolic.bio.crista_optimizer"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    }
  ],
  "dependency_graph": {
    "nodes": [
      "lukhas.symbolic.service_analysis",
      "lukhas.symbolic.swarm_tag_simulation",
      "lukhas.symbolic.symbolic_glyph_hash",
      "lukhas.symbolic.glyph_engine",
      "lukhas.symbolic.vocabularies.dream_vocabulary",
      "lukhas.symbolic.vocabularies.usage_examples",
      "lukhas.symbolic.vocabularies.voice_vocabulary",
      "lukhas.symbolic.vocabularies.bio_vocabulary",
      "lukhas.symbolic.vocabularies.__init__",
      "lukhas.symbolic.vocabularies.emotion_vocabulary",
      "lukhas.symbolic.bio.crista_optimizer",
      "lukhas.symbolic.bio.symbolic_entropy",
      "lukhas.symbolic.bio.mito_ethics_sync",
      "lukhas.symbolic.bio.glyph_id_hash",
      "lukhas.symbolic.bio.stress_gate",
      "lukhas.symbolic.bio.bio_symbolic",
      "lukhas.symbolic.bio.symbolic_entropy_observer",
      "lukhas.symbolic.utils.symbolic_utils",
      "lukhas.symbolic.bio.mito_quantum_attention",
      "lukhas.symbolic.neural.neural_symbolic_bridge",
      "lukhas.symbolic.drift.symbolic_drift_tracker_trace",
      "lukhas.symbolic.vocabularies.vision_vocabulary",
      "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
      "lukhas.symbolic.drift.symbolic_drift_tracker"
    ],
    "edges": [
      {
        "from": "lukhas.symbolic.service_analysis",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.service_analysis",
        "to": "__future__"
      },
      {
        "from": "lukhas.symbolic.__init__",
        "to": "lukhas.symbolic"
      },
      {
        "from": "lukhas.symbolic.swarm_tag_simulation",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.swarm_tag_simulation",
        "to": "random"
      },
      {
        "from": "lukhas.symbolic.swarm_tag_simulation",
        "to": "asyncio"
      },
      {
        "from": "lukhas.symbolic.swarm_tag_simulation",
        "to": "__future__"
      },
      {
        "from": "lukhas.symbolic.swarm_tag_simulation",
        "to": "lukhas.core.colonies.tags"
      },
      {
        "from": "lukhas.symbolic.swarm_tag_simulation",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.symbolic.swarm_tag_simulation",
        "to": "lukhas.core.efficient_communication"
      },
      {
        "from": "lukhas.symbolic.glyph_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.symbolic.glyph_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.glyph_engine",
        "to": "math"
      },
      {
        "from": "lukhas.symbolic.glyph_engine",
        "to": "json"
      },
      {
        "from": "lukhas.symbolic.glyph_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.symbolic.symbolic_glyph_hash",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.symbolic_glyph_hash",
        "to": "hashlib"
      },
      {
        "from": "lukhas.symbolic.symbolic_glyph_hash",
        "to": "__future__"
      },
      {
        "from": "lukhas.symbolic.vocabularies.voice_vocabulary",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.vocabularies.voice_vocabulary",
        "to": "lukhas.symbolic.core"
      },
      {
        "from": "lukhas.symbolic.vocabularies.voice_vocabulary",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.symbolic.vocabularies.dream_vocabulary",
        "to": "random"
      },
      {
        "from": "lukhas.symbolic.vocabularies.usage_examples",
        "to": "lukhas.symbolic.vocabularies"
      },
      {
        "from": "lukhas.symbolic.vocabularies.vision_vocabulary",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.vocabularies.vision_vocabulary",
        "to": "lukhas.symbolic.core"
      },
      {
        "from": "lukhas.symbolic.vocabularies.vision_vocabulary",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.symbolic.vocabularies.__init__",
        "to": "lukhas.symbolic.vocabularies.dream_vocabulary"
      },
      {
        "from": "lukhas.symbolic.vocabularies.__init__",
        "to": "lukhas.symbolic.vocabularies.voice_vocabulary"
      },
      {
        "from": "lukhas.symbolic.vocabularies.__init__",
        "to": "lukhas.symbolic.vocabularies.bio_vocabulary"
      },
      {
        "from": "lukhas.symbolic.vocabularies.__init__",
        "to": "lukhas.symbolic.vocabularies.vision_vocabulary"
      },
      {
        "from": "lukhas.symbolic.vocabularies.__init__",
        "to": "lukhas.symbolic.vocabularies.identity_vocabulary"
      },
      {
        "from": "lukhas.symbolic.bio.symbolic_entropy",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.bio.symbolic_entropy",
        "to": "math"
      },
      {
        "from": "lukhas.symbolic.bio.mito_ethics_sync",
        "to": "numpy"
      },
      {
        "from": "lukhas.symbolic.bio.mito_ethics_sync",
        "to": "math"
      },
      {
        "from": "lukhas.symbolic.bio.__init__",
        "to": "lukhas.symbolic.bio.bio_symbolic"
      },
      {
        "from": "lukhas.symbolic.bio.__init__",
        "to": "lukhas.symbolic.bio.bio_orchestrator"
      },
      {
        "from": "lukhas.symbolic.bio.__init__",
        "to": "lukhas.symbolic.bio.quantum_attention"
      },
      {
        "from": "lukhas.symbolic.bio.stress_gate",
        "to": "numpy"
      },
      {
        "from": "lukhas.symbolic.bio.glyph_id_hash",
        "to": "time"
      },
      {
        "from": "lukhas.symbolic.bio.glyph_id_hash",
        "to": "random"
      },
      {
        "from": "lukhas.symbolic.bio.glyph_id_hash",
        "to": "base64"
      },
      {
        "from": "lukhas.symbolic.bio.glyph_id_hash",
        "to": "hashlib"
      },
      {
        "from": "lukhas.symbolic.bio.mito_quantum_attention",
        "to": "random"
      },
      {
        "from": "lukhas.symbolic.bio.mito_quantum_attention",
        "to": "time"
      },
      {
        "from": "lukhas.symbolic.bio.mito_quantum_attention",
        "to": "numpy"
      },
      {
        "from": "lukhas.symbolic.bio.mito_quantum_attention",
        "to": "torch.nn"
      },
      {
        "from": "lukhas.symbolic.bio.mito_quantum_attention",
        "to": "torch"
      },
      {
        "from": "lukhas.symbolic.bio.mito_quantum_attention",
        "to": "hashlib"
      },
      {
        "from": "lukhas.symbolic.bio.symbolic_entropy_observer",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.bio.symbolic_entropy_observer",
        "to": "json"
      },
      {
        "from": "lukhas.symbolic.utils.__init__",
        "to": "lukhas.symbolic.utils.symbolic_utils"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "collections"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "enum"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "datetime"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "structlog"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "math"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "json"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker",
        "to": "hashlib"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker_trace",
        "to": "structlog"
      },
      {
        "from": "lukhas.symbolic.drift.symbolic_drift_tracker_trace",
        "to": "lukhas.core.symbolic.drift.symbolic_drift_tracker"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "base64"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "numpy"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "io"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "time"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "uuid"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "requests"
      },
      {
        "from": "lukhas.symbolic.neural.neural_symbolic_bridge",
        "to": "logging"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "enum"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "datetime"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "typing"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "memory.core_memory.memoria"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "numpy"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "structlog"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "core.bio_symbolic"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "reasoning.symbolic_reasoning"
      },
      {
        "from": "lukhas.symbolic.neural.neuro_symbolic_fusion_layer",
        "to": "json"
      }
    ]
  }
}