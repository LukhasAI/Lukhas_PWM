# ██╗      ██████╗  ██████╗ ██╗  ██╗ █████╗ ███████╗
# ██║     ██╔═══██╗██╔════╝ ██║  ██║██╔══██╗██╔════╝
# ██║     ██║   ██║██║  ███╗███████║███████║███████╗
# ██║     ██║   ██║██║   ██║██╔══██║██╔══██║╚════██║
# ███████╗╚██████╔╝╚██████╔╝██║  ██║██║  ██║███████║
# ╚══════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝
# LUKHAS™ (2024) - LUKHAS High-Performance AI System
#
# Desc: Data model for 'reasoning summary part done' events, likely auto-generated.
# Docs: https://github.com/LUKHAS-AI/lukhas-docs/blob/main/reasoning_events.md
# Λssociated: Other response_reasoning_*.py event models.
#
# THIS FILE IS ΛUTOGENERATED AND MANAGED BY LUKHAS AI.
# (Likely auto-generated by Stainless from OpenAPI spec - see original header)
# MANUAL MODIFICATIONS MAY BE OVERWRITTEN IF RE-GENERATED.
#
# Copyright (C) 2024 LUKHAS AI. All rights reserved.
# Use of this source code is governed by a LUKHAS AI license
# that can be found in the LICENSE file.
#
# Contact: contact@lukhas.ai
# Website: https://lukhas.ai
#
"""
# ΛNOTE: This module defines data models (`Part`, `ResponseReasoningSummaryPartDoneEvent`)
# for events signaling that a specific segment of a reasoning summary has been finalized.
# These symbolic structures are used in streaming contexts to indicate completion of parts
# of a progressively built summary. Auto-generated from OpenAPI.

Defines data models for a 'response reasoning summary part done' event.

This file appears to be auto-generated by Stainless from an OpenAPI specification.
It specifies structures for events indicating that a specific part of a reasoning
summary has been completed, typically used in streaming or progressive responses.
"""

# Original Stainless generation comment:
# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing_extensions import Literal

# AIMPORT_TODO: Verify the location of `_models.BaseModel`.
# ΛAUTO_GEN_PATH: This relative import `from core.models import BaseModel` is likely from auto-generation.
# See reasoning/README_reasoning_trace.md -> Auto-Gen Import Note
# If `_models.BaseModel` is part of a core LUKHAS framework library, an absolute import
# (e.g., `from core_framework.core.models import BaseModel`) would be more robust.
# ΛCAUTION: Fragile import path can lead to runtime errors and maintenance issues.
from core.models import BaseModel # Assuming this path is correct within the project structure.

import structlog

# Initialize ΛTRACE logger for this module
logger = structlog.get_logger("ΛTRACE.reasoning.response_reasoning_summary_part_done_event")
logger.info("ΛTRACE: Initializing response_reasoning_summary_part_done_event.py module (Data Model Definition).", module_path=__file__)

__all__ = ["ResponseReasoningSummaryPartDoneEvent", "Part"]


# Human-readable comment: Represents a segment of a reasoning summary.
# ΛNOTE: The `Part` class defines the symbolic structure for a completed segment of a reasoning summary.
# ΛCAUTION: This 'Part' class definition is identical to the one in
# `response_reasoning_summary_part_added_event.py`. Consider centralizing this definition
# to avoid redundancy and potential drift between the two identical structures.
# See Jules-07_CONTINUITY.md for tracking this redundancy.
class Part(BaseModel):
    """
    Represents a completed part of a reasoning summary, typically a text segment.
    """
    # ΛNOTE: `text` holds the symbolic content of the completed summary part.
    text: str
    """The text content of this completed summary part."""

    # ΛNOTE: `type` is a fixed literal, symbolically identifying this as 'summary_text'.
    type: Literal["summary_text"]
    """The type of this summary part. Always `summary_text` for this model."""
    # Human-readable comment: Fixed literal type for discriminating this model part.
logger.debug("Part data model class (for summary part done) defined.", class_name="Part") # Removed manual ΛTRACE prefix


# ΛNOTE: This class, `ResponseReasoningSummaryPartDoneEvent`, defines the symbolic structure
# for an event indicating a specific part of a reasoning summary has been finalized.
# It contains the completed part and identifiers for correlation.
class ResponseReasoningSummaryPartDoneEvent(BaseModel):
    """
    Represents an event indicating that a new part has been completed for a reasoning summary.
    This is used for streaming or progressively building reasoning summaries, signaling the end of a part.
    """
    # AIDENTITY: `item_id` links this completed summary part to its parent reasoning item.
    item_id: str
    """The unique identifier of the main reasoning item to which this completed summary part belongs."""

    output_index: int
    """The index of the overall output item (e.g., a message) in the response's output array
       with which this summary part is associated."""

    # ΛNOTE: `part` contains the actual symbolic content of the summary segment that has been completed.
    part: Part
    """The actual summary part content that has been completed."""

    # ΛNOTE: `sequence_number` is crucial for the correct ordered assembly and finalization of summary parts.
    sequence_number: int
    """The sequence number of this event, ensuring ordered processing if multiple parts are involved."""

    # ΛNOTE: `summary_index` identifies which specific part of a multi-part summary is now considered done.
    summary_index: int
    """The index of this completed summary part within the reasoning item's list of summary parts."""

    # ΛNOTE: `type` is a fixed literal, symbolically identifying this event's specific purpose.
    type: Literal["response.reasoning_summary_part.done"]
    """The type of the event. Always `response.reasoning_summary_part.done` for this model."""
    # Human-readable comment: Fixed literal type for event discrimination.

logger.debug("ResponseReasoningSummaryPartDoneEvent data model class defined.", class_name="ResponseReasoningSummaryPartDoneEvent") # Removed manual ΛTRACE prefix

# ═══════════════════════════════════════════════════════════════════════════
# LUKHAS AI - Response Reasoning Summary Part Done Event Model
#
# Module: reasoning.response_reasoning_summary_part_done_event
# Version: 1.1.0 (Standardization Pass)
# Function: Defines data structures for events signaling the completion of a
#           reasoning summary part in a response.
# Origin: Auto-generated by Stainless from an OpenAPI specification (as per original header).
#
# Integration: Used in systems that stream reasoning summaries, marking the
#              completion of individual parts. Depends on `BaseModel` from the
#              LUKHAS framework. The `Part` class here is identical to one in
#              `response_reasoning_summary_part_added_event.py` and could be centralized.
# ═══════════════════════════════════════════════════════════════════════════
# Standard LUKHAS File Footer - Do Not Modify
# File ID: reasoning_resp_sum_part_done_evt_v1.1.0_20240712
# Revision: 1_initial_standardization_001
# Checksum (SHA256): placeholder_checksum_generated_at_commit_time
# Last Review: 2024-Jul-12 by Jules System Agent
# ═══════════════════════════════════════════════════════════════════════════
# END OF FILE: reasoning/response_reasoning_summary_part_done_event.py
# ═══════════════════════════════════════════════════════════════════════════
