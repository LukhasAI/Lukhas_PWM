{
  "directory": "lukhas/orchestration",
  "timestamp": "2025-07-28T17:40:43.392583",
  "summary": {
    "total_modules": 287,
    "total_symbols": 5420,
    "total_dependencies": 2219,
    "missed_opportunities": 157
  },
  "modules": {
    "lukhas.orchestration.signal_router": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "route_signal",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.workflow_engine": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "WorkflowEngine",
          "kind": "class",
          "line": 25,
          "used": true,
          "used_by": [
            "lukhas/orchestration/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_orchestration_component",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.migrate_orchestrators": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "OrchestratorMigrator",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 324,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "determine_base_class",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "extract_class_info",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "needs_migration",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "generate_migration_header",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "migrate_orchestrator",
          "kind": "function",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "create_migrated_version",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "generate_import_updates",
          "kind": "function",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_required_methods",
          "kind": "function",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "migrate_all",
          "kind": "function",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 1,
        "unused_symbols": 2,
        "import_count": 12,
        "export_count": 2,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.04195804195804196
      },
      "symbols": [
        {
          "name": "OrchestrationCore",
          "kind": "class",
          "line": 89,
          "used": true,
          "used_by": [
            "lukhas/orchestration/__init__.py",
            "lukhas/orchestration/orchestrator_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.module_orchestrator": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 2,
        "unused_symbols": 6,
        "import_count": 4,
        "export_count": 5,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "ModuleOrchestratorConfig",
          "kind": "dataclass",
          "line": 22,
          "used": true,
          "used_by": [
            "lukhas/orchestration/migrated/memory_integration_orchestrator.py",
            "lukhas/orchestration/migrated/memory_orchestrator.py",
            "lukhas/orchestration/migrated/simple_test.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ModuleOrchestrator",
          "kind": "class",
          "line": 30,
          "used": true,
          "used_by": [
            "lukhas/orchestration/endocrine_orchestrator.py",
            "lukhas/orchestration/migrated/memory_integration_orchestrator.py",
            "lukhas/orchestration/migrated/memory_orchestrator.py",
            "lukhas/orchestration/migrated/simple_test.py",
            "lukhas/orchestration/system_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "module_name",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_inter_component_communication",
          "kind": "constant",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component_startup_order",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component_shutdown_order",
          "kind": "constant",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_module_info",
          "kind": "function",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.system_orchestrator": {
      "metrics": {
        "total_symbols": 22,
        "used_symbols": 3,
        "unused_symbols": 19,
        "import_count": 6,
        "export_count": 4,
        "connectivity_score": 0.13636363636363635,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "ModulePriority",
          "kind": "class",
          "line": 23,
          "used": true,
          "used_by": [
            "lukhas/orchestration/master_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ModuleInfo",
          "kind": "dataclass",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SystemOrchestratorConfig",
          "kind": "dataclass",
          "line": 42,
          "used": true,
          "used_by": [
            "lukhas/orchestration/master_orchestrator.py",
            "lukhas/orchestration/migrated/brain_orchestrator.py",
            "lukhas/orchestration/migrated/ethics_orchestrator.py",
            "lukhas/orchestration/migrated/unified_agi_enhancement_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SystemOrchestrator",
          "kind": "class",
          "line": 51,
          "used": true,
          "used_by": [
            "lukhas/orchestration/master_orchestrator.py",
            "lukhas/orchestration/migrated/brain_orchestrator.py",
            "lukhas/orchestration/migrated/ethics_orchestrator.py",
            "lukhas/orchestration/migrated/unified_agi_enhancement_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "orchestrator",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependents",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_cross_module_routing",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module_startup_timeout",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_dependency_management",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parallel_module_operations",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_routing_hops",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_module",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "register_route",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_initialization_order",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 427,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_detect_circular_dependencies",
          "kind": "function",
          "line": 490,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "visit",
          "kind": "function",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "has_cycle",
          "kind": "function",
          "line": 495,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.main_node": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "AdaptiveAGISystem",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_dependencies",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "init_components",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_event_handlers",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_duration",
          "kind": "function",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_memory_usage",
          "kind": "function",
          "line": 378,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_save_system_state",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.api": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "Query",
          "kind": "class",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "text",
          "kind": "constant",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.resonance_orchestrator": {
      "metrics": {
        "total_symbols": 47,
        "used_symbols": 0,
        "unused_symbols": 47,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "StressLevel",
          "kind": "class",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HelpSignalType",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ModuleHealth",
          "kind": "dataclass",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HelpSignal",
          "kind": "dataclass",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResonancePattern",
          "kind": "dataclass",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdaptationStrategy",
          "kind": "dataclass",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResonanceOrchestratorConfig",
          "kind": "dataclass",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResonanceOrchestrator",
          "kind": "class",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "module_name",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_level",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resonance_frequency",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "load_percentage",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_rate",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_time_ms",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "help_signals_sent",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_help_signal",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trauma_events",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recovery_time_estimate",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source_module",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "signal_type",
          "kind": "type_alias",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "requested_resources",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "suggested_adaptations",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "modules",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "frequency",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coherence",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase_lock",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pattern_type",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "strategy_type",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_modules",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_adjustments",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority_changes",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_relief_time",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success_probability",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "base_frequency",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resonance_threshold",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dissonance_threshold",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "help_signal_cooldown",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_help_responses",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trauma_recovery_time",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_autonomous_adaptation",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_pool_size",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adaptation_learning_rate",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_trauma_report",
          "kind": "function",
          "line": 677,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.master_orchestrator": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "SystemMode",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CriticalSystem",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MasterOrchestratorConfig",
          "kind": "dataclass",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SystemEvent",
          "kind": "dataclass",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MasterOrchestrator",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "system_mode",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_autonomous_recovery",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "critical_system_check_interval",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_emergency_protocols",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tier_capabilities",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_distributed_coordination",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "master_node_id",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_type",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "details",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_system_orchestrator",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_critical_system",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_emergency_protocol",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_event_handler",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_setup_default_emergency_protocols",
          "kind": "function",
          "line": 284,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_get_health_recommendation",
          "kind": "function",
          "line": 595,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_master_info",
          "kind": "function",
          "line": 608,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.integration_engine": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "lukhas_tier_required",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "LukhasIntegrationEngine",
          "kind": "class",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_integration_component",
          "kind": "function",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 230,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.endocrine_orchestrator": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 2,
        "unused_symbols": 8,
        "import_count": 9,
        "export_count": 1,
        "connectivity_score": 0.2,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "EndocrineOrchestratorConfig",
          "kind": "dataclass",
          "line": 27,
          "used": true,
          "used_by": [
            "lukhas/orchestration/examples/endocrine_module_example.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EndocrineOrchestrator",
          "kind": "class",
          "line": 36,
          "used": true,
          "used_by": [
            "lukhas/orchestration/examples/endocrine_module_example.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "enable_hormonal_modulation",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_threshold",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recovery_threshold",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "circadian_awareness",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_adaptive_resource_allocation",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_register_endocrine_callbacks",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_endocrine_status",
          "kind": "function",
          "line": 443,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.quorum_orchestrator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "QuorumOrchestrator",
          "kind": "class",
          "line": 4,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "decide",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.init.seed_chain_bootstrapper": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 1,
        "unused_symbols": 0,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "bootstrap_seed_chain",
          "kind": "function",
          "line": 20,
          "used": true,
          "used_by": [
            "lukhas/orchestration/init/__init__.py"
          ],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.agent_orchestrator": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 1,
        "unused_symbols": 6,
        "import_count": 9,
        "export_count": 3,
        "connectivity_score": 0.14285714285714285,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "AgentOrchestrator",
          "kind": "class",
          "line": 39,
          "used": true,
          "used_by": [
            "lukhas/orchestration/__init__.py",
            "lukhas/orchestration/api.py",
            "lukhas/orchestration/master_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_protocol_handlers",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_find_suitable_agent",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 589,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_count_agents_by_status",
          "kind": "function",
          "line": 615,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_count_plugins_by_status",
          "kind": "function",
          "line": 623,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.base": {
      "metrics": {
        "total_symbols": 34,
        "used_symbols": 4,
        "unused_symbols": 30,
        "import_count": 10,
        "export_count": 7,
        "connectivity_score": 0.11764705882352941,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "OrchestratorState",
          "kind": "class",
          "line": 46,
          "used": true,
          "used_by": [
            "lukhas/orchestration/master_orchestrator.py",
            "lukhas/orchestration/migrated/simple_test.py",
            "lukhas/orchestration/resonance_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComponentStatus",
          "kind": "class",
          "line": 58,
          "used": true,
          "used_by": [
            "lukhas/orchestration/endocrine_orchestrator.py",
            "lukhas/orchestration/master_orchestrator.py",
            "lukhas/orchestration/migrated/ethics_orchestrator.py",
            "lukhas/orchestration/module_orchestrator.py",
            "lukhas/orchestration/resonance_orchestrator.py",
            "lukhas/orchestration/system_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestratorConfig",
          "kind": "dataclass",
          "line": 67,
          "used": true,
          "used_by": [
            "lukhas/orchestration/endocrine_orchestrator.py",
            "lukhas/orchestration/migrated/simple_test.py",
            "lukhas/orchestration/module_orchestrator.py",
            "lukhas/orchestration/resonance_orchestrator.py",
            "lukhas/orchestration/system_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComponentInfo",
          "kind": "dataclass",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestratorMetrics",
          "kind": "dataclass",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BaseOrchestrator",
          "kind": "class",
          "line": 102,
          "used": true,
          "used_by": [
            "lukhas/orchestration/endocrine_orchestrator.py",
            "lukhas/orchestration/migrated/simple_test.py",
            "lukhas/orchestration/module_orchestrator.py",
            "lukhas/orchestration/resonance_orchestrator.py",
            "lukhas/orchestration/system_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_operations",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_check_interval",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_metrics",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_detailed_logging",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retry_attempts",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout_seconds",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "config_path",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "custom_config",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "type",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_health_check",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "operations_completed",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "operations_failed",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_operation_time",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_load",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component_health",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_additional_config",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "unregister_component",
          "kind": "function",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_average_operation_time",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__repr__",
          "kind": "function",
          "line": 421,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.echo.echo_controller": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "EchoController",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ping",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_check_for_echo_loops",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_check_for_silent_drops",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_output_alert",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.apis.code_process_integration_api": {
      "metrics": {
        "total_symbols": 44,
        "used_symbols": 0,
        "unused_symbols": 44,
        "import_count": 19,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06643356643356643
      },
      "symbols": [
        {
          "name": "CodeLanguage",
          "kind": "class",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ExecutionEnvironment",
          "kind": "class",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CodeQuality",
          "kind": "class",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CodeGenerationRequest",
          "kind": "dataclass",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CodeExecutionResult",
          "kind": "dataclass",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CodeQualityReport",
          "kind": "dataclass",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CodeGenerator",
          "kind": "class",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PythonCodeGenerator",
          "kind": "class",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CPISecurityScanner",
          "kind": "class",
          "line": 518,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CodeProcessIntegrationAPI",
          "kind": "class",
          "line": 554,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_cpi_api_instance",
          "kind": "constant",
          "line": 927,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "request_id",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "language",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "requirements",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_file",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "existing_code",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_requirements",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_level",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "exit_code",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stdout",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stderr",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_time_ms",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_usage_mb",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "files_created",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_issues",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_score",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quality_level",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "issues",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_score",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_score",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "maintainability_score",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_generate_imports",
          "kind": "function",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_header",
          "kind": "function",
          "line": 275,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 557,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_request_status",
          "kind": "function",
          "line": 893,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_api_status",
          "kind": "function",
          "line": 902,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.orchestrator": {
      "metrics": {
        "total_symbols": 26,
        "used_symbols": 0,
        "unused_symbols": 26,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04195804195804196
      },
      "symbols": [
        {
          "name": "OrchestrationMode",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProcessingLevel",
          "kind": "class",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasTier",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsciousnessState",
          "kind": "class",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TierCapabilities",
          "kind": "class",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestrationMetrics",
          "kind": "dataclass",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasOrchestrator",
          "kind": "class",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_capabilities",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "has_feature",
          "kind": "function",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_consciousness_state",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "processing_quality",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "safety_score",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_score",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reliability_score",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_operations",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "successful_operations",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failed_operations",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_response_time",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 230,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "validate_tier_access",
          "kind": "function",
          "line": 352,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_rate_limits",
          "kind": "function",
          "line": 356,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_tier_info",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_synthesize_results",
          "kind": "function",
          "line": 543,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 641,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.config.orchestrator_flags": {
      "metrics": {
        "total_symbols": 38,
        "used_symbols": 3,
        "unused_symbols": 35,
        "import_count": 8,
        "export_count": 2,
        "connectivity_score": 0.07894736842105263,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "OrchestrationMode",
          "kind": "class",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestratorFlags",
          "kind": "dataclass",
          "line": 25,
          "used": true,
          "used_by": [
            "lukhas/orchestration/config/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_orchestrator_flags",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_orchestrator_flags",
          "kind": "function",
          "line": 136,
          "used": true,
          "used_by": [
            "lukhas/orchestration/config/__init__.py",
            "lukhas/orchestration/config/migration_router.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "load_orchestrator_flags",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "update_orchestrator_flags",
          "kind": "function",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "save_orchestrator_flags",
          "kind": "function",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "reset_orchestrator_flags",
          "kind": "function",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_shadow_mode_enabled",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "is_canary_mode_enabled",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "should_circuit_break",
          "kind": "function",
          "line": 248,
          "used": true,
          "used_by": [
            "lukhas/orchestration/config/migration_router.py"
          ],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "global_mode",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brain_orchestrator_mode",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_orchestrator_mode",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_orchestrator_mode",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process_orchestrator_mode",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brain_canary_percentage",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_canary_percentage",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_canary_percentage",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process_canary_percentage",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_shadow_logging",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_performance_monitoring",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_health_checks",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_fallback_recovery",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_circuit_breaker",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_error_rate_threshold",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_latency_threshold_ms",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_check_interval_seconds",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "allow_automatic_promotion",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "require_manual_approval",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_rollback_on_error",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_orchestrator_mode",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_canary_percentage",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_orchestrator_enabled",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "should_use_new_orchestrator",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "should_use_legacy_orchestrator",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "from_dict",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.apis.drift_monitoring_api": {
      "metrics": {
        "total_symbols": 46,
        "used_symbols": 0,
        "unused_symbols": 46,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "DriftType",
          "kind": "class",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftSeverity",
          "kind": "class",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AlertChannel",
          "kind": "class",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetricDataPoint",
          "kind": "dataclass",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftAlert",
          "kind": "dataclass",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MonitoringConfig",
          "kind": "dataclass",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "StatisticalAnalyzer",
          "kind": "class",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetricCollector",
          "kind": "class",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftDetector",
          "kind": "class",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AlertManager",
          "kind": "class",
          "line": 556,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftMonitoringAPI",
          "kind": "class",
          "line": 644,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_drift_monitoring_api",
          "kind": "constant",
          "line": 918,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "value",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alert_id",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_type",
          "kind": "type_alias",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metric_name",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_value",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "baseline_value",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "deviation_percent",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "threshold_breached",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "acknowledged",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resolved",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collection_interval_seconds",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "window_size",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "threshold_percent",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "critical_threshold_percent",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "baseline_window_hours",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_alerts",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alert_channels",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "statistical_test",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "calculate_zscore",
          "kind": "function",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "detect_trend",
          "kind": "function",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "kolmogorov_smirnov_test",
          "kind": "function",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "moving_average_deviation",
          "kind": "function",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 647,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_recent_values",
          "kind": "function",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_metric_history",
          "kind": "function",
          "line": 289,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 496,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "get_monitoring_status",
          "kind": "function",
          "line": 898,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.LGOV_validator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "symbolic_oversight_validator",
          "kind": "class",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_decision",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.example_agents": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "AnalyzerAgent",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LearningAgent",
          "kind": "class",
          "line": 271,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CoordinatorAgent",
          "kind": "class",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 506,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.security.ethics_loop_guard": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "EthicsLoopGuard",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "detect_misalignment",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_detect_recursive_misfire",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_detect_governance_tier_escalation",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_detect_drift_score_threshold_breach",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_output_alert",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast.__init__": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "track",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "optimize_workflow",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast_orchestrator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "EnhancedDASTOrchestrator",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_system_state",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast.verify": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "test_module_imports",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "test_core_classes",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "test_basic_functionality",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_design_compliance",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast.intelligence": {
      "metrics": {
        "total_symbols": 27,
        "used_symbols": 5,
        "unused_symbols": 22,
        "import_count": 6,
        "export_count": 3,
        "connectivity_score": 0.18518518518518517,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "TaskIntelligence",
          "kind": "class",
          "line": 15,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/engine.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PriorityOptimizer",
          "kind": "class",
          "line": 76,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/engine.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ContextTracker",
          "kind": "class",
          "line": 161,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/engine.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicReasoner",
          "kind": "class",
          "line": 263,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "WorkflowAnalyzer",
          "kind": "class",
          "line": 361,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 366,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "analyze_task_complexity",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_recommend_approach",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_risk_factors",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "optimize_priorities",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_dynamic_priority",
          "kind": "function",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_explain_priority_decision",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "track_context",
          "kind": "function",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_detect_context_patterns",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_context_insights",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_predict_context_needs",
          "kind": "function",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_find_related_contexts",
          "kind": "function",
          "line": 237,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_context_similarity",
          "kind": "function",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_reasoning_rules",
          "kind": "function",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "apply_reasoning",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_dependency_reasoning",
          "kind": "function",
          "line": 324,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_priority_reasoning",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "analyze_workflow",
          "kind": "function",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_identify_bottlenecks",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_optimization_suggestions",
          "kind": "function",
          "line": 441,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_extract_workflow_insights",
          "kind": "function",
          "line": 470,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_task_age_days",
          "kind": "function",
          "line": 499,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast.tests": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "TestLucasDASTIntegration",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TestPerformanceBenchmarks",
          "kind": "class",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "sample_tasks",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.integration.vendor_sync_orchestrator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "detect_and_pair_apps",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "orchestrate_vendor_sync",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "batch_sync",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.config.production_config": {
      "metrics": {
        "total_symbols": 93,
        "used_symbols": 1,
        "unused_symbols": 92,
        "import_count": 7,
        "export_count": 1,
        "connectivity_score": 0.010752688172043012,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "Environment",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LogLevel",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DatabaseConfig",
          "kind": "dataclass",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RedisConfig",
          "kind": "dataclass",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MonitoringConfig",
          "kind": "dataclass",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SecurityConfig",
          "kind": "dataclass",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PerformanceConfig",
          "kind": "dataclass",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestrationConfig",
          "kind": "dataclass",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProductionOrchestratorConfig",
          "kind": "dataclass",
          "line": 150,
          "used": true,
          "used_by": [
            "lukhas/orchestration/config/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "host",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "port",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "database",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "username",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "password",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ssl_mode",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pool_size",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_overflow",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pool_timeout",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pool_recycle",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ssl",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_connections",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "socket_timeout",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "socket_connect_timeout",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_metrics",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_tracing",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_logging",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics_port",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics_path",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jaeger_agent_host",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jaeger_agent_port",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_level",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_format",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_file",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_check_enabled",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_check_port",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_check_path",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_auth",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jwt_secret_key",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jwt_algorithm",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jwt_expiry_hours",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_rate_limiting",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rate_limit_per_minute",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rate_limit_burst",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_cors",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cors_origins",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_key",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hash_algorithm",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "worker_processes",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "worker_threads",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "worker_timeout",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_queue_size",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "queue_timeout",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_caching",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cache_ttl_seconds",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cache_max_size",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "circuit_breaker_failure_threshold",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "circuit_breaker_recovery_timeout",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "circuit_breaker_expected_exception",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_orchestration",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "orchestrator_timeout",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_orchestrators",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brain_orchestrator_enabled",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_orchestrator_enabled",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_orchestrator_enabled",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process_orchestrator_enabled",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_memory_mb",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_cpu_percent",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_execution_time",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "migration_mode",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rollback_enabled",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_check_interval",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "environment",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "debug",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "redis",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "monitoring",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "orchestration",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "app_name",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "app_version",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "api_prefix",
          "kind": "constant",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_dir",
          "kind": "constant",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "logs_dir",
          "kind": "constant",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "temp_dir",
          "kind": "constant",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "config_dir",
          "kind": "constant",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "load_from_env",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "load_from_file",
          "kind": "function",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "from_dict",
          "kind": "function",
          "line": 258,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "save_to_file",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "validate",
          "kind": "function",
          "line": 403,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "is_production",
          "kind": "function",
          "line": 445,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_development",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.config.migration_router": {
      "metrics": {
        "total_symbols": 44,
        "used_symbols": 3,
        "unused_symbols": 41,
        "import_count": 11,
        "export_count": 1,
        "connectivity_score": 0.06818181818181818,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "OrchestrationResult",
          "kind": "dataclass",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ShadowComparisonResult",
          "kind": "dataclass",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CircuitBreaker",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PerformanceMetrics",
          "kind": "class",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ShadowOrchestrator",
          "kind": "class",
          "line": 119,
          "used": true,
          "used_by": [
            "lukhas/orchestration/config/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestratorRouter",
          "kind": "class",
          "line": 325,
          "used": true,
          "used_by": [
            "lukhas/orchestration/config/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_orchestrator_router",
          "kind": "constant",
          "line": 665,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_orchestrator_router",
          "kind": "function",
          "line": 667,
          "used": true,
          "used_by": [
            "lukhas/orchestration/config/__init__.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_time_ms",
          "kind": "constant",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "orchestrator_type",
          "kind": "constant",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "legacy_result",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "new_result",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "results_match",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "differences",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "comparison_time_ms",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "can_execute",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "record_success",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "record_failure",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "record_execution",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_avg_latency",
          "kind": "function",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_error_rate",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_p95_latency",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_compare_results",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_compare_dicts",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_compare_sequences",
          "kind": "function",
          "line": 268,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_log_comparison",
          "kind": "function",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_comparison_summary",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_flags",
          "kind": "function",
          "line": 334,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_ensure_orchestrator_tracking",
          "kind": "function",
          "line": 585,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_record_metrics",
          "kind": "function",
          "line": 599,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_orchestrator_health",
          "kind": "function",
          "line": 604,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "get_shadow_summary",
          "kind": "function",
          "line": 643,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_all_orchestrator_status",
          "kind": "function",
          "line": 650,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "OrchestrationMode",
          "kind": "class",
          "line": 345,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MinimalFlags",
          "kind": "dataclass",
          "line": 352,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_orchestrator_mode",
          "kind": "function",
          "line": 353,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "is_orchestrator_enabled",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "should_use_new_orchestrator",
          "kind": "function",
          "line": 357,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "should_use_legacy_orchestrator",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.security.dast.api": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 1,
        "unused_symbols": 17,
        "import_count": 6,
        "export_count": 2,
        "connectivity_score": 0.05555555555555555,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "LucasDASTAPI",
          "kind": "class",
          "line": 19,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_apply_filters",
          "kind": "function",
          "line": 411,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_format_tasks_for_api",
          "kind": "function",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_performance_analytics",
          "kind": "function",
          "line": 453,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_workflow_analytics",
          "kind": "function",
          "line": 471,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_trend_analytics",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_comprehensive_analytics",
          "kind": "function",
          "line": 518,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_productivity_insights",
          "kind": "function",
          "line": 540,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_bottlenecks",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_optimization_suggestions",
          "kind": "function",
          "line": 569,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_ai_predictions",
          "kind": "function",
          "line": 579,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_performance_trends",
          "kind": "function",
          "line": 591,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_record_api_call",
          "kind": "function",
          "line": 600,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_average_api_response_time",
          "kind": "function",
          "line": 621,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_error_rate",
          "kind": "function",
          "line": 633,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_success_response",
          "kind": "function",
          "line": 638,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_error_response",
          "kind": "function",
          "line": 648,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.agents.registry": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 1,
        "unused_symbols": 5,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.16666666666666666,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "AgentRegistry",
          "kind": "class",
          "line": 12,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agents/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_agent",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "find_agents_by_capability",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "list_agents",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.agents.types": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 3,
        "unused_symbols": 8,
        "import_count": 3,
        "export_count": 4,
        "connectivity_score": 0.2727272727272727,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "AgentCapability",
          "kind": "class",
          "line": 11,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agents/__init__.py",
            "lukhas/orchestration/agents/base.py",
            "lukhas/orchestration/agents/builtin/jules.py",
            "lukhas/orchestration/agents/registry.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentContext",
          "kind": "dataclass",
          "line": 22,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agents/__init__.py",
            "lukhas/orchestration/agents/base.py",
            "lukhas/orchestration/agents/builtin/jules.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentResponse",
          "kind": "dataclass",
          "line": 32,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agents/__init__.py",
            "lukhas/orchestration/agents/base.py",
            "lukhas/orchestration/agents/builtin/jules.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "task_id",
          "kind": "constant",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_state",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_context",
          "kind": "constant",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "glyphs",
          "kind": "constant",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_delta",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.agents.base": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 1,
        "unused_symbols": 5,
        "import_count": 3,
        "export_count": 3,
        "connectivity_score": 0.16666666666666666,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "OrchestrationAgent",
          "kind": "class",
          "line": 12,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agents/__init__.py",
            "lukhas/orchestration/agents/builtin/jules.py",
            "lukhas/orchestration/agents/registry.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_agent_id",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_capabilities",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_context",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_metadata",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast.engine": {
      "metrics": {
        "total_symbols": 38,
        "used_symbols": 0,
        "unused_symbols": 38,
        "import_count": 10,
        "export_count": 2,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "TaskPriority",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "TaskStatus",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Task",
          "kind": "dataclass",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "LukhasDASTEngine",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_dast_engine",
          "kind": "function",
          "line": 701,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "title",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tags",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "due_date",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_duration",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_reasoning",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_insights",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_ai_components",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_ai_models",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_title",
          "kind": "function",
          "line": 382,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_determine_priority",
          "kind": "function",
          "line": 390,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_extract_tags",
          "kind": "function",
          "line": 409,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_estimate_duration",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_due_date",
          "kind": "function",
          "line": 456,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_identify_dependencies",
          "kind": "function",
          "line": 477,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_priority_score",
          "kind": "function",
          "line": 496,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_apply_symbolic_reasoning",
          "kind": "function",
          "line": 518,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_ai_filter_tasks",
          "kind": "function",
          "line": 528,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_ai_prioritize_tasks",
          "kind": "function",
          "line": 542,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_optimize_workflow_async",
          "kind": "function",
          "line": 604,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_workflow_metrics_sync",
          "kind": "function",
          "line": 631,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_workflow_metrics",
          "kind": "function",
          "line": 640,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_cache_key",
          "kind": "function",
          "line": 654,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_record_operation_time",
          "kind": "function",
          "line": 662,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_performance_stats",
          "kind": "function",
          "line": 670,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "priority_key",
          "kind": "function",
          "line": 544,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.agents.multi_agent_collaboration": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "MultiAgentCollaboration",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_agent",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_task",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "send_message",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_task_progress",
          "kind": "function",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "complete_task",
          "kind": "function",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_assign_agents_to_task",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_complete_task",
          "kind": "function",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast.adapters": {
      "metrics": {
        "total_symbols": 31,
        "used_symbols": 1,
        "unused_symbols": 30,
        "import_count": 7,
        "export_count": 2,
        "connectivity_score": 0.03225806451612903,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "AdapterConfig",
          "kind": "dataclass",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DASTAdapter",
          "kind": "class",
          "line": 27,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "endpoint",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "auth_token",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rate_limit",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retry_attempts",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cache_ttl",
          "kind": "constant",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_adapter",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_adapter_instance",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_sync_function",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_create_push_function",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_create_status_function",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_convert_jira_to_dast_format",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_convert_github_to_dast_format",
          "kind": "function",
          "line": 329,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_convert_legacy_to_dast_format",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_convert_generic_to_dast_format",
          "kind": "function",
          "line": 377,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_convert_single_generic_item",
          "kind": "function",
          "line": 386,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_convert_dast_to_jira_format",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_convert_dast_to_github_format",
          "kind": "function",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_convert_dast_to_legacy_format",
          "kind": "function",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_map_jira_priority",
          "kind": "function",
          "line": 438,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_map_jira_status",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_map_github_priority",
          "kind": "function",
          "line": 460,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_map_dast_to_jira_priority",
          "kind": "function",
          "line": 477,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_rate_limit",
          "kind": "function",
          "line": 491,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_rate_limit_remaining",
          "kind": "function",
          "line": 512,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_from_cache",
          "kind": "function",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_cache_result",
          "kind": "function",
          "line": 528,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.agents.builtin.codex": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 3,
        "export_count": 2,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "Codex",
          "kind": "class",
          "line": 11,
          "used": true,
          "used_by": [
            "lukhas/orchestration/api.py",
            "lukhas/orchestration/master_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "respond",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "parse_query",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.agents.builtin.jules": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "Jules01Agent",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_agent_id",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_capabilities",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "validate_context",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.integration.human_in_the_loop_orchestrator": {
      "metrics": {
        "total_symbols": 88,
        "used_symbols": 0,
        "unused_symbols": 88,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "DecisionPriority",
          "kind": "class",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReviewerRole",
          "kind": "class",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DecisionStatus",
          "kind": "class",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EscrowStatus",
          "kind": "class",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReviewerProfile",
          "kind": "dataclass",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DecisionContext",
          "kind": "dataclass",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EscrowDetails",
          "kind": "dataclass",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReviewAssignment",
          "kind": "dataclass",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReviewResponse",
          "kind": "dataclass",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DecisionRecord",
          "kind": "dataclass",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReviewerNotification",
          "kind": "class",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmailNotification",
          "kind": "class",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SlackNotification",
          "kind": "class",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HumanInTheLoopOrchestrator",
          "kind": "class",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "reviewer_id",
          "kind": "constant",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "roles",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expertise_domains",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "experience_level",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_workload",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_reviews",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "availability_hours",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_metrics",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "contact_methods",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "languages",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_active",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_active",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_id",
          "kind": "constant",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_type",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "urgency_deadline",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_implications",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "required_expertise",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_impact",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stakeholders",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "background_context",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_recommendation",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_confidence",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "related_decisions",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "escrow_id",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "amount",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "currency",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "escrow_type",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stakeholder",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conditions",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "release_criteria",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expires_at",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assignment_id",
          "kind": "constant",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assigned_at",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "due_date",
          "kind": "constant",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority_boost",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "notification_sent",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reminder_count",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_id",
          "kind": "constant",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision",
          "kind": "constant",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning",
          "kind": "constant",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "concerns",
          "kind": "constant",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "additional_reviewers_needed",
          "kind": "constant",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_review_time_minutes",
          "kind": "constant",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "srd_signature",
          "kind": "constant",
          "line": 195,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assignments",
          "kind": "constant",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "responses",
          "kind": "constant",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "final_decision",
          "kind": "constant",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consensus_score",
          "kind": "constant",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "escrow_details",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "completed_at",
          "kind": "constant",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_explanation",
          "kind": "constant",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "human_explanation",
          "kind": "constant",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_trail",
          "kind": "constant",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 269,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_initialize_lukhas_integration",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_check_role_suitability",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_reviewer_suitability_score",
          "kind": "function",
          "line": 570,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_is_reviewer_available_now",
          "kind": "function",
          "line": 603,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_reviewer_count_for_priority",
          "kind": "function",
          "line": 608,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_due_date",
          "kind": "function",
          "line": 649,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_decision_status",
          "kind": "function",
          "line": 940,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_reviewer_workload",
          "kind": "function",
          "line": 959,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 980,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "EthicalVerdict",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.agents.orchestrator": {
      "metrics": {
        "total_symbols": 41,
        "used_symbols": 0,
        "unused_symbols": 41,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05244755244755245
      },
      "symbols": [
        {
          "name": "EnhancementState",
          "kind": "class",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancementMetrics",
          "kind": "dataclass",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIEnhancementConfig",
          "kind": "dataclass",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedAGIEnhancementOrchestrator",
          "kind": "class",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "cristae_efficiency",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "atp_production_rate",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "membrane_potential",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_rate_adaptation",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_convergence",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_feedback_quality",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_quantum_coupling",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optimization_efficiency",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_enhancement",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_stability",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "integration_quality",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_crista_optimization",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_cristae_density",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fusion_threshold",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fission_threshold",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_meta_learning",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_rate_bounds",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_nodes",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_feedback_depth",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_quantum_bio",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence_threshold",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_coupling_strength",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_annealing_steps",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enhancement_cycles",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "convergence_threshold",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stability_window",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics_log_interval",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_crista_meta_pathway",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_meta_quantum_pathway",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_quantum_crista_pathway",
          "kind": "function",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_unified_feedback_pathway",
          "kind": "function",
          "line": 309,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_unified_optimizations",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_check_convergence",
          "kind": "function",
          "line": 616,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_enhancement_report",
          "kind": "function",
          "line": 647,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.security.dast.processors": {
      "metrics": {
        "total_symbols": 38,
        "used_symbols": 4,
        "unused_symbols": 34,
        "import_count": 9,
        "export_count": 2,
        "connectivity_score": 0.10526315789473684,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "TaskProcessor",
          "kind": "class",
          "line": 17,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TagProcessor",
          "kind": "class",
          "line": 249,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AttentionProcessor",
          "kind": "class",
          "line": 412,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SolutionProcessor",
          "kind": "class",
          "line": 508,
          "used": true,
          "used_by": [
            "lukhas/orchestration/security/dast/__init__.py",
            "lukhas/orchestration/security/dast/tests.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 513,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_templates",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_task",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_match_template",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_template_match_score",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_template",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_ai_enhancements",
          "kind": "function",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_ai_estimate_duration",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_ai_suggest_tags",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_ai_assess_risks",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_ai_suggest_success_criteria",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_initialize_tag_hierarchy",
          "kind": "function",
          "line": 258,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_tags",
          "kind": "function",
          "line": 268,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_normalize_tags",
          "kind": "function",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_suggest_additional_tags",
          "kind": "function",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "_categorize_tags",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_detect_tag_conflicts",
          "kind": "function",
          "line": 353,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_tag_usage",
          "kind": "function",
          "line": 378,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_tag_completeness",
          "kind": "function",
          "line": 387,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_suggest_tag_optimizations",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "process_attention_request",
          "kind": "function",
          "line": 421,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_classify_focus_type",
          "kind": "function",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_recommend_focus_duration",
          "kind": "function",
          "line": 448,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_suggest_distraction_mitigation",
          "kind": "function",
          "line": 462,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_attention_score",
          "kind": "function",
          "line": 487,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "process_solution",
          "kind": "function",
          "line": 517,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_solution_id",
          "kind": "function",
          "line": 543,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_categorize_solution",
          "kind": "function",
          "line": 549,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_find_related_solutions",
          "kind": "function",
          "line": 576,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_similarity",
          "kind": "function",
          "line": 589,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_pattern_library",
          "kind": "function",
          "line": 599,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_problem_pattern",
          "kind": "function",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_extract_solution_pattern",
          "kind": "function",
          "line": 625,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_calculate_reusability_score",
          "kind": "function",
          "line": 638,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.agents.adaptive_orchestrator": {
      "metrics": {
        "total_symbols": 17,
        "used_symbols": 0,
        "unused_symbols": 17,
        "import_count": 22,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07692307692307693
      },
      "symbols": [
        {
          "name": "VisionaryMode",
          "kind": "class",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsciousnessLevel",
          "kind": "class",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "VisionaryMetrics",
          "kind": "dataclass",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdaptiveOrchestrator",
          "kind": "class",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "user_delight_score",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "safety_confidence",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "breakthrough_potential",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "democratic_access",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_excellence",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "scaling_readiness",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_vision_score",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_visionary_logging",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_load_visionary_config",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "VisionaryFormatter",
          "kind": "class",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "format",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "deep_merge",
          "kind": "function",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.specialized.ui_orchestrator": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "AdaptiveUI",
          "kind": "class",
          "line": 6,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_generate_advanced_adaptation",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_emotional_trajectory",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_empathetic_response",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.freeze_protection_check": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "is_locked",
          "kind": "function",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "freeze_protection_check",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.component_orchestrator": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "ComponentOrchestrator",
          "kind": "class",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_orchestration_component",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.enhancement_orchestrator": {
      "metrics": {
        "total_symbols": 41,
        "used_symbols": 0,
        "unused_symbols": 41,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05244755244755245
      },
      "symbols": [
        {
          "name": "EnhancementState",
          "kind": "class",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancementMetrics",
          "kind": "dataclass",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIEnhancementConfig",
          "kind": "dataclass",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedAGIEnhancementOrchestrator",
          "kind": "class",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "cristae_efficiency",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "atp_production_rate",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "membrane_potential",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_rate_adaptation",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_convergence",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_feedback_quality",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_quantum_coupling",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optimization_efficiency",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_enhancement",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_stability",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "integration_quality",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_crista_optimization",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_cristae_density",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fusion_threshold",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fission_threshold",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_meta_learning",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_rate_bounds",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_nodes",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_feedback_depth",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_quantum_bio",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence_threshold",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_coupling_strength",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_annealing_steps",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enhancement_cycles",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "convergence_threshold",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stability_window",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics_log_interval",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_crista_meta_pathway",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_meta_quantum_pathway",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_quantum_crista_pathway",
          "kind": "function",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_unified_feedback_pathway",
          "kind": "function",
          "line": 309,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_unified_optimizations",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_check_convergence",
          "kind": "function",
          "line": 616,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_enhancement_report",
          "kind": "function",
          "line": 647,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.agents.meta_cognitive_orchestrator": {
      "metrics": {
        "total_symbols": 56,
        "used_symbols": 0,
        "unused_symbols": 56,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05244755244755245
      },
      "symbols": [
        {
          "name": "AGICapabilityLevel",
          "kind": "class",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIResponse",
          "kind": "dataclass",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumInspiredAttention",
          "kind": "class",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CausalReasoningModule",
          "kind": "class",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicEngine",
          "kind": "class",
          "line": 384,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaCognitiveOrchestrator",
          "kind": "class",
          "line": 570,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceEngine",
          "kind": "class",
          "line": 848,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedAGIBot",
          "kind": "class",
          "line": 897,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning_path",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metacognitive_state",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_compliance",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capability_level",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 910,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_superposition",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "attend",
          "kind": "function",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_features",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_attention_distribution",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_superposition",
          "kind": "function",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_attention_gates",
          "kind": "function",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_entanglement_map",
          "kind": "function",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reason",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_identify_causal_elements",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_build_causal_chains",
          "kind": "function",
          "line": 284,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_causal_confidences",
          "kind": "function",
          "line": 309,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_summarize_chain",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_causal_graph",
          "kind": "function",
          "line": 335,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_primary_cause",
          "kind": "function",
          "line": 350,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_extract_reasoning_path",
          "kind": "function",
          "line": 361,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_history",
          "kind": "function",
          "line": 375,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_semantic_content",
          "kind": "function",
          "line": 434,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_patterns",
          "kind": "function",
          "line": 443,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_extract_logical_elements",
          "kind": "function",
          "line": 456,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_build_symbolic_logical_chains",
          "kind": "function",
          "line": 488,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_elements_related",
          "kind": "function",
          "line": 509,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_symbolic_confidences",
          "kind": "function",
          "line": 521,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_create_symbolic_summary",
          "kind": "function",
          "line": 559,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 589,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "orchestrate",
          "kind": "function",
          "line": 594,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_assess_current_state",
          "kind": "function",
          "line": 632,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_synthesize_results",
          "kind": "function",
          "line": 650,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_metacognitive_insights",
          "kind": "function",
          "line": 673,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "_extract_comprehensive_reasoning_path",
          "kind": "function",
          "line": 708,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_capability_level",
          "kind": "function",
          "line": 723,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_self_modification_recommendations",
          "kind": "function",
          "line": 754,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_evaluate_and_modify",
          "kind": "function",
          "line": 781,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_perform_self_modification",
          "kind": "function",
          "line": 804,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_update_capability_level",
          "kind": "function",
          "line": 840,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 861,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_safe_response",
          "kind": "function",
          "line": 949,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_conversation_history",
          "kind": "function",
          "line": 953,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_performance_metrics",
          "kind": "function",
          "line": 965,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_agi_status",
          "kind": "function",
          "line": 991,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "LukhasOrchestratorEmotionEngine",
          "kind": "class",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "core_modules",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_modules",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_health",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_status",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.specialized.deployment_orchestrator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "LUKHASCommericalDeployment",
          "kind": "class",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_deployment_status",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.loop_recovery_simulator": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "LoopRecoverySimulation",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.lambda_bot_orchestrator": {
      "metrics": {
        "total_symbols": 29,
        "used_symbols": 0,
        "unused_symbols": 29,
        "import_count": 22,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07692307692307693
      },
      "symbols": [
        {
          "name": "BotProtocol",
          "kind": "protocol",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumBotConfig",
          "kind": "dataclass",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReasoningContext",
          "kind": "dataclass",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumDecisionEngine",
          "kind": "class",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BotEvolutionEngine",
          "kind": "class",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EliteCodeManagementBot",
          "kind": "class",
          "line": 239,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EliteGenericBot",
          "kind": "class",
          "line": 416,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bBotEliteOrchestrator",
          "kind": "class",
          "line": 559,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "type",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capabilities",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "autonomy_level",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_enabled",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_symbolic_processing",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "self_evolving",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_calibration",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "multi_brain_integration",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "frequency_hz",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence_threshold",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "problem_type",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "domain_knowledge",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "constraints",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "objectives",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stakeholders",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_considerations",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_requirements",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_enhancement",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 568,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_initialize_elite_bot_fleet",
          "kind": "function",
          "line": 615,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.immune.system_watchdog": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "SystemWatchdog",
          "kind": "class",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "scan",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        },
        {
          "name": "_quarantine_entry",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "corrupted",
          "kind": "constant",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.specialized.inter_agent_simulation": {
      "metrics": {
        "total_symbols": 17,
        "used_symbols": 0,
        "unused_symbols": 17,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "AgentType",
          "kind": "class",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MessageType",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentMessage",
          "kind": "dataclass",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Agent",
          "kind": "class",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InterAgentSimulation",
          "kind": "class",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_simulation",
          "kind": "function",
          "line": 420,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "sender",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "receiver",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "type_alias",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_id",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_agent",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_simulation_status",
          "kind": "function",
          "line": 394,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "export_message_log",
          "kind": "function",
          "line": 403,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.integrated_system_orchestrator": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "AdaptiveAGISystem",
          "kind": "class",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "init_components",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_event_handlers",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_duration",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_memory_usage",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_save_system_state",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt": {
      "metrics": {
        "total_symbols": 56,
        "used_symbols": 0,
        "unused_symbols": 56,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05244755244755245
      },
      "symbols": [
        {
          "name": "AGICapabilityLevel",
          "kind": "class",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIResponse",
          "kind": "dataclass",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumInspiredAttention",
          "kind": "class",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CausalReasoningModule",
          "kind": "class",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicEngine",
          "kind": "class",
          "line": 382,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaCognitiveOrchestrator",
          "kind": "class",
          "line": 609,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceEngine",
          "kind": "class",
          "line": 924,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedAGIBot",
          "kind": "class",
          "line": 988,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning_path",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metacognitive_state",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_compliance",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capability_level",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 1001,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_superposition",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "attend",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_features",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_attention_distribution",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_superposition",
          "kind": "function",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_attention_gates",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_entanglement_map",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reason",
          "kind": "function",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_identify_causal_elements",
          "kind": "function",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_build_causal_chains",
          "kind": "function",
          "line": 268,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_causal_confidences",
          "kind": "function",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_summarize_chain",
          "kind": "function",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_causal_graph",
          "kind": "function",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_primary_cause",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_extract_reasoning_path",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_history",
          "kind": "function",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_semantic_content",
          "kind": "function",
          "line": 448,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_patterns",
          "kind": "function",
          "line": 457,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_extract_logical_elements",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_build_symbolic_logical_chains",
          "kind": "function",
          "line": 512,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_elements_related",
          "kind": "function",
          "line": 533,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_symbolic_confidences",
          "kind": "function",
          "line": 545,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_create_symbolic_summary",
          "kind": "function",
          "line": 597,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 628,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "orchestrate",
          "kind": "function",
          "line": 633,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_assess_current_state",
          "kind": "function",
          "line": 673,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_synthesize_results",
          "kind": "function",
          "line": 699,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_metacognitive_insights",
          "kind": "function",
          "line": 726,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "_extract_comprehensive_reasoning_path",
          "kind": "function",
          "line": 765,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_capability_level",
          "kind": "function",
          "line": 782,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_self_modification_recommendations",
          "kind": "function",
          "line": 813,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_evaluate_and_modify",
          "kind": "function",
          "line": 844,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_perform_self_modification",
          "kind": "function",
          "line": 868,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_update_capability_level",
          "kind": "function",
          "line": 913,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 947,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_safe_response",
          "kind": "function",
          "line": 1044,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_conversation_history",
          "kind": "function",
          "line": 1048,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_performance_metrics",
          "kind": "function",
          "line": 1062,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_agi_status",
          "kind": "function",
          "line": 1094,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.migrated.memory_orchestrator": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 1,
        "unused_symbols": 13,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.07142857142857142,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "MemoryOrchestratorConfig",
          "kind": "dataclass",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryComponent",
          "kind": "class",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryOrchestrator",
          "kind": "class",
          "line": 93,
          "used": true,
          "used_by": [
            "lukhas/orchestration/migrated/simple_test.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_memory_component",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "enable_memory_cache",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cache_size_mb",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_categories",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_determine_category",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "_generate_cache_key",
          "kind": "function",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_cache_stats",
          "kind": "function",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "clear_cache",
          "kind": "function",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.specialized.lambda_dependa_bot": {
      "metrics": {
        "total_symbols": 85,
        "used_symbols": 0,
        "unused_symbols": 85,
        "import_count": 26,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.09090909090909091
      },
      "symbols": [
        {
          "name": "\u039bSelfHealingAction",
          "kind": "dataclass",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bCodeFixSuggestion",
          "kind": "dataclass",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bSelfHealingReport",
          "kind": "dataclass",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bDependencyProfile",
          "kind": "dataclass",
          "line": 313,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bArchitecturalInsight",
          "kind": "dataclass",
          "line": 325,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bModularityReport",
          "kind": "dataclass",
          "line": 335,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bDependaBoT",
          "kind": "class",
          "line": 344,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CodeFixerBase",
          "kind": "class",
          "line": 1519,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OllamaCodeFixer",
          "kind": "class",
          "line": 1528,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TransformersCodeFixer",
          "kind": "class",
          "line": 1600,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OpenAICodeFixer",
          "kind": "class",
          "line": 1655,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "action_type",
          "kind": "constant",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_file",
          "kind": "constant",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "original_error",
          "kind": "constant",
          "line": 282,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_applied",
          "kind": "constant",
          "line": 283,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success_rate",
          "kind": "constant",
          "line": 284,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "healing_method",
          "kind": "constant",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_level",
          "kind": "constant",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 337,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verification_status",
          "kind": "constant",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "original_code",
          "kind": "constant",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fixed_code",
          "kind": "constant",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_explanation",
          "kind": "constant",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_score",
          "kind": "constant",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_category",
          "kind": "constant",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "llm_model_used",
          "kind": "constant",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validation_passed",
          "kind": "constant",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "healing_actions_taken",
          "kind": "constant",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_suggestions_generated",
          "kind": "constant",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_patterns_learned",
          "kind": "constant",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "healing_success_rate",
          "kind": "constant",
          "line": 307,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "llm_integration_status",
          "kind": "constant",
          "line": 308,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "autonomous_fixes_applied",
          "kind": "constant",
          "line": 309,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "manual_intervention_required",
          "kind": "constant",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module_id",
          "kind": "constant",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_signature",
          "kind": "constant",
          "line": 316,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coherence_level",
          "kind": "constant",
          "line": 317,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coupling_metrics",
          "kind": "constant",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "architectural_impact",
          "kind": "constant",
          "line": 319,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evolution_potential",
          "kind": "constant",
          "line": 320,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optimization_recommendations",
          "kind": "constant",
          "line": 321,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "healing_status",
          "kind": "constant",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "insight_type",
          "kind": "constant",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "impact_assessment",
          "kind": "constant",
          "line": 329,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommended_actions",
          "kind": "constant",
          "line": 330,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_rationale",
          "kind": "constant",
          "line": 331,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stakeholder_implications",
          "kind": "constant",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_modularity_score",
          "kind": "constant",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "architectural_insights",
          "kind": "constant",
          "line": 339,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependency_profiles",
          "kind": "constant",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optimization_roadmap",
          "kind": "constant",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_predictions",
          "kind": "constant",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_should_exclude_file",
          "kind": "function",
          "line": 1040,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_module_name",
          "kind": "function",
          "line": 1049,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_resolve_module_name",
          "kind": "function",
          "line": 1054,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_quantum_complexity",
          "kind": "function",
          "line": 1070,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_average_modularity",
          "kind": "function",
          "line": 1139,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_quantum_coherence",
          "kind": "function",
          "line": 1145,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_entanglement_quality",
          "kind": "function",
          "line": 1149,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_pattern_accuracy",
          "kind": "function",
          "line": 1153,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_optimization_success_rate",
          "kind": "function",
          "line": 1157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_failure_rate",
          "kind": "function",
          "line": 1500,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_encoding_success_rate",
          "kind": "function",
          "line": 1506,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_syntax_tolerance",
          "kind": "function",
          "line": 1512,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "BotProtocol",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "QuantumBotConfig",
          "kind": "dataclass",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "QuantumNetworkEngine",
          "kind": "class",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "nx",
          "kind": "class",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "type",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capabilities",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "autonomy_level",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_enabled",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_symbolic_processing",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "self_evolving",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "add_node",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_edge",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_quantum_modularity",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_detect_quantum_clusters",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "nodes",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "edges",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "in_degree",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "out_degree",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "degree",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.specialized.content_enterprise_orchestrator": {
      "metrics": {
        "total_symbols": 61,
        "used_symbols": 0,
        "unused_symbols": 61,
        "import_count": 43,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.15034965034965034
      },
      "symbols": [
        {
          "name": "ServiceStatus",
          "kind": "class",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ScalingAction",
          "kind": "class",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Priority",
          "kind": "class",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ServiceMetrics",
          "kind": "dataclass",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ServiceHealth",
          "kind": "dataclass",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ScalingDecision",
          "kind": "dataclass",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestrationTask",
          "kind": "dataclass",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ServiceRegistry",
          "kind": "class",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LoadBalancer",
          "kind": "class",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AutoScaler",
          "kind": "class",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CircuitBreaker",
          "kind": "class",
          "line": 410,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskQueue",
          "kind": "class",
          "line": 458,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ContentEnterpriseOrchestrator",
          "kind": "class",
          "line": 547,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "service_name",
          "kind": "constant",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpu_usage",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_usage",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "request_rate",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_rate",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_time",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uptime",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "throughput",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_check",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_message",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies_healthy",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action",
          "kind": "constant",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_instances",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_instances",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reason",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_id",
          "kind": "constant",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_type",
          "kind": "constant",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameters",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "completed_at",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 564,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "register_service",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "discover_service",
          "kind": "function",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "deregister_service",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_endpoint",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "mark_endpoint_unhealthy",
          "kind": "function",
          "line": 313,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "mark_endpoint_healthy",
          "kind": "function",
          "line": 317,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_scaling_need",
          "kind": "function",
          "line": 334,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "execute_scaling",
          "kind": "function",
          "line": 390,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "call",
          "kind": "function",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_should_attempt_reset",
          "kind": "function",
          "line": 440,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_on_success",
          "kind": "function",
          "line": 444,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_on_failure",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "enqueue_task",
          "kind": "function",
          "line": 487,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_next_task",
          "kind": "function",
          "line": 507,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "complete_task",
          "kind": "function",
          "line": 523,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_priority_value",
          "kind": "function",
          "line": 535,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 595,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 637,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_enterprise_modules",
          "kind": "function",
          "line": 652,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "setup_prometheus_metrics",
          "kind": "function",
          "line": 703,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_orchestration_status",
          "kind": "function",
          "line": 982,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator": {
      "metrics": {
        "total_symbols": 42,
        "used_symbols": 0,
        "unused_symbols": 42,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "EnhancementState",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancementMetrics",
          "kind": "dataclass",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIEnhancementConfig",
          "kind": "dataclass",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedAGIEnhancementOrchestrator",
          "kind": "class",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "cristae_efficiency",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "atp_production_rate",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "membrane_potential",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_rate_adaptation",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_convergence",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_feedback_quality",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_quantum_coupling",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optimization_efficiency",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_enhancement",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_stability",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "integration_quality",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_crista_optimization",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_cristae_density",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fusion_threshold",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fission_threshold",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_meta_learning",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_rate_bounds",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_nodes",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_feedback_depth",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_quantum_bio",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence_threshold",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_coupling_strength",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_annealing_steps",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enhancement_cycles",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "convergence_threshold",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stability_window",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics_log_interval",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_register_modules",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_crista_meta_pathway",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_meta_quantum_pathway",
          "kind": "function",
          "line": 347,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_quantum_crista_pathway",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_unified_feedback_pathway",
          "kind": "function",
          "line": 391,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_unified_optimizations",
          "kind": "function",
          "line": 647,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_check_convergence",
          "kind": "function",
          "line": 710,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_enhancement_report",
          "kind": "function",
          "line": 741,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.migrated.ethics_orchestrator": {
      "metrics": {
        "total_symbols": 36,
        "used_symbols": 0,
        "unused_symbols": 36,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "EthicsMode",
          "kind": "class",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedEthicsOrchestratorConfig",
          "kind": "dataclass",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsAuditEntry",
          "kind": "dataclass",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedEthicsOrchestrator",
          "kind": "class",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_ethics_orchestrator",
          "kind": "constant",
          "line": 640,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_ethics_orchestrator",
          "kind": "function",
          "line": 643,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "ethical_checkpoint",
          "kind": "function",
          "line": 657,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "mode",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_human_escalation",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_meg_evaluation",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_drift_detection",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_audit_trail",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_threshold",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "auto_escalation_threshold",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_evaluation_time_seconds",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cultural_context",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_level",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_id",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluations",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "final_verdict",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "escalated_to_human",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "human_override",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_flags",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "components_used",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_register_modules",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_synthesize_evaluations",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_should_escalate_to_human",
          "kind": "function",
          "line": 543,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "get_ethics_status",
          "kind": "function",
          "line": 579,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_audit_trail",
          "kind": "function",
          "line": 608,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "configure",
          "kind": "function",
          "line": 628,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 659,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.migrated.simple_test": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "test_base_patterns",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "test_memory_orchestrator_simple",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "TestConfig",
          "kind": "dataclass",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "TestOrchestrator",
          "kind": "class",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_param",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SimpleTestOrchestrator",
          "kind": "class",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.lukhas_expression": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "load_latest_flashback",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "synthesize_expression",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "save_expression",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.examples.endocrine_module_example": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "EndocrineAwareModule",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "set_endocrine_integration",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_modulatable_parameters",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.migrated.brain_orchestrator": {
      "metrics": {
        "total_symbols": 38,
        "used_symbols": 0,
        "unused_symbols": 38,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "ResourcePriority",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SystemMode",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProcessingStage",
          "kind": "class",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BrainOrchestratorConfig",
          "kind": "dataclass",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BrainOrchestrator",
          "kind": "class",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "mode",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_allocation_strategy",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_enabled",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_optimization_cycles",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_convergence_threshold",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_learning_rate",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meta_learning_enabled",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_nodes",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adaptation_rate",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_consolidation_interval",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_enabled",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence_time",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decoherence_compensation",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_entanglement_pairs",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_annealing_steps",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_cycles",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "convergence_threshold",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stability_window",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics_log_interval",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_register_modules",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_setup_integration_pathways",
          "kind": "function",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_crista_meta_pathway",
          "kind": "function",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_meta_quantum_pathway",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_quantum_crista_pathway",
          "kind": "function",
          "line": 497,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_system_feedback_pathway",
          "kind": "function",
          "line": 512,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compile_results",
          "kind": "function",
          "line": 565,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_system_optimizations",
          "kind": "function",
          "line": 656,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_brain_health",
          "kind": "function",
          "line": 725,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 740,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_orchestration_status",
          "kind": "function",
          "line": 762,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "broadcast_signal",
          "kind": "function",
          "line": 779,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "auto_plugin_register",
          "kind": "function",
          "line": 785,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.migrated.memory_integration_orchestrator": {
      "metrics": {
        "total_symbols": 34,
        "used_symbols": 0,
        "unused_symbols": 34,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04195804195804196
      },
      "symbols": [
        {
          "name": "MemoryIntegrationOrchestratorConfig",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryIntegrationOrchestrator",
          "kind": "class",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "config_directory",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_deduplication",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "semantic_depth_default",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mycelium_network_depth",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compression_threshold_days",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "vector_dimension",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "load_specifications",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "create_matada_node",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "enhanced_fold_in",
          "kind": "function",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "enhanced_fold_out",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "demonstrate_enterprise_features",
          "kind": "function",
          "line": 325,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_universal_prefix",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_encode_to_binary",
          "kind": "function",
          "line": 361,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_embeddings",
          "kind": "function",
          "line": 367,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_emotion_vector",
          "kind": "function",
          "line": 372,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_tags",
          "kind": "function",
          "line": 377,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_deduplication_hash",
          "kind": "function",
          "line": 383,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_existing_content",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_enhance_tags_with_mycelium",
          "kind": "function",
          "line": 393,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_map_causal_relationships",
          "kind": "function",
          "line": 401,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_store_with_lukhas_integration",
          "kind": "function",
          "line": 409,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_temporal_evolution",
          "kind": "function",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_activate_mycelium_network",
          "kind": "function",
          "line": 418,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_traverse_causal_graph",
          "kind": "function",
          "line": 425,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_weight_relevance",
          "kind": "function",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_filter_by_tier",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assemble_narrative",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_vector_similarity_search",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_constitutional_alignment",
          "kind": "function",
          "line": 456,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_world_model",
          "kind": "function",
          "line": 461,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compress_old_memories",
          "kind": "function",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.pr_security_review_github_actions": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "parse_args",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.canadian_awareness_engine": {
      "metrics": {
        "total_symbols": 72,
        "used_symbols": 0,
        "unused_symbols": 72,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "PIPEDALegalBasis",
          "kind": "class",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CPPAConsumerRights",
          "kind": "class",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIDAGoverance",
          "kind": "class",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProvincialJurisdiction",
          "kind": "class",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataLocalization",
          "kind": "class",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CanadianComplianceConfig",
          "kind": "dataclass",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CanadianInput",
          "kind": "class",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CanadianOutput",
          "kind": "class",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "canadian_audit_log",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "CanadianPrivacyModule",
          "kind": "class",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CanadianAIGovernanceModule",
          "kind": "class",
          "line": 382,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CanadianAwarenessEngine",
          "kind": "class",
          "line": 489,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "certify_canadian_compliance",
          "kind": "function",
          "line": 558,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "pipeda_enabled",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_required",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose_limitation",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_limits",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cppa_enabled",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consumer_rights_enabled",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "automated_decision_opt_out",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_portability_enabled",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "aida_enabled",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_impact_assessment",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_bias_monitoring",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_transparency",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "province",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_data_protection",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quebec_law25_compliance",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_localization",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "us_transfer_restrictions",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "indigenous_data_protocols",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "first_nations_consultation",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "french_language_support",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "english_language_support",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collection_purpose",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_obtained",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_type",
          "kind": "type_alias",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_health_data",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_ai_system",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_impact_level",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "involves_indigenous_data",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "indigenous_community_consent",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "preferred_language",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pipeda_compliance_score",
          "kind": "constant",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_validity",
          "kind": "constant",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose_limitation_met",
          "kind": "constant",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization_applied",
          "kind": "constant",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consumer_rights_available",
          "kind": "constant",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "automated_decision_involved",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_mechanism_provided",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_impact_assessment_required",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_bias_risk_level",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_transparency_provided",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "provincial_compliance_status",
          "kind": "constant",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_data_protection_applied",
          "kind": "constant",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_transfer_assessment",
          "kind": "constant",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "indigenous_protocols_followed",
          "kind": "constant",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "french_documentation_available",
          "kind": "constant",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "english_documentation_available",
          "kind": "constant",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 391,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_evaluate_jurisdictional_compliance",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "process",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_assess_pipeda_compliance",
          "kind": "function",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_assess_consumer_rights",
          "kind": "function",
          "line": 339,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_provincial_compliance",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_assess_cross_border_transfers",
          "kind": "function",
          "line": 372,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_requires_impact_assessment",
          "kind": "function",
          "line": 456,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_bias_risk",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_transparency",
          "kind": "function",
          "line": 475,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 515,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.symbol_validator": {
      "metrics": {
        "total_symbols": 70,
        "used_symbols": 0,
        "unused_symbols": 70,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05244755244755245
      },
      "symbols": [
        {
          "name": "ComplianceLevel",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Jurisdiction",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceViolationType",
          "kind": "class",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceViolation",
          "kind": "dataclass",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ModuleComplianceReport",
          "kind": "dataclass",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "WorkspaceComplianceReport",
          "kind": "dataclass",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasComplianceChecker",
          "kind": "class",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 926,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "violation_type",
          "kind": "type_alias",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "file_path",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "line_number",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "regulation",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "remediation",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module_name",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_level",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdictional_scores",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violations",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliant_features",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "missing_features",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_score",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_scanned",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "workspace_path",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "scan_timestamp",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_compliance_level",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_modules",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliant_modules",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "non_compliant_modules",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "critical_violations",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "high_violations",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "medium_violations",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "low_violations",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction_scores",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "module_reports",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "executive_summary",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_compliance_patterns",
          "kind": "function",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "scan_workspace",
          "kind": "function",
          "line": 276,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_find_files_to_scan",
          "kind": "function",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_should_exclude_file",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_scan_files_parallel",
          "kind": "function",
          "line": 336,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_scan_files_sequential",
          "kind": "function",
          "line": 357,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_scan_single_file",
          "kind": "function",
          "line": 371,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_content_for_violations",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_has_gdpr_compliance",
          "kind": "function",
          "line": 515,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_has_ccpa_compliance",
          "kind": "function",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_processes_personal_data",
          "kind": "function",
          "line": 532,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_has_consent_management",
          "kind": "function",
          "line": 541,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_has_encryption",
          "kind": "function",
          "line": 549,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_has_audit_logging",
          "kind": "function",
          "line": 557,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_is_ai_module",
          "kind": "function",
          "line": 565,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_has_ai_transparency",
          "kind": "function",
          "line": 574,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_jurisdictional_scores",
          "kind": "function",
          "line": 582,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_determine_compliance_level",
          "kind": "function",
          "line": 607,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_risk_score",
          "kind": "function",
          "line": 623,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 639,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_features",
          "kind": "function",
          "line": 655,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_known_module_scores",
          "kind": "function",
          "line": 677,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_workspace_report",
          "kind": "function",
          "line": 686,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_average_jurisdiction_score",
          "kind": "function",
          "line": 738,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_determine_overall_workspace_compliance",
          "kind": "function",
          "line": 749,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_workspace_recommendations",
          "kind": "function",
          "line": 765,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_executive_summary",
          "kind": "function",
          "line": 780,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "save_report",
          "kind": "function",
          "line": 812,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "print_summary",
          "kind": "function",
          "line": 868,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_is_critical_module",
          "kind": "function",
          "line": 895,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_has_obvious_security_issues",
          "kind": "function",
          "line": 917,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.quantum_annealed_consensus": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "QuantumAnnealedEthicalConsensus",
          "kind": "class",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_ethical_embeddings",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "find_ethical_consensus",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_prepare_constraint_penalties",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_perform_quantum_annealing",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_propose_quantum_like_state",
          "kind": "function",
          "line": 239,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_system_energy",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_calculate_solution_coherence",
          "kind": "function",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_alignment_with_principles",
          "kind": "function",
          "line": 346,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_consensus_history",
          "kind": "function",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "export_consensus_data",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.controller": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "AdvancedAGIController",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_system_metrics",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "find_similar_memories",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_memory_patterns",
          "kind": "function",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_causal_models",
          "kind": "function",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calibrate_prediction_models",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_meta_cognitive_adaptations",
          "kind": "function",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.brain_integration": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 17,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05944055944055944
      },
      "symbols": [
        {
          "name": "EmotionVector",
          "kind": "class",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalOscillator",
          "kind": "class",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryEmotionalIntegrator",
          "kind": "class",
          "line": 308,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryVoiceIntegrator",
          "kind": "class",
          "line": 731,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasBrainIntegration",
          "kind": "class",
          "line": 838,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 926,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "calculate_distance",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "closest_emotion",
          "kind": "function",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_vector",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "update_emotional_state",
          "kind": "function",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "get_current_state",
          "kind": "function",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_voice_modulation_params",
          "kind": "function",
          "line": 247,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "store_memory_with_emotion",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 17,
          "has_docstring": true
        },
        {
          "name": "retrieve_with_emotional_context",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 19,
          "has_docstring": true
        },
        {
          "name": "find_emotionally_similar_memories",
          "kind": "function",
          "line": 544,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "dream_consolidate_memories",
          "kind": "function",
          "line": 625,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": true
        },
        {
          "name": "speak_with_emotional_context",
          "kind": "function",
          "line": 753,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "process_message",
          "kind": "function",
          "line": 996,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "start_consolidation_thread",
          "kind": "function",
          "line": 1103,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "stop_consolidation_thread",
          "kind": "function",
          "line": 1146,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "store_memory",
          "kind": "function",
          "line": 1166,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "retrieve_memory",
          "kind": "function",
          "line": 1170,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "speak",
          "kind": "function",
          "line": 1174,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "AccessTier",
          "kind": "class",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "consolidation_loop",
          "kind": "function",
          "line": 1119,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.multi_brain_orchestrator": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 0,
        "unused_symbols": 21,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "SpecializedBrainCore",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CreativeProcessingBrain",
          "kind": "class",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryProcessingBrain",
          "kind": "class",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LearningProcessingBrain",
          "kind": "class",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MultiBrainOrchestrator",
          "kind": "class",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_brain_orchestrator",
          "kind": "function",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "sync_with_orchestrator",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fallback_creative_processing",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_patterns",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_creative_insights",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_fallback_memory_processing",
          "kind": "function",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_associative_patterns",
          "kind": "function",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_consolidation_status",
          "kind": "function",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_learning_patterns",
          "kind": "function",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_adaptation_recommendations",
          "kind": "function",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_extract_cognitive_insights",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_synchronize_brains",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_synthesize_brain_outputs",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "get_orchestrator_status",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.meta_cognitive_orchestrator": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "MetaCognitiveOrchestrator",
          "kind": "class",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_weights",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_update_weights",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_generate_ethical_alternative",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.us_institutional_awareness_engine": {
      "metrics": {
        "total_symbols": 106,
        "used_symbols": 0,
        "unused_symbols": 106,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "USLegalBasis",
          "kind": "class",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CCPACategory",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HIPAADataType",
          "kind": "class",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SOXClassification",
          "kind": "class",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FedRAMPLevel",
          "kind": "class",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USComplianceConfig",
          "kind": "dataclass",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USConsentData",
          "kind": "class",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USProcessingRecord",
          "kind": "class",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USInstitutionalInput",
          "kind": "class",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USInstitutionalOutput",
          "kind": "class",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USEnvironmentalReasoner",
          "kind": "class",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USInstitutionalEnvironmentalModule",
          "kind": "class",
          "line": 325,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "USInstitutionalAwarenessEngine",
          "kind": "class",
          "line": 375,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "state_laws_enabled",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "applicable_states",
          "kind": "constant",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ccpa_enabled",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpra_enabled",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_rights",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "do_not_sell",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hipaa_enabled",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "covered_entity",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "business_associate",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sox_enabled",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "public_company",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fedramp_enabled",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fedramp_level",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_fips_140_2",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_controls_nist",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "incident_response_plan",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ccpa_retention_months",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hipaa_retention_years",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sox_retention_years",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_id",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consumer_id",
          "kind": "constant",
          "line": 195,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_sale",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_sharing",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_targeted_advertising",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "limit_sensitive_data",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purposes",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "legal_basis",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_timestamp",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ccpa_categories",
          "kind": "constant",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "business_purposes",
          "kind": "constant",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "third_party_sharing",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hipaa_authorization",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hipaa_research_exception",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "minimum_necessary",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_id",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "controller",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hipaa_data_type",
          "kind": "type_alias",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "covered_entity_processing",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sox_classification",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "financial_controls_applied",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "government_data",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_period_months",
          "kind": "constant",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "nist_controls_applied",
          "kind": "constant",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_record",
          "kind": "constant",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "primary_state",
          "kind": "constant",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_classification",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fedramp_controlled",
          "kind": "constant",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_data",
          "kind": "constant",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ccpa_compliance_score",
          "kind": "constant",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hipaa_compliance_score",
          "kind": "constant",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sox_compliance_score",
          "kind": "constant",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fedramp_compliance_score",
          "kind": "constant",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consumer_rights_available",
          "kind": "constant",
          "line": 226,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_lawfulness",
          "kind": "constant",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_mechanisms",
          "kind": "constant",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization_applied",
          "kind": "constant",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose_limitation_enforced",
          "kind": "constant",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_policy_compliant",
          "kind": "constant",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "nist_controls_implemented",
          "kind": "constant",
          "line": 236,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_standards_met",
          "kind": "constant",
          "line": 237,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_controls_verified",
          "kind": "constant",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_trail",
          "kind": "constant",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transparency_report",
          "kind": "constant",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "us_institutional_grade",
          "kind": "constant",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_attestation",
          "kind": "constant",
          "line": 247,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "explain_decision",
          "kind": "function",
          "line": 273,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "assess_bias",
          "kind": "function",
          "line": 282,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_compliance",
          "kind": "function",
          "line": 292,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_confidence",
          "kind": "function",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_ccpa_minimization",
          "kind": "function",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 378,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_evaluate_jurisdictional_compliance",
          "kind": "function",
          "line": 335,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "generate_us_recommendations",
          "kind": "function",
          "line": 356,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_setup_us_logging",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_modules",
          "kind": "function",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_us_registry",
          "kind": "function",
          "line": 404,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 415,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "exercise_consumer_rights",
          "kind": "function",
          "line": 432,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_convert_to_global_input",
          "kind": "function",
          "line": 445,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_convert_to_us_output",
          "kind": "function",
          "line": 478,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_record_us_processing_activity",
          "kind": "function",
          "line": 506,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_ccpa_access_request",
          "kind": "function",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_ccpa_delete_request",
          "kind": "function",
          "line": 540,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_ccpa_opt_out_request",
          "kind": "function",
          "line": 567,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_non_discrimination_request",
          "kind": "function",
          "line": 585,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_us_compliance_report",
          "kind": "function",
          "line": 595,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.monitor": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "monitor_agi_system",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.lukhas_core": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 0,
        "unused_symbols": 20,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "AGICapabilityLevel",
          "kind": "class",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIResponse",
          "kind": "dataclass",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIBot",
          "kind": "class",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capability_level",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning_path",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tier_info",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_state",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_initialize_advanced_components",
          "kind": "function",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_basic_components",
          "kind": "function",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 326,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_active_components",
          "kind": "function",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_update_conversation_history",
          "kind": "function",
          "line": 361,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_learning_memory",
          "kind": "function",
          "line": 375,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "LukhasTier",
          "kind": "class",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ConsciousnessState",
          "kind": "class",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.das_awareness_engine": {
      "metrics": {
        "total_symbols": 71,
        "used_symbols": 0,
        "unused_symbols": 71,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "ComplianceStatus",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessType",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AlignmentMetric",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DastConfig",
          "kind": "dataclass",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "now_iso",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "structured_log",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "AwarenessInput",
          "kind": "class",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessOutput",
          "kind": "class",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DastReasoner",
          "kind": "protocol",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessModule",
          "kind": "class",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnvironmentalAwarenessInput",
          "kind": "class",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnvironmentalReasoner",
          "kind": "class",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnvironmentalAwarenessModule",
          "kind": "class",
          "line": 362,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveAwarenessInput",
          "kind": "class",
          "line": 430,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveReasoner",
          "kind": "class",
          "line": 439,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveAwarenessModule",
          "kind": "class",
          "line": 500,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DastAwarenessEngine",
          "kind": "class",
          "line": 547,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "score",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_factors",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_level",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_pass",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_warning",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_quantum_processing",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_real_time_monitoring",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sustainability_weight",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_data",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sustainability_score",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_confidence",
          "kind": "function",
          "line": 479,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 550,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__call__",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "evaluate_alignment",
          "kind": "function",
          "line": 506,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 503,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_recommendations",
          "kind": "function",
          "line": 523,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "calculate_sustainability_impact",
          "kind": "function",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_compliance_status",
          "kind": "function",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_risk_factors",
          "kind": "function",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "temperature",
          "kind": "constant",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "humidity",
          "kind": "constant",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ambient_noise",
          "kind": "constant",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "light_level",
          "kind": "constant",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "air_quality_index",
          "kind": "constant",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "location",
          "kind": "constant",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_consumption",
          "kind": "constant",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_is_sustainable_location",
          "kind": "function",
          "line": 301,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_detect_anomalies",
          "kind": "function",
          "line": 308,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_sustainability_rating",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_estimate_carbon_impact",
          "kind": "function",
          "line": 334,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_identify_optimizations",
          "kind": "function",
          "line": 347,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "attention_level",
          "kind": "constant",
          "line": 432,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cognitive_load",
          "kind": "constant",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_complexity",
          "kind": "constant",
          "line": 434,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "information_overload",
          "kind": "constant",
          "line": 435,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_indicators",
          "kind": "constant",
          "line": 436,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_urgency",
          "kind": "constant",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_calculate_optimal_timing",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_assess_cognitive_state",
          "kind": "function",
          "line": 491,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 556,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_modules",
          "kind": "function",
          "line": 563,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 577,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 603,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "normalize",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.collapse_bridge": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 1,
        "unused_symbols": 1,
        "import_count": 5,
        "export_count": 1,
        "connectivity_score": 0.5,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "CollapseBridge",
          "kind": "class",
          "line": 26,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_collapse_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.dynamic_adaptive_dashboard": {
      "metrics": {
        "total_symbols": 13,
        "used_symbols": 0,
        "unused_symbols": 13,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "UserProfile",
          "kind": "dataclass",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdaptiveDashboard",
          "kind": "class",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tier",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "preferences",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_fingerprint",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "device_capabilities",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_load_widget_registry",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_available_widgets",
          "kind": "function",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_optimal_layout",
          "kind": "function",
          "line": 250,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_determine_theme",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.validate_pr_security_review": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "validate_pr_security_review",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.context_analyzer": {
      "metrics": {
        "total_symbols": 17,
        "used_symbols": 0,
        "unused_symbols": 17,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "ContextAnalyzer",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "analyze",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_text",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_analyze_time",
          "kind": "function",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_analyze_location",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_device",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_memory",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_determine_urgency",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_determine_formality",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_compliance",
          "kind": "function",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_confidence",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_nlp_engine",
          "kind": "function",
          "line": 324,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_emotion_detector",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_time_analyzer",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_location_analyzer",
          "kind": "function",
          "line": 336,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_device_analyzer",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.adaptive_image_generator": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "AdaptiveImageGenerator",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_update_cache",
          "kind": "function",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_request_id",
          "kind": "function",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.consciousness": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 0,
        "unused_symbols": 18,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "ConsciousnessState",
          "kind": "dataclass",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsciousnessCore",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "level",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "activated_at",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evolution_count",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active_processes",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_size",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "awaken",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "evolve_consciousness",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_evolve_to",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_process",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "unregister_process",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_consciousness_context",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_state_info",
          "kind": "function",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_can_evolve",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_evolution_history",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.eu_ai_transparency": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 0,
        "unused_symbols": 21,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "DecisionType",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InfluenceLevel",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DecisionTrace",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TransparencyOrchestrator",
          "kind": "class",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_transparent_decision",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "integrate_transparency_with_cognitive_core",
          "kind": "function",
          "line": 403,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_reasoning_step",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "add_data_influence",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_alternative_considered",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_confidence_factor",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_safety_check",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_bias_consideration",
          "kind": "function",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "finalize_decision",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_log_to_transparency_system",
          "kind": "function",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_user_explanation",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "start_decision_trace",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_trace",
          "kind": "function",
          "line": 226,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "complete_trace",
          "kind": "function",
          "line": 230,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_transparency_summary",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.eu_awareness_engine": {
      "metrics": {
        "total_symbols": 115,
        "used_symbols": 0,
        "unused_symbols": 115,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04195804195804196
      },
      "symbols": [
        {
          "name": "GDPRLegalBasis",
          "kind": "class",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataCategory",
          "kind": "class",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIRiskLevel",
          "kind": "class",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceStatus",
          "kind": "class",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataSubjectRights",
          "kind": "class",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUConfig",
          "kind": "dataclass",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "eu_timestamp",
          "kind": "function",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "structured_audit_log",
          "kind": "function",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ConsentData",
          "kind": "class",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataProcessingRecord",
          "kind": "class",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUAwarenessInput",
          "kind": "class",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUAwarenessOutput",
          "kind": "class",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUReasoner",
          "kind": "protocol",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUAwarenessModule",
          "kind": "class",
          "line": 267,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUEnvironmentalReasoner",
          "kind": "class",
          "line": 532,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUEnvironmentalAwarenessModule",
          "kind": "class",
          "line": 574,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EUAwarenessEngine",
          "kind": "class",
          "line": 614,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "gdpr_enabled",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_retention_days",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anonymization_enabled",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pseudonymization_enabled",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_required",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_act_compliance",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_risk_level",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "algorithmic_transparency",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bias_monitoring",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_at_rest",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_in_transit",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose_limitation",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adequacy_decision_countries",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "schrems_ii_compliant",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_logging",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dpia_required",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_retention_days",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dpo_contact",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_register",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "breach_notification",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_id",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_id",
          "kind": "constant",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purposes",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "legal_basis",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_given",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_timestamp",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "withdrawal_possible",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_version",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validate_consent_basis",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "processing_id",
          "kind": "constant",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "controller",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processor",
          "kind": "constant",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_categories",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recipients",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "third_country_transfers",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_period",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_measures",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent",
          "kind": "constant",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_record",
          "kind": "constant",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization_applied",
          "kind": "constant",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pseudonymization_applied",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "eu_member_state",
          "kind": "constant",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction",
          "kind": "constant",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_transfer",
          "kind": "constant",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_data",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_score",
          "kind": "constant",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_status",
          "kind": "constant",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_explanation",
          "kind": "constant",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_lawfulness",
          "kind": "constant",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_accuracy_score",
          "kind": "constant",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_compliance",
          "kind": "constant",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_risk_assessment",
          "kind": "constant",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bias_detection_results",
          "kind": "constant",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "algorithmic_decision_logic",
          "kind": "constant",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "erasure_possible",
          "kind": "constant",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "portability_format",
          "kind": "constant",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "automated_decision_making",
          "kind": "constant",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 237,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_trail",
          "kind": "constant",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_lineage",
          "kind": "constant",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quality_metrics",
          "kind": "constant",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 535,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "explain_decision",
          "kind": "function",
          "line": 551,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "detect_bias",
          "kind": "function",
          "line": 560,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_confidence",
          "kind": "function",
          "line": 570,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 617,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__call__",
          "kind": "function",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "evaluate_eu_compliance",
          "kind": "function",
          "line": 580,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 577,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_eu_recommendations",
          "kind": "function",
          "line": 598,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_setup_gdpr_controls",
          "kind": "function",
          "line": 371,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_setup_ai_act_compliance",
          "kind": "function",
          "line": 383,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_validate_gdpr_compliance",
          "kind": "function",
          "line": 394,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_determine_compliance_status",
          "kind": "function",
          "line": 420,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_extract_reasoning_steps",
          "kind": "function",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_data_accuracy",
          "kind": "function",
          "line": 441,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_retention_compliance",
          "kind": "function",
          "line": 446,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_risk_mitigations",
          "kind": "function",
          "line": 451,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_build_audit_trail",
          "kind": "function",
          "line": 470,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_trace_data_lineage",
          "kind": "function",
          "line": 493,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_quality_metrics",
          "kind": "function",
          "line": 502,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_data_minimization",
          "kind": "function",
          "line": 511,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_processing_error",
          "kind": "function",
          "line": 516,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_eu_logging",
          "kind": "function",
          "line": 624,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_modules",
          "kind": "function",
          "line": 635,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_gdpr_registry",
          "kind": "function",
          "line": 643,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 654,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "exercise_data_subject_rights",
          "kind": "function",
          "line": 665,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_record_processing_activity",
          "kind": "function",
          "line": 680,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_access_request",
          "kind": "function",
          "line": 694,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_erasure_request",
          "kind": "function",
          "line": 716,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_handle_rectification_request",
          "kind": "function",
          "line": 745,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_portability_request",
          "kind": "function",
          "line": 753,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_compliance_report",
          "kind": "function",
          "line": 775,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.pr_security_review_starter": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "run_security_review",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.llm_engine": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "LucasLLM",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "batch_generate",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.autonomous_github_manager": {
      "metrics": {
        "total_symbols": 41,
        "used_symbols": 0,
        "unused_symbols": 41,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "NotificationPriority",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GitHubNotification",
          "kind": "dataclass",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BatchFixResult",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdvancedAutonomousGitHubManager",
          "kind": "class",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "title",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "repository",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "type",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "age_hours",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fixable",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_cost",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_confidence",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "url",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_processed",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "successful_fixes",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "prs_created",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cost_used",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "time_taken",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "errors",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success_rate",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "fetch_all_notifications",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "parse_notification",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "analyze_notification_priority",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "estimate_fix_cost",
          "kind": "function",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "prioritize_notifications",
          "kind": "function",
          "line": 268,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "batch_process_fixes",
          "kind": "function",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "process_notification_batch",
          "kind": "function",
          "line": 331,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "attempt_autonomous_fix",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "determine_fix_strategy",
          "kind": "function",
          "line": 420,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "execute_fix_strategy",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "create_workflow_fix_pr",
          "kind": "function",
          "line": 462,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_security_fix_pr",
          "kind": "function",
          "line": 517,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_dependency_update_pr",
          "kind": "function",
          "line": 522,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_general_fix_pr",
          "kind": "function",
          "line": 527,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_comprehensive_report",
          "kind": "function",
          "line": 532,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "save_results",
          "kind": "function",
          "line": 590,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "priority_score",
          "kind": "function",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.uk_awareness_engine": {
      "metrics": {
        "total_symbols": 87,
        "used_symbols": 0,
        "unused_symbols": 87,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "UKGDPRLawfulBasis",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataSubjectRights",
          "kind": "class",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UKDataCategory",
          "kind": "class",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UKTransferMechanism",
          "kind": "class",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ICOEnforcementAction",
          "kind": "class",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ChildrenProtectionLevel",
          "kind": "class",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UKComplianceConfig",
          "kind": "dataclass",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UKInput",
          "kind": "class",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UKOutput",
          "kind": "class",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "uk_audit_log",
          "kind": "function",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "UKPrivacyModule",
          "kind": "class",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UKAwarenessEngine",
          "kind": "class",
          "line": 530,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "certify_uk_compliance",
          "kind": "function",
          "line": 587,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "uk_gdpr_enabled",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dpa2018_compliance",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_retention_policy",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose_limitation",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ico_accountability_measures",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "legitimate_interests_assessment",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_protection_impact_assessment",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "records_of_processing",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "childrens_code_enabled",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "age_verification_required",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "child_data_minimization",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "eu_adequacy_maintained",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "international_transfer_controls",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transfer_impact_assessments",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "nhs_compliance",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fca_compliance",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ofcom_compliance",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_ethics_enabled",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "automated_decision_safeguards",
          "kind": "constant",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "algorithmic_transparency",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brexit_transition_complete",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retained_eu_law_compliant",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lawful_basis",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "special_category_basis",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_age",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_child",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "vulnerable_individual",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uk_resident",
          "kind": "constant",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "in_uk_territory",
          "kind": "constant",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "public_sector_processing",
          "kind": "constant",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_export_required",
          "kind": "constant",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "destination_country",
          "kind": "constant",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transfer_mechanism",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_healthcare_data",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_financial_data",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_telecommunications",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "automated_decision_involved",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "profiling_involved",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "solely_automated",
          "kind": "constant",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uk_gdpr_compliance_score",
          "kind": "constant",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lawful_basis_met",
          "kind": "constant",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "special_category_protection",
          "kind": "constant",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "available_rights",
          "kind": "constant",
          "line": 195,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sar_response_deadline",
          "kind": "constant",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "childrens_code_compliant",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "age_appropriate_measures",
          "kind": "constant",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ico_compliance_score",
          "kind": "constant",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "accountability_measures",
          "kind": "constant",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transfer_compliant",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transfer_safeguards",
          "kind": "constant",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adequacy_status",
          "kind": "constant",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sector_compliance_status",
          "kind": "constant",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "nhs_standards_met",
          "kind": "constant",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fca_requirements_met",
          "kind": "constant",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_transparency_provided",
          "kind": "constant",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brexit_compliance_maintained",
          "kind": "constant",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ico_enforcement_risk",
          "kind": "constant",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 542,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_assess_uk_gdpr_compliance",
          "kind": "function",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_assess_ico_accountability",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_data_subject_rights",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_transfer_compliance",
          "kind": "function",
          "line": 397,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_assess_childrens_code",
          "kind": "function",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_sector_compliance",
          "kind": "function",
          "line": 448,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_validate_lawful_basis",
          "kind": "function",
          "line": 461,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_determine_data_category",
          "kind": "function",
          "line": 468,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_sar_deadline",
          "kind": "function",
          "line": 481,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_accountability_measures",
          "kind": "function",
          "line": 486,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_automated_safeguards",
          "kind": "function",
          "line": 498,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_enforcement_risk",
          "kind": "function",
          "line": 510,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_is_portable_data",
          "kind": "function",
          "line": 521,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 555,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.research_awareness_engine": {
      "metrics": {
        "total_symbols": 129,
        "used_symbols": 0,
        "unused_symbols": 129,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05244755244755245
      },
      "symbols": [
        {
          "name": "ResearchType",
          "kind": "class",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ExperimentalTechnique",
          "kind": "class",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResearchEthicsLevel",
          "kind": "class",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataSharingLevel",
          "kind": "class",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResearchPhase",
          "kind": "class",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResearchConfig",
          "kind": "dataclass",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResearchAwarenessInput",
          "kind": "class",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResearchAwarenessOutput",
          "kind": "class",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "research_audit_log",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "QuantumInspiredProcessor",
          "kind": "class",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BioSymbolicReasoner",
          "kind": "class",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SwarmIntelligenceCoordinator",
          "kind": "class",
          "line": 411,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResearchAwarenessReasoner",
          "kind": "class",
          "line": 458,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResearchAwarenessEngine",
          "kind": "class",
          "line": 648,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "certify_research_compliance",
          "kind": "function",
          "line": 854,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "research_type",
          "kind": "type_alias",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "experimental_techniques",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "research_phase",
          "kind": "constant",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_approval_required",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_level",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "irb_approval_number",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "informed_consent_required",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_anonymization",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_pseudonymization",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_sharing_level",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "research_data_retention_years",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rapid_prototyping",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ab_testing_enabled",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "continuous_learning",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adaptive_mechanisms",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "multi_institutional",
          "kind": "constant",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "international_collaboration",
          "kind": "constant",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "open_science_compliance",
          "kind": "constant",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "advanced_analytics",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "real_time_processing",
          "kind": "constant",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hypothesis_testing",
          "kind": "constant",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "statistical_modeling",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_processing",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_symbolic_reasoning",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "swarm_coordination",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "neuromorphic_simulation",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "research_id",
          "kind": "constant",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "experiment_id",
          "kind": "constant",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "participant_id",
          "kind": "constant",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hypothesis",
          "kind": "constant",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "experimental_condition",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "control_group",
          "kind": "constant",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_approval",
          "kind": "constant",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_approval_number",
          "kind": "constant",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "informed_consent_obtained",
          "kind": "constant",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_version",
          "kind": "constant",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "participant_age",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "vulnerable_population",
          "kind": "constant",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "techniques_used",
          "kind": "constant",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_features",
          "kind": "constant",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_symbolic_features",
          "kind": "constant",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_modalities",
          "kind": "constant",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_sensitivity",
          "kind": "constant",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "temporal_data",
          "kind": "constant",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "streaming_data",
          "kind": "constant",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "exploration_factor",
          "kind": "constant",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adaptation_rate",
          "kind": "constant",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "novelty_threshold",
          "kind": "constant",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "multi_site_study",
          "kind": "constant",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_learning",
          "kind": "constant",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_sharing_approved",
          "kind": "constant",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "research_data",
          "kind": "constant",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "experimental_parameters",
          "kind": "constant",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "baseline_metrics",
          "kind": "constant",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 236,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_timestamp",
          "kind": "constant",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "experimental_results",
          "kind": "constant",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "statistical_significance",
          "kind": "constant",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "effect_size",
          "kind": "constant",
          "line": 250,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_intervals",
          "kind": "constant",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "novelty_score",
          "kind": "constant",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "exploration_efficiency",
          "kind": "constant",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_progress",
          "kind": "constant",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adaptation_success",
          "kind": "constant",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "technique_performance",
          "kind": "constant",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_results",
          "kind": "constant",
          "line": 261,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_symbolic_insights",
          "kind": "constant",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "swarm_coordination_metrics",
          "kind": "constant",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "discovered_patterns",
          "kind": "constant",
          "line": 266,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anomalies_detected",
          "kind": "constant",
          "line": 267,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "hypothesis_validation",
          "kind": "constant",
          "line": 268,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "research_recommendations",
          "kind": "constant",
          "line": 269,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "clustering_results",
          "kind": "constant",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "classification_metrics",
          "kind": "constant",
          "line": 273,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "regression_analysis",
          "kind": "constant",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "time_series_analysis",
          "kind": "constant",
          "line": 275,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_learning_performance",
          "kind": "constant",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "multi_site_consistency",
          "kind": "constant",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_sharing_impact",
          "kind": "constant",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reproducibility_score",
          "kind": "constant",
          "line": 283,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reliability_score",
          "kind": "constant",
          "line": 284,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validity_score",
          "kind": "constant",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_compliance_score",
          "kind": "constant",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_protection_applied",
          "kind": "constant",
          "line": 289,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anonymization_successful",
          "kind": "constant",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "publication_ready",
          "kind": "constant",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "peer_review_suggestions",
          "kind": "constant",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "next_experiments",
          "kind": "constant",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "research_gaps_identified",
          "kind": "constant",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collaboration_opportunities",
          "kind": "constant",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 662,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 475,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_detect_patterns",
          "kind": "function",
          "line": 376,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_apply_symbolic_rules",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_emergent_properties",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_swarm",
          "kind": "function",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_convergence",
          "kind": "function",
          "line": 447,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_measure_collective_performance",
          "kind": "function",
          "line": 452,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_core_research_processing",
          "kind": "function",
          "line": 515,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_advanced_analytics",
          "kind": "function",
          "line": 525,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_innovation_metrics",
          "kind": "function",
          "line": 557,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_exploration_efficiency",
          "kind": "function",
          "line": 569,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_research_insights",
          "kind": "function",
          "line": 584,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_update_learning_progress",
          "kind": "function",
          "line": 624,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "conduct_research",
          "kind": "function",
          "line": 681,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_validate_research_ethics",
          "kind": "function",
          "line": 725,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_build_research_output",
          "kind": "function",
          "line": 736,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_publication_readiness",
          "kind": "function",
          "line": 792,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_peer_review_suggestions",
          "kind": "function",
          "line": 802,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_research_tracking",
          "kind": "function",
          "line": 817,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_research_summary",
          "kind": "function",
          "line": 836,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.prime_oscillator": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "PrimeHarmonicOscillator",
          "kind": "class",
          "line": 4,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 5,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_harmonic",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_harmonic_series",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.security_pr_analyzer": {
      "metrics": {
        "total_symbols": 31,
        "used_symbols": 0,
        "unused_symbols": 31,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "SecurityIssue",
          "kind": "dataclass",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PRAnalysis",
          "kind": "dataclass",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SecurityScanner",
          "kind": "class",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PRAnalyzer",
          "kind": "class",
          "line": 434,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 599,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "type",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "file",
          "kind": "constant",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "line",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendation",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "number",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "title",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "author",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_risk",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "code_quality_score",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "issues_found",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "scan_repository",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_scan_secrets",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_scan_dependencies",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 15,
          "has_docstring": true
        },
        {
          "name": "_check_permissions",
          "kind": "function",
          "line": 237,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_get_github_security_alerts",
          "kind": "function",
          "line": 276,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_scan_code_quality",
          "kind": "function",
          "line": 325,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_calculate_security_score",
          "kind": "function",
          "line": 378,
          "used": false,
          "used_by": [],
          "complexity": 18,
          "has_docstring": true
        },
        {
          "name": "analyze_repository_prs",
          "kind": "function",
          "line": 446,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_analyze_single_pr",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_calculate_pr_quality_score",
          "kind": "function",
          "line": 559,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_pr_recommendations",
          "kind": "function",
          "line": 576,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.integration_bridge": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "LUKHASBrainBridge",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.learn_to_learn": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 0,
        "unused_symbols": 18,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "MetaLearningSystem",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "optimize_learning_approach",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "incorporate_feedback",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "generate_learning_report",
          "kind": "function",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_strategies",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_learning_features",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_select_strategy",
          "kind": "function",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_apply_strategy",
          "kind": "function",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_evaluate_performance",
          "kind": "function",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_strategy_performance",
          "kind": "function",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_update_meta_parameters",
          "kind": "function",
          "line": 269,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_adjust_strategy_parameters",
          "kind": "function",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_adaptation_progress",
          "kind": "function",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_sparsity",
          "kind": "function",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_complexity",
          "kind": "function",
          "line": 319,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_strategy_match",
          "kind": "function",
          "line": 324,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_meta_insights",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.safe_subprocess_executor": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "SafeSubprocessExecutor",
          "kind": "class",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "safe_subprocess_run",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "safe_python_execution",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_create_isolated_env",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "safe_run",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "safe_python_run",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "safe_git_run",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.github_vulnerability_manager": {
      "metrics": {
        "total_symbols": 44,
        "used_symbols": 0,
        "unused_symbols": 44,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "VulnerabilitySeverity",
          "kind": "class",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Vulnerability",
          "kind": "dataclass",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Repository",
          "kind": "dataclass",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GitHubVulnerabilityManager",
          "kind": "class",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 802,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "package_name",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "affected_versions",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "patched_versions",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "repository",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "updated_at",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dismissed",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "auto_fixable",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_fix_cost",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "full_name",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "private",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "language",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "vulnerability_count",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "critical_count",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "high_count",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "moderate_count",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "low_count",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_scan",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_should_override_budget",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_make_api_call_with_override",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_user_repositories",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_repository_vulnerabilities",
          "kind": "function",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "scan_all_repositories",
          "kind": "function",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_daily_budget_remaining",
          "kind": "function",
          "line": 352,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "prioritize_vulnerabilities",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "fix_critical_vulnerabilities",
          "kind": "function",
          "line": 398,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "attempt_vulnerability_fix",
          "kind": "function",
          "line": 423,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "create_vulnerability_fix_pr",
          "kind": "function",
          "line": 475,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_create_actual_pr",
          "kind": "function",
          "line": 591,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "determine_vulnerability_fix_strategy",
          "kind": "function",
          "line": 682,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "save_scan_results",
          "kind": "function",
          "line": 699,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_report",
          "kind": "function",
          "line": 709,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "fix_vulnerabilities_batch",
          "kind": "function",
          "line": 756,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "vulnerability_score",
          "kind": "function",
          "line": 365,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.privacy_manager": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 1,
        "unused_symbols": 19,
        "import_count": 11,
        "export_count": 2,
        "connectivity_score": 0.05,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "PrivacyManager",
          "kind": "class",
          "line": 22,
          "used": true,
          "used_by": [
            "lukhas/orchestration/core_modules/controller.py",
            "lukhas/orchestration/main_node.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "set_privacy_setting",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_privacy_setting",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "apply_privacy_mechanisms",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "anonymize_data",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "encrypt_sensitive_fields",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "decrypt_field",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "check_permissions",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "set_user_permissions",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "apply_retention_policy",
          "kind": "function",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "create_gdpr_report",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_privacy_event",
          "kind": "function",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_privacy_logs",
          "kind": "function",
          "line": 316,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_hash_pii_value",
          "kind": "function",
          "line": 324,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_encrypt_value",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_encryption_key",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "anonymize_dict",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        },
        {
          "name": "encrypt_dict",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        },
        {
          "name": "should_retain",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.dream_mutator": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "load_latest_dream",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "mutate_emotional_wave",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "mutate_dream",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "save_mutated_dream",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.main_node": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "AdaptiveAGISystem",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "init_components",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_event_handlers",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_duration",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_memory_usage",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_save_system_state",
          "kind": "function",
          "line": 365,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.safety_guardrails": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "SafetyGuardrails",
          "kind": "class",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_safety",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 19,
          "has_docstring": true
        },
        {
          "name": "_extract_text_content",
          "kind": "function",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_check_harmful_content",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_check_misinformation",
          "kind": "function",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_check_bias",
          "kind": "function",
          "line": 283,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_check_privacy_violations",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_detect_uncertainty",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_check_reasoning_transparency",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_check_confidence",
          "kind": "function",
          "line": 430,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_stats",
          "kind": "function",
          "line": 448,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adjust_config",
          "kind": "function",
          "line": 452,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "reset_stats",
          "kind": "function",
          "line": 469,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.identity_manager": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "IdentityManager",
          "kind": "class",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "process_experience",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "retrieve_memory",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_identity_state",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_identity",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "get_identity_evolution",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_is_identity_relevant",
          "kind": "function",
          "line": 266,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_update_identity_from_experience",
          "kind": "function",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_take_identity_snapshot",
          "kind": "function",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_identity",
          "kind": "function",
          "line": 331,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "save_identity",
          "kind": "function",
          "line": 351,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.lukhas_brain": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "LucasBrain",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "load_traits",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "load_meta_reflections",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "build_gpt_prompt",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "run_gpt",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "save_snapshot",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run",
          "kind": "function",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.collapse_chain_integrity": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 1,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.5,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "CollapseChainIntegrity",
          "kind": "class",
          "line": 21,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_collapse_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.lambda_bot_batch_processor": {
      "metrics": {
        "total_symbols": 29,
        "used_symbols": 0,
        "unused_symbols": 29,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "BatchableIssue",
          "kind": "dataclass",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "IssueType",
          "kind": "class",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BatchProcessor",
          "kind": "class",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "repository",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "issue_type",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "package_name",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_strategy",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_cost",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "add_issue_to_batch",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_batch_similarity",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "process_ready_batches",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_process_single_batch",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_process_repository_batch",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_batch_fix_vulnerabilities",
          "kind": "function",
          "line": 264,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_batch_fix_workflows",
          "kind": "function",
          "line": 336,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_batch_fix_dependencies",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_batch_fix_generic",
          "kind": "function",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_batch_pr",
          "kind": "function",
          "line": 455,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_vulnerability_fix",
          "kind": "function",
          "line": 483,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_workflow_fix",
          "kind": "function",
          "line": 493,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_dependency_fix",
          "kind": "function",
          "line": 502,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_determine_ecosystem",
          "kind": "function",
          "line": 511,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_categorize_workflow_issue",
          "kind": "function",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_batch_statistics",
          "kind": "function",
          "line": 536,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.autonomous_system": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "FullyAutonomousAGI",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "run_autonomous_cycle",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_process_github_notifications_batch",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_fetch_github_notifications",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_notification_to_batchable_issue",
          "kind": "function",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "run_fully_autonomous",
          "kind": "function",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_final_report",
          "kind": "function",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.brain_collapse_manager": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 1,
        "unused_symbols": 7,
        "import_count": 10,
        "export_count": 2,
        "connectivity_score": 0.125,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "BrainCollapseManager",
          "kind": "class",
          "line": 31,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/collapse_bridge.py",
            "lukhas/orchestration/brain/collapse_chain_simulator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CollapseSynchronizer",
          "kind": "class",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "collapse_handler",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "collapse_trace_matrix",
          "kind": "function",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "analysis",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "matrix",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "row",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer": {
      "metrics": {
        "total_symbols": 28,
        "used_symbols": 0,
        "unused_symbols": 28,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "AutonomousFixResult",
          "kind": "dataclass",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bBotAutonomousWorkflowFixer",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 535,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_type",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "repository",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "branch_name",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pr_number",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pr_url",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "commit_hash",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "files_modified",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_message",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cost",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "analyze_notification_patterns",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 18,
          "has_docstring": true
        },
        {
          "name": "autonomous_fix_github_notifications",
          "kind": "function",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "execute_autonomous_fix",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_fix_workflow_failure",
          "kind": "function",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_fix_symbol_validation_issues",
          "kind": "function",
          "line": 375,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fix_critical_path_issues",
          "kind": "function",
          "line": 391,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fix_dependency_issues",
          "kind": "function",
          "line": 408,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fix_pre_commit_issues",
          "kind": "function",
          "line": 425,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fix_generic_ci_issues",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fix_dependency_vulnerability",
          "kind": "function",
          "line": 459,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fix_generic_issue",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_simulated_pr",
          "kind": "function",
          "line": 473,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_workflow_fix_description",
          "kind": "function",
          "line": 493,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "save_autonomous_fix_results",
          "kind": "function",
          "line": 525,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.lukhas_awareness_engine": {
      "metrics": {
        "total_symbols": 105,
        "used_symbols": 0,
        "unused_symbols": 105,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "ComplianceStatus",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessType",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AlignmentMetric",
          "kind": "class",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasConfig",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "now_iso",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "structured_log",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "AwarenessInput",
          "kind": "class",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessOutput",
          "kind": "class",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Reasoner",
          "kind": "protocol",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessModule",
          "kind": "class",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnvironmentalAwarenessInput",
          "kind": "class",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedEnvReasoner",
          "kind": "class",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "is_sustainable_location",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "is_indoor_location",
          "kind": "function",
          "line": 406,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "quantum_anomaly_check",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "EnvironmentalAwarenessModule",
          "kind": "class",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveReasoner",
          "kind": "class",
          "line": 505,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalReasoner",
          "kind": "class",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SocialReasoner",
          "kind": "class",
          "line": 743,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveAwarenessInput",
          "kind": "class",
          "line": 853,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveAwarenessModule",
          "kind": "class",
          "line": 864,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalAwarenessInput",
          "kind": "class",
          "line": 965,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalAwarenessModule",
          "kind": "class",
          "line": 977,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SocialAwarenessInput",
          "kind": "class",
          "line": 1075,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SocialAwarenessModule",
          "kind": "class",
          "line": 1083,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasAwarenessEngine",
          "kind": "class",
          "line": 1097,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "score",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_factors",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_level",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_pass",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_warning",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_critical",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_quantum_processing",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_symbolic_reasoning",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_real_time_monitoring",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sustainability_weight",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "institutional_mode",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_data",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sustainability_score",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_signature",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 746,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_confidence",
          "kind": "function",
          "line": 847,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 1100,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__call__",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "evaluate_alignment",
          "kind": "function",
          "line": 1089,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 1086,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_recommendations",
          "kind": "function",
          "line": 1018,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "calculate_sustainability_impact",
          "kind": "function",
          "line": 1050,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_compliance_status",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_risk_factors",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_quantum_signature",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_persist_to_store",
          "kind": "function",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "temperature",
          "kind": "constant",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "humidity",
          "kind": "constant",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ambient_noise",
          "kind": "constant",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "light_level",
          "kind": "constant",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "location",
          "kind": "constant",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "air_quality_index",
          "kind": "constant",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_consumption",
          "kind": "constant",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "carbon_footprint",
          "kind": "constant",
          "line": 258,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_calculate_sustainability_metrics",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_optimization_opportunities",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_generate_cognitive_recommendations",
          "kind": "function",
          "line": 555,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "process_cognitive_load",
          "kind": "function",
          "line": 575,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "analyze_decision_patterns",
          "kind": "function",
          "line": 597,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_predict_mood_trend",
          "kind": "function",
          "line": 652,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "process_emotional_state",
          "kind": "function",
          "line": 666,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "determine_widget_animation",
          "kind": "function",
          "line": 693,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_social_context",
          "kind": "function",
          "line": 780,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_social_recommendations",
          "kind": "function",
          "line": 825,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "attention_level",
          "kind": "constant",
          "line": 855,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cognitive_load",
          "kind": "constant",
          "line": 856,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_complexity",
          "kind": "constant",
          "line": 857,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "information_overload",
          "kind": "constant",
          "line": 858,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_indicators",
          "kind": "constant",
          "line": 859,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_urgency",
          "kind": "constant",
          "line": 860,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "working_memory_capacity",
          "kind": "constant",
          "line": 861,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cognitive_flexibility",
          "kind": "constant",
          "line": 862,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_state",
          "kind": "constant",
          "line": 967,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "personality_traits",
          "kind": "constant",
          "line": 968,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mood_stability",
          "kind": "constant",
          "line": 969,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "empathy_level",
          "kind": "constant",
          "line": 970,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_intelligence",
          "kind": "constant",
          "line": 971,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_level",
          "kind": "constant",
          "line": 972,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "social_energy",
          "kind": "constant",
          "line": 1081,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "widget_animation_preference",
          "kind": "constant",
          "line": 974,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_triggers",
          "kind": "constant",
          "line": 975,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "social_context",
          "kind": "constant",
          "line": 1077,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "interaction_quality",
          "kind": "constant",
          "line": 1078,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "group_dynamics",
          "kind": "constant",
          "line": 1079,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "communication_style",
          "kind": "constant",
          "line": 1080,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 1106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_modules",
          "kind": "function",
          "line": 1117,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 1143,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 1169,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "normalize_with_optimal",
          "kind": "function",
          "line": 267,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.integrity_probe": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 1,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.5,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "IntegrityProbe",
          "kind": "class",
          "line": 24,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_collapse_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.drift_pattern_analyzer": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "DriftPatternAnalyzer",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "motifs",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_log",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.orchestrator": {
      "metrics": {
        "total_symbols": 35,
        "used_symbols": 0,
        "unused_symbols": 35,
        "import_count": 21,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07342657342657342
      },
      "symbols": [
        {
          "name": "LukhasAGIConfig",
          "kind": "dataclass",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasProcessingStage",
          "kind": "class",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasProcessingContext",
          "kind": "dataclass",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasAGIOrchestrator",
          "kind": "class",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "consciousness_evolution_enabled",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meta_cognitive_depth",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "autonomous_goals_enabled",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "curiosity_driven_learning",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "theory_of_mind_enabled",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "causal_reasoning_enabled",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lukhas_native_processing",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_domain_integration",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "self_modification_enabled",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_monitoring_enabled",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_processes",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evolution_cycles_per_hour",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_monitoring_interval",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "goal_evaluation_interval",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_threshold",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning_confidence_threshold",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "goal_achievement_threshold",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meta_cognitive_depth_threshold",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brain_integration_enabled",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brain_symphony_coordination",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "request_id",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_input",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_stage",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "results",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_identify_knowledge_gaps",
          "kind": "function",
          "line": 757,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_processing_quality",
          "kind": "function",
          "line": 805,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "LukhasConsciousnessLevel",
          "kind": "class",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.cognitive_core": {
      "metrics": {
        "total_symbols": 23,
        "used_symbols": 1,
        "unused_symbols": 22,
        "import_count": 20,
        "export_count": 1,
        "connectivity_score": 0.043478260869565216,
        "cohesion_score": 0.0,
        "coupling_score": 0.06993006993006994
      },
      "symbols": [
        {
          "name": "CognitiveEngine",
          "kind": "class",
          "line": 143,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "run_interactive_session",
          "kind": "function",
          "line": 778,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 840,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_generate_safe_response",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_conversation_history",
          "kind": "function",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_performance_metrics",
          "kind": "function",
          "line": 237,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_agi_status",
          "kind": "function",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_input_sync",
          "kind": "function",
          "line": 588,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "AGICapabilityLevel",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "AGIResponse",
          "kind": "class",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "QuantumInspiredAttention",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CausalReasoningModule",
          "kind": "class",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SymbolicEngine",
          "kind": "class",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MetaCognitiveOrchestrator",
          "kind": "class",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ComplianceEngine",
          "kind": "class",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "analyze",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "orchestrate",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "analyze_performance",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "evaluate",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.fix_lambda_symbols": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "fix_lambda_symbols",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.lambdabot_autonomous_fixer": {
      "metrics": {
        "total_symbols": 24,
        "used_symbols": 0,
        "unused_symbols": 24,
        "import_count": 20,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06993006993006994
      },
      "symbols": [
        {
          "name": "FixStrategy",
          "kind": "dataclass",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PRCreationResult",
          "kind": "dataclass",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "\u039bBotAutonomousVulnerabilityFixer",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "vulnerability_id",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "repository",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "package_name",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_version",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_version",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fix_method",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_effort",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "breaking_changes",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_required",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_reasoning",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pr_number",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pr_url",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "branch_name",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "commit_hash",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_message",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_cost",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_basic_fix_strategy",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_pr_description",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.australian_awareness_engine": {
      "metrics": {
        "total_symbols": 79,
        "used_symbols": 0,
        "unused_symbols": 79,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "AustralianPrivacyPrinciple",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsumerDataRight",
          "kind": "class",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AustralianJurisdiction",
          "kind": "class",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataBreachSeverity",
          "kind": "class",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CrossBorderApproval",
          "kind": "class",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AustralianComplianceConfig",
          "kind": "dataclass",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AustralianInput",
          "kind": "class",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AustralianOutput",
          "kind": "class",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "australian_audit_log",
          "kind": "function",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "AustralianPrivacyModule",
          "kind": "class",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AustralianAwarenessEngine",
          "kind": "class",
          "line": 467,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "certify_australian_compliance",
          "kind": "function",
          "line": 523,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "privacy_act_enabled",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "apps_compliance",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "notification_scheme",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cdr_enabled",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cdr_data_type",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "open_banking_compliant",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ndb_scheme_enabled",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "breach_assessment_required",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "oaic_notification_enabled",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_transfers_enabled",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "app8_compliance",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overseas_transfer_assessment",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_records_enabled",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "my_health_records_compliant",
          "kind": "constant",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_health_records",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "indigenous_data_protocols",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "aboriginal_torres_strait_islander",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "online_safety_compliance",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "acl_compliance",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collection_method",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collection_notice_provided",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "primary_purpose",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "secondary_purposes",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "involves_overseas_disclosure",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overseas_countries",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_approval",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_cdr_data",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cdr_consent_obtained",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cdr_data_minimization",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_health_information",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "my_health_record_involved",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_territory",
          "kind": "constant",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "involves_indigenous_data",
          "kind": "constant",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "indigenous_community_consultation",
          "kind": "constant",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "direct_marketing_intended",
          "kind": "constant",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "marketing_opt_out_provided",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "app_compliance_scores",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_app_compliance",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_act_compliant",
          "kind": "constant",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collection_notice_adequate",
          "kind": "constant",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose_limitation_met",
          "kind": "constant",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "app8_compliant",
          "kind": "constant",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overseas_transfer_approved",
          "kind": "constant",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_risk_level",
          "kind": "constant",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cdr_compliant",
          "kind": "constant",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cdr_consent_valid",
          "kind": "constant",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cdr_data_minimization_applied",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "breach_risk_level",
          "kind": "constant",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "notification_required",
          "kind": "constant",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "oaic_notification_needed",
          "kind": "constant",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_records_compliant",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_territory_compliant",
          "kind": "constant",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "individual_access_available",
          "kind": "constant",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correction_rights_available",
          "kind": "constant",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anonymity_options_available",
          "kind": "constant",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "indigenous_protocols_followed",
          "kind": "constant",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 480,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 250,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_evaluate_jurisdictional_compliance",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "process",
          "kind": "function",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "_assess_all_apps",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_app8_compliance",
          "kind": "function",
          "line": 378,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_assess_cdr_compliance",
          "kind": "function",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_breach_risk",
          "kind": "function",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_assess_state_territory_compliance",
          "kind": "function",
          "line": 448,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 493,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.experience_manager": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "ExperienceManager",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.pr_security_review_task": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 0,
        "unused_symbols": 18,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "SecurityPR",
          "kind": "dataclass",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PRSecurityReviewTask",
          "kind": "class",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 435,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "pr_number",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "repo_name",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "title",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_issues",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_reviewed",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "auto_fixable",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "critical",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "get_all_repositories",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_unreviewed_prs",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "analyze_pr_security",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "add_security_review",
          "kind": "function",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "auto_fix_security_issues",
          "kind": "function",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "process_all_repositories",
          "kind": "function",
          "line": 330,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "generate_report",
          "kind": "function",
          "line": 384,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.MultiBrainSymphony": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 0,
        "unused_symbols": 21,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "SpecializedBrainCore",
          "kind": "class",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DreamsBrainSpecialist",
          "kind": "class",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryBrainSpecialist",
          "kind": "class",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LearningBrainSpecialist",
          "kind": "class",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MultiBrainSymphonyOrchestrator",
          "kind": "class",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_enhanced_brain_integration",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "sync_with_orchestra",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_fallback_creative_processing",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_patterns",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_creative_insights",
          "kind": "function",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_fallback_memory_processing",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_associative_patterns",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_consolidation_status",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_learning_patterns",
          "kind": "function",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_adaptation_recommendations",
          "kind": "function",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_extract_meta_cognitive_insights",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_synchronize_brains",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_synthesize_brain_outputs",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "get_symphony_status",
          "kind": "function",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.vulnerability_dashboard": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "load_latest_scan_results",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "generate_dashboard_report",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.main_bot": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "EnhancedAGIBot",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_safe_response",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_conversation_history",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_performance_metrics",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_agi_status",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine": {
      "metrics": {
        "total_symbols": 185,
        "used_symbols": 0,
        "unused_symbols": 185,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04195804195804196
      },
      "symbols": [
        {
          "name": "InstitutionalComplianceLevel",
          "kind": "class",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalRegulation",
          "kind": "class",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InstitutionalCertification",
          "kind": "class",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalInstitutionalConfig",
          "kind": "dataclass",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InstitutionalAwarenessInput",
          "kind": "class",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InstitutionalAwarenessOutput",
          "kind": "class",
          "line": 386,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "institutional_compliance_audit_log",
          "kind": "function",
          "line": 463,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "InstitutionalCompliantReasoner",
          "kind": "class",
          "line": 509,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalInstitutionalCompliantEngine",
          "kind": "class",
          "line": 837,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "certify_global_institutional_compliance",
          "kind": "function",
          "line": 1102,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "target_compliance_level",
          "kind": "constant",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enabled_jurisdictions",
          "kind": "constant",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enabled_regulations",
          "kind": "constant",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_certifications",
          "kind": "constant",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_protection_level",
          "kind": "constant",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_at_rest",
          "kind": "constant",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_in_transit",
          "kind": "constant",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_in_processing",
          "kind": "constant",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "key_management_hsm",
          "kind": "constant",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "zero_trust_architecture",
          "kind": "constant",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_by_design",
          "kind": "constant",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_by_default",
          "kind": "constant",
          "line": 250,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization",
          "kind": "constant",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose_limitation",
          "kind": "constant",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "storage_limitation",
          "kind": "constant",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pseudonymization",
          "kind": "constant",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anonymization",
          "kind": "constant",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "differential_privacy",
          "kind": "constant",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_transparency",
          "kind": "constant",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_explainability",
          "kind": "constant",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_auditability",
          "kind": "constant",
          "line": 261,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_bias_monitoring",
          "kind": "constant",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_continuous_monitoring",
          "kind": "constant",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_human_oversight",
          "kind": "constant",
          "line": 264,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_risk_assessment",
          "kind": "constant",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_impact_assessment",
          "kind": "constant",
          "line": 266,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "comprehensive_audit_logging",
          "kind": "constant",
          "line": 269,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "real_time_monitoring",
          "kind": "constant",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anomaly_detection",
          "kind": "constant",
          "line": 271,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "threat_detection",
          "kind": "constant",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "behavioral_analytics",
          "kind": "constant",
          "line": 273,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "forensic_capabilities",
          "kind": "constant",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "continuous_compliance_monitoring",
          "kind": "constant",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "regulatory_change_tracking",
          "kind": "constant",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_scoring",
          "kind": "constant",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_reporting",
          "kind": "constant",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_dashboards",
          "kind": "constant",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adequacy_decision_enforcement",
          "kind": "constant",
          "line": 284,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "scc_automatic_application",
          "kind": "constant",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "binding_corporate_rules",
          "kind": "constant",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "certification_mechanisms",
          "kind": "constant",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "automated_rights_fulfillment",
          "kind": "constant",
          "line": 426,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rights_request_tracking",
          "kind": "constant",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "identity_verification",
          "kind": "constant",
          "line": 292,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_time_tracking",
          "kind": "constant",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dpo_designation",
          "kind": "constant",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_officer_designation",
          "kind": "constant",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_officer_designation",
          "kind": "constant",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_impact_assessments",
          "kind": "constant",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_protection_impact_assessments",
          "kind": "constant",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "vendor_risk_assessments",
          "kind": "constant",
          "line": 301,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "disaster_recovery",
          "kind": "constant",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "business_continuity_planning",
          "kind": "constant",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "incident_response",
          "kind": "constant",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "breach_notification_automation",
          "kind": "constant",
          "line": 307,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "staff_training_programs",
          "kind": "constant",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "awareness_campaigns",
          "kind": "constant",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "competency_assessments",
          "kind": "constant",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "certification_tracking",
          "kind": "constant",
          "line": 313,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_id",
          "kind": "constant",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 319,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_id",
          "kind": "constant",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_type",
          "kind": "constant",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_jurisdiction",
          "kind": "constant",
          "line": 324,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_purpose",
          "kind": "constant",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "legal_basis_per_jurisdiction",
          "kind": "constant",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_categories",
          "kind": "constant",
          "line": 329,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "applicable_jurisdictions",
          "kind": "constant",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "primary_jurisdiction",
          "kind": "constant",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_transfers",
          "kind": "constant",
          "line": 334,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_status",
          "kind": "constant",
          "line": 337,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_mechanisms",
          "kind": "constant",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "withdrawal_requests",
          "kind": "constant",
          "line": 339,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pseudonymization_applied",
          "kind": "constant",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anonymization_applied",
          "kind": "constant",
          "line": 343,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_applied",
          "kind": "constant",
          "line": 344,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_controls_applied",
          "kind": "constant",
          "line": 345,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "involves_automated_decision_making",
          "kind": "constant",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_system_used",
          "kind": "constant",
          "line": 349,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "profiling_involved",
          "kind": "constant",
          "line": 350,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "high_risk_processing",
          "kind": "constant",
          "line": 351,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "special_category_data",
          "kind": "constant",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "criminal_data",
          "kind": "constant",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "children_data",
          "kind": "constant",
          "line": 356,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_data",
          "kind": "constant",
          "line": 357,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "biometric_data",
          "kind": "constant",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "genetic_data",
          "kind": "constant",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "healthcare_sector",
          "kind": "constant",
          "line": 362,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "financial_sector",
          "kind": "constant",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "government_sector",
          "kind": "constant",
          "line": 364,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "education_sector",
          "kind": "constant",
          "line": 365,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_controller",
          "kind": "constant",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_processor",
          "kind": "constant",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "joint_controllers",
          "kind": "constant",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sub_processors",
          "kind": "constant",
          "line": 371,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_risk_level",
          "kind": "constant",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_risk_level",
          "kind": "constant",
          "line": 375,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_risk_level",
          "kind": "constant",
          "line": 376,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_metadata",
          "kind": "constant",
          "line": 379,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 381,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_timestamp",
          "kind": "constant",
          "line": 390,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 391,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "institutional_compliance_level",
          "kind": "constant",
          "line": 394,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_compliance_score",
          "kind": "constant",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "government_ready",
          "kind": "constant",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enterprise_ready",
          "kind": "constant",
          "line": 397,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction_compliance_scores",
          "kind": "constant",
          "line": 400,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction_compliance_status",
          "kind": "constant",
          "line": 401,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction_specific_requirements",
          "kind": "constant",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "regulation_compliance_scores",
          "kind": "constant",
          "line": 405,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "regulation_compliance_status",
          "kind": "constant",
          "line": 406,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "certification_readiness",
          "kind": "constant",
          "line": 409,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "certification_gaps",
          "kind": "constant",
          "line": 410,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_protection_score",
          "kind": "constant",
          "line": 413,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_impact_score",
          "kind": "constant",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_score",
          "kind": "constant",
          "line": 415,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_transparency_score",
          "kind": "constant",
          "line": 418,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_explainability_provided",
          "kind": "constant",
          "line": 419,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_bias_assessment",
          "kind": "constant",
          "line": 420,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_risk_level",
          "kind": "constant",
          "line": 421,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_human_oversight_required",
          "kind": "constant",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_rights_available",
          "kind": "constant",
          "line": 425,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rights_response_timeframes",
          "kind": "constant",
          "line": 427,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_transfer_assessment",
          "kind": "constant",
          "line": 430,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adequacy_decisions_applicable",
          "kind": "constant",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transfer_mechanisms_used",
          "kind": "constant",
          "line": 432,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_trail_id",
          "kind": "constant",
          "line": 435,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "monitoring_alerts",
          "kind": "constant",
          "line": 436,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_violations",
          "kind": "constant",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_risk_score",
          "kind": "constant",
          "line": 440,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_factors",
          "kind": "constant",
          "line": 441,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_mitigation_measures",
          "kind": "constant",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_recommendations",
          "kind": "constant",
          "line": 445,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_recommendations",
          "kind": "constant",
          "line": 446,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_recommendations",
          "kind": "constant",
          "line": 447,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "institutional_certifications",
          "kind": "constant",
          "line": 450,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "certification_expiry_dates",
          "kind": "constant",
          "line": 451,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "regulatory_reporting_required",
          "kind": "constant",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "breach_notification_required",
          "kind": "constant",
          "line": 455,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "supervisor_notification_required",
          "kind": "constant",
          "line": 456,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "business_impact_assessment",
          "kind": "constant",
          "line": 459,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cost_of_compliance",
          "kind": "constant",
          "line": 460,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_roi",
          "kind": "constant",
          "line": 461,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 859,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_initialize_compliance_frameworks",
          "kind": "function",
          "line": 521,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process",
          "kind": "function",
          "line": 547,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_jurisdiction_compliance",
          "kind": "function",
          "line": 580,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_assess_gdpr_compliance",
          "kind": "function",
          "line": 635,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_assess_eu_ai_act_compliance",
          "kind": "function",
          "line": 682,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_ccpa_compliance",
          "kind": "function",
          "line": 695,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_hipaa_compliance",
          "kind": "function",
          "line": 710,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_sox_compliance",
          "kind": "function",
          "line": 722,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_fedramp_compliance",
          "kind": "function",
          "line": 731,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_ai_governance",
          "kind": "function",
          "line": 740,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_data_protection",
          "kind": "function",
          "line": 762,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_comprehensive_risk",
          "kind": "function",
          "line": 783,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_overall_compliance_score",
          "kind": "function",
          "line": 805,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_institutional_readiness",
          "kind": "function",
          "line": 813,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_init_gdpr_framework",
          "kind": "function",
          "line": 824,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_eu_ai_act_framework",
          "kind": "function",
          "line": 825,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_ccpa_framework",
          "kind": "function",
          "line": 826,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_hipaa_framework",
          "kind": "function",
          "line": 827,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_sox_framework",
          "kind": "function",
          "line": 828,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_fedramp_framework",
          "kind": "function",
          "line": 829,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_pipeda_framework",
          "kind": "function",
          "line": 830,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_cppa_framework",
          "kind": "function",
          "line": 831,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_uk_gdpr_framework",
          "kind": "function",
          "line": 832,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_init_au_privacy_framework",
          "kind": "function",
          "line": 833,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_institutional_compliance",
          "kind": "function",
          "line": 884,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_institutional_awareness",
          "kind": "function",
          "line": 898,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_build_institutional_output",
          "kind": "function",
          "line": 964,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_determine_institutional_compliance_level",
          "kind": "function",
          "line": 1029,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_map_all_jurisdiction_rights",
          "kind": "function",
          "line": 1042,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_compliance_recommendations",
          "kind": "function",
          "line": 1075,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_validate_institutional_compliance",
          "kind": "function",
          "line": 1092,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.demo": {
      "metrics": {
        "total_symbols": 13,
        "used_symbols": 0,
        "unused_symbols": 13,
        "import_count": 21,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07342657342657342
      },
      "symbols": [
        {
          "name": "AdaptiveAGIDemo",
          "kind": "class",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "init_components",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "generate_simple_response",
          "kind": "function",
          "line": 481,
          "used": false,
          "used_by": [],
          "complexity": 15,
          "has_docstring": true
        },
        {
          "name": "MockVoiceModulator",
          "kind": "class",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MockSafetyGuard",
          "kind": "class",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MockComplianceEngine",
          "kind": "class",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "determine_parameters",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "modulate_voice",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "validate_response",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "validate_voice_parameters",
          "kind": "function",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "anonymize_metadata",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_voice_data_compliance",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.trace_memoria_logger": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 0,
        "unused_symbols": 20,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "TraceMemoriaLogger",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TraceLevel",
          "kind": "class",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_ensure_log_directories",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "log_trace",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_level_to_name",
          "kind": "function",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_write_trace",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_cache_trace",
          "kind": "function",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_recent_traces",
          "kind": "function",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "read_traces",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 15,
          "has_docstring": true
        },
        {
          "name": "log_system_event",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_core_event",
          "kind": "function",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_symbolic",
          "kind": "function",
          "line": 282,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_emotional",
          "kind": "function",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_ethical",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_interaction",
          "kind": "function",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_dream",
          "kind": "function",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_reflection",
          "kind": "function",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_trace_by_id",
          "kind": "function",
          "line": 308,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "close",
          "kind": "function",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.lukhas_awareness_engine_elevated": {
      "metrics": {
        "total_symbols": 122,
        "used_symbols": 0,
        "unused_symbols": 122,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "ComplianceStatus",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessType",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AlignmentMetric",
          "kind": "class",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasConfig",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "now_iso",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "structured_log",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "AwarenessInput",
          "kind": "class",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessOutput",
          "kind": "class",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Reasoner",
          "kind": "protocol",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AwarenessModule",
          "kind": "class",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnvironmentalAwarenessInput",
          "kind": "class",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedEnvReasoner",
          "kind": "class",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "is_sustainable_location",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "is_indoor_location",
          "kind": "function",
          "line": 406,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "quantum_anomaly_check",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "EnvironmentalAwarenessModule",
          "kind": "class",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveAwarenessInput",
          "kind": "class",
          "line": 507,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedCognitiveReasoner",
          "kind": "class",
          "line": 518,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveAwarenessModule",
          "kind": "class",
          "line": 704,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalAwarenessInput",
          "kind": "class",
          "line": 805,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedEmotionalReasoner",
          "kind": "class",
          "line": 817,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalAwarenessModule",
          "kind": "class",
          "line": 1174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SocialAwarenessInput",
          "kind": "class",
          "line": 1271,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SocialReasoner",
          "kind": "class",
          "line": 1279,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SocialAwarenessModule",
          "kind": "class",
          "line": 1312,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasAwarenessEngine",
          "kind": "class",
          "line": 1326,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "score",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_factors",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_level",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_pass",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_warning",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_threshold_critical",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_quantum_processing",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_symbolic_reasoning",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_real_time_monitoring",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sustainability_weight",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "institutional_mode",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_data",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sustainability_score",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_signature",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 1282,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_confidence",
          "kind": "function",
          "line": 1309,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 1329,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__call__",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "evaluate_alignment",
          "kind": "function",
          "line": 1318,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 1315,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_recommendations",
          "kind": "function",
          "line": 1215,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "calculate_sustainability_impact",
          "kind": "function",
          "line": 1247,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_compliance_status",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_risk_factors",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_quantum_signature",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_persist_to_store",
          "kind": "function",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "temperature",
          "kind": "constant",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "humidity",
          "kind": "constant",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ambient_noise",
          "kind": "constant",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "light_level",
          "kind": "constant",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "location",
          "kind": "constant",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "air_quality_index",
          "kind": "constant",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_consumption",
          "kind": "constant",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "carbon_footprint",
          "kind": "constant",
          "line": 258,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_calculate_sustainability_metrics",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_optimization_opportunities",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "attention_level",
          "kind": "constant",
          "line": 509,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cognitive_load",
          "kind": "constant",
          "line": 510,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_complexity",
          "kind": "constant",
          "line": 511,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "information_overload",
          "kind": "constant",
          "line": 512,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_indicators",
          "kind": "constant",
          "line": 513,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_urgency",
          "kind": "constant",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "working_memory_capacity",
          "kind": "constant",
          "line": 515,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cognitive_flexibility",
          "kind": "constant",
          "line": 516,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_calculate_meta_learning",
          "kind": "function",
          "line": 582,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_self_awareness",
          "kind": "function",
          "line": 589,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_optimal_timing",
          "kind": "function",
          "line": 597,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_assess_cognitive_state",
          "kind": "function",
          "line": 610,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_recommend_cognitive_strategies",
          "kind": "function",
          "line": 631,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_forecast_productivity",
          "kind": "function",
          "line": 661,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_estimate_time_to_peak",
          "kind": "function",
          "line": 691,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "emotional_state",
          "kind": "constant",
          "line": 807,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "personality_traits",
          "kind": "constant",
          "line": 808,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mood_stability",
          "kind": "constant",
          "line": 809,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "empathy_level",
          "kind": "constant",
          "line": 810,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_intelligence",
          "kind": "constant",
          "line": 811,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_level",
          "kind": "constant",
          "line": 812,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "social_energy",
          "kind": "constant",
          "line": 1277,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "widget_animation_preference",
          "kind": "constant",
          "line": 814,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_triggers",
          "kind": "constant",
          "line": 815,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_calculate_emotional_balance",
          "kind": "function",
          "line": 864,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_emotional_regulation",
          "kind": "function",
          "line": 884,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_comprehensive_personality_insights",
          "kind": "function",
          "line": 893,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_create_advanced_widget_customization",
          "kind": "function",
          "line": 941,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_select_color_scheme",
          "kind": "function",
          "line": 981,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_determine_interaction_style",
          "kind": "function",
          "line": 994,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_recommend_adaptive_features",
          "kind": "function",
          "line": 1005,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_suggest_accessibility_adjustments",
          "kind": "function",
          "line": 1023,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_emotional_resilience",
          "kind": "function",
          "line": 1038,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_social_readiness",
          "kind": "function",
          "line": 1048,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_social_interaction_recommendations",
          "kind": "function",
          "line": 1057,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_identify_emotional_growth_opportunities",
          "kind": "function",
          "line": 1077,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_analyze_emotional_triggers",
          "kind": "function",
          "line": 1099,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_forecast_mood_trajectory",
          "kind": "function",
          "line": 1116,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_recommend_mood_interventions",
          "kind": "function",
          "line": 1147,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "social_context",
          "kind": "constant",
          "line": 1273,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "interaction_quality",
          "kind": "constant",
          "line": 1274,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "group_dynamics",
          "kind": "constant",
          "line": 1275,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "communication_style",
          "kind": "constant",
          "line": 1276,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_generate_social_recommendations",
          "kind": "function",
          "line": 1294,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_group_dynamics",
          "kind": "function",
          "line": 1299,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_optimize_communication_style",
          "kind": "function",
          "line": 1304,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 1335,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_modules",
          "kind": "function",
          "line": 1346,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 1372,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 1398,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "normalize_with_optimal",
          "kind": "function",
          "line": 267,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.collapse_chain_simulator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "CollapseChainSimulator",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "outcome_hash",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.token_budget_controller": {
      "metrics": {
        "total_symbols": 34,
        "used_symbols": 4,
        "unused_symbols": 30,
        "import_count": 8,
        "export_count": 1,
        "connectivity_score": 0.11764705882352941,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "BudgetPriority",
          "kind": "class",
          "line": 29,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/github_vulnerability_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CallUrgency",
          "kind": "class",
          "line": 36,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/github_vulnerability_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "APICallContext",
          "kind": "dataclass",
          "line": 44,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/github_vulnerability_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BudgetDecision",
          "kind": "dataclass",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TokenBudgetController",
          "kind": "class",
          "line": 67,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/github_vulnerability_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 644,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "change_detected",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_detected",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_request",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "urgency",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_cost",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alternative_available",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "should_call",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reason",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "budget_impact",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alternative_action",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "flex_budget_used",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conservation_recommendation",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "load_state",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "save_state",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_daily_reset",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "track_conservation",
          "kind": "function",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_efficiency_score",
          "kind": "function",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "can_use_flex_budget",
          "kind": "function",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "rate_limit_check",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "analyze_call_necessity",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "record_api_call",
          "kind": "function",
          "line": 426,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "mark_recommendation_applied",
          "kind": "function",
          "line": 509,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "refresh_daily_budget",
          "kind": "function",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_financial_intelligence_report",
          "kind": "function",
          "line": 547,
          "used": false,
          "used_by": [],
          "complexity": 15,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.collaborative_ai_agent_system": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "AgentTier",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsolidationPhase",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentCapabilities",
          "kind": "dataclass",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasAIAgent",
          "kind": "class",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasAIAgentTeam",
          "kind": "class",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tier",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "role",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tools",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "permissions",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "new_features",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_agent_team",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_team_status",
          "kind": "function",
          "line": 367,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.compliance_registry": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "ComplianceRegistry",
          "kind": "class",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_component_requirements",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.entropy_probe": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "EntropyProbe",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_entropy",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "symbolic_trace",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_state",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_load",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recursion_depth",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "report",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.ai_compliance": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "AIComplianceManager",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_transparency_report",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_processing_purposes",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.cpu_friendly_compliance": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "get_cpu_usage",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_vscode_cpu",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "wait_for_low_cpu",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "run_compliance_scan",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.mesh.collapse_mesh": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 1,
        "unused_symbols": 7,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.125,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "CollapseNode",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CollapseMesh",
          "kind": "class",
          "line": 52,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_collapse_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_neighbor",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "heartbeat",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_node",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "add_edge",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_node",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.GlobalInstitutionalFramework": {
      "metrics": {
        "total_symbols": 107,
        "used_symbols": 0,
        "unused_symbols": 107,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04195804195804196
      },
      "symbols": [
        {
          "name": "Jurisdiction",
          "kind": "class",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RegulationType",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceLevel",
          "kind": "class",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LegalBasis",
          "kind": "class",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataCategory",
          "kind": "class",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalComplianceConfig",
          "kind": "dataclass",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "global_timestamp",
          "kind": "function",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "institutional_audit_log",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "GlobalConsentData",
          "kind": "class",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InstitutionalProcessingRecord",
          "kind": "class",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalInstitutionalInput",
          "kind": "class",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalInstitutionalOutput",
          "kind": "class",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalInstitutionalReasoner",
          "kind": "protocol",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GlobalInstitutionalModule",
          "kind": "class",
          "line": 329,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "primary_jurisdiction",
          "kind": "constant",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "applicable_jurisdictions",
          "kind": "constant",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_protection_enabled",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_transfers",
          "kind": "constant",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adequacy_decisions",
          "kind": "constant",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_governance_enabled",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_transparency_required",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "algorithmic_auditing",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bias_monitoring",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "healthcare_mode",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phi_protection",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "financial_mode",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sox_compliance",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pci_dss_compliance",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_at_rest",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_in_transit",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_controls",
          "kind": "constant",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_logging",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_retention_days",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_retention_years",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dpo_contact",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_officer",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_officer",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_id",
          "kind": "constant",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_id",
          "kind": "constant",
          "line": 247,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdictions",
          "kind": "constant",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purposes",
          "kind": "constant",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "legal_basis",
          "kind": "constant",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_given",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_timestamp",
          "kind": "constant",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_available",
          "kind": "constant",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "do_not_sell",
          "kind": "constant",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "withdrawal_possible",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_version",
          "kind": "constant",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_period",
          "kind": "constant",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_consent",
          "kind": "constant",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_id",
          "kind": "constant",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "controller",
          "kind": "constant",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processor",
          "kind": "constant",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_categories",
          "kind": "constant",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_classification",
          "kind": "constant",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "healthcare_phi",
          "kind": "constant",
          "line": 239,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "financial_pii",
          "kind": "constant",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "government_controlled",
          "kind": "constant",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent",
          "kind": "constant",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_record",
          "kind": "constant",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_minimization_applied",
          "kind": "constant",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pseudonymization_applied",
          "kind": "constant",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "encryption_applied",
          "kind": "constant",
          "line": 261,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_data",
          "kind": "constant",
          "line": 264,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 266,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_scores",
          "kind": "constant",
          "line": 273,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_compliance_level",
          "kind": "constant",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdictional_compliance",
          "kind": "constant",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_explanation",
          "kind": "constant",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bias_assessment",
          "kind": "constant",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "algorithmic_transparency",
          "kind": "constant",
          "line": 282,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_lawfulness",
          "kind": "constant",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_quality_score",
          "kind": "constant",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_compliance",
          "kind": "constant",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "subject_rights_available",
          "kind": "constant",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_transfer_compliant",
          "kind": "constant",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_trail",
          "kind": "constant",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time_ms",
          "kind": "constant",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "institutional_certification",
          "kind": "constant",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_attestation",
          "kind": "constant",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 307,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "explain_decision",
          "kind": "function",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "assess_bias",
          "kind": "function",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_compliance",
          "kind": "function",
          "line": 319,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_confidence",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__call__",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_get_module_type",
          "kind": "function",
          "line": 424,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_evaluate_jurisdictional_compliance",
          "kind": "function",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_global_compliance",
          "kind": "function",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_eu_compliance",
          "kind": "function",
          "line": 443,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_setup_us_compliance",
          "kind": "function",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_canada_compliance",
          "kind": "function",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_uk_compliance",
          "kind": "function",
          "line": 474,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_global_standards",
          "kind": "function",
          "line": 483,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_validate_institutional_compliance",
          "kind": "function",
          "line": 492,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_determine_overall_compliance_level",
          "kind": "function",
          "line": 523,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_assess_institutional_data_quality",
          "kind": "function",
          "line": 534,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_validate_retention_compliance",
          "kind": "function",
          "line": 538,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_map_subject_rights",
          "kind": "function",
          "line": 542,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_validate_cross_border_transfers",
          "kind": "function",
          "line": 561,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_build_institutional_audit_trail",
          "kind": "function",
          "line": 577,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_institutional_certification",
          "kind": "function",
          "line": 600,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_compliance_attestation",
          "kind": "function",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_institutional_error",
          "kind": "function",
          "line": 623,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator": {
      "metrics": {
        "total_symbols": 38,
        "used_symbols": 0,
        "unused_symbols": 38,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "NodeType",
          "kind": "class",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NodeStatus",
          "kind": "class",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskPriority",
          "kind": "class",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveTask",
          "kind": "dataclass",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NodeCapability",
          "kind": "dataclass",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NodeMetrics",
          "kind": "dataclass",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveNode",
          "kind": "class",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CognitiveMeshCoordinator",
          "kind": "class",
          "line": 351,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_mesh_coordinator",
          "kind": "constant",
          "line": 844,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_id",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_type",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "required_node_types",
          "kind": "type_alias",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout_seconds",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assigned_node_id",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "node_type",
          "kind": "type_alias",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "specializations",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_tasks",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_response_time_ms",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quality_score",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_requirements",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_tasks_processed",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "successful_tasks",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failed_tasks",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_response_time",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_load",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_heartbeat",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uptime_seconds",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quality_trend",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 321,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_mesh_status",
          "kind": "function",
          "line": 812,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "score_node",
          "kind": "function",
          "line": 587,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.visualization.healix_visualizer": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05244755244755245
      },
      "symbols": [
        {
          "name": "HealixVisualizer",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "animate_frame",
          "kind": "function",
          "line": 403,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.visualization.memory_helix_visualizer": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "MemoryHelixVisualizer",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_memory_coordinates",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_authorized_memories",
          "kind": "function",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "visualize_memory_helix",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "create_interactive_visualization",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_memory_links",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.tracing.trace_tools": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "load_symbolic_trace_dashboard",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "filter_trace_by_column",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_summary_stats",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "export_filtered_trace_jsonl",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.visualization.golden_healix_mapper": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 11,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "MemoryStrand",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MutationStrategy",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HealixMapper",
          "kind": "class",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.attention.quantum_attention": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 1,
        "unused_symbols": 10,
        "import_count": 4,
        "export_count": 4,
        "connectivity_score": 0.09090909090909091,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "QuantumInspiredAttention",
          "kind": "class",
          "line": 14,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/attention/__init__.py",
            "lukhas/orchestration/brain/lukhas_core.py",
            "lukhas/orchestration/brain/main_bot.py",
            "lukhas/orchestration/brain/neural/cognitive_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_superposition",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "attend",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_features",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_attention_distribution",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_superposition",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_attention_gates",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_entanglement_map",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_attention_state",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adjust_attention_gates",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.cognitive.voice_engine": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "CognitiveVoiceEngine",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_generate_modulation",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_learn_from_patterns",
          "kind": "function",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_adaptations",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.cognitive.awareness.awareness": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "SystemAwareness",
          "kind": "class",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_update_awareness",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_reflect_on_state",
          "kind": "function",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_reflect_on_error",
          "kind": "function",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_recovery_plan",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_record_metrics",
          "kind": "function",
          "line": 384,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.context.lukhas_context_sync": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "generate_daily_context",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.net.client": {
      "metrics": {
        "total_symbols": 55,
        "used_symbols": 0,
        "unused_symbols": 55,
        "import_count": 23,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08041958041958042
      },
      "symbols": [
        {
          "name": "_is_https_redirect",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_port_or_default",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_same_origin",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "UseClientDefault",
          "kind": "class",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ClientState",
          "kind": "class",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "BoundSyncStream",
          "kind": "class",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BoundAsyncStream",
          "kind": "class",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BaseClient",
          "kind": "class",
          "line": 195,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Client",
          "kind": "class",
          "line": 601,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AsyncClient",
          "kind": "class",
          "line": 1314,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 1360,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "__iter__",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "close",
          "kind": "function",
          "line": 1270,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "is_closed",
          "kind": "function",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "trust_env",
          "kind": "function",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_enforce_trailing_slash",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_get_proxy_map",
          "kind": "function",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "timeout",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "event_hooks",
          "kind": "function",
          "line": 273,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "auth",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "base_url",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "headers",
          "kind": "function",
          "line": 313,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "cookies",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "params",
          "kind": "function",
          "line": 344,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "build_request",
          "kind": "function",
          "line": 347,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_merge_url",
          "kind": "function",
          "line": 398,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_merge_cookies",
          "kind": "function",
          "line": 420,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_merge_headers",
          "kind": "function",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_merge_queryparams",
          "kind": "function",
          "line": 440,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_build_auth",
          "kind": "function",
          "line": 452,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "_build_request_auth",
          "kind": "function",
          "line": 464,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "_build_redirect_request",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_redirect_method",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_redirect_url",
          "kind": "function",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_redirect_headers",
          "kind": "function",
          "line": 553,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_redirect_stream",
          "kind": "function",
          "line": 580,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_set_timeout",
          "kind": "function",
          "line": 591,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_init_transport",
          "kind": "function",
          "line": 1439,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_init_proxy_transport",
          "kind": "function",
          "line": 1461,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_transport_for_url",
          "kind": "function",
          "line": 1481,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "request",
          "kind": "function",
          "line": 778,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "stream",
          "kind": "function",
          "line": 835,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "send",
          "kind": "function",
          "line": 886,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_send_handling_auth",
          "kind": "function",
          "line": 937,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "_send_handling_redirects",
          "kind": "function",
          "line": 971,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        },
        {
          "name": "_send_single_request",
          "kind": "function",
          "line": 1008,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get",
          "kind": "function",
          "line": 1043,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "options",
          "kind": "function",
          "line": 1072,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "head",
          "kind": "function",
          "line": 1101,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "post",
          "kind": "function",
          "line": 1130,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "put",
          "kind": "function",
          "line": 1167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "patch",
          "kind": "function",
          "line": 1204,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "delete",
          "kind": "function",
          "line": 1241,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__enter__",
          "kind": "function",
          "line": 1282,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "__exit__",
          "kind": "function",
          "line": 1300,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.core.azure_free_tier_strategy": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "AzureFreeStrategy",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_priority_services_for_agi",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_12_month_roadmap",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_cost_savings",
          "kind": "function",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_deployment_priorities",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "show_optimization_tips",
          "kind": "function",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.net.async_client": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 18,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06293706293706294
      },
      "symbols": [
        {
          "name": "AsyncInferenceClient",
          "kind": "class",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_ProxyClient",
          "kind": "class",
          "line": 3618,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProxyClientChat",
          "kind": "class",
          "line": 3625,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProxyClientChatCompletions",
          "kind": "class",
          "line": 3633,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 3621,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__repr__",
          "kind": "function",
          "line": 239,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__del__",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_get_client_session",
          "kind": "function",
          "line": 3410,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "chat",
          "kind": "function",
          "line": 3614,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "completions",
          "kind": "function",
          "line": 3629,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "create",
          "kind": "function",
          "line": 3637,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "inputs",
          "kind": "constant",
          "line": 1112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "models_by_task",
          "kind": "constant",
          "line": 3386,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_unpack_response",
          "kind": "function",
          "line": 3388,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.core.response_types": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 1,
        "unused_symbols": 8,
        "import_count": 3,
        "export_count": 3,
        "connectivity_score": 0.1111111111111111,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "AGIResponse",
          "kind": "dataclass",
          "line": 13,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/cognitive_core.py",
            "lukhas/orchestration/brain/main_bot.py",
            "lukhas/orchestration/brain/neural/cognitive_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning_path",
          "kind": "constant",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metacognitive_state",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_compliance",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capability_level",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.core.capability_levels": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 1,
        "unused_symbols": 0,
        "import_count": 1,
        "export_count": 4,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "AGICapabilityLevel",
          "kind": "class",
          "line": 10,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/cognitive_core.py",
            "lukhas/orchestration/brain/core/response_types.py",
            "lukhas/orchestration/brain/main_bot.py",
            "lukhas/orchestration/brain/neural/cognitive_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.core.types": {
      "metrics": {
        "total_symbols": 146,
        "used_symbols": 0,
        "unused_symbols": 146,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "PluginType",
          "kind": "class",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginTier",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginState",
          "kind": "class",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginStatus",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsciousnessState",
          "kind": "class",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceLevel",
          "kind": "class",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicMetadata",
          "kind": "dataclass",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginCapabilities",
          "kind": "dataclass",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginPricing",
          "kind": "dataclass",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginDependencies",
          "kind": "dataclass",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginSecurity",
          "kind": "dataclass",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginManifest",
          "kind": "dataclass",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasSystemState",
          "kind": "dataclass",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UserSession",
          "kind": "dataclass",
          "line": 271,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginContext",
          "kind": "dataclass",
          "line": 289,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginExecutionContext",
          "kind": "dataclass",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValidationRule",
          "kind": "dataclass",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginValidationSchema",
          "kind": "dataclass",
          "line": 337,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginError",
          "kind": "class",
          "line": 357,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginLoadError",
          "kind": "class",
          "line": 365,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginValidationError",
          "kind": "class",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginExecutionError",
          "kind": "class",
          "line": 375,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginComplianceError",
          "kind": "class",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicTrace",
          "kind": "dataclass",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsciousnessMapping",
          "kind": "dataclass",
          "line": 411,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginMessage",
          "kind": "dataclass",
          "line": 427,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginResponse",
          "kind": "dataclass",
          "line": 447,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BaseLucasPlugin",
          "kind": "class",
          "line": 463,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LoadedPlugin",
          "kind": "dataclass",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "dream_tag",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_vector",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_class",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_signature",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_weight",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_resonance",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_integration",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_aware",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_resonance",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_patterns",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 528,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "features",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "permissions",
          "kind": "constant",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lukhas_modules",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_integration",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_access",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "real_time",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tier",
          "kind": "constant",
          "line": 275,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "price_monthly",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "price_annual",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "free_tier_limits",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enterprise_features",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "revenue_share",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lukhas_compatibility",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "python_version",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_requirements",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "external_services",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "other_plugins",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "code_signed",
          "kind": "constant",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sandbox_required",
          "kind": "constant",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "level",
          "kind": "constant",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "network_access",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "file_system_access",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_standards",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_audit_date",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "vulnerability_scan_passed",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 329,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "type",
          "kind": "type_alias",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "version",
          "kind": "constant",
          "line": 339,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 330,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "author",
          "kind": "constant",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "homepage",
          "kind": "constant",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "repository",
          "kind": "constant",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "license",
          "kind": "constant",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capabilities",
          "kind": "constant",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_metadata",
          "kind": "constant",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pricing",
          "kind": "constant",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security",
          "kind": "constant",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance",
          "kind": "constant",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entry_point",
          "kind": "constant",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assets_dir",
          "kind": "constant",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "docs_dir",
          "kind": "constant",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tests_dir",
          "kind": "constant",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "updated_at",
          "kind": "constant",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_state",
          "kind": "constant",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_usage",
          "kind": "constant",
          "line": 258,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active_dreams",
          "kind": "constant",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_coherence",
          "kind": "constant",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_state",
          "kind": "constant",
          "line": 261,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning_mode",
          "kind": "constant",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_decision",
          "kind": "constant",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 273,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_level",
          "kind": "constant",
          "line": 276,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "preferences",
          "kind": "constant",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lukhas_state",
          "kind": "constant",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_session",
          "kind": "constant",
          "line": 313,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_config",
          "kind": "constant",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "environment",
          "kind": "constant",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "debug_mode",
          "kind": "constant",
          "line": 316,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trace_enabled",
          "kind": "constant",
          "line": 317,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lukhas_system_state",
          "kind": "constant",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_directory",
          "kind": "constant",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_enabled",
          "kind": "constant",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rule_type",
          "kind": "constant",
          "line": 331,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validator",
          "kind": "constant",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_message",
          "kind": "constant",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "required_fields",
          "kind": "constant",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optional_fields",
          "kind": "constant",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validation_rules",
          "kind": "constant",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_checks",
          "kind": "constant",
          "line": 343,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "plugin_id",
          "kind": "constant",
          "line": 516,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_id",
          "kind": "constant",
          "line": 391,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_impact",
          "kind": "constant",
          "line": 393,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_operations",
          "kind": "constant",
          "line": 394,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dream_interactions",
          "kind": "constant",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_decisions",
          "kind": "constant",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_signatures",
          "kind": "constant",
          "line": 397,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state",
          "kind": "constant",
          "line": 521,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameter_adjustments",
          "kind": "constant",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "activation_threshold",
          "kind": "constant",
          "line": 415,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_delay_ms",
          "kind": "constant",
          "line": 416,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority_boost",
          "kind": "constant",
          "line": 417,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sender_plugin_id",
          "kind": "constant",
          "line": 450,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recipient_plugin_id",
          "kind": "constant",
          "line": 430,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "constant",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 432,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 434,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "requires_response",
          "kind": "constant",
          "line": 435,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 451,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 452,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 505,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "instance",
          "kind": "constant",
          "line": 517,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "manifest",
          "kind": "constant",
          "line": 518,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "load_time",
          "kind": "constant",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "file_path",
          "kind": "constant",
          "line": 522,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "file_hash",
          "kind": "constant",
          "line": 523,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_state",
          "kind": "constant",
          "line": 525,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_mapping",
          "kind": "constant",
          "line": 526,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.core.azure_openai_client": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 0,
        "unused_symbols": 10,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "LukhASAzureOpenAI",
          "kind": "class",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "quick_test",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_secure_config",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_keychain_value",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_client",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "test_connection",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "chat_completion",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.core.orchestrator": {
      "metrics": {
        "total_symbols": 34,
        "used_symbols": 0,
        "unused_symbols": 34,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "SystemMode",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProcessingStage",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIConfiguration",
          "kind": "dataclass",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgiBrainOrchestrator",
          "kind": "class",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "mode",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_processes",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_allocation_strategy",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_enabled",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_optimization_cycles",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_convergence_threshold",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "crista_learning_rate",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meta_learning_enabled",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federated_nodes",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "adaptation_rate",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_consolidation_interval",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_enabled",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence_time",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decoherence_compensation",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_entanglement_pairs",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_annealing_steps",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_cycles",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "convergence_threshold",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stability_window",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metrics_log_interval",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_crista_meta_pathway",
          "kind": "function",
          "line": 350,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_meta_quantum_pathway",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_quantum_crista_pathway",
          "kind": "function",
          "line": 384,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_system_feedback_pathway",
          "kind": "function",
          "line": 400,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compile_results",
          "kind": "function",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_system_optimizations",
          "kind": "function",
          "line": 546,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_system_health",
          "kind": "function",
          "line": 615,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 635,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_orchestration_status",
          "kind": "function",
          "line": 657,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.access.tier_manager": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "upgrade_tier",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "downgrade_tier",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_tier_description",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_user_tier",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "is_access_allowed",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_access_attempt",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_tier_badge",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_symbolic_id_summary",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.main_loop": {
      "metrics": {
        "total_symbols": 39,
        "used_symbols": 0,
        "unused_symbols": 39,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "Goal",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "GoalManager",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "AgentCommunicator",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EthicalEvaluator",
          "kind": "class",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ReflectiveLearning",
          "kind": "class",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SelfReflection",
          "kind": "class",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "goal_execution_loop",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "prompt_consent",
          "kind": "function",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_publish_queue",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "anonymize",
          "kind": "function",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_feedback",
          "kind": "function",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "prompt_emotion",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "prompt_feedback",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "prompt_dream_feedback",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_voice_params_for_emotion",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "elevenlabs_speak",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "speak_text",
          "kind": "function",
          "line": 261,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "handle_talk",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "handle_dream",
          "kind": "function",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "request_data_deletion",
          "kind": "function",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 316,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "is_valid",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "execute",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_goal",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "prioritize_goals",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "execute_goals",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "add_agent",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "send_message",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "receive_message",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_rule",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "evaluate_action",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "add_interaction",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "evaluate_performance",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_log",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "analyze_logs",
          "kind": "function",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "DummyRule",
          "kind": "class",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluate",
          "kind": "function",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.emotion_trend_tracker": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "analyze_emotion_trends",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.emotional_sorter": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "evaluate_emotional_state",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.spine.healix_mapper": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 1,
        "unused_symbols": 4,
        "import_count": 7,
        "export_count": 1,
        "connectivity_score": 0.2,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "HealixMapper",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "map_helix_from_memory",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "calculate_drift_score",
          "kind": "function",
          "line": 83,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/meta/cognition/reflection_layer.py"
          ],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "find_resonant_memories",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.spine.trait_manager": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "default_traits",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "load_traits",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "save_traits",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "reset_traits",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "decay_traits",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "adjust_traits_from_context",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        },
        {
          "name": "log_trait_shift",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process_traits",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "emoji_trait_bar",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "export_traits",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "load_all_traits",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "compare_traits",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "summarize_comparisons",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "generate_gpt_commentary",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "log_emotion",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "decay_emotion",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "save_emotion_log",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "load_emotion_log",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "blend_emotions",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "search_emotions",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "summarize_emotions",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.spine.emotion_intent_link": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "load_jsonl",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "crosslink_emotion_to_intent",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.fold_engine": {
      "metrics": {
        "total_symbols": 35,
        "used_symbols": 4,
        "unused_symbols": 31,
        "import_count": 7,
        "export_count": 2,
        "connectivity_score": 0.11428571428571428,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "MemoryType",
          "kind": "class",
          "line": 29,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_integration.py",
            "lukhas/orchestration/brain/integration/brain_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryPriority",
          "kind": "class",
          "line": 41,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_integration.py",
            "lukhas/orchestration/brain/integration/brain_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryFold",
          "kind": "class",
          "line": 50,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_integration.py",
            "lukhas/orchestration/brain/integration/brain_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicPatternEngine",
          "kind": "class",
          "line": 237,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIMemory",
          "kind": "class",
          "line": 340,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/brain_integration.py",
            "lukhas/orchestration/brain/integration/brain_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "retrieve",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_association",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "add_tag",
          "kind": "function",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "matches_tag",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 690,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_initial_importance",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_importance",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_pattern",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_memory_fold",
          "kind": "function",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_pattern_match",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_analyze_temporal_patterns",
          "kind": "function",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "add_fold",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "get_fold",
          "kind": "function",
          "line": 417,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "list_folds",
          "kind": "function",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "remove_fold",
          "kind": "function",
          "line": 438,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "associate_folds",
          "kind": "function",
          "line": 458,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_associated_folds",
          "kind": "function",
          "line": 491,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "tag_fold",
          "kind": "function",
          "line": 506,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_folds_by_tag",
          "kind": "function",
          "line": 532,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_folds_by_type",
          "kind": "function",
          "line": 548,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_folds_by_priority",
          "kind": "function",
          "line": 570,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_folds_by_owner",
          "kind": "function",
          "line": 592,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "update_fold_content",
          "kind": "function",
          "line": 607,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "update_fold_priority",
          "kind": "function",
          "line": 624,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_important_folds",
          "kind": "function",
          "line": 665,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "recalculate_importance",
          "kind": "function",
          "line": 685,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_add_to_indices",
          "kind": "function",
          "line": 699,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_remove_from_indices",
          "kind": "function",
          "line": 742,
          "used": false,
          "used_by": [],
          "complexity": 16,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_trait_sync": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "export_traits",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "load_all_traits",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "compare_traits",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "run",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.accent_adapter": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 1,
        "unused_symbols": 8,
        "import_count": 10,
        "export_count": 1,
        "connectivity_score": 0.1111111111111111,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "AccentAdapter",
          "kind": "class",
          "line": 36,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/spine/healix_mapper.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_encrypt_record",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_decrypt_record",
          "kind": "function",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "log_cultural_interaction",
          "kind": "function",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_user_memory_chain",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "remember_location",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "generate_reminiscence",
          "kind": "function",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": 24,
          "has_docstring": true
        },
        {
          "name": "boost_memory",
          "kind": "function",
          "line": 297,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.spine.emotion_mapper": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "EmotionMapper",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "map_intent_to_emoji",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "map_ethics_to_emotion",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_unified_self": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "save_report",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "load_all_traits",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "load_all_reflections",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "average_traits",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "synthesize_unified_self",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "save_snapshot",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_emotion_log": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "log_emotion",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decay_emotion",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "save_emotion_log",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "load_emotion_log",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_hash": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "get_manifest_hash",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_license_hash",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_symbolic_fingerprint",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_self_reflect_cron": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "run_reflection",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.spine.lukhas_guardian": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "guard_output",
          "kind": "function",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.lukhas_data.consent_manager": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "ConsentTierManager",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "load",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.config.lukhas_settings_editor": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "load_settings",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "save_settings",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.config.paths": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "ensure_paths",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_path",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.config.settings_loader": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "load_settings",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_setting",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "is_module_enabled",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "print_all_settings",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "validate_settings",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "log_setting_access",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "preview_defaults",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "list_all_keys",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "flatten",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.integration.brain_integration": {
      "metrics": {
        "total_symbols": 17,
        "used_symbols": 0,
        "unused_symbols": 17,
        "import_count": 18,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06293706293706294
      },
      "symbols": [
        {
          "name": "EnhancedEmotionalProcessor",
          "kind": "class",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedMemorySystem",
          "kind": "class",
          "line": 188,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedBrainIntegration",
          "kind": "class",
          "line": 360,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_enhanced_brain_integration",
          "kind": "function",
          "line": 663,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "update_emotional_state",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_emotion_distance",
          "kind": "function",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_voice_modulation_params",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "store_memory_with_emotion",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "retrieve_with_emotional_context",
          "kind": "function",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "dream_consolidate_memories",
          "kind": "function",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_dream_associations",
          "kind": "function",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "speak_with_emotion",
          "kind": "function",
          "line": 567,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "start_dream_consolidation",
          "kind": "function",
          "line": 594,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "stop_dream_consolidation",
          "kind": "function",
          "line": 626,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_comprehensive_status",
          "kind": "function",
          "line": 633,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "consolidation_loop",
          "kind": "function",
          "line": 602,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.personality.personality_refiner": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 1,
        "unused_symbols": 6,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.14285714285714285,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "PersonalityRefiner",
          "kind": "class",
          "line": 28,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/personality/voice_personality.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_profile",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "refine_with_feedback",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_save_profile",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_trait",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "export_personality_vector",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.personality.voice_personality": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 0,
        "unused_symbols": 10,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "VoicePersonalityIntegrator",
          "kind": "class",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_init_components",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "get_voice_modulation",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "adapt_to_interaction",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_should_enhance_text",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_apply_personality_traits",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_add_emphasis",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_add_pauses",
          "kind": "function",
          "line": 345,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_personality_traits",
          "kind": "function",
          "line": 360,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.consciousness.dream_narrator": {
      "metrics": {
        "total_symbols": 33,
        "used_symbols": 0,
        "unused_symbols": 33,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "DreamPhase",
          "kind": "class",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DreamNarrationType",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "DreamElement",
          "kind": "dataclass",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "DreamSequence",
          "kind": "dataclass",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DreamNarration",
          "kind": "dataclass",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DreamNarrator",
          "kind": "class",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "element_id",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "type",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_signature",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_resonance",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_depth",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_link",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sequence_id",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "elements",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "narrative_coherence",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_density",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_flow",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "duration_seconds",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "narration_id",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dream_sequence",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "narration_type",
          "kind": "type_alias",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "narrative_text",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "voice_parameters",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_elements",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_tone",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_level",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_duration",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_calculate_symbolic_coherence",
          "kind": "function",
          "line": 490,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.consciousness.memory_identity": {
      "metrics": {
        "total_symbols": 15,
        "used_symbols": 0,
        "unused_symbols": 15,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04195804195804196
      },
      "symbols": [
        {
          "name": "MemoryAccessPolicy",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryIdentityIntegration",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_memory",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "verify_access_permission",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "share_memory",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "revoke_memory_access",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_shared_memories",
          "kind": "function",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "encrypt_memory_content",
          "kind": "function",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "decrypt_memory_content",
          "kind": "function",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_encrypt_data",
          "kind": "function",
          "line": 347,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_decrypt_data",
          "kind": "function",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "cleanup",
          "kind": "function",
          "line": 379,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "notify_memory_removal",
          "kind": "function",
          "line": 413,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_permission_status",
          "kind": "function",
          "line": 443,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.prediction.predictive_resource_manager": {
      "metrics": {
        "total_symbols": 30,
        "used_symbols": 3,
        "unused_symbols": 27,
        "import_count": 5,
        "export_count": 2,
        "connectivity_score": 0.1,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "ResourceType",
          "kind": "class",
          "line": 19,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/controller.py",
            "lukhas/orchestration/brain/prediction/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PredictionModel",
          "kind": "class",
          "line": 28,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/prediction/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PredictiveResourceManager",
          "kind": "class",
          "line": 89,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/controller.py",
            "lukhas/orchestration/brain/prediction/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_data_point",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "predict_next",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_trend",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_initialize_prediction_models",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_optimization_strategies",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_resource_usage",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "predict_resource_needs",
          "kind": "function",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_current_usage",
          "kind": "function",
          "line": 320,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_prediction_confidence",
          "kind": "function",
          "line": 546,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_processing_complexity",
          "kind": "function",
          "line": 357,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_resource_recommendations",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_resource_risk",
          "kind": "function",
          "line": 404,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_optimization_opportunities",
          "kind": "function",
          "line": 418,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_overall_accuracy",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "predict_all_resources",
          "kind": "function",
          "line": 451,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "optimize_resource_allocation",
          "kind": "function",
          "line": 481,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_check_optimization_needed",
          "kind": "function",
          "line": 536,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_risk_level",
          "kind": "function",
          "line": 561,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 577,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_apply_optimization_action",
          "kind": "function",
          "line": 601,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_improvement",
          "kind": "function",
          "line": 619,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_prediction_summary",
          "kind": "function",
          "line": 636,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_prediction_statistics",
          "kind": "function",
          "line": 656,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "analyze_resource_trends",
          "kind": "function",
          "line": 678,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_trend_direction",
          "kind": "function",
          "line": 720,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_volatility",
          "kind": "function",
          "line": 737,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.awareness_adapter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "AwarenessAdapter",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_message",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_handle_awareness_update",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_focus_request",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_handle_reflection_request",
          "kind": "function",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.prediction.world_models": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "WorldModelType",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SimulationAccuracy",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "WorldState",
          "kind": "dataclass",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PredictionResult",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PhysicsEngine",
          "kind": "class",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TemporalDynamicsModel",
          "kind": "class",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "WorldModels",
          "kind": "class",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "state_id",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entities",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "relationships",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "physics_properties",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uncertainty",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "predicted_state",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "prediction_horizon",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alternatives",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uncertainty_bounds",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 337,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_calculate_entity_changes",
          "kind": "function",
          "line": 190,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_temporal_correlation",
          "kind": "function",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_calculate_linear_trend",
          "kind": "function",
          "line": 283,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_temporal_confidence",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 356,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_simulation_confidence",
          "kind": "function",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "BioInspiredAdapter",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_message",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_configure_attention_gates",
          "kind": "function",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_resource_need",
          "kind": "function",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_quantum_pattern",
          "kind": "function",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.dream_adapter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "DreamEngineAdapter",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_message",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_handle_start_cycle",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_stop_cycle",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_get_state",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.voice_adapter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "VoiceAdapter",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_message",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_handle_speak_request",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_audio_input",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_handle_voice_config",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.legacy_adapter": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "LegacyComponentAdapter",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasCoreAdapter",
          "kind": "class",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BrainIntegrationAdapter",
          "kind": "class",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adapt_legacy_message",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_legacy_handler",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_message",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "CognitiveAdapter",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_update_cognitive_state",
          "kind": "function",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_recognize_patterns",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 15,
          "has_docstring": true
        },
        {
          "name": "_generate_response",
          "kind": "function",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_record_metrics",
          "kind": "function",
          "line": 308,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_search_episodic",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_search_semantic",
          "kind": "function",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_search_procedural",
          "kind": "function",
          "line": 343,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_search_emotional",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_match_temporal_pattern",
          "kind": "function",
          "line": 353,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_match_causal_pattern",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_match_spatial_pattern",
          "kind": "function",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_match_emotional_pattern",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "OscillatorAdapter",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_node",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_phase_coherence",
          "kind": "function",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_integrate_responses",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_record_metrics",
          "kind": "function",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "IntentNodeAdapter",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_compute_query_amplitude",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_task_amplitude",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_dialogue_amplitude",
          "kind": "function",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_quantum_like_state",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_metrics",
          "kind": "function",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.unified_integration.adapters.brain_adapter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "BrainAdapter",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_message",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_handle_input_processing",
          "kind": "function",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_memory_consolidation",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_dream_cycle",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator": {
      "metrics": {
        "total_symbols": 61,
        "used_symbols": 2,
        "unused_symbols": 59,
        "import_count": 7,
        "export_count": 2,
        "connectivity_score": 0.03278688524590164,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "UncertaintyType",
          "kind": "class",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConfidenceMetrics",
          "kind": "dataclass",
          "line": 32,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CalibrationRecord",
          "kind": "dataclass",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BayesianConfidenceEstimator",
          "kind": "class",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumConfidenceEstimator",
          "kind": "class",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicConfidenceEstimator",
          "kind": "class",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ContradictionDetector",
          "kind": "class",
          "line": 292,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalConfidenceEstimator",
          "kind": "class",
          "line": 353,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UncertaintyDecomposer",
          "kind": "class",
          "line": 394,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaLearningCalibrator",
          "kind": "class",
          "line": 537,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdvancedConfidenceCalibrator",
          "kind": "class",
          "line": 623,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/__init__.py",
            "lukhas/orchestration/brain/abstract_reasoning/core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "bayesian_confidence",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_confidence",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_confidence",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_confidence",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_brain_coherence",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uncertainty_decomposition",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "meta_confidence",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "calibration_score",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "prediction_confidence",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "actual_outcome",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning_complexity",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brain_coherence",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uncertainty_types",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context_features",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 629,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "estimate_confidence",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_evidence_strength",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_get_prior_probability",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_likelihood",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_marginal_likelihood",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_context_key",
          "kind": "function",
          "line": 593,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_beliefs",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_coherence_confidence",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_entanglement_confidence",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_superposition_confidence",
          "kind": "function",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_consistency_confidence",
          "kind": "function",
          "line": 261,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_premise_confidence",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_completeness_confidence",
          "kind": "function",
          "line": 269,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_detect_contradictions",
          "kind": "function",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "find_contradictions",
          "kind": "function",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_extract_statements",
          "kind": "function",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_are_contradictory",
          "kind": "function",
          "line": 330,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_aesthetic_confidence",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_intuitive_confidence",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_empathy_confidence",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decompose_uncertainty",
          "kind": "function",
          "line": 397,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_aleatory_uncertainty",
          "kind": "function",
          "line": 431,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_estimate_epistemic_uncertainty",
          "kind": "function",
          "line": 453,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_estimate_linguistic_uncertainty",
          "kind": "function",
          "line": 476,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_estimate_temporal_uncertainty",
          "kind": "function",
          "line": 499,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_estimate_quantum_uncertainty",
          "kind": "function",
          "line": 522,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "update_calibration",
          "kind": "function",
          "line": 545,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_calibration_model",
          "kind": "function",
          "line": 574,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_calibration_score",
          "kind": "function",
          "line": 602,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "calibrate_confidence",
          "kind": "function",
          "line": 646,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_meta_confidence",
          "kind": "function",
          "line": 728,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_from_outcome",
          "kind": "function",
          "line": 753,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_calibration_summary",
          "kind": "function",
          "line": 800,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "extract_strings",
          "kind": "function",
          "line": 317,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine": {
      "metrics": {
        "total_symbols": 31,
        "used_symbols": 3,
        "unused_symbols": 28,
        "import_count": 14,
        "export_count": 2,
        "connectivity_score": 0.0967741935483871,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "BrainSymphonyConfig",
          "kind": "dataclass",
          "line": 108,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReasoningPhase",
          "kind": "dataclass",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BrainSymphony",
          "kind": "class",
          "line": 132,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BioQuantumSymbolicReasoner",
          "kind": "class",
          "line": 420,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/__init__.py",
            "lukhas/orchestration/brain/abstract_reasoning/core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OscillationSynchronizer",
          "kind": "class",
          "line": 887,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "dreams_frequency",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_frequency",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_frequency",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "learning_frequency",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "master_sync_frequency",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence_threshold",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_oscillation_amplitude",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "brain_target",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "frequency",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "duration",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_inspired_gates",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expected_output_type",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_encode_to_quantum_like_state",
          "kind": "function",
          "line": 685,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_entanglement_strength",
          "kind": "function",
          "line": 736,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_multi_brain_coherence",
          "kind": "function",
          "line": 747,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_synthesize_coherent_solution",
          "kind": "function",
          "line": 761,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_reasoning_conclusion",
          "kind": "function",
          "line": 795,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_supporting_evidence",
          "kind": "function",
          "line": 817,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_alternative_hypotheses",
          "kind": "function",
          "line": 837,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "MockBrainCore",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MockQuantumBridge",
          "kind": "class",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MockSynapticGate",
          "kind": "class",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MockOscillator",
          "kind": "class",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.abstract_reasoning.interface": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 1,
        "unused_symbols": 6,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.14285714285714285,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "AbstractReasoningBrainInterface",
          "kind": "class",
          "line": 24,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "_interpret_confidence",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "stop_radar_monitoring",
          "kind": "function",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "export_radar_analytics",
          "kind": "function",
          "line": 474,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_radar_performance_summary",
          "kind": "function",
          "line": 496,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "configure_radar_analytics",
          "kind": "function",
          "line": 527,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.abstract_reasoning.oscillator": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 1,
        "unused_symbols": 8,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.1111111111111111,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "AbstractReasoningBrainOscillator",
          "kind": "class",
          "line": 16,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_rhythm",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "sync_with_master",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_optimal_phase_offset",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_coherence",
          "kind": "function",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_synchronization_status",
          "kind": "function",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reset_synchronization",
          "kind": "function",
          "line": 303,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_performance_metrics",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.abstract_reasoning.core": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 1,
        "unused_symbols": 5,
        "import_count": 10,
        "export_count": 2,
        "connectivity_score": 0.16666666666666666,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "AbstractReasoningBrainCore",
          "kind": "class",
          "line": 64,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/abstract_reasoning/__init__.py",
            "lukhas/orchestration/brain/abstract_reasoning/interface.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_calculate_reasoning_complexity",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_performance_metrics",
          "kind": "function",
          "line": 406,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_brain_status",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "MockBrainCore",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.output.lukhas_report_generator": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "load_previous_reflections",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_report",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.meta.compliance_engine_20250503213400": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "ComplianceEngine",
          "kind": "class",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "anonymize_metadata",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "should_retain_data",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_voice_data_compliance",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "validate_content_against_ethical_constraints",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "generate_compliance_report",
          "kind": "function",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_anonymous_id",
          "kind": "function",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_compliance_status",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.meta.cognition.reflection_layer": {
      "metrics": {
        "total_symbols": 45,
        "used_symbols": 0,
        "unused_symbols": 45,
        "import_count": 23,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08041958041958042
      },
      "symbols": [
        {
          "name": "ReflectionType",
          "kind": "class",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicMood",
          "kind": "class",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ReflectiveStatement",
          "kind": "dataclass",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ConscienceSnapshot",
          "kind": "dataclass",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReflectionLayer",
          "kind": "class",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_reflection_layer",
          "kind": "function",
          "line": 913,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reflection_type",
          "kind": "type_alias",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_mood",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_signature",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trigger_event",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "associated_drift",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_weight",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "voice_vocalized",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_mood",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intent_alignment",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_stability",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_compliance",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recent_reflections",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "triggered_dreams",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "voice_alerts",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_load_manifest",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_infrastructure",
          "kind": "function",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_symbolic_vocabulary",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reflect_on_drift_score",
          "kind": "function",
          "line": 275,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "reflect_on_intent_deviation",
          "kind": "function",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "reflect_on_emotional_state",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "contemplate_ethical_conflict",
          "kind": "function",
          "line": 416,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "model_symbolic_future",
          "kind": "function",
          "line": 459,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "synthesize_memory_insights",
          "kind": "function",
          "line": 498,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "log_reflection",
          "kind": "function",
          "line": 537,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "vocalize_conscience",
          "kind": "function",
          "line": 563,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "trigger_dream_simulation",
          "kind": "function",
          "line": 596,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "capture_consciousness_snapshot",
          "kind": "function",
          "line": 632,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "process_reflection_cycle",
          "kind": "function",
          "line": 674,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_categorize_drift_severity",
          "kind": "function",
          "line": 734,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_symbolic_element",
          "kind": "function",
          "line": 747,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_quantum_signature",
          "kind": "function",
          "line": 813,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_reflection_history",
          "kind": "function",
          "line": 819,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_consciousness_trend",
          "kind": "function",
          "line": 824,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "SeverityLevel",
          "kind": "class",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.meta.cognition.orchestrator": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "MetaCognitiveOrchestrator",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "orchestrate",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_assess_current_state",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_synthesize_results",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_metacognitive_insights",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "_extract_comprehensive_reasoning_path",
          "kind": "function",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_assess_capability_level",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_self_modification_recommendations",
          "kind": "function",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_evaluate_and_modify",
          "kind": "function",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_perform_self_modification",
          "kind": "function",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_update_capability_level",
          "kind": "function",
          "line": 331,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_metacognitive_status",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.meta.integrations.bot_enhancement": {
      "metrics": {
        "total_symbols": 15,
        "used_symbols": 0,
        "unused_symbols": 15,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "EnhancementRequest",
          "kind": "dataclass",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancementResponse",
          "kind": "dataclass",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BotEnhancementEngine",
          "kind": "class",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "bot_id",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enhancement_type",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "request_data",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "request_id",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enhancement_data",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_create_error_response",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.meta.learning.system": {
      "metrics": {
        "total_symbols": 45,
        "used_symbols": 0,
        "unused_symbols": 45,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "FederatedModel",
          "kind": "class",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FederatedLearningManager",
          "kind": "class",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReflectiveIntrospectionSystem",
          "kind": "class",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaLearningSystem",
          "kind": "class",
          "line": 632,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 638,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "update_with_gradients",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_parameters",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "serialize",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "deserialize",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_model",
          "kind": "function",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_model",
          "kind": "function",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "contribute_gradients",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_aggregate_model",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_metrics",
          "kind": "function",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "save_model",
          "kind": "function",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "load_models",
          "kind": "function",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_client_status",
          "kind": "function",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "log_interaction",
          "kind": "function",
          "line": 324,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "reflect",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_analyze_interactions",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_detect_user_patterns",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_detect_error_patterns",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_trend",
          "kind": "function",
          "line": 493,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_improvement_plans",
          "kind": "function",
          "line": 528,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_implement_improvements",
          "kind": "function",
          "line": 583,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status_report",
          "kind": "function",
          "line": 602,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_register_core_models",
          "kind": "function",
          "line": 661,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "optimize_learning_approach",
          "kind": "function",
          "line": 684,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "incorporate_feedback",
          "kind": "function",
          "line": 728,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "generate_learning_report",
          "kind": "function",
          "line": 773,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_federated_model",
          "kind": "function",
          "line": 799,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "trigger_reflection",
          "kind": "function",
          "line": 812,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_strategies",
          "kind": "function",
          "line": 821,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_learning_features",
          "kind": "function",
          "line": 857,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_select_strategy",
          "kind": "function",
          "line": 877,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_apply_strategy",
          "kind": "function",
          "line": 903,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_evaluate_performance",
          "kind": "function",
          "line": 931,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_strategy_performance",
          "kind": "function",
          "line": 961,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_update_meta_parameters",
          "kind": "function",
          "line": 998,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_adjust_strategy_parameters",
          "kind": "function",
          "line": 1010,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_adaptation_progress",
          "kind": "function",
          "line": 1025,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_sparsity",
          "kind": "function",
          "line": 1043,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_complexity",
          "kind": "function",
          "line": 1048,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_strategy_match",
          "kind": "function",
          "line": 1053,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_generate_meta_insights",
          "kind": "function",
          "line": 1075,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.self_improvement.meta_learner": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "MetaLearner",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.qrl_code.qrly": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "map_emoji_archetypes",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_glymph_backstory",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_retro_image",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "encrypt_qrlymph",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "decrypt_qrlymph",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "embed_compliance_metadata",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.qrl_code.com_validator": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "validate_compliance",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.compliance.ai_compliance_manager": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "ComplianceLevel",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIComplianceManager",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_is_high_risk_ai_system",
          "kind": "function",
          "line": 399,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_transparency_report",
          "kind": "function",
          "line": 416,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_processing_purposes",
          "kind": "function",
          "line": 446,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_compliance_recommendations",
          "kind": "function",
          "line": 517,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.compliance.constitutional_ai": {
      "metrics": {
        "total_symbols": 42,
        "used_symbols": 0,
        "unused_symbols": 42,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03146853146853147
      },
      "symbols": [
        {
          "name": "SafetyLevel",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalPrinciple",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CapabilityRisk",
          "kind": "class",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConstitutionalRule",
          "kind": "dataclass",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SafetyAssessment",
          "kind": "dataclass",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalDecision",
          "kind": "dataclass",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConstitutionalFramework",
          "kind": "class",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SafetyMonitor",
          "kind": "class",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalDecisionMaker",
          "kind": "class",
          "line": 532,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConstitutionalAI",
          "kind": "class",
          "line": 872,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "rule_id",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "principle",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conditions",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "violations_triggers",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enforcement_actions",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assessment_id",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "safety_level",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_factors",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mitigation_strategies",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "constitutional_violations",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_id",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "considered_principles",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reasoning",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "potential_consequences",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alternatives_considered",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 882,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "setup_core_constitution",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_constitutional_rule",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_applicable_rules",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_is_rule_applicable",
          "kind": "function",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_initialize_risk_patterns",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_safety_level",
          "kind": "function",
          "line": 392,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_initialize_ethical_weights",
          "kind": "function",
          "line": 543,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 897,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_ai.orchestrator": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "run_symbolic_orchestration",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.reasoning.symbolic_validator": {
      "metrics": {
        "total_symbols": 35,
        "used_symbols": 0,
        "unused_symbols": 35,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04895104895104895
      },
      "symbols": [
        {
          "name": "ValidationSeverity",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValidationType",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValidationIssue",
          "kind": "dataclass",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValidationResult",
          "kind": "dataclass",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BaseValidator",
          "kind": "class",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicIntegrationValidator",
          "kind": "class",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsValidator",
          "kind": "class",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceValidator",
          "kind": "class",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SecurityValidator",
          "kind": "class",
          "line": 599,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsciousnessValidator",
          "kind": "class",
          "line": 773,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasSymbolicValidator",
          "kind": "class",
          "line": 920,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validation_type",
          "kind": "type_alias",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "code",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "file_path",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "line_number",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "column",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "suggestion",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_score",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "issues",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_scores",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_resonance",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_compatibility",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_score",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethics_score",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "add_issue",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_issues_by_severity",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_issues_by_type",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 928,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "add_custom_validator",
          "kind": "function",
          "line": 953,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_validation_report",
          "kind": "function",
          "line": 1083,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_ai.modules.intent_inference": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "infer_intent",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_ai.modules.dissonance_detector": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "detect_dissonance",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_ai.modules.dream_generator": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "_apply_ethical_filter",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "generate_dream",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_ai.modules.episodic_recall": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "recall",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.rem.dream_log": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "log_dream",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.rem.generate_dream": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "generate_dream",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.rem.lidar_emotion_interpreter": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "interpret_emotional_state",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "generate_collapse_hash",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.rem.dream_stats": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "load_dreams",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "summarize_dreams",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.rem.generate_dream_data": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "generate_dream",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.rem.dream_processor_integrator": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "DreamProcessorIntegration",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_extract_patterns",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_find_memory_relationships",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_emotional_context",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_pattern_confidence",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_relationship_strength",
          "kind": "function",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.rem.rem": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "run_rem_cycle",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_engine.semantic_reasoner": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 0,
        "unused_symbols": 18,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "SymbolicReasoningEngine",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_sanitize_for_symbol_name",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "reason",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_extract_semantic_content",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_patterns",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_detect_formal_logic",
          "kind": "function",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_extract_contextual_content",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_extract_logical_elements",
          "kind": "function",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": 18,
          "has_docstring": true
        },
        {
          "name": "_build_symbolic_logical_chains",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_check_semantic_overlap",
          "kind": "function",
          "line": 301,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_symbolic_confidences",
          "kind": "function",
          "line": 321,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_create_symbolic_summary",
          "kind": "function",
          "line": 365,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_update_reasoning_graph",
          "kind": "function",
          "line": 394,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_primary_conclusion",
          "kind": "function",
          "line": 432,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_reasoning_path",
          "kind": "function",
          "line": 469,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_extract_symbolic_structure",
          "kind": "function",
          "line": 499,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_update_history",
          "kind": "function",
          "line": 542,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_engine.symbolic_core": {
      "metrics": {
        "total_symbols": 19,
        "used_symbols": 1,
        "unused_symbols": 18,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.05263157894736842,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "SymbolicWorld",
          "kind": "class",
          "line": 15,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/symbolic_engine/semantic_reasoner.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Symbol",
          "kind": "class",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Relationship",
          "kind": "class",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicReasoner",
          "kind": "class",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "create_symbol",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "link_symbols",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_related_symbols",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "add_temporal_chain",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_property",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_property",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "matches_pattern",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "is_bidirectional",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_inference_rule",
          "kind": "function",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reason",
          "kind": "function",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_format_props",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "find_patterns",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_find_property_patterns",
          "kind": "function",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_find_relationship_patterns",
          "kind": "function",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.symbolic_engine.pattern_recognition": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "UnifiedPatternRecognition",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_optimizers",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_pattern",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "recognize_patterns",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_symbolic_pattern_match",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_neural_pattern_extract",
          "kind": "function",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_pattern_match",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_merge_pattern_matches",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_error_signal",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_embeddings",
          "kind": "function",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_predictions",
          "kind": "function",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.neuro_symbolic.bridge": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "NeuralSymbolicBridge",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_extract_patterns",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_symbolic_reasoning",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_integrate_results",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_symbolic_confidence",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.neuro_symbolic.hybrid_integration": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "NeuroSymbolicIntegrator",
          "kind": "class",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_default_config",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_integrate_results",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_weighted_integration",
          "kind": "function",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_maximal_integration",
          "kind": "function",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_adaptive_integration",
          "kind": "function",
          "line": 283,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_extract_reasoning_trace",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 22,
          "has_docstring": true
        },
        {
          "name": "_update_history",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.neuro_symbolic.neural_processor": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "NeuralProcessor",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_model",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "process",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_embeddings",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_attention",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_classify",
          "kind": "function",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_confidence",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "train",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_integration": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "NeuroSymbolicIntegration",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "integrate",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_weighted_average",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_symbolic_first",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_neural_first",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_confidence_based",
          "kind": "function",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_integration_method",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "set_default_method",
          "kind": "function",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine": {
      "metrics": {
        "total_symbols": 26,
        "used_symbols": 1,
        "unused_symbols": 25,
        "import_count": 5,
        "export_count": 1,
        "connectivity_score": 0.038461538461538464,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "QuantumInspiredAttention",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CausalReasoningModule",
          "kind": "class",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NeuroSymbolicEngine",
          "kind": "class",
          "line": 424,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/integration_bridge.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 430,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_superposition",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "attend",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_features",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_attention_distribution",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_apply_superposition",
          "kind": "function",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_attention_gates",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_update_entanglement_map",
          "kind": "function",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "reason",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_causal_elements",
          "kind": "function",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_build_causal_chains",
          "kind": "function",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_causal_confidences",
          "kind": "function",
          "line": 321,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_summarize_chain",
          "kind": "function",
          "line": 347,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_causal_graph",
          "kind": "function",
          "line": 361,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_primary_cause",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_extract_reasoning_path",
          "kind": "function",
          "line": 393,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_history",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_high_confidence_response",
          "kind": "function",
          "line": 582,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_medium_confidence_response",
          "kind": "function",
          "line": 595,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_create_low_confidence_response",
          "kind": "function",
          "line": 605,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_should_generate_image",
          "kind": "function",
          "line": 610,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_image_prompt",
          "kind": "function",
          "line": 626,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_suggested_actions",
          "kind": "function",
          "line": 644,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.neuro_symbolic.governance.symbolic_action_protocol": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "SymbolicActionProtocol",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "evaluate_proposal",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_permissions",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "explain_action",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.ethics.lukhas_ethics_guard": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "LegalComplianceAssistant",
          "kind": "class",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_access",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "log_violation",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_build_legal_knowledge_graph",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_cultural_context",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.ethics.ethics_engine": {
      "metrics": {
        "total_symbols": 24,
        "used_symbols": 0,
        "unused_symbols": 24,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "EthicsEngine",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "evaluate_action",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_extract_action_type",
          "kind": "function",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_extract_content",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_evaluate_against_framework",
          "kind": "function",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_evaluate_utilitarian",
          "kind": "function",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_evaluate_deontological",
          "kind": "function",
          "line": 294,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_evaluate_virtue_ethics",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_evaluate_justice",
          "kind": "function",
          "line": 392,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_evaluate_care_ethics",
          "kind": "function",
          "line": 421,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_evaluate_against_principle",
          "kind": "function",
          "line": 450,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_evaluate_non_maleficence",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_evaluate_beneficence",
          "kind": "function",
          "line": 513,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_evaluate_autonomy",
          "kind": "function",
          "line": 539,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_evaluate_justice_principle",
          "kind": "function",
          "line": 574,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_evaluate_transparency",
          "kind": "function",
          "line": 599,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_evaluate_privacy",
          "kind": "function",
          "line": 631,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "suggest_alternatives",
          "kind": "function",
          "line": 665,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "increase_scrutiny_level",
          "kind": "function",
          "line": 727,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reset_scrutiny_level",
          "kind": "function",
          "line": 737,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "incorporate_feedback",
          "kind": "function",
          "line": 742,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 770,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_add_to_history",
          "kind": "function",
          "line": 779,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.ethics.ethical_hierarchy": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 0,
        "unused_symbols": 10,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "EthicalPrinciple",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceFramework",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalSeverity",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalHierarchy",
          "kind": "class",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_generate_assessment_reasoning",
          "kind": "function",
          "line": 508,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_identify_violations",
          "kind": "function",
          "line": 621,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "adapt_weights",
          "kind": "function",
          "line": 649,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_priority_weights",
          "kind": "function",
          "line": 669,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_ethical_status",
          "kind": "function",
          "line": 693,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.ethics.ethical_stop": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "EthicalProtestModule",
          "kind": "class",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ProtestEthicsValidator",
          "kind": "class",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LegalComplianceAssistant",
          "kind": "class",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "plan_protest",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "validate",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "verify",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_peaceful_intent",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.ethics.ethical_conflict_resolution": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "resolve_ethical_conflict",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_historical_impact",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.seamless.experience_core": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "SeamlessExperience",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.emotional.core": {
      "metrics": {
        "total_symbols": 13,
        "used_symbols": 0,
        "unused_symbols": 13,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "EmotionRequest",
          "kind": "dataclass",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionConfig",
          "kind": "class",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionHealth",
          "kind": "class",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionModule",
          "kind": "class",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "intent",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_weight",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_signature",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_symbol",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_vocabulary",
          "kind": "function",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_vocabulary",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_symbolic_response",
          "kind": "function",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.emotional.ethical_stop": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "EthicalProtestModule",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ProtestEthicsValidator",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LegalComplianceAssistant",
          "kind": "class",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "plan_protest",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "validate",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "verify",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_peaceful_intent",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.emotional.ethical_conflict_resolution": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "resolve_ethical_conflict",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_historical_impact",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.subsystems.__init__": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "__init__",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.orchestration.the_oscillator": {
      "metrics": {
        "total_symbols": 41,
        "used_symbols": 0,
        "unused_symbols": 41,
        "import_count": 8,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "GlobalComplianceFramework",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalHierarchy",
          "kind": "class",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumEthicalHandler",
          "kind": "class",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LegalComplianceLayer",
          "kind": "class",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasAGI",
          "kind": "class",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "fetch_live_compliance_updates",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "compliance_score",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "log_violation",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "activate_safeguards",
          "kind": "function",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "recalibrate_safeguards",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "initiate_emergency_shutdown",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adapt_weights",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_priority_weights",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_ethical_circuit",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "measure_ethical_state",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "explain_decision",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "fallback_protocol",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "symbolic_fallback_ethics",
          "kind": "function",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "human_review_required",
          "kind": "function",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_operation",
          "kind": "function",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_transparency",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_data_protection",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_bias",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "play_sound",
          "kind": "function",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "process_decision",
          "kind": "function",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "recalibrate_autonomy",
          "kind": "function",
          "line": 339,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_modulate_ethical_weights",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "compute_system_health_factor",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "compute_context_entropy",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "adaptive_context_simplification",
          "kind": "function",
          "line": 364,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_human_oversight_protocol",
          "kind": "function",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_safe_fallback_response",
          "kind": "function",
          "line": 376,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_context",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_anonymize_data",
          "kind": "function",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_synthesize_output",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": false
        },
        {
          "name": "monitor_post_market",
          "kind": "function",
          "line": 459,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "check_adversarial_input",
          "kind": "function",
          "line": 467,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "assess_stakeholder_impact",
          "kind": "function",
          "line": 473,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "modulate_emotional_state",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.orchestration.core": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "OrchestrationCore",
          "kind": "class",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.orchestration.main_node": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.055944055944055944
      },
      "symbols": [
        {
          "name": "AdaptiveAGISystem",
          "kind": "class",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "init_components",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_event_handlers",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_duration",
          "kind": "function",
          "line": 343,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_memory_usage",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_save_system_state",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.orchestration.orchestrator_core": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "lukhas_narrate",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "OrchestratorCore",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ZKProofStub",
          "kind": "class",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "simulate_trust_flow",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "verify",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.orchestration.emotional_oscillator": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 1,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.2,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "EmotionalOscillator",
          "kind": "class",
          "line": 26,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/personality/voice_personality.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "oscillator_scope",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "modulate_emotion",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adjust_parameters",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.orchestration.orchestrator": {
      "metrics": {
        "total_symbols": 26,
        "used_symbols": 3,
        "unused_symbols": 23,
        "import_count": 11,
        "export_count": 1,
        "connectivity_score": 0.11538461538461539,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "OrchestrationMode",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProcessingLevel",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasTier",
          "kind": "class",
          "line": 42,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/lukhas_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsciousnessState",
          "kind": "class",
          "line": 52,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/lukhas_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TierCapabilities",
          "kind": "class",
          "line": 62,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/lukhas_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestrationMetrics",
          "kind": "dataclass",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasOrchestrator",
          "kind": "class",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_capabilities",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "has_feature",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_consciousness_state",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "processing_quality",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "safety_score",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_score",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reliability_score",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_operations",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "successful_operations",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failed_operations",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_response_time",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_logging",
          "kind": "function",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "validate_tier_access",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_rate_limits",
          "kind": "function",
          "line": 345,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_tier_info",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_synthesize_results",
          "kind": "function",
          "line": 532,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 626,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.governance.dao_governance_node": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "ProposalType",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProposalStatus",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DAOGovernanceNode",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_initialize_council",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_load_governance_config",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_proposal",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_governance_status",
          "kind": "function",
          "line": 489,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_log_to_trace",
          "kind": "function",
          "line": 575,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.dna.lukhas_dna_link": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 0,
        "unused_symbols": 11,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "LucasDNALink",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_reflection",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "translate",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "generate_opinion",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "learn_term_loop",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "generate_email_draft",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "generate_social_post",
          "kind": "function",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "generate_text_message",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "reword_draft",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_log_output",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.monitoring.guardian_reflector": {
      "metrics": {
        "total_symbols": 35,
        "used_symbols": 0,
        "unused_symbols": 35,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038461538461538464
      },
      "symbols": [
        {
          "name": "EthicalFramework",
          "kind": "class",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MoralSeverity",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalReflection",
          "kind": "dataclass",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MoralDrift",
          "kind": "dataclass",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GuardianReflector",
          "kind": "class",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_plugin",
          "kind": "function",
          "line": 658,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decision_id",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "frameworks_applied",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "moral_score",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "justification",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "concerns",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_impact",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trend_direction",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "time_window",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "key_factors",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommended_actions",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_synthesize_moral_score",
          "kind": "function",
          "line": 393,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_determine_severity",
          "kind": "function",
          "line": 415,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_identify_concerns",
          "kind": "function",
          "line": 428,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 438,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_justification",
          "kind": "function",
          "line": 453,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_virtue_alignment",
          "kind": "function",
          "line": 497,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_assess_duty_compliance",
          "kind": "function",
          "line": 503,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_utility",
          "kind": "function",
          "line": 508,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_care_preservation",
          "kind": "function",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_drift_score",
          "kind": "function",
          "line": 528,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_determine_trend",
          "kind": "function",
          "line": 539,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_drift_factors",
          "kind": "function",
          "line": 552,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_drift_recommendations",
          "kind": "function",
          "line": 572,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 641,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.monitoring.performance": {
      "metrics": {
        "total_symbols": 65,
        "used_symbols": 0,
        "unused_symbols": 65,
        "import_count": 17,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05944055944055944
      },
      "symbols": [
        {
          "name": "PerformanceMetrics",
          "kind": "dataclass",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FunctionProfile",
          "kind": "dataclass",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SystemMonitor",
          "kind": "class",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FunctionProfiler",
          "kind": "class",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryProfiler",
          "kind": "class",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CacheManager",
          "kind": "class",
          "line": 362,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ThreadPoolManager",
          "kind": "class",
          "line": 468,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AsyncTaskManager",
          "kind": "class",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "timed",
          "kind": "function",
          "line": 563,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "memory_limit",
          "kind": "function",
          "line": 579,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "performance_context",
          "kind": "function",
          "line": 607,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_system_info",
          "kind": "function",
          "line": 634,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "optimize_gc",
          "kind": "function",
          "line": 647,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "profile_function",
          "kind": "function",
          "line": 658,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "profile_async_function",
          "kind": "function",
          "line": 663,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "cpu_percent",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_usage",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_percent",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "disk_io_read",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "disk_io_write",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "network_sent",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "network_recv",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "thread_count",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "open_files",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "call_count",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_time",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "avg_time",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "min_time",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_time",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_called",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "add_call",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 504,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "start_monitoring",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "stop_monitoring",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_monitor_loop",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_current_metrics",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_metrics_history",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_average_metrics",
          "kind": "function",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "enable",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "disable",
          "kind": "function",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "profile",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "profile_async",
          "kind": "function",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_profiles",
          "kind": "function",
          "line": 283,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_top_functions",
          "kind": "function",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "clear_profiles",
          "kind": "function",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "start",
          "kind": "function",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "stop",
          "kind": "function",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "take_snapshot",
          "kind": "function",
          "line": 317,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_top_stats",
          "kind": "function",
          "line": 325,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "compare_snapshots",
          "kind": "function",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get",
          "kind": "function",
          "line": 372,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "set",
          "kind": "function",
          "line": 398,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "delete",
          "kind": "function",
          "line": 423,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "clear",
          "kind": "function",
          "line": 435,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "cleanup_expired",
          "kind": "function",
          "line": 441,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_stats",
          "kind": "function",
          "line": 457,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_executor",
          "kind": "function",
          "line": 476,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "submit",
          "kind": "function",
          "line": 484,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "map",
          "kind": "function",
          "line": 489,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 494,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 583,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 581,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 1,
        "unused_symbols": 19,
        "import_count": 4,
        "export_count": 2,
        "connectivity_score": 0.05,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "ReflectiveIntrospectionSystem",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/controller.py",
            "lukhas/orchestration/brain/meta_cognitive/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_interaction",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "reflect",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_analyze_interactions",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_detect_user_patterns",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_detect_error_patterns",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_trend",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_improvement_plans",
          "kind": "function",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_implement_improvements",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status_report",
          "kind": "function",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_system_performance",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "identify_bottlenecks",
          "kind": "function",
          "line": 349,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "apply_architectural_adaptations",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_assess_complexity",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_awareness_level",
          "kind": "function",
          "line": 484,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_assess_processing_quality",
          "kind": "function",
          "line": 499,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_identify_learning_opportunities",
          "kind": "function",
          "line": 511,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_estimate_cognitive_load",
          "kind": "function",
          "line": 536,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_adaptation_suggestions",
          "kind": "function",
          "line": 551,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.dream_engine.visualizer_core": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "load_latest_flashback",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "build_visual_prompt",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.dream_engine.dream_replay_cli": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "run_cli",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.dream_engine.cli.dream_processor": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "DreamProcessor",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_find_memory_relationship",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_consolidate_memories",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_group_similar_patterns",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.dream_engine.cli.replay": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0034965034965034965
      },
      "symbols": [
        {
          "name": "run_cli",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.dream_engine.cli.dream_cli": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.01048951048951049
      },
      "symbols": [
        {
          "name": "run_narrator_queue",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_voice_narrator",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "inject_test_dream",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_all",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.neural.neural_intelligence_api": {
      "metrics": {
        "total_symbols": 17,
        "used_symbols": 0,
        "unused_symbols": 17,
        "import_count": 7,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024475524475524476
      },
      "symbols": [
        {
          "name": "IntelligenceRequest",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "IntelligenceResponse",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SystemStatus",
          "kind": "class",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "query",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_dreams",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_healix",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_flashback",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capability_level",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lukhas_innovations",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "uptime",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_metrics",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_capabilities",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.brain.neural.neural_intelligence_main": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "LukhasNeuralIntelligence",
          "kind": "class",
          "line": 27,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/neural/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_innovations_status",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.brain.neural.cognitive_core": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 1,
        "unused_symbols": 9,
        "import_count": 17,
        "export_count": 1,
        "connectivity_score": 0.1,
        "cohesion_score": 0.0,
        "coupling_score": 0.05944055944055944
      },
      "symbols": [
        {
          "name": "NeuralIntelligenceSystem",
          "kind": "class",
          "line": 86,
          "used": true,
          "used_by": [
            "lukhas/orchestration/brain/neural/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_initialize_core_components",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_initialize_lukhas_innovations",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_initialize_system_state",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_safe_response",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_conversation_history",
          "kind": "function",
          "line": 399,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_performance_metrics",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 439,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_lukhas_innovations_status",
          "kind": "function",
          "line": 476,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.user_feedback.symbolic_tuner": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "apply_feedback_adjustments",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.user_feedback.feedback_collector": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "collect_feedback",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "store_feedback",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.system_orchestrator": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "SystemOrchestrator",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_orchestration_component",
          "kind": "function",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_drift",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.orchestrator_core_oxn": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "lukhas_narrate",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "OrchestratorCore",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ZKProofStub",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "simulate_trust_flow",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "verify",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.core_modules.signals": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "SignalType",
          "kind": "class",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DiagnosticSignalType",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicSignal",
          "kind": "dataclass",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "signal_type",
          "kind": "type_alias",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source_module",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_module",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collapse_hash",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy_log",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence_score",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "diagnostic_event",
          "kind": "type_alias",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.plugin_loader": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "load_plugins",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.lukhas_orchestrator": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 17,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05944055944055944
      },
      "symbols": [
        {
          "name": "SystemSnapshot",
          "kind": "dataclass",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasOrchestrator",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "core_modules",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_modules",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_health",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_status",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.core_modules.controller": {
      "metrics": {
        "total_symbols": 66,
        "used_symbols": 0,
        "unused_symbols": 66,
        "import_count": 24,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08391608391608392
      },
      "symbols": [
        {
          "name": "ComplianceContext",
          "kind": "dataclass",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PrivacyControls",
          "kind": "dataclass",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIState",
          "kind": "class",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIRequest",
          "kind": "dataclass",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIResponse",
          "kind": "dataclass",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGISession",
          "kind": "dataclass",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InteractionMode",
          "kind": "class",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AGIController",
          "kind": "class",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "user_consent",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_processing_basis",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jurisdiction",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_period",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_transfer",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "biometric_data",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sensitive_categories",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_required",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anonymization_required",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_data_sale",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opt_out_targeting",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_portability_requested",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "right_to_erasure",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "right_to_rectification",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transparency_level",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_granular",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "request_type",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "input_data",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_context",
          "kind": "constant",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_controls",
          "kind": "constant",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_timestamp",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_subject_rights",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_trail_id",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "request_id",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_data",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_context",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_references",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_time",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_verified",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_sources",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_logic",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retention_applied",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "audit_logged",
          "kind": "constant",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_valid",
          "kind": "constant",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "interaction_mode",
          "kind": "constant",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_context",
          "kind": "constant",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conversation_history",
          "kind": "constant",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_state",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_context",
          "kind": "constant",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consent_records",
          "kind": "constant",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data_retention_end",
          "kind": "constant",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_border_approved",
          "kind": "constant",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_signal_handler",
          "kind": "function",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_request_processing_loop",
          "kind": "function",
          "line": 417,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_request_handler",
          "kind": "function",
          "line": 516,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_text_to_features",
          "kind": "function",
          "line": 764,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_interaction_processing_loop",
          "kind": "function",
          "line": 777,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.workflow_engine": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "WorkflowEngine",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_orchestration_component",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.master_orchestrator_alt": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "MasterMultiBrainOrchestrator",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_symphony_status",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.symbolic_signal_router": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "route_signal",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.orchestration_alt": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "TestModularIntelligenceOrchestrator",
          "kind": "class",
          "line": 5,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "setUp",
          "kind": "function",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "test_register_module",
          "kind": "function",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "test_process_adaptive_request",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "MockModule",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.core_modules.master_orchestrator": {
      "metrics": {
        "total_symbols": 39,
        "used_symbols": 0,
        "unused_symbols": 39,
        "import_count": 18,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06293706293706294
      },
      "symbols": [
        {
          "name": "WebsiteIntelligence",
          "kind": "dataclass",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedSession",
          "kind": "dataclass",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EcosystemStatus",
          "kind": "dataclass",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EcosystemDomain",
          "kind": "class",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhASMasterOrchestrator",
          "kind": "class",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_master_orchestrator",
          "kind": "constant",
          "line": 776,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "domain",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "purpose",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_audience",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "primary_features",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_capabilities",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_metrics",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_engagement",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "content_freshness",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "technical_health",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "revenue_impact",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "authentication_level",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active_domain",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cross_domain_context",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_conversation_history",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "preference_profile",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intelligence_insights",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_activity",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_quality_score",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_health",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active_services",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_sessions",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_processing_load",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "business_metrics",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "technical_metrics",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intelligence_capabilities",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_updated",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_determine_optimal_theme",
          "kind": "function",
          "line": 544,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_determine_accessibility_features",
          "kind": "function",
          "line": 563,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_intelligence_level",
          "kind": "function",
          "line": 573,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.process_orchestrator": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "ProcessOrchestrator",
          "kind": "class",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_orchestration_component",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.symbolic_handshake": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.017482517482517484
      },
      "symbols": [
        {
          "name": "SymbolicHandshake",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_module",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_signal",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "validate_handshake",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_signal_history",
          "kind": "function",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_emotion_state_history",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.orchestration_service": {
      "metrics": {
        "total_symbols": 26,
        "used_symbols": 0,
        "unused_symbols": 26,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "OrchestrationService",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "coordinate_modules",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "execute_workflow",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 635,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "manage_resources",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "route_event",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_message_bus_stats",
          "kind": "function",
          "line": 594,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_process_coordination",
          "kind": "function",
          "line": 692,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_execute_sequential_coordination",
          "kind": "function",
          "line": 706,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_execute_parallel_coordination",
          "kind": "function",
          "line": 737,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_execute_conditional_coordination",
          "kind": "function",
          "line": 763,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_execute_workflow_steps",
          "kind": "function",
          "line": 807,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_manage_module_resources",
          "kind": "function",
          "line": 841,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_route_inter_module_event",
          "kind": "function",
          "line": 886,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_get_detailed_module_metrics",
          "kind": "function",
          "line": 917,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_workflow_details",
          "kind": "function",
          "line": 929,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_resource_utilization",
          "kind": "function",
          "line": 936,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_performance_metrics",
          "kind": "function",
          "line": 947,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_module_status_post_optimization",
          "kind": "function",
          "line": 1203,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_assess_cross_module_health",
          "kind": "function",
          "line": 1217,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_workflow_performance_impact",
          "kind": "function",
          "line": 1234,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "IdentityClient",
          "kind": "class",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verify_user_access",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_consent",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_activity",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.core_modules.signal_middleware": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "SignalMiddleware",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.core_modules.lukhas_core_integrator": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 0,
        "unused_symbols": 20,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "AccessTier",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CoreMessageType",
          "kind": "class",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "lukhas_tier_required",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "LucasCoreIntegrator",
          "kind": "class",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "register_message_handler",
          "kind": "function",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "subscribe_to_events",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "send_message",
          "kind": "function",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": 15,
          "has_docstring": true
        },
        {
          "name": "broadcast_event",
          "kind": "function",
          "line": 346,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "initialize_awareness_protocol",
          "kind": "function",
          "line": 388,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "process_awareness_alert",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_check_action_permitted",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_log_symbolic_trace",
          "kind": "function",
          "line": 502,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_component_status",
          "kind": "function",
          "line": 527,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 543,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "handler_to_call",
          "kind": "constant",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.monitoring.the_oscillator": {
      "metrics": {
        "total_symbols": 41,
        "used_symbols": 0,
        "unused_symbols": 41,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "GlobalComplianceFramework",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicalHierarchy",
          "kind": "class",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumEthicalHandler",
          "kind": "class",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LegalComplianceLayer",
          "kind": "class",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasAGI",
          "kind": "class",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "fetch_live_compliance_updates",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "compliance_score",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "log_violation",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "activate_safeguards",
          "kind": "function",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "recalibrate_safeguards",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "initiate_emergency_shutdown",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adapt_weights",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_priority_weights",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_ethical_circuit",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "measure_ethical_state",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "explain_decision",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "fallback_protocol",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "symbolic_fallback_ethics",
          "kind": "function",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "human_review_required",
          "kind": "function",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_operation",
          "kind": "function",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_transparency",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_data_protection",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_bias",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "play_sound",
          "kind": "function",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "process_decision",
          "kind": "function",
          "line": 314,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "recalibrate_autonomy",
          "kind": "function",
          "line": 339,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_modulate_ethical_weights",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "compute_system_health_factor",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "compute_context_entropy",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "adaptive_context_simplification",
          "kind": "function",
          "line": 364,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_human_oversight_protocol",
          "kind": "function",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_safe_fallback_response",
          "kind": "function",
          "line": 376,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_context",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_anonymize_data",
          "kind": "function",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_synthesize_output",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": false
        },
        {
          "name": "monitor_post_market",
          "kind": "function",
          "line": 459,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "check_adversarial_input",
          "kind": "function",
          "line": 467,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "assess_stakeholder_impact",
          "kind": "function",
          "line": 473,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "modulate_emotional_state",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.monitoring.remediator_agent": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 3,
        "unused_symbols": 15,
        "import_count": 6,
        "export_count": 2,
        "connectivity_score": 0.16666666666666666,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "RemediationType",
          "kind": "class",
          "line": 39,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SubAgentStatus",
          "kind": "class",
          "line": 48,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RemediatorAgent",
          "kind": "class",
          "line": 56,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/__init__.py",
            "lukhas/orchestration/monitoring/reflection_layer.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "detect_and_remediate",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "spawn_ethics_guardian",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "spawn_memory_cleaner",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_agent_status",
          "kind": "function",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_active_sessions",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_remediation_history",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_classify_issue",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_spawn_ethics_guardian",
          "kind": "function",
          "line": 230,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_spawn_memory_cleaner",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_requires_ethical_intervention",
          "kind": "function",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_requires_memory_intervention",
          "kind": "function",
          "line": 296,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_execute_remediation_workflow",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_execute_ethics_workflow",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_execute_memory_workflow",
          "kind": "function",
          "line": 366,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.monitoring.health_checks": {
      "metrics": {
        "total_symbols": 27,
        "used_symbols": 4,
        "unused_symbols": 23,
        "import_count": 10,
        "export_count": 1,
        "connectivity_score": 0.14814814814814814,
        "cohesion_score": 0.0,
        "coupling_score": 0.03496503496503497
      },
      "symbols": [
        {
          "name": "HealthStatus",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComponentHealth",
          "kind": "dataclass",
          "line": 27,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HealthCheck",
          "kind": "class",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HealthChecker",
          "kind": "class",
          "line": 194,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_orchestrator_health_checks",
          "kind": "function",
          "line": 413,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_health_checker",
          "kind": "constant",
          "line": 500,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_health_checker",
          "kind": "function",
          "line": 502,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/__init__.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "component_name",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_check",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_time_ms",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_count",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "from_dict",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "should_run",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_check",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "unregister_check",
          "kind": "function",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_overall_health",
          "kind": "function",
          "line": 326,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "get_component_health",
          "kind": "function",
          "line": 392,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_all_health_status",
          "kind": "function",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "export_health_report",
          "kind": "function",
          "line": 400,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "memory_check",
          "kind": "function",
          "line": 417,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "cpu_check",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "disk_check",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.monitoring.reflection_layer": {
      "metrics": {
        "total_symbols": 57,
        "used_symbols": 0,
        "unused_symbols": 57,
        "import_count": 28,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0979020979020979
      },
      "symbols": [
        {
          "name": "ReflectionType",
          "kind": "class",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicMood",
          "kind": "class",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReflectiveStatement",
          "kind": "dataclass",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConscienceSnapshot",
          "kind": "dataclass",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReflectionLayer",
          "kind": "class",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_reflection_layer",
          "kind": "function",
          "line": 1310,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reflection_type",
          "kind": "type_alias",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_mood",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_signature",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trigger_event",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "associated_drift",
          "kind": "constant",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_weight",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "voice_vocalized",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_mood",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intent_alignment",
          "kind": "constant",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_stability",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_compliance",
          "kind": "constant",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recent_reflections",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "triggered_dreams",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "voice_alerts",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_load_manifest",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_infrastructure",
          "kind": "function",
          "line": 230,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_symbolic_vocabulary",
          "kind": "function",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reflect_on_drift_score",
          "kind": "function",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "reflect_on_intent_deviation",
          "kind": "function",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "reflect_on_emotional_state",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "contemplate_ethical_conflict",
          "kind": "function",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "model_symbolic_future",
          "kind": "function",
          "line": 463,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "synthesize_memory_insights",
          "kind": "function",
          "line": 499,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "log_reflection",
          "kind": "function",
          "line": 535,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "vocalize_conscience",
          "kind": "function",
          "line": 561,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_perform_vocalization",
          "kind": "function",
          "line": 583,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_voice_text",
          "kind": "function",
          "line": 626,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_map_mood_to_emotion",
          "kind": "function",
          "line": 641,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "capture_consciousness_snapshot",
          "kind": "function",
          "line": 699,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_categorize_drift_severity",
          "kind": "function",
          "line": 813,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_symbolic_element",
          "kind": "function",
          "line": 827,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_quantum_signature",
          "kind": "function",
          "line": 878,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_reflection_history",
          "kind": "function",
          "line": 887,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_consciousness_trend",
          "kind": "function",
          "line": 895,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_get_actual_drift_score",
          "kind": "function",
          "line": 949,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_get_actual_intent_alignment",
          "kind": "function",
          "line": 978,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_get_actual_emotional_stability",
          "kind": "function",
          "line": 1004,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_get_actual_ethical_compliance",
          "kind": "function",
          "line": 1031,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_reflection_based_drift",
          "kind": "function",
          "line": 1071,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_simple_drift_heuristic",
          "kind": "function",
          "line": 1093,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_ethical_compliance_fallback",
          "kind": "function",
          "line": 1102,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_initialize_voice_handler",
          "kind": "function",
          "line": 1120,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_initialize_dream_engine",
          "kind": "function",
          "line": 1151,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "SeverityLevel",
          "kind": "class",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_trend_direction",
          "kind": "function",
          "line": 912,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.monitoring.emotional_oscillator": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.006993006993006993
      },
      "symbols": [
        {
          "name": "EmotionalOscillator",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "oscillator_scope",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "modulate_emotion",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adjust_parameters",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.monitoring.sub_agents.memory_cleaner": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 1,
        "unused_symbols": 4,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.2,
        "cohesion_score": 0.0,
        "coupling_score": 0.02097902097902098
      },
      "symbols": [
        {
          "name": "MemoryCleaner",
          "kind": "class",
          "line": 39,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/sub_agents/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "analyze_memory_fragmentation",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "perform_cleanup",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "consolidate_dream_sequences",
          "kind": "function",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.monitoring.sub_agents.ethics_guardian": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 1,
        "unused_symbols": 6,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.14285714285714285,
        "cohesion_score": 0.0,
        "coupling_score": 0.013986013986013986
      },
      "symbols": [
        {
          "name": "EthicsGuardian",
          "kind": "class",
          "line": 43,
          "used": true,
          "used_by": [
            "lukhas/orchestration/monitoring/sub_agents/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "assess_ethical_violation",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "propose_realignment",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_operation_summary",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_fallback_assessment",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_fallback_realignment",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.interfaces.orchestration_protocol": {
      "metrics": {
        "total_symbols": 47,
        "used_symbols": 7,
        "unused_symbols": 40,
        "import_count": 8,
        "export_count": 4,
        "connectivity_score": 0.14893617021276595,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "MessageType",
          "kind": "class",
          "line": 23,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Priority",
          "kind": "class",
          "line": 55,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskDefinition",
          "kind": "dataclass",
          "line": 70,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/api.py",
            "lukhas/orchestration/interfaces/__init__.py",
            "lukhas/orchestration/master_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskResult",
          "kind": "dataclass",
          "line": 104,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestrationMessage",
          "kind": "dataclass",
          "line": 128,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OrchestrationProtocol",
          "kind": "class",
          "line": 165,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MessageBuilder",
          "kind": "class",
          "line": 435,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__lt__",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "task_id",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_type",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameters",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "requirements",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "constraints",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assigned_to",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parent_task_id",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "subtasks",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result_data",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "function",
          "line": 473,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "metrics",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "completed_at",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_time",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_id",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "type_alias",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sender_id",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recipient_id",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expires_at",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "headers",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "require_ack",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_expired",
          "kind": "function",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_handler",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "start",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "stop",
          "kind": "function",
          "line": 416,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_statistics",
          "kind": "function",
          "line": 426,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "command",
          "kind": "function",
          "line": 439,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "task_assign",
          "kind": "function",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "task_complete",
          "kind": "function",
          "line": 464,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "heartbeat",
          "kind": "function",
          "line": 488,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.orchestration.interfaces.plugin_registry": {
      "metrics": {
        "total_symbols": 33,
        "used_symbols": 5,
        "unused_symbols": 28,
        "import_count": 13,
        "export_count": 2,
        "connectivity_score": 0.15151515151515152,
        "cohesion_score": 0.0,
        "coupling_score": 0.045454545454545456
      },
      "symbols": [
        {
          "name": "PluginType",
          "kind": "class",
          "line": 28,
          "used": true,
          "used_by": [
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginStatus",
          "kind": "class",
          "line": 38,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginDependency",
          "kind": "dataclass",
          "line": 52,
          "used": true,
          "used_by": [
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginMetadata",
          "kind": "dataclass",
          "line": 65,
          "used": true,
          "used_by": [
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginInterface",
          "kind": "class",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginRegistry",
          "kind": "class",
          "line": 146,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ExamplePlugin",
          "kind": "class",
          "line": 614,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "version",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optional",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__str__",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "author",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_type",
          "kind": "type_alias",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capabilities",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "config_schema",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tags",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_metadata",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "discover_plugins",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_extract_plugin_metadata",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_find_plugin_file",
          "kind": "function",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_create_function_plugin_wrapper",
          "kind": "function",
          "line": 360,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_dependent_plugins",
          "kind": "function",
          "line": 455,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "register_signal_handler",
          "kind": "function",
          "line": 466,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_plugin",
          "kind": "function",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "list_plugins",
          "kind": "function",
          "line": 524,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "save_registry_state",
          "kind": "function",
          "line": 571,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "FunctionPlugin",
          "kind": "class",
          "line": 362,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.orchestration.interfaces.agent_interface": {
      "metrics": {
        "total_symbols": 40,
        "used_symbols": 6,
        "unused_symbols": 34,
        "import_count": 8,
        "export_count": 3,
        "connectivity_score": 0.15,
        "cohesion_score": 0.0,
        "coupling_score": 0.027972027972027972
      },
      "symbols": [
        {
          "name": "AgentStatus",
          "kind": "class",
          "line": 24,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/example_agents.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentCapability",
          "kind": "class",
          "line": 36,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/example_agents.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentMetadata",
          "kind": "dataclass",
          "line": 62,
          "used": true,
          "used_by": [
            "lukhas/orchestration/example_agents.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentMessage",
          "kind": "dataclass",
          "line": 77,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/example_agents.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentContext",
          "kind": "dataclass",
          "line": 91,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/example_agents.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentInterface",
          "kind": "class",
          "line": 102,
          "used": true,
          "used_by": [
            "lukhas/orchestration/agent_orchestrator.py",
            "lukhas/orchestration/example_agents.py",
            "lukhas/orchestration/interfaces/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SimpleAgent",
          "kind": "class",
          "line": 301,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "agent_id",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "version",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "author",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capabilities",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tags",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "config",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_id",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sender_id",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recipient_id",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "requires_response",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "orchestrator_id",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_access",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_limits",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "shared_state",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active_tasks",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_queue",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 308,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_capability",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_message_handler",
          "kind": "function",
          "line": 194,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_lifecycle_hook",
          "kind": "function",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "update_status",
          "kind": "function",
          "line": 254,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "has_capability",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_metadata_dict",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    }
  },
  "missed_opportunities": [
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.migrate_orchestrators has 11 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.migrate_orchestrators"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OrchestratorMigrator, main, determine_base_class, extract_class_info, needs_migration..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.system_orchestrator has 16 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.system_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ModuleInfo, name, orchestrator, priority, dependencies..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.resonance_orchestrator has 46 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.resonance_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: StressLevel, HelpSignalType, ModuleHealth, HelpSignal, ResonancePattern..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.master_orchestrator has 22 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.master_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SystemMode, CriticalSystem, MasterOrchestratorConfig, SystemEvent, MasterOrchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.endocrine_orchestrator has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.endocrine_orchestrator"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: enable_hormonal_modulation, stress_threshold, recovery_threshold, circadian_awareness, enable_adaptive_resource_allocation..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.base has 25 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.base"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComponentInfo, OrchestratorMetrics, name, description, max_concurrent_operations..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.apis.code_process_integration_api has 40 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.apis.code_process_integration_api"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: CodeLanguage, ExecutionEnvironment, CodeQuality, CodeGenerationRequest, CodeExecutionResult..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.orchestrator has 22 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OrchestrationMode, ProcessingLevel, LukhasTier, ConsciousnessState, TierCapabilities..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.config.orchestrator_flags has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.config.orchestrator_flags"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OrchestrationMode, load_orchestrator_flags, update_orchestrator_flags, save_orchestrator_flags, reset_orchestrator_flags..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.apis.drift_monitoring_api has 43 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.apis.drift_monitoring_api"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: DriftType, DriftSeverity, AlertChannel, MetricDataPoint, DriftAlert..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.config.production_config has 92 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.config.production_config"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: Environment, LogLevel, DatabaseConfig, RedisConfig, MonitoringConfig..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.config.migration_router has 32 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.config.migration_router"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OrchestrationResult, ShadowComparisonResult, CircuitBreaker, PerformanceMetrics, success..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.agents.types has 8 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.agents.types"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: task_id, symbolic_state, memory_context, glyphs, success..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.security.dast.engine has 20 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.security.dast.engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: TaskPriority, TaskStatus, Task, LukhasDASTEngine, get_dast_engine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.agents.multi_agent_collaboration has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.agents.multi_agent_collaboration"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: MultiAgentCollaboration, register_agent, create_task, send_message, update_task_progress..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.security.dast.adapters has 9 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.security.dast.adapters"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: AdapterConfig, name, endpoint, auth_token, rate_limit..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.integration.human_in_the_loop_orchestrator has 81 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.integration.human_in_the_loop_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: DecisionPriority, ReviewerRole, DecisionStatus, EscrowStatus, ReviewerProfile..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.agents.orchestrator has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.agents.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnhancementState, EnhancementMetrics, AGIEnhancementConfig, UnifiedAGIEnhancementOrchestrator, cristae_efficiency..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.agents.adaptive_orchestrator has 14 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.agents.adaptive_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: VisionaryMode, ConsciousnessLevel, VisionaryMetrics, AdaptiveOrchestrator, user_delight_score..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.specialized.enhancement_orchestrator has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.specialized.enhancement_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnhancementState, EnhancementMetrics, AGIEnhancementConfig, UnifiedAGIEnhancementOrchestrator, cristae_efficiency..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.agents.meta_cognitive_orchestrator has 22 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.agents.meta_cognitive_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AGICapabilityLevel, AGIResponse, QuantumInspiredAttention, CausalReasoningModule, SymbolicEngine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: LukhasOrchestratorEmotionEngine, timestamp, core_modules, plugin_modules, system_health..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.specialized.lambda_bot_orchestrator has 27 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.specialized.lambda_bot_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: BotProtocol, QuantumBotConfig, ReasoningContext, QuantumDecisionEngine, BotEvolutionEngine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.specialized.inter_agent_simulation has 16 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.specialized.inter_agent_simulation"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AgentType, MessageType, AgentMessage, Agent, InterAgentSimulation..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.agents.meta_cognitive_orchestrator_alt has 22 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AGICapabilityLevel, AGIResponse, QuantumInspiredAttention, CausalReasoningModule, SymbolicEngine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.migrated.memory_orchestrator has 9 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.migrated.memory_orchestrator"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: MemoryOrchestratorConfig, MemoryComponent, create_memory_component, enable_memory_cache, cache_size_mb..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.specialized.lambda_dependa_bot has 71 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.specialized.lambda_dependa_bot"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: \u039bSelfHealingAction, \u039bCodeFixSuggestion, \u039bSelfHealingReport, \u039bDependencyProfile, \u039bArchitecturalInsight..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.specialized.content_enterprise_orchestrator has 53 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.specialized.content_enterprise_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ServiceStatus, ScalingAction, Priority, ServiceMetrics, ServiceHealth..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnhancementState, EnhancementMetrics, AGIEnhancementConfig, UnifiedAGIEnhancementOrchestrator, cristae_efficiency..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.migrated.ethics_orchestrator has 31 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.migrated.ethics_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicsMode, UnifiedEthicsOrchestratorConfig, EthicsAuditEntry, UnifiedEthicsOrchestrator, get_ethics_orchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.migrated.simple_test has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.migrated.simple_test"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: test_base_patterns, test_memory_orchestrator_simple, main, TestConfig, TestOrchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.migrated.brain_orchestrator has 28 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.migrated.brain_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ResourcePriority, SystemMode, ProcessingStage, BrainOrchestratorConfig, BrainOrchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.migrated.memory_integration_orchestrator has 13 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.migrated.memory_integration_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: MemoryIntegrationOrchestratorConfig, MemoryIntegrationOrchestrator, config_directory, enable_deduplication, semantic_depth_default..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.canadian_awareness_engine has 62 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.canadian_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: PIPEDALegalBasis, CPPAConsumerRights, AIDAGoverance, ProvincialJurisdiction, DataLocalization..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.symbol_validator has 41 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.symbol_validator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComplianceLevel, Jurisdiction, ComplianceViolationType, ComplianceViolation, ModuleComplianceReport..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.brain_integration has 24 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.brain_integration"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EmotionVector, EmotionalOscillator, MemoryEmotionalIntegrator, MemoryVoiceIntegrator, LucasBrainIntegration..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.multi_brain_orchestrator has 9 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.multi_brain_orchestrator"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: SpecializedBrainCore, CreativeProcessingBrain, MemoryProcessingBrain, LearningProcessingBrain, MultiBrainOrchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.us_institutional_awareness_engine has 92 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.us_institutional_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: USLegalBasis, CCPACategory, HIPAADataType, SOXClassification, FedRAMPLevel..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.lukhas_core has 14 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.lukhas_core"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AGICapabilityLevel, AGIResponse, AGIBot, content, confidence..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.das_awareness_engine has 57 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.das_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComplianceStatus, AwarenessType, AlignmentMetric, DastConfig, now_iso..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.dynamic_adaptive_dashboard has 8 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.dynamic_adaptive_dashboard"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: UserProfile, AdaptiveDashboard, id, tier, name..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.consciousness has 14 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.consciousness"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ConsciousnessState, ConsciousnessCore, level, activated_at, evolution_count..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.eu_ai_transparency has 19 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.eu_ai_transparency"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: DecisionType, InfluenceLevel, DecisionTrace, TransparencyOrchestrator, create_transparent_decision..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.eu_awareness_engine has 91 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.eu_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: GDPRLegalBasis, DataCategory, AIRiskLevel, ComplianceStatus, DataSubjectRights..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.autonomous_github_manager has 40 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.autonomous_github_manager"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: NotificationPriority, GitHubNotification, BatchFixResult, AdvancedAutonomousGitHubManager, main..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.uk_awareness_engine has 73 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.uk_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: UKGDPRLawfulBasis, DataSubjectRights, UKDataCategory, UKTransferMechanism, ICOEnforcementAction..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.research_awareness_engine has 111 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.research_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ResearchType, ExperimentalTechnique, ResearchEthicsLevel, DataSharingLevel, ResearchPhase..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.security_pr_analyzer has 21 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.security_pr_analyzer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SecurityIssue, PRAnalysis, SecurityScanner, PRAnalyzer, main..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.safe_subprocess_executor has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.safe_subprocess_executor"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: SafeSubprocessExecutor, safe_subprocess_run, safe_python_execution, safe_run, safe_python_run..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.github_vulnerability_manager has 40 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.github_vulnerability_manager"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: VulnerabilitySeverity, Vulnerability, Repository, GitHubVulnerabilityManager, main..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.privacy_manager has 15 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.privacy_manager"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: set_privacy_setting, get_privacy_setting, apply_privacy_mechanisms, anonymize_data, encrypt_sensitive_fields..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.identity_manager has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.identity_manager"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: IdentityManager, process_experience, retrieve_memory, get_identity_state, update_identity..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.lukhas_unified_self_merge_divergence has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: load_traits, load_meta_reflections, build_gpt_prompt, run_gpt, save_snapshot..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.lambda_bot_batch_processor has 15 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.lambda_bot_batch_processor"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: BatchableIssue, IssueType, BatchProcessor, main, id..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.brain_collapse_manager has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.brain_collapse_manager"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: CollapseSynchronizer, collapse_handler, collapse_trace_matrix, analysis, matrix..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer has 17 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AutonomousFixResult, \u039bBotAutonomousWorkflowFixer, main, success, fix_type..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.lukhas_awareness_engine has 91 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.lukhas_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComplianceStatus, AwarenessType, AlignmentMetric, LukhasConfig, now_iso..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.orchestrator has 32 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: LukhasAGIConfig, LukhasProcessingStage, LukhasProcessingContext, LukhasAGIOrchestrator, consciousness_evolution_enabled..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.cognitive_core has 18 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.cognitive_core"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: run_interactive_session, main, get_agi_status, process_input_sync, AGICapabilityLevel..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.lambdabot_autonomous_fixer has 21 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.lambdabot_autonomous_fixer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: FixStrategy, PRCreationResult, \u039bBotAutonomousVulnerabilityFixer, vulnerability_id, repository..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.australian_awareness_engine has 71 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.australian_awareness_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AustralianPrivacyPrinciple, ConsumerDataRight, AustralianJurisdiction, DataBreachSeverity, CrossBorderApproval..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.pr_security_review_task has 17 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.pr_security_review_task"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SecurityPR, PRSecurityReviewTask, main, pr_number, repo_name..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.MultiBrainSymphony has 9 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.MultiBrainSymphony"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: SpecializedBrainCore, DreamsBrainSpecialist, MemoryBrainSpecialist, LearningBrainSpecialist, MultiBrainSymphonyOrchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine has 155 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: InstitutionalComplianceLevel, GlobalRegulation, InstitutionalCertification, GlobalInstitutionalConfig, InstitutionalAwarenessInput..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.demo has 12 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.demo"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AdaptiveAGIDemo, init_components, generate_simple_response, MockVoiceModulator, MockSafetyGuard..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.trace_memoria_logger has 15 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.trace_memoria_logger"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: TraceMemoriaLogger, TraceLevel, log_trace, get_recent_traces, read_traces..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.lukhas_awareness_engine_elevated has 86 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.lukhas_awareness_engine_elevated"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComplianceStatus, AwarenessType, AlignmentMetric, LukhasConfig, now_iso..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.token_budget_controller has 29 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.token_budget_controller"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: BudgetDecision, main, change_detected, error_detected, user_request..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.collaborative_ai_agent_system has 12 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.collaborative_ai_agent_system"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AgentTier, ConsolidationPhase, AgentCapabilities, LukhasAIAgent, LukhasAIAgentTeam..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.entropy_probe has 8 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.entropy_probe"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EntropyProbe, calculate_entropy, symbolic_trace, entropy, emotional_state..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.mesh.collapse_mesh has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.mesh.collapse_mesh"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: CollapseNode, add_neighbor, heartbeat, add_node, add_edge..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.GlobalInstitutionalFramework has 87 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.GlobalInstitutionalFramework"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: Jurisdiction, RegulationType, ComplianceLevel, LegalBasis, DataCategory..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator has 36 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: NodeType, NodeStatus, TaskPriority, CognitiveTask, NodeCapability..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.visualization.memory_helix_visualizer has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.visualization.memory_helix_visualizer"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: MemoryHelixVisualizer, get_memory_coordinates, get_authorized_memories, visualize_memory_helix, create_interactive_visualization..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.net.client has 28 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.net.client"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: UseClientDefault, ClientState, BoundSyncStream, BoundAsyncStream, BaseClient..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.core.azure_free_tier_strategy has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.core.azure_free_tier_strategy"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: AzureFreeStrategy, main, get_priority_services_for_agi, create_12_month_roadmap, calculate_cost_savings..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.net.async_client has 8 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.net.async_client"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: AsyncInferenceClient, ProxyClientChat, ProxyClientChatCompletions, chat, completions..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.core.response_types has 8 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.core.response_types"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: content, confidence, reasoning_path, metacognitive_state, ethical_compliance..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.core.types has 144 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.core.types"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: PluginType, PluginTier, PluginState, PluginStatus, ConsciousnessState..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.core.azure_openai_client has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.core.azure_openai_client"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: LukhASAzureOpenAI, quick_test, main, test_connection, chat_completion..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.core.orchestrator has 26 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.core.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SystemMode, ProcessingStage, AGIConfiguration, AgiBrainOrchestrator, mode..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.access.tier_manager has 8 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.access.tier_manager"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: upgrade_tier, downgrade_tier, get_tier_description, get_user_tier, is_access_allowed..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.spine.main_loop has 38 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.spine.main_loop"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: Goal, GoalManager, AgentCommunicator, EthicalEvaluator, ReflectiveLearning..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.spine.trait_manager has 9 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.spine.trait_manager"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: default_traits, load_traits, save_traits, reset_traits, decay_traits..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: export_traits, load_all_traits, compare_traits, summarize_comparisons, generate_gpt_commentary..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.spine.lukhas_emotion_log_alt has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: log_emotion, decay_emotion, save_emotion_log, load_emotion_log, blend_emotions..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.spine.fold_engine has 24 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.spine.fold_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SymbolicPatternEngine, retrieve, update, add_association, add_tag..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.spine.lukhas_unified_self has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.spine.lukhas_unified_self"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: save_report, load_all_traits, load_all_reflections, average_traits, synthesize_unified_self..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.config.settings_loader has 9 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.config.settings_loader"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: load_settings, get_setting, is_module_enabled, print_all_settings, validate_settings..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.integration.brain_integration has 14 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.integration.brain_integration"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnhancedEmotionalProcessor, EnhancedMemorySystem, EnhancedBrainIntegration, create_enhanced_brain_integration, update_emotional_state..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.consciousness.dream_narrator has 31 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.consciousness.dream_narrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: DreamPhase, DreamNarrationType, DreamElement, DreamSequence, DreamNarration..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.consciousness.memory_identity has 12 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.consciousness.memory_identity"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: MemoryAccessPolicy, MemoryIdentityIntegration, register_memory, verify_access_permission, share_memory..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.prediction.predictive_resource_manager has 8 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.prediction.predictive_resource_manager"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: add_data_point, predict_next, update_resource_usage, predict_resource_needs, predict_all_resources..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.prediction.world_models has 18 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.prediction.world_models"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: WorldModelType, SimulationAccuracy, WorldState, PredictionResult, PhysicsEngine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: UncertaintyType, CalibrationRecord, BayesianConfidenceEstimator, QuantumConfidenceEstimator, SymbolicConfidenceEstimator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine has 20 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ReasoningPhase, OscillationSynchronizer, dreams_frequency, emotional_frequency, memory_frequency..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.meta.compliance_engine_20250503213400 has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.meta.compliance_engine_20250503213400"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: ComplianceEngine, anonymize_metadata, should_retain_data, check_voice_data_compliance, validate_content_against_ethical_constraints..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.meta.cognition.reflection_layer has 38 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.meta.cognition.reflection_layer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ReflectionType, SymbolicMood, ReflectiveStatement, ConscienceSnapshot, ReflectionLayer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.meta.integrations.bot_enhancement has 12 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.meta.integrations.bot_enhancement"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnhancementRequest, EnhancementResponse, BotEnhancementEngine, bot_id, enhancement_type..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.meta.learning.system has 22 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.meta.learning.system"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: FederatedModel, FederatedLearningManager, ReflectiveIntrospectionSystem, MetaLearningSystem, update_with_gradients..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.qrl_code.qrly has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.qrl_code.qrly"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: map_emoji_archetypes, generate_glymph_backstory, generate_retro_image, encrypt_qrlymph, decrypt_qrlymph..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.compliance.constitutional_ai has 36 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.compliance.constitutional_ai"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SafetyLevel, EthicalPrinciple, CapabilityRisk, ConstitutionalRule, SafetyAssessment..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.reasoning.symbolic_validator has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.reasoning.symbolic_validator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ValidationSeverity, ValidationType, ValidationIssue, ValidationResult, BaseValidator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.symbolic_engine.symbolic_core has 14 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.symbolic_engine.symbolic_core"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: Symbol, Relationship, SymbolicReasoner, create_symbol, link_symbols..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.ethics.ethics_engine has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.ethics.ethics_engine"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicsEngine, evaluate_action, suggest_alternatives, increase_scrutiny_level, reset_scrutiny_level..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.ethics.ethical_hierarchy has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.ethics.ethical_hierarchy"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicalPrinciple, ComplianceFramework, EthicalSeverity, EthicalHierarchy, adapt_weights..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.ethics.ethical_stop has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.ethics.ethical_stop"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicalProtestModule, ProtestEthicsValidator, LegalComplianceAssistant, plan_protest, validate..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.emotional.core has 10 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.emotional.core"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EmotionRequest, EmotionConfig, EmotionHealth, EmotionModule, intent..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.emotional.ethical_stop has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.emotional.ethical_stop"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicalProtestModule, ProtestEthicsValidator, LegalComplianceAssistant, plan_protest, validate..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.orchestration.the_oscillator has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.orchestration.the_oscillator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: GlobalComplianceFramework, EthicalHierarchy, QuantumEthicalHandler, LegalComplianceLayer, LucasAGI..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.orchestration.orchestrator has 19 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.orchestration.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OrchestrationMode, ProcessingLevel, OrchestrationMetrics, LukhasOrchestrator, get_capabilities..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.dna.lukhas_dna_link has 9 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.dna.lukhas_dna_link"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: LucasDNALink, generate_reflection, translate, generate_opinion, learn_term_loop..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.monitoring.guardian_reflector has 21 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.monitoring.guardian_reflector"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicalFramework, MoralSeverity, EthicalReflection, MoralDrift, GuardianReflector..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.monitoring.performance has 63 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.monitoring.performance"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: PerformanceMetrics, FunctionProfile, SystemMonitor, FunctionProfiler, MemoryProfiler..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: log_interaction, reflect, get_status_report, analyze_system_performance, identify_bottlenecks..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.brain.neural.neural_intelligence_api has 17 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.brain.neural.neural_intelligence_api"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: IntelligenceRequest, IntelligenceResponse, SystemStatus, query, context..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.core_modules.signals has 13 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.core_modules.signals"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SignalType, DiagnosticSignalType, SymbolicSignal, signal_type, source_module..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.core_modules.lukhas_orchestrator has 7 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.core_modules.lukhas_orchestrator"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: SystemSnapshot, LukhasOrchestrator, timestamp, core_modules, plugin_modules..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.core_modules.controller has 59 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.core_modules.controller"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComplianceContext, PrivacyControls, AGIState, AGIRequest, AGIResponse..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.core_modules.master_orchestrator has 33 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.core_modules.master_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: WebsiteIntelligence, UnifiedSession, EcosystemStatus, EcosystemDomain, LukhASMasterOrchestrator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.core_modules.symbolic_handshake has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.core_modules.symbolic_handshake"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: SymbolicHandshake, register_module, create_signal, validate_handshake, get_signal_history..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.core_modules.orchestration_service has 11 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.core_modules.orchestration_service"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OrchestrationService, coordinate_modules, execute_workflow, get_system_status, manage_resources..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.core_modules.lukhas_core_integrator has 16 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.core_modules.lukhas_core_integrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AccessTier, CoreMessageType, lukhas_tier_required, LucasCoreIntegrator, decorator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.monitoring.the_oscillator has 34 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.monitoring.the_oscillator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: GlobalComplianceFramework, EthicalHierarchy, QuantumEthicalHandler, LegalComplianceLayer, LucasAGI..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.monitoring.remediator_agent has 6 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.monitoring.remediator_agent"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: detect_and_remediate, spawn_ethics_guardian, spawn_memory_cleaner, get_agent_status, get_active_sessions..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.monitoring.health_checks has 21 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.monitoring.health_checks"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: HealthCheck, create_orchestrator_health_checks, component_name, status, message..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.monitoring.reflection_layer has 38 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.monitoring.reflection_layer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ReflectionType, SymbolicMood, ReflectiveStatement, ConscienceSnapshot, ReflectionLayer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.interfaces.orchestration_protocol has 38 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.interfaces.orchestration_protocol"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: task_id, task_type, description, parameters, requirements..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.interfaces.plugin_registry has 22 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.interfaces.plugin_registry"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: PluginInterface, ExamplePlugin, name, version, optional..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.orchestration.interfaces.agent_interface has 33 unused public symbols",
      "affected_files": [
        "lukhas.orchestration.interfaces.agent_interface"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SimpleAgent, agent_id, name, version, description..."
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.orchestration.brain.collapse_bridge -> lukhas.orchestration.brain.brain_collapse_manager -> lukhas.orchestration.brain.collapse_bridge",
      "affected_files": [
        "lukhas.orchestration.brain.collapse_bridge",
        "lukhas.orchestration.brain.brain_collapse_manager",
        "lukhas.orchestration.brain.collapse_bridge"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.orchestration.brain.brain_collapse_manager -> lukhas.orchestration.brain.collapse_bridge -> lukhas.orchestration.brain.brain_collapse_manager",
      "affected_files": [
        "lukhas.orchestration.brain.brain_collapse_manager",
        "lukhas.orchestration.brain.collapse_bridge",
        "lukhas.orchestration.brain.brain_collapse_manager"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.orchestration.brain.brain_collapse_manager -> lukhas.orchestration.brain.collapse_bridge -> lukhas.orchestration.brain.brain_collapse_manager",
      "affected_files": [
        "lukhas.orchestration.brain.brain_collapse_manager",
        "lukhas.orchestration.brain.collapse_bridge",
        "lukhas.orchestration.brain.brain_collapse_manager"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.agents.adaptive_orchestrator has too many dependencies (22)",
      "affected_files": [
        "lukhas.orchestration.agents.adaptive_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.specialized.lambda_dependa_bot has too many dependencies (26)",
      "affected_files": [
        "lukhas.orchestration.specialized.lambda_dependa_bot"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.specialized.lambda_bot_orchestrator has too many dependencies (22)",
      "affected_files": [
        "lukhas.orchestration.specialized.lambda_bot_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.specialized.content_enterprise_orchestrator has too many dependencies (43)",
      "affected_files": [
        "lukhas.orchestration.specialized.content_enterprise_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.brain.orchestrator has too many dependencies (21)",
      "affected_files": [
        "lukhas.orchestration.brain.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.brain.demo has too many dependencies (21)",
      "affected_files": [
        "lukhas.orchestration.brain.demo"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.brain.net.client has too many dependencies (23)",
      "affected_files": [
        "lukhas.orchestration.brain.net.client"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.brain.meta.cognition.reflection_layer has too many dependencies (23)",
      "affected_files": [
        "lukhas.orchestration.brain.meta.cognition.reflection_layer"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.core_modules.controller has too many dependencies (24)",
      "affected_files": [
        "lukhas.orchestration.core_modules.controller"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.orchestration.monitoring.reflection_layer has too many dependencies (28)",
      "affected_files": [
        "lukhas.orchestration.monitoring.reflection_layer"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.meta_cognitive_orchestrator is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.meta_cognitive_orchestrator"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.prime_oscillator is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.prime_oscillator"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.spine.emotional_sorter is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.spine.emotional_sorter"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.spine.emotion_mapper is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.spine.emotion_mapper"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.spine.lukhas_guardian is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.spine.lukhas_guardian"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.lukhas_data.consent_manager is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.lukhas_data.consent_manager"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.qrl_code.qrly is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.qrl_code.qrly"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.qrl_code.com_validator is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.qrl_code.com_validator"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.symbolic_ai.modules.dissonance_detector is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.symbolic_ai.modules.dissonance_detector"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.ethics.ethical_stop is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.ethics.ethical_stop"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.ethics.ethical_conflict_resolution is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.ethics.ethical_conflict_resolution"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.emotional.ethical_stop is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.emotional.ethical_stop"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.emotional.ethical_conflict_resolution is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.emotional.ethical_conflict_resolution"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.orchestration.brain.subsystems.__init__ is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.orchestration.brain.subsystems.__init__"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    }
  ],
  "dependency_graph": {
    "nodes": [
      "lukhas.orchestration.signal_router",
      "lukhas.orchestration.workflow_engine",
      "lukhas.orchestration.migrate_orchestrators",
      "lukhas.orchestration.core",
      "lukhas.orchestration.module_orchestrator",
      "lukhas.orchestration.system_orchestrator",
      "lukhas.orchestration.main_node",
      "lukhas.orchestration.api",
      "lukhas.orchestration.resonance_orchestrator",
      "lukhas.orchestration.master_orchestrator",
      "lukhas.orchestration.integration_engine",
      "lukhas.orchestration.endocrine_orchestrator",
      "lukhas.orchestration.quorum_orchestrator",
      "lukhas.orchestration.init.seed_chain_bootstrapper",
      "lukhas.orchestration.agent_orchestrator",
      "lukhas.orchestration.base",
      "lukhas.orchestration.echo.echo_controller",
      "lukhas.orchestration.apis.code_process_integration_api",
      "lukhas.orchestration.orchestrator",
      "lukhas.orchestration.config.orchestrator_flags",
      "lukhas.orchestration.apis.drift_monitoring_api",
      "lukhas.orchestration.security.LGOV_validator",
      "lukhas.orchestration.example_agents",
      "lukhas.orchestration.security.ethics_loop_guard",
      "lukhas.orchestration.security.dast.__init__",
      "lukhas.orchestration.security.dast_orchestrator",
      "lukhas.orchestration.security.dast.verify",
      "lukhas.orchestration.security.dast.intelligence",
      "lukhas.orchestration.security.dast.tests",
      "lukhas.orchestration.integration.vendor_sync_orchestrator",
      "lukhas.orchestration.config.production_config",
      "lukhas.orchestration.config.migration_router",
      "lukhas.orchestration.security.dast.api",
      "lukhas.orchestration.agents.registry",
      "lukhas.orchestration.agents.types",
      "lukhas.orchestration.agents.base",
      "lukhas.orchestration.security.dast.engine",
      "lukhas.orchestration.agents.multi_agent_collaboration",
      "lukhas.orchestration.security.dast.adapters",
      "lukhas.orchestration.agents.builtin.codex",
      "lukhas.orchestration.agents.builtin.jules",
      "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
      "lukhas.orchestration.agents.orchestrator",
      "lukhas.orchestration.security.dast.processors",
      "lukhas.orchestration.agents.adaptive_orchestrator",
      "lukhas.orchestration.specialized.ui_orchestrator",
      "lukhas.orchestration.specialized.freeze_protection_check",
      "lukhas.orchestration.specialized.component_orchestrator",
      "lukhas.orchestration.specialized.enhancement_orchestrator",
      "lukhas.orchestration.agents.meta_cognitive_orchestrator",
      "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
      "lukhas.orchestration.specialized.deployment_orchestrator",
      "lukhas.orchestration.specialized.loop_recovery_simulator",
      "lukhas.orchestration.specialized.lambda_bot_orchestrator",
      "lukhas.orchestration.immune.system_watchdog",
      "lukhas.orchestration.specialized.inter_agent_simulation",
      "lukhas.orchestration.specialized.integrated_system_orchestrator",
      "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
      "lukhas.orchestration.migrated.memory_orchestrator",
      "lukhas.orchestration.specialized.lambda_dependa_bot",
      "lukhas.orchestration.specialized.content_enterprise_orchestrator",
      "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
      "lukhas.orchestration.migrated.ethics_orchestrator",
      "lukhas.orchestration.migrated.simple_test",
      "lukhas.orchestration.brain.lukhas_expression",
      "lukhas.orchestration.examples.endocrine_module_example",
      "lukhas.orchestration.migrated.brain_orchestrator",
      "lukhas.orchestration.migrated.memory_integration_orchestrator",
      "lukhas.orchestration.brain.pr_security_review_github_actions",
      "lukhas.orchestration.brain.canadian_awareness_engine",
      "lukhas.orchestration.brain.symbol_validator",
      "lukhas.orchestration.brain.quantum_annealed_consensus",
      "lukhas.orchestration.brain.controller",
      "lukhas.orchestration.brain.brain_integration",
      "lukhas.orchestration.brain.multi_brain_orchestrator",
      "lukhas.orchestration.brain.meta_cognitive_orchestrator",
      "lukhas.orchestration.brain.us_institutional_awareness_engine",
      "lukhas.orchestration.brain.monitor",
      "lukhas.orchestration.brain.lukhas_core",
      "lukhas.orchestration.brain.das_awareness_engine",
      "lukhas.orchestration.brain.collapse_bridge",
      "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
      "lukhas.orchestration.brain.validate_pr_security_review",
      "lukhas.orchestration.brain.context_analyzer",
      "lukhas.orchestration.brain.adaptive_image_generator",
      "lukhas.orchestration.brain.consciousness",
      "lukhas.orchestration.brain.eu_ai_transparency",
      "lukhas.orchestration.brain.eu_awareness_engine",
      "lukhas.orchestration.brain.pr_security_review_starter",
      "lukhas.orchestration.brain.llm_engine",
      "lukhas.orchestration.brain.autonomous_github_manager",
      "lukhas.orchestration.brain.uk_awareness_engine",
      "lukhas.orchestration.brain.research_awareness_engine",
      "lukhas.orchestration.brain.prime_oscillator",
      "lukhas.orchestration.brain.security_pr_analyzer",
      "lukhas.orchestration.brain.integration_bridge",
      "lukhas.orchestration.brain.learn_to_learn",
      "lukhas.orchestration.brain.safe_subprocess_executor",
      "lukhas.orchestration.brain.github_vulnerability_manager",
      "lukhas.orchestration.brain.privacy_manager",
      "lukhas.orchestration.brain.dream_mutator",
      "lukhas.orchestration.brain.main_node",
      "lukhas.orchestration.brain.safety_guardrails",
      "lukhas.orchestration.brain.identity_manager",
      "lukhas.orchestration.brain.lukhas_brain",
      "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
      "lukhas.orchestration.brain.collapse_chain_integrity",
      "lukhas.orchestration.brain.lambda_bot_batch_processor",
      "lukhas.orchestration.brain.autonomous_system",
      "lukhas.orchestration.brain.brain_collapse_manager",
      "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
      "lukhas.orchestration.brain.lukhas_awareness_engine",
      "lukhas.orchestration.brain.integrity_probe",
      "lukhas.orchestration.brain.drift_pattern_analyzer",
      "lukhas.orchestration.brain.orchestrator",
      "lukhas.orchestration.brain.cognitive_core",
      "lukhas.orchestration.brain.fix_lambda_symbols",
      "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
      "lukhas.orchestration.brain.australian_awareness_engine",
      "lukhas.orchestration.brain.experience_manager",
      "lukhas.orchestration.brain.pr_security_review_task",
      "lukhas.orchestration.brain.MultiBrainSymphony",
      "lukhas.orchestration.brain.vulnerability_dashboard",
      "lukhas.orchestration.brain.main_bot",
      "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
      "lukhas.orchestration.brain.demo",
      "lukhas.orchestration.brain.trace_memoria_logger",
      "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
      "lukhas.orchestration.brain.collapse_chain_simulator",
      "lukhas.orchestration.brain.token_budget_controller",
      "lukhas.orchestration.brain.collaborative_ai_agent_system",
      "lukhas.orchestration.brain.compliance_registry",
      "lukhas.orchestration.brain.entropy_probe",
      "lukhas.orchestration.brain.ai_compliance",
      "lukhas.orchestration.brain.cpu_friendly_compliance",
      "lukhas.orchestration.brain.mesh.collapse_mesh",
      "lukhas.orchestration.brain.GlobalInstitutionalFramework",
      "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
      "lukhas.orchestration.brain.visualization.healix_visualizer",
      "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
      "lukhas.orchestration.brain.tracing.trace_tools",
      "lukhas.orchestration.brain.visualization.golden_healix_mapper",
      "lukhas.orchestration.brain.attention.quantum_attention",
      "lukhas.orchestration.brain.cognitive.voice_engine",
      "lukhas.orchestration.brain.cognitive.awareness.awareness",
      "lukhas.orchestration.brain.context.lukhas_context_sync",
      "lukhas.orchestration.brain.net.client",
      "lukhas.orchestration.brain.core.azure_free_tier_strategy",
      "lukhas.orchestration.brain.net.async_client",
      "lukhas.orchestration.brain.core.response_types",
      "lukhas.orchestration.brain.core.capability_levels",
      "lukhas.orchestration.brain.core.types",
      "lukhas.orchestration.brain.core.azure_openai_client",
      "lukhas.orchestration.brain.core.orchestrator",
      "lukhas.orchestration.brain.access.tier_manager",
      "lukhas.orchestration.brain.spine.main_loop",
      "lukhas.orchestration.brain.spine.emotion_trend_tracker",
      "lukhas.orchestration.brain.spine.emotional_sorter",
      "lukhas.orchestration.brain.spine.healix_mapper",
      "lukhas.orchestration.brain.spine.trait_manager",
      "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
      "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt",
      "lukhas.orchestration.brain.spine.emotion_intent_link",
      "lukhas.orchestration.brain.spine.fold_engine",
      "lukhas.orchestration.brain.spine.lukhas_trait_sync",
      "lukhas.orchestration.brain.spine.accent_adapter",
      "lukhas.orchestration.brain.spine.emotion_mapper",
      "lukhas.orchestration.brain.spine.lukhas_unified_self",
      "lukhas.orchestration.brain.spine.lukhas_emotion_log",
      "lukhas.orchestration.brain.spine.lukhas_hash",
      "lukhas.orchestration.brain.spine.lukhas_self_reflect_cron",
      "lukhas.orchestration.brain.spine.lukhas_guardian",
      "lukhas.orchestration.brain.lukhas_data.consent_manager",
      "lukhas.orchestration.brain.config.lukhas_settings_editor",
      "lukhas.orchestration.brain.config.paths",
      "lukhas.orchestration.brain.config.settings_loader",
      "lukhas.orchestration.brain.integration.brain_integration",
      "lukhas.orchestration.brain.personality.personality_refiner",
      "lukhas.orchestration.brain.personality.voice_personality",
      "lukhas.orchestration.brain.consciousness.dream_narrator",
      "lukhas.orchestration.brain.consciousness.memory_identity",
      "lukhas.orchestration.brain.prediction.predictive_resource_manager",
      "lukhas.orchestration.brain.unified_integration.adapters.awareness_adapter",
      "lukhas.orchestration.brain.prediction.world_models",
      "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter",
      "lukhas.orchestration.brain.unified_integration.adapters.dream_adapter",
      "lukhas.orchestration.brain.unified_integration.adapters.voice_adapter",
      "lukhas.orchestration.brain.unified_integration.adapters.legacy_adapter",
      "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
      "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
      "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter",
      "lukhas.orchestration.brain.unified_integration.adapters.brain_adapter",
      "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
      "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
      "lukhas.orchestration.brain.abstract_reasoning.interface",
      "lukhas.orchestration.brain.abstract_reasoning.oscillator",
      "lukhas.orchestration.brain.abstract_reasoning.core",
      "lukhas.orchestration.brain.output.lukhas_report_generator",
      "lukhas.orchestration.brain.meta.compliance_engine_20250503213400",
      "lukhas.orchestration.brain.meta.cognition.reflection_layer",
      "lukhas.orchestration.brain.meta.cognition.orchestrator",
      "lukhas.orchestration.brain.meta.integrations.bot_enhancement",
      "lukhas.orchestration.brain.meta.learning.system",
      "lukhas.orchestration.brain.self_improvement.meta_learner",
      "lukhas.orchestration.brain.qrl_code.qrly",
      "lukhas.orchestration.brain.qrl_code.com_validator",
      "lukhas.orchestration.brain.compliance.ai_compliance_manager",
      "lukhas.orchestration.brain.compliance.constitutional_ai",
      "lukhas.orchestration.brain.symbolic_ai.orchestrator",
      "lukhas.orchestration.brain.reasoning.symbolic_validator",
      "lukhas.orchestration.brain.symbolic_ai.modules.intent_inference",
      "lukhas.orchestration.brain.symbolic_ai.modules.dissonance_detector",
      "lukhas.orchestration.brain.symbolic_ai.modules.dream_generator",
      "lukhas.orchestration.brain.symbolic_ai.modules.episodic_recall",
      "lukhas.orchestration.brain.rem.dream_log",
      "lukhas.orchestration.brain.rem.generate_dream",
      "lukhas.orchestration.brain.rem.lidar_emotion_interpreter",
      "lukhas.orchestration.brain.rem.dream_stats",
      "lukhas.orchestration.brain.rem.generate_dream_data",
      "lukhas.orchestration.brain.rem.dream_processor_integrator",
      "lukhas.orchestration.brain.rem.rem",
      "lukhas.orchestration.brain.symbolic_engine.semantic_reasoner",
      "lukhas.orchestration.brain.symbolic_engine.symbolic_core",
      "lukhas.orchestration.brain.symbolic_engine.pattern_recognition",
      "lukhas.orchestration.brain.neuro_symbolic.bridge",
      "lukhas.orchestration.brain.neuro_symbolic.hybrid_integration",
      "lukhas.orchestration.brain.neuro_symbolic.neural_processor",
      "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_integration",
      "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine",
      "lukhas.orchestration.brain.neuro_symbolic.governance.symbolic_action_protocol",
      "lukhas.orchestration.brain.ethics.lukhas_ethics_guard",
      "lukhas.orchestration.brain.ethics.ethics_engine",
      "lukhas.orchestration.brain.ethics.ethical_hierarchy",
      "lukhas.orchestration.brain.ethics.ethical_stop",
      "lukhas.orchestration.brain.ethics.ethical_conflict_resolution",
      "lukhas.orchestration.brain.seamless.experience_core",
      "lukhas.orchestration.brain.emotional.core",
      "lukhas.orchestration.brain.emotional.ethical_stop",
      "lukhas.orchestration.brain.emotional.ethical_conflict_resolution",
      "lukhas.orchestration.brain.subsystems.__init__",
      "lukhas.orchestration.brain.orchestration.the_oscillator",
      "lukhas.orchestration.brain.orchestration.core",
      "lukhas.orchestration.brain.orchestration.main_node",
      "lukhas.orchestration.brain.orchestration.orchestrator_core",
      "lukhas.orchestration.brain.orchestration.emotional_oscillator",
      "lukhas.orchestration.brain.orchestration.orchestrator",
      "lukhas.orchestration.brain.governance.dao_governance_node",
      "lukhas.orchestration.brain.dna.lukhas_dna_link",
      "lukhas.orchestration.brain.monitoring.guardian_reflector",
      "lukhas.orchestration.brain.monitoring.performance",
      "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system",
      "lukhas.orchestration.brain.dream_engine.visualizer_core",
      "lukhas.orchestration.brain.dream_engine.dream_replay_cli",
      "lukhas.orchestration.brain.dream_engine.cli.dream_processor",
      "lukhas.orchestration.brain.dream_engine.cli.replay",
      "lukhas.orchestration.brain.dream_engine.cli.dream_cli",
      "lukhas.orchestration.brain.neural.neural_intelligence_api",
      "lukhas.orchestration.brain.neural.neural_intelligence_main",
      "lukhas.orchestration.brain.neural.cognitive_core",
      "lukhas.orchestration.user_feedback.symbolic_tuner",
      "lukhas.orchestration.user_feedback.feedback_collector",
      "lukhas.orchestration.core_modules.system_orchestrator",
      "lukhas.orchestration.core_modules.orchestrator_core_oxn",
      "lukhas.orchestration.core_modules.signals",
      "lukhas.orchestration.core_modules.plugin_loader",
      "lukhas.orchestration.core_modules.lukhas_orchestrator",
      "lukhas.orchestration.core_modules.controller",
      "lukhas.orchestration.core_modules.workflow_engine",
      "lukhas.orchestration.core_modules.master_orchestrator_alt",
      "lukhas.orchestration.core_modules.symbolic_signal_router",
      "lukhas.orchestration.core_modules.orchestration_alt",
      "lukhas.orchestration.core_modules.master_orchestrator",
      "lukhas.orchestration.core_modules.process_orchestrator",
      "lukhas.orchestration.core_modules.symbolic_handshake",
      "lukhas.orchestration.core_modules.orchestration_service",
      "lukhas.orchestration.core_modules.signal_middleware",
      "lukhas.orchestration.core_modules.lukhas_core_integrator",
      "lukhas.orchestration.monitoring.the_oscillator",
      "lukhas.orchestration.monitoring.remediator_agent",
      "lukhas.orchestration.monitoring.health_checks",
      "lukhas.orchestration.monitoring.reflection_layer",
      "lukhas.orchestration.monitoring.emotional_oscillator",
      "lukhas.orchestration.monitoring.sub_agents.memory_cleaner",
      "lukhas.orchestration.monitoring.sub_agents.ethics_guardian",
      "lukhas.orchestration.interfaces.orchestration_protocol",
      "lukhas.orchestration.interfaces.plugin_registry",
      "lukhas.orchestration.interfaces.agent_interface"
    ],
    "edges": [
      {
        "from": "lukhas.orchestration.signal_router",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.system_orchestrator",
        "to": "lukhas.orchestration.base"
      },
      {
        "from": "lukhas.orchestration.system_orchestrator",
        "to": "lukhas.orchestration.module_orchestrator"
      },
      {
        "from": "lukhas.orchestration.system_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.system_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.system_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.system_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrate_orchestrators",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.migrate_orchestrators",
        "to": "shutil"
      },
      {
        "from": "lukhas.orchestration.migrate_orchestrators",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.migrate_orchestrators",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.migrate_orchestrators",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.migrate_orchestrators",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.workflow_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.workflow_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.workflow_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.workflow_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "lukhas.orchestration.base"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.resonance_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.__init__",
        "to": "lukhas.orchestration.workflow_engine"
      },
      {
        "from": "lukhas.orchestration.__init__",
        "to": "lukhas.orchestration.core"
      },
      {
        "from": "lukhas.orchestration.__init__",
        "to": "lukhas.orchestration"
      },
      {
        "from": "lukhas.orchestration.__init__",
        "to": "lukhas.orchestration.signal_router"
      },
      {
        "from": "lukhas.orchestration.__init__",
        "to": "lukhas.orchestration.agent_orchestrator"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "lukhas.ethics.governance_engine"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "lukhas.memory.systems.MemoryManager"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "lukhas.identity.backend.app.compliance"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "lukhas.core.bio_systems.bio_core"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "lukhas.consciousness.systems.awareness_engine"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "lukhas.core.module_registry"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "lukhas.consciousness.systems.dream_engine"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.core.config.settings"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "resource"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.core.interfaces.ui.multimodal.image_generator"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.voice.speech_processor"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.identity.core.id_service.identity_manager"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.core.interfaces.ui.adaptive.adaptive_interface_generator"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.learning.meta_learning"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.core.cognitive.node"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.core.engine.neuro_symbolic_engine"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "lukhas.orchestration.brain.privacy_manager"
      },
      {
        "from": "lukhas.orchestration.main_node",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.module_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.module_orchestrator",
        "to": "lukhas.orchestration.base"
      },
      {
        "from": "lukhas.orchestration.module_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.module_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.integration_engine",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.integration_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.integration_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.integration_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "lukhas.orchestration.system_orchestrator"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "lukhas.orchestration.base"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "lukhas.orchestration.agents.builtin.codex"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "lukhas.orchestration.interfaces.orchestration_protocol"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "lukhas.orchestration.agent_orchestrator"
      },
      {
        "from": "lukhas.orchestration.master_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.api",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.api",
        "to": "fastapi"
      },
      {
        "from": "lukhas.orchestration.api",
        "to": "lukhas.orchestration.agents.builtin.codex"
      },
      {
        "from": "lukhas.orchestration.api",
        "to": "lukhas.orchestration.interfaces.orchestration_protocol"
      },
      {
        "from": "lukhas.orchestration.api",
        "to": "lukhas.orchestration.agent_orchestrator"
      },
      {
        "from": "lukhas.orchestration.api",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "lukhas.orchestration.base"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "lukhas.orchestration.module_orchestrator"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "lukhas.bio.endocrine_integration"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "lukhas.bio.simulation_controller"
      },
      {
        "from": "lukhas.orchestration.endocrine_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.orchestrator_core",
        "to": "lukhas.orchestration.core"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "lukhas.orchestration.interfaces.agent_interface"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "lukhas.orchestration.interfaces.orchestration_protocol"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "lukhas.orchestration.interfaces.plugin_registry"
      },
      {
        "from": "lukhas.orchestration.agent_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "lukhas.memory.memory_manager"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "lukhas.core.resource_efficiency"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "lukhas.reasoning.causal_reasoning_engine"
      },
      {
        "from": "lukhas.orchestration.orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.example_agents",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.example_agents",
        "to": "lukhas.orchestration.interfaces.agent_interface"
      },
      {
        "from": "lukhas.orchestration.example_agents",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.example_agents",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.example_agents",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.quorum_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.base",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.init.seed_chain_bootstrapper",
        "to": "__future__"
      },
      {
        "from": "lukhas.orchestration.init.__init__",
        "to": "lukhas.orchestration.init.seed_chain_bootstrapper"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "statistics"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.apis.drift_monitoring_api",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "tempfile"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "shutil"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "zipfile"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.apis.code_process_integration_api",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.echo.echo_controller",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.echo.echo_controller",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.echo.echo_controller",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.config.orchestrator_flags",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.config.__init__",
        "to": "lukhas.orchestration.config.production_config"
      },
      {
        "from": "lukhas.orchestration.config.__init__",
        "to": "lukhas.orchestration.config.migration_router"
      },
      {
        "from": "lukhas.orchestration.config.__init__",
        "to": "lukhas.orchestration.config.orchestrator_flags"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "contextlib"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "lukhas.orchestration.config.orchestrator_flags"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "traceback"
      },
      {
        "from": "lukhas.orchestration.config.migration_router",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.config.production_config",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.config.production_config",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.config.production_config",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.config.production_config",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.config.production_config",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.config.production_config",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.config.production_config",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.security.ethics_loop_guard",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.ethics_loop_guard",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.security.ethics_loop_guard",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.security.LGOV_validator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.LGOV_validator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "lukhas.symbolic_ai.filter"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "lukhas.core.errors"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "lukhas.orchestration.bio_awareness.enhanced_awareness"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "lukhas.symbolic_ai.assistant"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "lukhas.quantum.quantum_processing.quantum_engine"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "lukhas.symbolic_ai.memoria"
      },
      {
        "from": "lukhas.orchestration.security.dast_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.security.dast.__init__",
        "to": "lukhas.orchestration.security.dast.adapters"
      },
      {
        "from": "lukhas.orchestration.security.dast.__init__",
        "to": "lukhas.orchestration.security.dast.api"
      },
      {
        "from": "lukhas.orchestration.security.dast.__init__",
        "to": "lukhas.orchestration.security.dast.engine"
      },
      {
        "from": "lukhas.orchestration.security.dast.__init__",
        "to": "lukhas.orchestration.security.dast.intelligence"
      },
      {
        "from": "lukhas.orchestration.security.dast.__init__",
        "to": "lukhas.orchestration.security.dast.processors"
      },
      {
        "from": "lukhas.orchestration.security.dast.intelligence",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.security.dast.intelligence",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.security.dast.intelligence",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.security.dast.intelligence",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.dast.intelligence",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.security.dast.intelligence",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.security.dast.api",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.security.dast.api",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.security.dast.api",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.dast.api",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.security.dast.api",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.security.dast.api",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "lukhas.orchestration.security.dast.intelligence"
      },
      {
        "from": "lukhas.orchestration.security.dast.engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.security.dast.processors",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.security.dast.verify",
        "to": "engine"
      },
      {
        "from": "lukhas.orchestration.security.dast.verify",
        "to": "processors"
      },
      {
        "from": "lukhas.orchestration.security.dast.verify",
        "to": "api"
      },
      {
        "from": "lukhas.orchestration.security.dast.verify",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.security.dast.verify",
        "to": "intelligence"
      },
      {
        "from": "lukhas.orchestration.security.dast.verify",
        "to": "adapters"
      },
      {
        "from": "lukhas.orchestration.security.dast.verify",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "unittest.mock"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "lukhas.orchestration.security.dast.adapters"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "lukhas.orchestration.security.dast.api"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "pytest"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "lukhas.orchestration.security.dast.engine"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "lukhas.orchestration.security.dast.intelligence"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "lukhas.orchestration.security.dast.processors"
      },
      {
        "from": "lukhas.orchestration.security.dast.tests",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.security.dast.adapters",
        "to": "aiohttp"
      },
      {
        "from": "lukhas.orchestration.security.dast.adapters",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.security.dast.adapters",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.security.dast.adapters",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.security.dast.adapters",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.security.dast.adapters",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.security.dast.adapters",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.integration.vendor_sync_orchestrator",
        "to": "vendor_airline_sync"
      },
      {
        "from": "lukhas.orchestration.integration.vendor_sync_orchestrator",
        "to": "lukhas_logbook"
      },
      {
        "from": "lukhas.orchestration.integration.vendor_sync_orchestrator",
        "to": "vendor_vehicle_sync"
      },
      {
        "from": "lukhas.orchestration.integration.vendor_sync_orchestrator",
        "to": "vendor_retail_sync"
      },
      {
        "from": "lukhas.orchestration.integration.vendor_sync_orchestrator",
        "to": "lukhas_registry"
      },
      {
        "from": "lukhas.orchestration.integration.vendor_sync_orchestrator",
        "to": "vendor_home_sync"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "ethics.self_reflective_debugger"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "ethics.meta_ethics_governor"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "lukhas.orchestration.lukhas_master_orchestrator"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "communication.explainability_interface_layer"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "decimal"
      },
      {
        "from": "lukhas.orchestration.integration.human_in_the_loop_orchestrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "copy"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.agents.registry",
        "to": "lukhas.orchestration.agents.base"
      },
      {
        "from": "lukhas.orchestration.agents.registry",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.registry",
        "to": "lukhas.orchestration.agents.types"
      },
      {
        "from": "lukhas.orchestration.agents.multi_agent_collaboration",
        "to": "base64"
      },
      {
        "from": "lukhas.orchestration.agents.multi_agent_collaboration",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.agents.multi_agent_collaboration",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.multi_agent_collaboration",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.agents.multi_agent_collaboration",
        "to": "io"
      },
      {
        "from": "lukhas.orchestration.agents.multi_agent_collaboration",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "LUKHAS.common.logger"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "common.exceptions"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "lukhas.quantum.systems.quantum_engine"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "agent.flagship"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "LUKHAS.CORE.voice.voice_engine"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "common.config"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "core.interfaces.voice.core.sayit"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "AID.core.lambda_identity"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "LUKHAS.CORE_INTEGRATION.orchestrator"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "core.memory.memory_fold"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "LUKHAS.CORE.dream.dream_processor"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "LUKHAS.CORE.emotion.emotional_resonance"
      },
      {
        "from": "lukhas.orchestration.agents.adaptive_orchestrator",
        "to": "yaml"
      },
      {
        "from": "lukhas.orchestration.agents.__init__",
        "to": "lukhas.orchestration.agents.base"
      },
      {
        "from": "lukhas.orchestration.agents.__init__",
        "to": "lukhas.orchestration.agents.types"
      },
      {
        "from": "lukhas.orchestration.agents.__init__",
        "to": "lukhas.orchestration.agents.registry"
      },
      {
        "from": "lukhas.orchestration.agents.types",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.types",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.agents.types",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "lukhas.core.adaptive_systems.crista_optimizer.crista_optimizer"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "core.learning.meta_learning.meta_learning_enhancement_system"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "lukhas.quantum.systems.quantum_processing_core"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "quantum.quantum_bio_coordinator"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "lukhas.bio.systems.orchestration"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.agents.orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "copy"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.agents.meta_cognitive_orchestrator_alt",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.agents.base",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.base",
        "to": "lukhas.orchestration.agents.types"
      },
      {
        "from": "lukhas.orchestration.agents.base",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.agents.builtin.codex",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.builtin.codex",
        "to": "lukhas.orchestration.agents.interfaces.orchestration_protocol"
      },
      {
        "from": "lukhas.orchestration.agents.builtin.codex",
        "to": "lukhas.orchestration.agents.interfaces.agent_interface"
      },
      {
        "from": "lukhas.orchestration.agents.builtin.jules",
        "to": "lukhas.orchestration.agents.base"
      },
      {
        "from": "lukhas.orchestration.agents.builtin.jules",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.agents.builtin.jules",
        "to": "lukhas.orchestration.agents.types"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "lukhas.core.adaptive_systems.crista_optimizer.crista_optimizer"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "core.learning.meta_learning.meta_learning_enhancement_system"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "lukhas.quantum.systems.quantum_processing_core"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "quantum.quantum_bio_coordinator"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "lukhas.bio.systems.orchestration"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.enhancement_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "\u039bBot_elite_orchestrator"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "transformers"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "torch"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "autopep8"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "symbolic_tools.symbol_validator"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "black"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "index_generator"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "networkx"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "ast"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "core.config"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_dependa_bot",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.specialized.ui_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.ui_orchestrator",
        "to": "lukhas.memory.systems.helix_dna"
      },
      {
        "from": "lukhas.orchestration.specialized.ui_orchestrator",
        "to": "lukhas.voice.cognitive_voice"
      },
      {
        "from": "lukhas.orchestration.specialized.ui_orchestrator",
        "to": "consciousness.awareness.system_awareness"
      },
      {
        "from": "lukhas.orchestration.specialized.component_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.component_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.component_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.specialized.component_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.freeze_protection_check",
        "to": "inspect"
      },
      {
        "from": "lukhas.orchestration.specialized.freeze_protection_check",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.freeze_protection_check",
        "to": "lukhas.orchestration.agi_brain_orchestrator"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "\u039bBot_proactive_monitor"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "abstract_reasoning.confidence_calibrator"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "lukhas.ethics.intrinsic_governor"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "\u039bBot_agi_core"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "MultiBrainSymphony"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "lukhas.core.quantized_cycle_manager"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "abstract_reasoning.bio_quantum_engine"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "\u039bBot_enhanced_temporal_intelligence"
      },
      {
        "from": "lukhas.orchestration.specialized.lambda_bot_orchestrator",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentPerformanceMonitor"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "celery"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "kombu"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "socket"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "scikit_learn"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentAutomationBot_ChatGPT"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentCustomerSuccess"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "kubernetes"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "sklearn.preprocessing"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "psutil"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentPerformanceIntelligence"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "consul"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "redis"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "docker"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentCommunicationHub"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentSecurityCompliance"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentAPIGateway"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentProductionDeployment"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentDevOpsAutomation"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentCollaborationEngine"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "prometheus_client"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentLicenseManager"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentRevenueAnalytics"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "lukhasContentGlobalLocalizationEngine"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "etcd3"
      },
      {
        "from": "lukhas.orchestration.specialized.content_enterprise_orchestrator",
        "to": "sklearn.ensemble"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "sdk.core.integration_bridge"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "memory.core_memory.core"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "core.common.__init__"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "lukhas.memory.systems.core"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "core.memory.hooks.registry"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "creativity.dream_systems.dream_engine"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "core.identity.identity_engine"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "core.integration.governance.__init__"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "core.interfaces.logic.voice.voice_renderer"
      },
      {
        "from": "lukhas.orchestration.specialized.lukhas_orchestrator_emotion_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.deployment_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.specialized.deployment_orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.specialized.deployment_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.deployment_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.specialized.deployment_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.specialized.deployment_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.inter_agent_simulation",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.specialized.inter_agent_simulation",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.inter_agent_simulation",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.specialized.inter_agent_simulation",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.specialized.inter_agent_simulation",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.specialized.inter_agent_simulation",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.inter_agent_simulation",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.loop_recovery_simulator",
        "to": "lukhas.orchestration.specialized.dast_orchestrator"
      },
      {
        "from": "lukhas.orchestration.specialized.loop_recovery_simulator",
        "to": "lukhas.orchestration.specialized.system_orchestrator"
      },
      {
        "from": "lukhas.orchestration.specialized.loop_recovery_simulator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.specialized.loop_recovery_simulator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.loop_recovery_simulator",
        "to": "lukhas.orchestration.specialized.ethics_loop_guard"
      },
      {
        "from": "lukhas.orchestration.specialized.loop_recovery_simulator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "resource"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "backend.security.privacy_manager"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "backend.core.neuro_symbolic_engine"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "lukhas.voice.speech_processor"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "frontend.multimodal.image_generator"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "frontend.interface.adaptive_interface_generator"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "core.config.settings"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "backend.cognitive.node"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "backend.learning.meta_learning"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "backend.identity.identity_manager"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.specialized.integrated_system_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.immune.system_watchdog",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.immune.system_watchdog",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.immune.system_watchdog",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.immune.system_watchdog",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "lukhas.orchestration.system_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "lukhas.core.adaptive_systems.crista_optimizer.crista_optimizer"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "core.learning.meta_learning.meta_learning_enhancement_system"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "lukhas.quantum.systems.quantum_processing_core"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "quantum.quantum_bio_coordinator"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "lukhas.bio.systems.orchestration"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.migrated.unified_agi_enhancement_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_orchestrator",
        "to": "lukhas.orchestration.module_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.orchestration.system_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.ethics.hitlo_bridge"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.orchestration.base"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.orchestration_src.brain.nodes.ethics_node"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.orchestration_src.ethics_loop_guard"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.ethics"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "lukhas.ethics.meg_bridge"
      },
      {
        "from": "lukhas.orchestration.migrated.ethics_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "ethics_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "brain_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "traceback"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "memory_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.test_migrations",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "lukhas.orchestration.system_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "lukhas.core.adaptive_systems.crista_optimizer.crista_optimizer"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "lukhas.quantum.systems.quantum_processing_core"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "lukhas.core.adaptive_systems.crista_optimizer.symbolic_network"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "lukhas.bio.systems.orchestration"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "lukhas.core.adaptive_systems.crista_optimizer.topology_manager"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "lukhas.core.learning.meta_learning.meta_learning_enhancement_system"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.migrated.brain_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "lukhas.orchestration.base"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "lukhas.orchestration.module_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "lukhas.orchestration.migrated.memory_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "traceback"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.migrated.simple_test",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "lukhas.core.memory.memory_fold"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "lukhas.orchestration.module_orchestrator"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "sqlite3"
      },
      {
        "from": "lukhas.orchestration.migrated.memory_integration_orchestrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.examples.endocrine_module_example",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.examples.endocrine_module_example",
        "to": "lukhas.orchestration.endocrine_orchestrator"
      },
      {
        "from": "lukhas.orchestration.examples.endocrine_module_example",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.examples.endocrine_module_example",
        "to": "lukhas.bio.simulation_controller"
      },
      {
        "from": "lukhas.orchestration.examples.endocrine_module_example",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_expression",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_expression",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_expression",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "ast"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.symbol_validator",
        "to": "concurrent.futures"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "GlobalInstitutionalFramework"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.canadian_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "github_vulnerability_manager"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "lambdabot_autonomous_fixer"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "security_pr_analyzer"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_github_actions",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "LUKHAS_ID.vault.lukhas_id"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "learning.memory_learning.memory_manager"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "lukhas.consciousness.core_consciousness.dream_engine.dream_reflection_loop"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "DASHBOARD.lukhas_as_agent.core.memory_folds"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "bio_symbolic.quantum_attention"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "VOICE.voice_integrator"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "lukhas.orchestration.brain.spine.fold_engine"
      },
      {
        "from": "lukhas.orchestration.brain.brain_integration",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.quantum_annealed_consensus",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.quantum_annealed_consensus",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.quantum_annealed_consensus",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.quantum_annealed_consensus",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.quantum_annealed_consensus",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.quantum_annealed_consensus",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.multi_brain_orchestrator",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.brain.multi_brain_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.multi_brain_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.multi_brain_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.multi_brain_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.multi_brain_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "GlobalInstitutionalFramework"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.us_institutional_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "lukhas.orchestration.brain.reasoning.causal_reasoning_module"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "lukhas.orchestration.brain.prediction.predictive_resource_manager"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "lukhas.orchestration.brain.memory.enhanced_memory_manager"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system"
      },
      {
        "from": "lukhas.orchestration.brain.controller",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.das_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "lukhas.orchestration.brain.orchestration.orchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "lukhas.orchestration.brain.compliance.ethical_engine"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "lukhas.orchestration.brain.reasoning.symbolic_reasoning"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "lukhas.orchestration.brain.metacognition.orchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "lukhas.orchestration.brain.attention.quantum_attention"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "lukhas.orchestration.brain.reasoning.causal_reasoning_engine"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_core",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.monitor",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.monitor",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.monitor",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.monitor",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "aethios.interface.voice.emotional_fingerprinter"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "V1.systems.core.modules.dast.dast_logger"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "V1.systems.core.modules.nias.nias_core"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "aethios.core.context_analyzer"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "AGENT.lukhas_nias_filter"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "V1.systems.core.modules.dast.dast_core"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "aethios.interface.voice.speech_processor"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "AGENT.lukhas_widget_engine"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "V1.systems.core.modules.abas.abas"
      },
      {
        "from": "lukhas.orchestration.brain.dynamic_adaptive_dashboard",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_bridge",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_bridge",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_bridge",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_bridge",
        "to": "lukhas.orchestration.brain.brain_collapse_manager"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_bridge",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.context_analyzer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.context_analyzer",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.context_analyzer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.context_analyzer",
        "to": "zoneinfo"
      },
      {
        "from": "lukhas.orchestration.brain.context_analyzer",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.validate_pr_security_review",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.validate_pr_security_review",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.validate_pr_security_review",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.validate_pr_security_review",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.validate_pr_security_review",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.validate_pr_security_review",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "base64"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.eu_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.adaptive_image_generator",
        "to": "lukhas.bridge.llm_wrappers.unified_openai_client"
      },
      {
        "from": "lukhas.orchestration.brain.adaptive_image_generator",
        "to": "integrations.openai.dalle_client"
      },
      {
        "from": "lukhas.orchestration.brain.adaptive_image_generator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.adaptive_image_generator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.adaptive_image_generator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.adaptive_image_generator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness",
        "to": "lukhas.orchestration.core.config"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.eu_ai_transparency",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "GlobalInstitutionalFramework"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.research_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "token_budget_controller"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "core.config"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "concurrent.futures"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_github_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_starter",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_starter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_starter",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_starter",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_starter",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "GlobalInstitutionalFramework"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.uk_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.llm_engine",
        "to": "torch"
      },
      {
        "from": "lukhas.orchestration.brain.llm_engine",
        "to": "transformers"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "safe_subprocess_executor"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.security_pr_analyzer",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "lambda_bot_batch_processor"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "lukhas.orchestration.brain.token_budget_controller"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.github_vulnerability_manager",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.brain.learn_to_learn",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.learn_to_learn",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.learn_to_learn",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.learn_to_learn",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.integration_bridge",
        "to": "lukhas.orchestration.meta_cognitive_orchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.integration_bridge",
        "to": "lukhas.orchestration.brain.lukhas_brain"
      },
      {
        "from": "lukhas.orchestration.brain.integration_bridge",
        "to": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine"
      },
      {
        "from": "lukhas.orchestration.brain.safe_subprocess_executor",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.safe_subprocess_executor",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.brain.safe_subprocess_executor",
        "to": "signal"
      },
      {
        "from": "lukhas.orchestration.brain.safe_subprocess_executor",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.safe_subprocess_executor",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.safe_subprocess_executor",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.safe_subprocess_executor",
        "to": "tempfile"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "cryptography.hazmat.primitives"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "cryptography.hazmat.primitives.kdf.pbkdf2"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "base64"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "cryptography.fernet"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.privacy_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.safety_guardrails",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.safety_guardrails",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.safety_guardrails",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.safety_guardrails",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.safety_guardrails",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "resource"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "backend.security.privacy_manager"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "backend.core.neuro_symbolic_engine"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "lukhas.voice.speech_processor"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "frontend.multimodal.image_generator"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "frontend.interface.adaptive_interface_generator"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "core.config.settings"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "backend.cognitive.node"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "backend.learning.meta_learning"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "backend.identity.identity_manager"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.main_node",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "lukhas.orchestration.brain.trauma_lock"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "lukhas.orchestration.brain.emotional_memory"
      },
      {
        "from": "lukhas.orchestration.brain.identity_manager",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.dream_mutator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.dream_mutator",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.dream_mutator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.dream_mutator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "github_vulnerability_manager"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "token_budget_controller"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.lambda_bot_batch_processor",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
        "to": "symbolic_ai.lukhas_voice"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_unified_self_merge_divergence",
        "to": "symbolic_ai.trait_manager"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_integrity",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_integrity",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_integrity",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_integrity",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "shutil"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "token_budget_controller"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "tempfile"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_workflow_fixer",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "github_vulnerability_manager"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "token_budget_controller"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "lambda_bot_batch_processor"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.autonomous_system",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "lukhas.orchestration.brain.collapse_chain_integrity"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "lukhas.orchestration.brain.integrity_probe"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "lukhas.orchestration.brain.mesh.collapse_mesh"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "lukhas.orchestration.brain.collapse_bridge"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "consciousness.awareness.symbolic_trace_logger"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "lukhas.memory.systems.memory_collapse_verifier"
      },
      {
        "from": "lukhas.orchestration.brain.brain_collapse_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "brain.orchestration.AgiBrainOrchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "lukhas.orchestration.brain.cognitive_core"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "lukhas.orchestration.brain.MultiBrainSymphony"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "lukhas_intelligence_engines"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "learning.core.lukhas_core"
      },
      {
        "from": "lukhas.orchestration.brain.orchestrator",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "attention.quantum_attention"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "eu_ai_transparency"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "compliance.ethical_engine"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "lukhas.bridge.llm_wrappers.unified_openai_client"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "orchestration.agents.MetaCognitiveOrchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "reasoning.symbolic_reasoning"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "reasoning.causal_reasoning"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "lukhas.orchestration.brain.core.response_types"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "brain.enhanced_brain_integration"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "lukhas.orchestration.brain.core.capability_levels"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive_core",
        "to": "concurrent.futures"
      },
      {
        "from": "lukhas.orchestration.brain.integrity_probe",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.integrity_probe",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.integrity_probe",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.integrity_probe",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.drift_pattern_analyzer",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.drift_pattern_analyzer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.drift_pattern_analyzer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.drift_pattern_analyzer",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "tempfile"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "anthropic"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "shutil"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "aiohttp"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "token_budget_controller"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "git"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "github_vulnerability_manager"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "yaml"
      },
      {
        "from": "lukhas.orchestration.brain.lambdabot_autonomous_fixer",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.brain.fix_lambda_symbols",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.fix_lambda_symbols",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.fix_lambda_symbols",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.fix_lambda_symbols",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "GlobalInstitutionalFramework"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.australian_awareness_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "github_vulnerability_manager"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "lambdabot_autonomous_fixer"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "token_budget_controller"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "security_pr_analyzer"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.pr_security_review_task",
        "to": "requests"
      },
      {
        "from": "lukhas.orchestration.brain.experience_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.experience_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.experience_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.MultiBrainSymphony",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.brain.MultiBrainSymphony",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.MultiBrainSymphony",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.MultiBrainSymphony",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.MultiBrainSymphony",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.MultiBrainSymphony",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "GlobalInstitutionalFramework"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalCompliantEngine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.lukhas_awareness_engine_elevated",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.vulnerability_dashboard",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.vulnerability_dashboard",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.vulnerability_dashboard",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.vulnerability_dashboard",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "lukhas.orchestration.brain.compliance.ethical_engine"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "lukhas.orchestration.brain.reasoning.symbolic_reasoning"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "lukhas.orchestration.brain.metacognition.orchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "lukhas.orchestration.brain.reasoning.causal_reasoning"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "lukhas.orchestration.brain.attention.quantum_attention"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "lukhas.orchestration.brain.core.response_types"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "lukhas.orchestration.brain.core.capability_levels"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.main_bot",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "backend.cognitive.cognitive_dna"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "backend.core.neuro_symbolic_engine"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "compliance_engine"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "backend.identity.identity_manager"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "frontend.interface.adaptive_interface_generator"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "frontend.multimodal.image_generator"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "backend.security.privacy_manager"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "lukhas.voice.speech_processor"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "core.config.settings"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "frontend.voice.emotional_fingerprinting"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "lukhas.voice.safety.voice_safety_guard"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "lukhas.voice.modulator"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "memory_manager"
      },
      {
        "from": "lukhas.orchestration.brain.demo",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.trace_memoria_logger",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.token_budget_controller",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_simulator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_simulator",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_simulator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_simulator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_simulator",
        "to": "lukhas.orchestration.brain.brain_collapse_manager"
      },
      {
        "from": "lukhas.orchestration.brain.collapse_chain_simulator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.collaborative_ai_agent_system",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.collaborative_ai_agent_system",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.collaborative_ai_agent_system",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.collaborative_ai_agent_system",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.collaborative_ai_agent_system",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.collaborative_ai_agent_system",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.collaborative_ai_agent_system",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.compliance_registry",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.compliance_registry",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.compliance_registry",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.compliance_registry",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.compliance_registry",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.entropy_probe",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.entropy_probe",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.entropy_probe",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.entropy_probe",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.entropy_probe",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.ai_compliance",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.ai_compliance",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.ai_compliance",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.ai_compliance",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "base64"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.GlobalInstitutionalFramework",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.cpu_friendly_compliance",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.cpu_friendly_compliance",
        "to": "psutil"
      },
      {
        "from": "lukhas.orchestration.brain.cpu_friendly_compliance",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.cpu_friendly_compliance",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.collapse_mesh",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.collapse_mesh",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "weakref"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.mesh.cognitive_mesh_coordinator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "plotly.subplots"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "golden_healix_mapper"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "matplotlib.patches"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "plotly.express"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "matplotlib.pyplot"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "seaborn"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "plotly.graph_objects"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "matplotlib.animation"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.healix_visualizer",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "base64"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.golden_healix_mapper",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "lukhas.orchestration.AID.core.lambda_id"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "plotly.graph_objects"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "lukhas.memory.core_memory.memory_fold"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "lukhas.orchestration.memory.memory_manager"
      },
      {
        "from": "lukhas.orchestration.brain.visualization.memory_helix_visualizer",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.tracing.trace_tools",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.tracing.trace_tools",
        "to": "pandas"
      },
      {
        "from": "lukhas.orchestration.brain.attention.__init__",
        "to": "lukhas.orchestration.brain.attention.quantum_attention"
      },
      {
        "from": "lukhas.orchestration.brain.attention.quantum_attention",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.attention.quantum_attention",
        "to": "copy"
      },
      {
        "from": "lukhas.orchestration.brain.attention.quantum_attention",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.attention.quantum_attention",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.voice_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.voice_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.voice_engine",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.voice_engine",
        "to": "lukhas.memory.systems.helix_mapper"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.awareness.awareness",
        "to": "lukhas.orchestration.brain.cognitive.bio_symbolic"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.awareness.awareness",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.awareness.awareness",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.awareness.awareness",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.awareness.awareness",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.awareness.awareness",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.cognitive.awareness.awareness",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._auth"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "warnings"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._transports.base"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._utils"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "h2"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net.__version__"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "__future__"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._exceptions"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._types"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._transports.default"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._urls"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "ssl"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._status_codes"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._models"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._config"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "lukhas.orchestration.brain.net._decoders"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "contextlib"
      },
      {
        "from": "lukhas.orchestration.brain.net.client",
        "to": "types"
      },
      {
        "from": "lukhas.orchestration.brain.net.client_event",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub.utils._deprecation"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub.inference._providers"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "aiohttp"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "base64"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "warnings"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "PIL.Image"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub.inference._common"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub.utils._auth"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub.errors"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub.utils"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "huggingface_hub.inference._generated.types"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "lukhas.orchestration.brain._common"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.net.async_client",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.context.lukhas_context_sync",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.context.lukhas_context_sync",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.context.lukhas_context_sync",
        "to": "memory_log_filter"
      },
      {
        "from": "lukhas.orchestration.brain.context.lukhas_context_sync",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.core.azure_free_tier_strategy",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.core.azure_free_tier_strategy",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.core.response_types",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.core.response_types",
        "to": "lukhas.orchestration.brain.core.capability_levels"
      },
      {
        "from": "lukhas.orchestration.brain.core.response_types",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.core.types",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.core.types",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.core.types",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.core.types",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.core.types",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.core.types",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.core.types",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.core.capability_levels",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.core.azure_openai_client",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.brain.core.azure_openai_client",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.core.azure_openai_client",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.core.azure_openai_client",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "core.learning.meta_learning.meta_learning_enhancement_system"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "lukhas.quantum.systems.quantum_processing_core"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "lukhas.bio.systems.orchestration"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "lukhas.orchestration.brain.neural.neural_intelligence_api"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.core.orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.access.tier_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.access.tier_manager",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.access.tier_manager",
        "to": "fastapi"
      },
      {
        "from": "lukhas.orchestration.brain.access.tier_manager",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "elevenlabs"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "edge_tts"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.spine.main_loop",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.spine.emotion_trend_tracker",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.spine.emotion_trend_tracker",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.healix_mapper",
        "to": "emotion_mapper_alt"
      },
      {
        "from": "lukhas.orchestration.brain.spine.healix_mapper",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.healix_mapper",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.spine.healix_mapper",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.spine.healix_mapper",
        "to": "core.identity.vault.lukhas_id"
      },
      {
        "from": "lukhas.orchestration.brain.spine.healix_mapper",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.spine.healix_mapper",
        "to": "lukhas.orchestration.brain.spine.accent_adapter"
      },
      {
        "from": "lukhas.orchestration.brain.spine.trait_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.trait_manager",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.trait_manager",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
        "to": "symbolic_ai.trait_manager"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync_gpt_synb_ref",
        "to": "symbolic_ai.personas.lukhas.lukhas_meta_sync"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt",
        "to": "atexit"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt",
        "to": "cryptography.fernet"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_emotion_log_alt",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.fold_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.fold_engine",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.spine.fold_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.spine.fold_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.fold_engine",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.spine.fold_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.spine.fold_engine",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.spine.emotion_intent_link",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.spine.emotion_intent_link",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.emotion_intent_link",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.emotion_intent_link",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_trait_sync",
        "to": "symbolic_ai.trait_manager"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "base64"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "cryptography.fernet"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "core.identity.vault.lukhas_id"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.spine.accent_adapter",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "symbolic_ai.trait_manager"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_unified_self",
        "to": "lukhas_reflection_gpt"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_emotion_log",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_emotion_log",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_hash",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_hash",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_hash",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_hash",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_self_reflect_cron",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_self_reflect_cron",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_self_reflect_cron",
        "to": "schedule"
      },
      {
        "from": "lukhas.orchestration.brain.spine.lukhas_self_reflect_cron",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.config.lukhas_settings_editor",
        "to": "streamlit"
      },
      {
        "from": "lukhas.orchestration.brain.config.lukhas_settings_editor",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.config.lukhas_settings_editor",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.config.paths",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.config.settings_loader",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.config.settings_loader",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.config.read_settings",
        "to": "settings_loader"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "MultiBrainSymphony"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "lukhas.consciousness.core_consciousness.dream_engine.dream_reflection_loop"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "lukhas.orchestration.brain.integration.MultiBrainSymphony"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "DASHBOARD.\u039b_as_agent.core.memory_folds"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "DASHBOARD.lukhas_as_agent.core.memory_folds"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "VOICE.voice_integrator"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "lukhas.orchestration.brain.spine.fold_engine"
      },
      {
        "from": "lukhas.orchestration.brain.integration.brain_integration",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.personality.personality_refiner",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.personality.personality_refiner",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.personality.personality_refiner",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "lukhas.orchestration.brain.orchestration.emotional_oscillator"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "core.personality.creative_expressions"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "lukhas.orchestration.brain.personality.personality_refiner"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.personality.voice_personality",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.dream_narrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "lukhas.orchestration.brain.consciousness.lukhas_lambda_id"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "cryptography.fernet"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "lukhas.orchestration.brain.consciousness.\u039b_lambda_id"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.consciousness.memory_identity",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.predictive_resource_manager",
        "to": "statistics"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.predictive_resource_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.predictive_resource_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.predictive_resource_manager",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.predictive_resource_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.__init__",
        "to": "lukhas.orchestration.brain.prediction.predictive_resource_manager"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.prediction.world_models",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.awareness_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.awareness_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.awareness_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.awareness_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.unified_integration"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.awareness_adapter",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.unified_integration"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.bio_adapter",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.dream_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.dream_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.dream_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.dream_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.unified_integration"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.dream_adapter",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.voice_adapter",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.voice_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.voice_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.voice_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.unified_integration"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.voice_adapter",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.legacy_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.legacy_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.legacy_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.adapters.integration_layer"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.adapters.unified_node"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.bio_symbolic"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.cognitive_adapter",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.adapters.unified_node"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.bio_symbolic"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.oscillator_adapter",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter",
        "to": "lukhas.orchestration.brain.bio_symbolic"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.intent_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.unified_node"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.brain_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.brain_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.brain_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.brain_adapter",
        "to": "lukhas.orchestration.brain.unified_integration.unified_integration"
      },
      {
        "from": "lukhas.orchestration.brain.unified_integration.adapters.brain_adapter",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "lukhas.orchestration.memory_brain.core.memory_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "lukhas.orchestration.dreams_brain.core.dreams_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "lukhas.core.quantum_bio.QUANTUM_BIO_advanced_quantum_bio"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "lukhas.orchestration.emotional_brain.core.emotional_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "lukhas.integration.oscillators.quantum_enhanced_oscillator"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "lukhas.orchestration.learning_brain.core.learning_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.interface",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.interface",
        "to": "lukhas.orchestration.brain.abstract_reasoning.core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.interface",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.interface",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.interface",
        "to": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_radar_integration"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.interface",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.oscillator",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.oscillator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.oscillator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.oscillator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.oscillator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.oscillator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.__init__",
        "to": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_radar_integration"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.__init__",
        "to": "lukhas.orchestration.brain.abstract_reasoning.core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.__init__",
        "to": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.__init__",
        "to": "lukhas.orchestration.brain.abstract_reasoning.interface"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.__init__",
        "to": "lukhas.orchestration.brain.abstract_reasoning.oscillator"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.__init__",
        "to": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "lukhas.orchestration.memory_brain.core.memory_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "lukhas.orchestration.dreams_brain.core.dreams_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "lukhas.orchestration.emotional_brain.core.emotional_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "lukhas.orchestration.brain.abstract_reasoning.bio_quantum_engine"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "lukhas.orchestration.learning_brain.core.learning_brain_core"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "lukhas.orchestration.brain.abstract_reasoning.confidence_calibrator"
      },
      {
        "from": "lukhas.orchestration.brain.abstract_reasoning.core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.output.lukhas_report_generator",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.brain.output.lukhas_report_generator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.output.lukhas_report_generator",
        "to": "symbolic_ai.lukhas_unified_self"
      },
      {
        "from": "lukhas.orchestration.brain.output.lukhas_report_generator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.output.lukhas_report_generator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.output.lukhas_report_generator",
        "to": "symbolic_ai.lukhas_reflection_gpt"
      },
      {
        "from": "lukhas.orchestration.brain.output.lukhas_report_generator",
        "to": "symbolic_ai.trait_manager"
      },
      {
        "from": "lukhas.orchestration.brain.output.message_hub",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.output.message_hub",
        "to": "lukhas_dna_link"
      },
      {
        "from": "lukhas.orchestration.brain.output.message_hub",
        "to": "streamlit"
      },
      {
        "from": "lukhas.orchestration.brain.output.message_hub",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.meta.compliance_engine_20250503213400",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.meta.compliance_engine_20250503213400",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.meta.compliance_engine_20250503213400",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.meta.compliance_engine_20250503213400",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.meta.compliance_engine_20250503213400",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.meta.compliance_engine_20250503213400",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.brain.bio.symbolic_.glyph_id_hash"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.MODULES.memoria.lukhas_replayer"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.brain.spine.healix_mapper"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.brain.brain.memory.AdvancedMemoryManager"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.AID.dream_engine.dream_replay"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.LUKHAS_ID.backend.app.crypto"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.brain.meta.cognition.remediator_agent"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.brain.bio.core.memory.quantum_memory_manager"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.INTENT.intent_node"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.MODULES.memoria.\u039b_replayer"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.reflection_layer",
        "to": "lukhas.orchestration.VOICE.voice_pack_manager"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.orchestrator",
        "to": "lukhas.orchestration.brain.meta.core.capability_levels"
      },
      {
        "from": "lukhas.orchestration.brain.meta.cognition.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.meta.learning.system",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.meta.integrations.bot_enhancement",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.meta.integrations.bot_enhancement",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.meta.integrations.bot_enhancement",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.meta.integrations.bot_enhancement",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.meta.integrations.bot_enhancement",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.self_improvement.meta_learner",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.self_improvement.meta_learner",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.self_improvement.meta_learner",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.__init__",
        "to": "lukhas.orchestration.brain.compliance.ethical_engine"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "math"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.constitutional_ai",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.ai_compliance_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.ai_compliance_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.ai_compliance_manager",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.ai_compliance_manager",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.ai_compliance_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.compliance.ai_compliance_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.__init__",
        "to": "lukhas.orchestration.brain.reasoning.causal_reasoning_module"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "ast"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "lukhas.orchestration.brain.reasoning.types"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "re"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "inspect"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.reasoning.symbolic_validator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.orchestrator",
        "to": "modules.episodic_recall"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.orchestrator",
        "to": "modules.dream_generator"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.orchestrator",
        "to": "modules.intent_inference"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.orchestrator",
        "to": "modules.dissonance_detector"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.modules.intent_inference",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.modules.dream_generator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.modules.dream_generator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.modules.dream_generator",
        "to": "lukhas.ethics.ethical_guardian"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.modules.dream_generator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.modules.dream_generator",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_ai.modules.episodic_recall",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_log",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_log",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_log",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.rem.lidar_emotion_interpreter",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.rem.lidar_emotion_interpreter",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.rem.lidar_emotion_interpreter",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_stats",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_stats",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_stats",
        "to": "pprint"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_stats",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream_data",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream_data",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream_data",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream_data",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.rem.generate_dream_data",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_processor_integrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_processor_integrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.rem.dream_processor_integrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.rem.rem",
        "to": "modules.dream_seed"
      },
      {
        "from": "lukhas.orchestration.brain.rem.rem",
        "to": "lukhas.creativity.dream_systems.dream_log"
      },
      {
        "from": "lukhas.orchestration.brain.rem.rem",
        "to": "modules.fold_token"
      },
      {
        "from": "lukhas.orchestration.brain.rem.rem",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.rem.rem",
        "to": "modules.memoria"
      },
      {
        "from": "lukhas.orchestration.brain.rem.sleep_cycle",
        "to": "modules.memoria"
      },
      {
        "from": "lukhas.orchestration.brain.rem.sleep_cycle",
        "to": "modules.dream_seed"
      },
      {
        "from": "lukhas.orchestration.brain.rem.sleep_cycle",
        "to": "dream_log"
      },
      {
        "from": "lukhas.orchestration.brain.rem.sleep_cycle",
        "to": "modules.fold_token"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.semantic_reasoner",
        "to": "lukhas.orchestration.brain.symbolic_engine.symbolic_core"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.semantic_reasoner",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.semantic_reasoner",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.semantic_reasoner",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.semantic_reasoner",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.symbolic_core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.symbolic_core",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.symbolic_core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.symbolic_core",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.pattern_recognition",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.pattern_recognition",
        "to": "core.adaptive_systems.crista_optimizer.crista_optimizer"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.pattern_recognition",
        "to": "neuro_symbolic.bridge"
      },
      {
        "from": "lukhas.orchestration.brain.symbolic_engine.pattern_recognition",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.bridge",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.bridge",
        "to": "lukhas.orchestration.brain.symbolic_ai.memory"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.bridge",
        "to": "lukhas.orchestration.brain.dream_engine.dream_processor"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.bridge",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.hybrid_integration",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.hybrid_integration",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.hybrid_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.hybrid_integration",
        "to": "torch"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.hybrid_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neural_processor",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neural_processor",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.neuro_symbolic_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.governance.symbolic_action_protocol",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.governance.symbolic_action_protocol",
        "to": "utils.trace_logger"
      },
      {
        "from": "lukhas.orchestration.brain.neuro_symbolic.governance.symbolic_action_protocol",
        "to": "lukhas_data.consent_manager"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.lukhas_ethics_guard",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.lukhas_ethics_guard",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.lukhas_ethics_guard",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethics_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethics_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethics_engine",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethics_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethical_hierarchy",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethical_hierarchy",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethical_hierarchy",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethical_hierarchy",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethical_hierarchy",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.ethics.ethical_hierarchy",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.seamless.experience_core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.seamless.experience_core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.emotional.core",
        "to": "core.common.__init__"
      },
      {
        "from": "lukhas.orchestration.brain.emotional.core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.emotional.core",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.emotional.core",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.emotional.core",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.emotional.core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "qiskit.quantum_info"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "qiskit"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "scipy.special"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "simpleaudio"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.the_oscillator",
        "to": "qiskit.circuit"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "consciousness.core_consciousness.awareness_engine"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "lukhas.orchestration.brain.bio.symbolic.bio.core"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "governance.ethics.EthicsGuardian"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "consciousness.core_consciousness.dream_engine.__init__"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "identity.backend.app.compliance"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "memory.core_memory.MemoryManager"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.core",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "resource"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "AID.service.identity_manager"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "backend.security.privacy_manager"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "backend.core.neuro_symbolic_engine"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "lukhas.voice.speech_processor"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "frontend.multimodal.image_generator"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "frontend.interface.adaptive_interface_generator"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "core.config.settings"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "backend.cognitive.node"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "backend.learning.meta_learning"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.main_node",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator_core",
        "to": "seedra_core.guardian_orchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator_core",
        "to": "seedra_core.ipfs_relayer"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator_core",
        "to": "nodes.ethics_node"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator_core",
        "to": "cryptography.fernet"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator_core",
        "to": "seedra_core.vault_unlock_chain"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "lukhas.orchestration.brain.memory.memory_manager"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "lukhas.orchestration.brain.reasoning.causal_reasoning_engine"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.emotional_oscillator",
        "to": "lukhas_governance.compliance_hooks"
      },
      {
        "from": "lukhas.orchestration.brain.orchestration.emotional_oscillator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.brain.governance.dao_governance_node",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.dna.lukhas_dna_link",
        "to": "openai"
      },
      {
        "from": "lukhas.orchestration.brain.dna.lukhas_dna_link",
        "to": "dotenv"
      },
      {
        "from": "lukhas.orchestration.brain.dna.lukhas_dna_link",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.dna.lukhas_dna_link",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.dna.lukhas_dna_link",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "lukhas.orchestration.CORE.memory.memory_manager"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "unittest.mock"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "lukhas.orchestration.CORE.ethics.ethics_engine"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "lukhas.orchestration.CORE.integration.integration_layer"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.guardian_reflector",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "psutil"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "weakref"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "tracemalloc"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "queue"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "functools"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "gc"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "contextlib"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "concurrent.futures"
      },
      {
        "from": "lukhas.orchestration.brain.monitoring.performance",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.meta_cognitive.__init__",
        "to": "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system"
      },
      {
        "from": "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.meta_cognitive.reflective_introspection_system",
        "to": "collections"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.visualizer_core",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.visualizer_core",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.dream_replay_cli",
        "to": "core.modules.nias.__init__"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.cli.dream_processor",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.cli.dream_processor",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.cli.dream_processor",
        "to": "lukhas.orchestration.brain.dream_engine.symbolic_ai.memory"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.cli.replay",
        "to": "core.modules.nias.__init__"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.cli.dream_cli",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.cli.dream_cli",
        "to": "argparse"
      },
      {
        "from": "lukhas.orchestration.brain.dream_engine.cli.dream_cli",
        "to": "subprocess"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_api",
        "to": "neural_intelligence_main"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_api",
        "to": "uvicorn"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_api",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_api",
        "to": "pydantic"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_api",
        "to": "fastapi"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_api",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_api",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.neural.__init__",
        "to": "lukhas.orchestration.brain.neural.neural_intelligence_main"
      },
      {
        "from": "lukhas.orchestration.brain.neural.__init__",
        "to": "lukhas.orchestration.brain.neural.cognitive_core"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_main",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_main",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_main",
        "to": "cognitive_core"
      },
      {
        "from": "lukhas.orchestration.brain.neural.neural_intelligence_main",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "lukhas.orchestration.brain.visualization.golden_healix_mapper"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "lukhas.orchestration.brain.compliance.ethical_engine"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "orchestration.agents.MetaCognitiveOrchestrator"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "lukhas.orchestration.brain.attention.quantum_attention"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "lukhas.orchestration.brain.core.response_types"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "reasoning.causal_reasoning"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "reasoning.symbolic_reasoning"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "creativity.dream_systems.dream_engine"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "lukhas.orchestration.brain.core.capability_levels"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.brain.neural.cognitive_core",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.brain.logging.lukhas_output_log",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.brain.logging.lukhas_output_log",
        "to": "streamlit"
      },
      {
        "from": "lukhas.orchestration.brain.logging.lukhas_output_log",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.brain.logging.lukhas_output_log",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.brain.logging.lukhas_output_log",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.user_feedback.symbolic_tuner",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.user_feedback.symbolic_tuner",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.user_feedback.feedback_collector",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.user_feedback.feedback_collector",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.user_feedback.feedback_collector",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.user_feedback.feedback_collector",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.guardian.guardian_cli_test",
        "to": "seedra_docs.multisig_validator"
      },
      {
        "from": "lukhas.orchestration.guardian.guardian_cli_test",
        "to": "seedra_core.guardian_orchestrator"
      },
      {
        "from": "lukhas.orchestration.guardian.guardian_cli_test",
        "to": "cryptography.fernet"
      },
      {
        "from": "lukhas.orchestration.core_modules.system_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.system_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.system_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.system_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestrator_core_oxn",
        "to": "seedra_core.guardian_orchestrator"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestrator_core_oxn",
        "to": "seedra_core.ipfs_relayer"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestrator_core_oxn",
        "to": "nodes.ethics_node"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestrator_core_oxn",
        "to": "cryptography.fernet"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestrator_core_oxn",
        "to": "seedra_core.vault_unlock_chain"
      },
      {
        "from": "lukhas.orchestration.core_modules.signals",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.core_modules.signals",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.signals",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.core_modules.signals",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.core_modules.signals",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.plugin_loader",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.core_modules.plugin_loader",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.plugin_loader",
        "to": "importlib"
      },
      {
        "from": "lukhas.orchestration.core_modules.plugin_loader",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "personas.persona_manager"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.core_modules.voice.voice_processor"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.core_modules.emotion.emotion_engine"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.core_modules.identity.identity_manager"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "threading"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.core_modules.neural_architectures.neural_integrator"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.brain.privacy_manager"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.core_modules.consciousness.consciousness_integrator"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "signal"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "identity.auth_backend.audit_logger"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.core_modules.memory.enhanced_memory_manager"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "lukhas.orchestration.core_modules.integration.system_coordinator"
      },
      {
        "from": "lukhas.orchestration.core_modules.controller",
        "to": "identity.backend.verifold.compliance.compliance_engine"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.voice.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.core.registry"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.vision.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "sdk.core.integration_bridge"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.memory.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.governance.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.common.base_module"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.bio.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.dream.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.identity.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "MODULES_GOLDEN.emotion.core"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.workflow_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.workflow_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.workflow_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.workflow_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator_alt",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator_alt",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator_alt",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator_alt",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.symbolic_signal_router",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.symbolic_signal_router",
        "to": "lukhas.orchestration.signals"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_alt",
        "to": "lukhas.orchestration.brain.orchestration.the_oscillator"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_alt",
        "to": "unittest"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "lukhas.orchestration.integrations.lukhas_ecosystem_intelligence_engine"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "ContentBusinessIntelligence"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "core.diagnostic_engine.engine"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "enhanced_brain_integration"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "lukhas_adaptive_ux_engine"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "core.integration.connectivity_engine"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "intelligence"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.core_modules.master_orchestrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "core.performance.performance_orchestrator"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "bridge.message_bus"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.core_modules.orchestration_service",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.process_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.process_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.process_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.process_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.symbolic_handshake",
        "to": "orchestration.signal_router"
      },
      {
        "from": "lukhas.orchestration.core_modules.symbolic_handshake",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.core_modules.symbolic_handshake",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.symbolic_handshake",
        "to": "lukhas.orchestration.signals"
      },
      {
        "from": "lukhas.orchestration.core_modules.symbolic_handshake",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.core_modules.signal_middleware",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.core_modules.signal_middleware",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.signal_middleware",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.core_modules.signal_middleware",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "lukhas.orchestration.brain.integration.brain_integration"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.core_modules.lukhas_core_integrator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "qiskit.quantum_info"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "qiskit"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "scipy.special"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "simpleaudio"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.monitoring.the_oscillator",
        "to": "qiskit.circuit"
      },
      {
        "from": "lukhas.orchestration.monitoring.remediator_agent",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.monitoring.remediator_agent",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.monitoring.remediator_agent",
        "to": "lukhas.orchestration.monitoring.sub_agents"
      },
      {
        "from": "lukhas.orchestration.monitoring.remediator_agent",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.monitoring.remediator_agent",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.monitoring.remediator_agent",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.ethics.guardian"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.creativity.dream.engine.dream_engine"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.orchestration.monitoring.remediator_agent"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.core.interfaces.logic.voice.voice_renderer"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "hashlib"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "INTENT.intent_node"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "AID.dream_engine.dream_replay"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.integration.memory.enhanced_memory_manager"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.spine.healix_mapper"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "LUKHAS_ID.backend.app.crypto"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.bio_symbolic_.glyph_id_hash"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.core.user_interface_manager.voice_handler"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.core.monitoring.drift_monitor"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.creativity.dream_systems.dream_delivery_manager"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "VOICE.voice_pack_manager"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "MODULES.memoria.lukhas_replayer"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.monitoring.reflection_layer",
        "to": "lukhas.bio_core.memory.quantum_memory_manager"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "psutil"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "traceback"
      },
      {
        "from": "lukhas.orchestration.monitoring.health_checks",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "lukhas.orchestration.monitoring.metrics_collector"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "lukhas.orchestration.monitoring.health_checks"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "lukhas.orchestration.monitoring.remediator_agent"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "lukhas.orchestration.monitoring.sub_agents"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "lukhas.orchestration.monitoring.alerts"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "lukhas.orchestration.monitoring.dashboard_server"
      },
      {
        "from": "lukhas.orchestration.monitoring.__init__",
        "to": "lukhas.orchestration.monitoring"
      },
      {
        "from": "lukhas.orchestration.monitoring.emotional_oscillator",
        "to": "lukhas_governance.compliance_hooks"
      },
      {
        "from": "lukhas.orchestration.monitoring.emotional_oscillator",
        "to": "numpy"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.memory_cleaner",
        "to": "psutil"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.memory_cleaner",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.memory_cleaner",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.memory_cleaner",
        "to": "time"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.memory_cleaner",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.memory_cleaner",
        "to": "random"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.ethics_guardian",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.ethics_guardian",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.ethics_guardian",
        "to": "lukhas.ethics.guardian"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.ethics_guardian",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.__init__",
        "to": "lukhas.orchestration.monitoring.sub_agents.memory_cleaner"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.__init__",
        "to": "lukhas.orchestration.monitoring.sub_agents.ethics_guardian"
      },
      {
        "from": "lukhas.orchestration.monitoring.sub_agents.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.interfaces.orchestration_protocol",
        "to": "uuid"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "inspect"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "os"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "importlib"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "json"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "pathlib"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "importlib.util"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "sys"
      },
      {
        "from": "lukhas.orchestration.interfaces.plugin_registry",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.interfaces.__init__",
        "to": "lukhas.orchestration.interfaces.agent_interface"
      },
      {
        "from": "lukhas.orchestration.interfaces.__init__",
        "to": "lukhas.orchestration.interfaces.orchestration_protocol"
      },
      {
        "from": "lukhas.orchestration.interfaces.__init__",
        "to": "lukhas.orchestration.interfaces.plugin_registry"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "datetime"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "abc"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "typing"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "asyncio"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "enum"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "logging"
      },
      {
        "from": "lukhas.orchestration.interfaces.agent_interface",
        "to": "uuid"
      }
    ]
  }
}