version: '3.8'

services:
  lukhas-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: lukhas/lukhas-agi:latest
    container_name: lukhas-api
    ports:
      - "8000:8000"
    environment:
      - LUKHAS_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lukhas-network
      
  # Note: gRPC service temporarily disabled - implement if needed
  # lukhas-grpc:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: lukhas/lukhas-agi:latest
  #   container_name: lukhas-grpc
  #   command: ["python", "-m", "lukhas.interfaces.api.v1.grpc.server"]
  #   ports:
  #     - "50051:50051"
  #   environment:
  #     - LUKHAS_ENV=production
  #     - DATABASE_URL=${DATABASE_URL}
  #     - REDIS_URL=${REDIS_URL}
  #   restart: unless-stopped
  #   networks:
  #     - lukhas-network
      
  redis:
    image: redis:7-alpine
    container_name: lukhas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - lukhas-network
      
  postgres:
    image: postgres:15-alpine
    container_name: lukhas-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=lukhas
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=lukhas_agi
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - lukhas-network

volumes:
  redis-data:
  postgres-data:

networks:
  lukhas-network:
    driver: bridge