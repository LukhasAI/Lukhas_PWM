{
  "directory": "lukhas/bio",
  "timestamp": "2025-07-28T17:40:44.000155",
  "summary": {
    "total_modules": 35,
    "total_symbols": 341,
    "total_dependencies": 152,
    "missed_opportunities": 11
  },
  "modules": {
    "lukhas.bio.stress_signal": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.029411764705882353
      },
      "symbols": [
        {
          "name": "StressSignal",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "weight_modulator",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__repr__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.curiosity_spark": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.029411764705882353
      },
      "symbols": [
        {
          "name": "CuriositySpark",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "weight_modulator",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__repr__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.endocrine_integration": {
      "metrics": {
        "total_symbols": 14,
        "used_symbols": 0,
        "unused_symbols": 14,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.11764705882352941
      },
      "symbols": [
        {
          "name": "HormoneModulation",
          "kind": "dataclass",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EndocrineIntegration",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "hormone",
          "kind": "type_alias",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameter",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "effect_curve",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_setup_default_modulations",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_register_callbacks",
          "kind": "function",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_handle_state_change",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_modulation_factor",
          "kind": "function",
          "line": 247,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_system_recommendations",
          "kind": "function",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "inject_system_feedback",
          "kind": "function",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "get_daily_rhythm_phase",
          "kind": "function",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.resilience_boost": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.029411764705882353
      },
      "symbols": [
        {
          "name": "ResilienceBoost",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "weight_modulator",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__repr__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.trust_binder": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 1,
        "unused_symbols": 2,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.17647058823529413
      },
      "symbols": [
        {
          "name": "TrustBinder",
          "kind": "class",
          "line": 53,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process_affect",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.bio_homeostasis": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.029411764705882353
      },
      "symbols": [
        {
          "name": "fatigue_level",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.symbolic_entropy": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.058823529411764705
      },
      "symbols": [
        {
          "name": "calculate_entropy_delta",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "entropy_state_snapshot",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.__init__": {
      "metrics": {
        "total_symbols": 17,
        "used_symbols": 0,
        "unused_symbols": 17,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.3235294117647059
      },
      "symbols": [
        {
          "name": "BioSimulationController",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Hormone",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "HormoneType",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "BioOscillator",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "OscillationType",
          "kind": "class",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "BaseOscillator",
          "kind": "class",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "PrimeOscillator",
          "kind": "class",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "StressSignal",
          "kind": "class",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ResilienceBoost",
          "kind": "class",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "StabilityAnchor",
          "kind": "class",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CuriositySpark",
          "kind": "class",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "TrustBinder",
          "kind": "class",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MitochondriaModel",
          "kind": "class",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ingest_mock_eeg",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "map_to_symbolic_state",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "BrainwaveBand",
          "kind": "class",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SymbolicState",
          "kind": "class",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.core": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.14705882352941177
      },
      "symbols": [
        {
          "name": "BioCore",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 195,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.prime_oscillator": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 0,
        "unused_symbols": 11,
        "import_count": 5,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.14705882352941177
      },
      "symbols": [
        {
          "name": "PrimeHarmonicOscillator",
          "kind": "class",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_oscillation",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_post_freq_update",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_post_phase_update",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_post_amplitude_update",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_value",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_history",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "update_metrics",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__next__",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_state",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.protein_synthesizer": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 1,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.5,
        "cohesion_score": 0.0,
        "coupling_score": 0.058823529411764705
      },
      "symbols": [
        {
          "name": "ProteinSynthesizer",
          "kind": "class",
          "line": 8,
          "used": true,
          "used_by": [
            "lukhas/bio/colony_self_repair.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.recovery_protocol": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.20588235294117646
      },
      "symbols": [
        {
          "name": "BioRecoveryProtocol",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.symbolic_entropy_observer": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.058823529411764705
      },
      "symbols": [
        {
          "name": "SymbolicEntropyObserver",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_latest_entropy_snapshot",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_entropy_history",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.base_oscillator": {
      "metrics": {
        "total_symbols": 22,
        "used_symbols": 2,
        "unused_symbols": 20,
        "import_count": 7,
        "export_count": 2,
        "connectivity_score": 0.09090909090909091,
        "cohesion_score": 0.0,
        "coupling_score": 0.20588235294117646
      },
      "symbols": [
        {
          "name": "OscillationType",
          "kind": "class",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OscillatorConfig",
          "kind": "dataclass",
          "line": 103,
          "used": true,
          "used_by": [
            "lukhas/bio/prime_oscillator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BaseOscillator",
          "kind": "class",
          "line": 153,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py",
            "lukhas/bio/prime_oscillator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "frequency_range",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "amplitude_range",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase_range",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sample_rate",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "wave_range",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "frequency",
          "kind": "function",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "phase",
          "kind": "function",
          "line": 303,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "amplitude",
          "kind": "function",
          "line": 331,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_validate_frequency",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_validate_phase",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_validate_amplitude",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_post_freq_update",
          "kind": "function",
          "line": 406,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_post_phase_update",
          "kind": "function",
          "line": 423,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_post_amplitude_update",
          "kind": "function",
          "line": 440,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_value",
          "kind": "function",
          "line": 457,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_metrics",
          "kind": "function",
          "line": 478,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__iter__",
          "kind": "function",
          "line": 496,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__next__",
          "kind": "function",
          "line": 513,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.simulation_controller": {
      "metrics": {
        "total_symbols": 37,
        "used_symbols": 0,
        "unused_symbols": 37,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.23529411764705882
      },
      "symbols": [
        {
          "name": "HormoneType",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HormoneInteraction",
          "kind": "dataclass",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Hormone",
          "kind": "dataclass",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BioSimulationController",
          "kind": "class",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "source",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "effect",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "threshold",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "level",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decay_rate",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "baseline",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "min_level",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_level",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "production_rate",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sensitivity",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "circadian_influence",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_response",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "update_level",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_hormone",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "recover",
          "kind": "function",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "trigger_phase_shift",
          "kind": "function",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "stabilize_oscillator",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_default_hormones",
          "kind": "function",
          "line": 264,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_hormone_interactions",
          "kind": "function",
          "line": 349,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_circadian_phase",
          "kind": "function",
          "line": 379,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_circadian_effects",
          "kind": "function",
          "line": 387,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_apply_hormone_interactions",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_check_system_states",
          "kind": "function",
          "line": 413,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": true
        },
        {
          "name": "_trigger_callbacks",
          "kind": "function",
          "line": 444,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_hormone_state",
          "kind": "function",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_cognitive_state",
          "kind": "function",
          "line": 458,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_overall_state",
          "kind": "function",
          "line": 475,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "inject_stimulus",
          "kind": "function",
          "line": 495,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "register_state_callback",
          "kind": "function",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "suggest_action",
          "kind": "function",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.eeg_sync_bridge": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 4,
        "unused_symbols": 0,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.11764705882352941
      },
      "symbols": [
        {
          "name": "BrainwaveBand",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicState",
          "kind": "class",
          "line": 28,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ingest_mock_eeg",
          "kind": "function",
          "line": 40,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "map_to_symbolic_state",
          "kind": "function",
          "line": 55,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.oscillator": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 0,
        "unused_symbols": 20,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.23529411764705882
      },
      "symbols": [
        {
          "name": "SecurityContext",
          "kind": "dataclass",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OscillationType",
          "kind": "class",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "OscillatorState",
          "kind": "class",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "BioOscillator",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MoodOscillator",
          "kind": "class",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "lukhas_id",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_level",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_token",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verification_data",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_calculate_phase_relation",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_default_frequency",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_verify_session_token",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_generate_access_token",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_check_verification",
          "kind": "function",
          "line": 280,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_neuroplastic_event",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "update_mood",
          "kind": "function",
          "line": 316,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "bio_affect_feedback",
          "kind": "function",
          "line": 362,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "bio_drift_response",
          "kind": "function",
          "line": 381,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.quantum_inspired_layer": {
      "metrics": {
        "total_symbols": 23,
        "used_symbols": 0,
        "unused_symbols": 23,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.14705882352941177
      },
      "symbols": [
        {
          "name": "QuantumBioConfig",
          "kind": "dataclass",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumBioOscillator",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "base_frequency",
          "kind": "constant",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence",
          "kind": "constant",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entanglement_strength",
          "kind": "constant",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decoherence_rate",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "measurement_precision",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "oscillation_amplitude",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_initialize_quantum_like_state",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "oscillate",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "create_entanglement",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "apply_entanglement_effects",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "measure_quantum_property",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_apply_measurement_decoherence",
          "kind": "function",
          "line": 299,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "evolve_quantum_like_state",
          "kind": "function",
          "line": 307,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_oscillator_metrics",
          "kind": "function",
          "line": 345,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_variance",
          "kind": "function",
          "line": 377,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "reset_oscillator",
          "kind": "function",
          "line": 386,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_timestamp",
          "kind": "function",
          "line": 394,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "synchronize_with_rhythm",
          "kind": "function",
          "line": 400,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_coherence_field",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.bio_affect_model": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.029411764705882353
      },
      "symbols": [
        {
          "name": "inject_narrative_repair",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.stability_anchor": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.029411764705882353
      },
      "symbols": [
        {
          "name": "StabilityAnchor",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "weight_modulator",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__repr__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.symbolic.crista_optimizer": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "CristaOptimizer",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "optimize",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_induce_fission",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_induce_fusion",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_stabilize_topology",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "report_state",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.symbolic.mito_ethics_sync": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.058823529411764705
      },
      "symbols": [
        {
          "name": "MitoEthicsSync",
          "kind": "class",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "update_phase",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "assess_alignment",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "is_synchronized",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.symbolic.stress_gate": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.029411764705882353
      },
      "symbols": [
        {
          "name": "StressGate",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_stress",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_decay_stress",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "should_fallback",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reset",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "report",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.symbolic.bio_symbolic": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 1,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 1,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "BioSymbolic",
          "kind": "class",
          "line": 5,
          "used": true,
          "used_by": [
            "lukhas/bio/symbolic/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.symbolic.glyph_id_hash": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.11764705882352941
      },
      "symbols": [
        {
          "name": "GlyphIDHasher",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_digest_component",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_signature",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_base64_glyph",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.endocrine_daily_operations": {
      "metrics": {
        "total_symbols": 22,
        "used_symbols": 0,
        "unused_symbols": 22,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.20588235294117646
      },
      "symbols": [
        {
          "name": "TaskPriority",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskType",
          "kind": "class",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedDailyOperations",
          "kind": "class",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_setup_hormone_responses",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_select_suitable_tasks",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_task_suitability",
          "kind": "function",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_get_optimal_task_types",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_get_task_energy_requirement",
          "kind": "function",
          "line": 279,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_can_start_task",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_get_max_concurrent_tasks",
          "kind": "function",
          "line": 309,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_task_performance_modulation",
          "kind": "function",
          "line": 356,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_performance",
          "kind": "function",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_detect_burnout_risk",
          "kind": "function",
          "line": 439,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_detect_understimulation",
          "kind": "function",
          "line": 447,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_average_completion_time",
          "kind": "function",
          "line": 486,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_high_stress",
          "kind": "function",
          "line": 494,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_handle_optimal_state",
          "kind": "function",
          "line": 510,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_handle_rest_needed",
          "kind": "function",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_handle_high_focus",
          "kind": "function",
          "line": 529,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_task",
          "kind": "function",
          "line": 546,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_operational_status",
          "kind": "function",
          "line": 561,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.symbolic.dna_simulator": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.08823529411764706
      },
      "symbols": [
        {
          "name": "DNASimulator",
          "kind": "class",
          "line": 9,
          "used": true,
          "used_by": [
            "lukhas/bio/symbolic/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "parse_sequence",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "entangle_with_colony",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "tags",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.systems.mitochondria_model": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 1,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.08823529411764706
      },
      "symbols": [
        {
          "name": "MitochondriaModel",
          "kind": "class",
          "line": 10,
          "used": true,
          "used_by": [
            "lukhas/bio/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "energy_output",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.systems.orchestration.compatibility": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.058823529411764705
      },
      "symbols": [
        {
          "name": "setup_import_redirects",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.systems.orchestration.base_orchestrator": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 3,
        "unused_symbols": 6,
        "import_count": 4,
        "export_count": 3,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.11764705882352941
      },
      "symbols": [
        {
          "name": "ModuleHealth",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/bio/systems/orchestration/__init__.py",
            "lukhas/bio/systems/orchestration/bio_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourcePriority",
          "kind": "class",
          "line": 28,
          "used": true,
          "used_by": [
            "lukhas/bio/systems/orchestration/__init__.py",
            "lukhas/bio/systems/orchestration/bio_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BaseBioOrchestrator",
          "kind": "class",
          "line": 38,
          "used": true,
          "used_by": [
            "lukhas/bio/systems/orchestration/__init__.py",
            "lukhas/bio/systems/orchestration/bio_orchestrator.py",
            "lukhas/bio/systems/orchestration/oscillator_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_module",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "invoke_module",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_module_status",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "orchestrate",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.symbolic.mito_quantum_attention": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.17647058823529413
      },
      "symbols": [
        {
          "name": "QuantumTunnelFilter",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CristaGate",
          "kind": "class",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "VivoxAttention",
          "kind": "class",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "OxintusReasoner",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MAELayer",
          "kind": "class",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "RespiModule",
          "kind": "class",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ATPAllocator",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "generate_cl_signature",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "VivoxSection",
          "kind": "class",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "OxintusBrass",
          "kind": "class",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MAEPercussion",
          "kind": "class",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MitochondrialConductor",
          "kind": "class",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CristaOptimizer",
          "kind": "class",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "forward",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "allocate",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_bind_resource",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "play",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_calculate_cristae_topology",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_route_to_instrument",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_synchronize",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "perform",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "optimize",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_induce_fission",
          "kind": "function",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_induce_fusion",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.systems.orchestration.adapters.voice_adapter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 1,
        "unused_symbols": 5,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.16666666666666666,
        "cohesion_score": 0.0,
        "coupling_score": 0.08823529411764706
      },
      "symbols": [
        {
          "name": "VoiceBioAdapter",
          "kind": "class",
          "line": 18,
          "used": true,
          "used_by": [
            "lukhas/bio/systems/orchestration/adapters/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_register_voice_modules",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_audio_chunk",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "optimize_for_realtime",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_voice_metrics",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator": {
      "metrics": {
        "total_symbols": 16,
        "used_symbols": 0,
        "unused_symbols": 16,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.14705882352941177
      },
      "symbols": [
        {
          "name": "IdentityAwareBioOrchestrator",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_service_info",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_module",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "unregister_module",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "allocate_energy",
          "kind": "function",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "heal_module",
          "kind": "function",
          "line": 267,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_user_modules",
          "kind": "function",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_tiered_system_status",
          "kind": "function",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "admin_override_allocation",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "cleanup_user_resources",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "DemoModule",
          "kind": "class",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "basic_status",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "detailed_status",
          "kind": "function",
          "line": 335,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "admin_status",
          "kind": "function",
          "line": 344,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 423,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.systems.orchestration.oscillator_orchestrator": {
      "metrics": {
        "total_symbols": 26,
        "used_symbols": 1,
        "unused_symbols": 25,
        "import_count": 9,
        "export_count": 1,
        "connectivity_score": 0.038461538461538464,
        "cohesion_score": 0.0,
        "coupling_score": 0.2647058823529412
      },
      "symbols": [
        {
          "name": "OrchestratorConfig",
          "kind": "dataclass",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OscillatorBioOrchestrator",
          "kind": "class",
          "line": 45,
          "used": true,
          "used_by": [
            "lukhas/bio/systems/orchestration/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "coherence_threshold",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_threshold",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sync_rate",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_threshold",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "add_oscillator",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "remove_oscillator",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "monitor_coherence",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_crisis_response",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_optimization_profile",
          "kind": "function",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_stabilization_profile",
          "kind": "function",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "apply_resonance_pattern",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "correct_phase_drift",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_rebalance_network",
          "kind": "function",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_prime",
          "kind": "function",
          "line": 231,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 236,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "manage_quantum_like_states",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "get_quantum_metrics",
          "kind": "function",
          "line": 268,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_module",
          "kind": "function",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "invoke_module",
          "kind": "function",
          "line": 319,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "QuantumBioOscillator",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "QuantumLikeState",
          "kind": "class",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "PrimeHarmonicOscillator",
          "kind": "class",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "OscillatorConfig",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.bio.systems.orchestration.bio_orchestrator": {
      "metrics": {
        "total_symbols": 20,
        "used_symbols": 1,
        "unused_symbols": 19,
        "import_count": 10,
        "export_count": 4,
        "connectivity_score": 0.05,
        "cohesion_score": 0.0,
        "coupling_score": 0.29411764705882354
      },
      "symbols": [
        {
          "name": "BioOrchestrator",
          "kind": "class",
          "line": 34,
          "used": true,
          "used_by": [
            "lukhas/bio/symbolic/__init__.py",
            "lukhas/bio/systems/orchestration/__init__.py",
            "lukhas/bio/systems/orchestration/adapters/voice_adapter.py",
            "lukhas/bio/systems/orchestration/identity_aware_bio_orchestrator.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "enhanced_attention_hook",
          "kind": "function",
          "line": 643,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_start_monitoring",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_module",
          "kind": "function",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "update_module",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "invoke_module",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "invoke_module_async",
          "kind": "function",
          "line": 334,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "allocate_resources",
          "kind": "function",
          "line": 348,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "update_energy_buffers",
          "kind": "function",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_system_health",
          "kind": "function",
          "line": 421,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "attempt_auto_repair",
          "kind": "function",
          "line": 460,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "rebalance_energy",
          "kind": "function",
          "line": 504,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_module_status",
          "kind": "function",
          "line": 535,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "orchestrate",
          "kind": "function",
          "line": 557,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 593,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "wrapped_attention",
          "kind": "function",
          "line": 644,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "monitor_loop",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    }
  },
  "missed_opportunities": [
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.endocrine_integration has 10 unused public symbols",
      "affected_files": [
        "lukhas.bio.endocrine_integration"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: HormoneModulation, EndocrineIntegration, hormone, parameter, effect_curve..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.__init__ has 17 unused public symbols",
      "affected_files": [
        "lukhas.bio.__init__"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: BioSimulationController, Hormone, HormoneType, BioOscillator, OscillationType..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.base_oscillator has 11 unused public symbols",
      "affected_files": [
        "lukhas.bio.base_oscillator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OscillationType, frequency_range, amplitude_range, phase_range, sample_rate..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.simulation_controller has 28 unused public symbols",
      "affected_files": [
        "lukhas.bio.simulation_controller"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: HormoneType, HormoneInteraction, Hormone, BioSimulationController, source..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.oscillator has 14 unused public symbols",
      "affected_files": [
        "lukhas.bio.oscillator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SecurityContext, OscillationType, OscillatorState, BioOscillator, MoodOscillator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.quantum_inspired_layer has 17 unused public symbols",
      "affected_files": [
        "lukhas.bio.quantum_inspired_layer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: QuantumBioConfig, QuantumBioOscillator, base_frequency, quantum_coherence, entanglement_strength..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.symbolic.mito_quantum_attention has 18 unused public symbols",
      "affected_files": [
        "lukhas.bio.symbolic.mito_quantum_attention"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: QuantumTunnelFilter, CristaGate, VivoxAttention, OxintusReasoner, MAELayer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator has 15 unused public symbols",
      "affected_files": [
        "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: IdentityAwareBioOrchestrator, get_service_info, register_module, unregister_module, allocate_energy..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.systems.orchestration.oscillator_orchestrator has 19 unused public symbols",
      "affected_files": [
        "lukhas.bio.systems.orchestration.oscillator_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OrchestratorConfig, coherence_threshold, energy_threshold, sync_rate, quantum_threshold..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.bio.systems.orchestration.bio_orchestrator has 17 unused public symbols",
      "affected_files": [
        "lukhas.bio.systems.orchestration.bio_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: enhanced_attention_hook, shutdown, register_module, update_module, invoke_module..."
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.bio.symbolic.crista_optimizer is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.bio.symbolic.crista_optimizer"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    }
  ],
  "dependency_graph": {
    "nodes": [
      "lukhas.bio.stress_signal",
      "lukhas.bio.curiosity_spark",
      "lukhas.bio.endocrine_integration",
      "lukhas.bio.resilience_boost",
      "lukhas.bio.trust_binder",
      "lukhas.bio.bio_homeostasis",
      "lukhas.bio.symbolic_entropy",
      "lukhas.bio.__init__",
      "lukhas.bio.core",
      "lukhas.bio.prime_oscillator",
      "lukhas.bio.protein_synthesizer",
      "lukhas.bio.recovery_protocol",
      "lukhas.bio.symbolic_entropy_observer",
      "lukhas.bio.base_oscillator",
      "lukhas.bio.simulation_controller",
      "lukhas.bio.eeg_sync_bridge",
      "lukhas.bio.oscillator",
      "lukhas.bio.quantum_inspired_layer",
      "lukhas.bio.bio_affect_model",
      "lukhas.bio.stability_anchor",
      "lukhas.bio.symbolic.crista_optimizer",
      "lukhas.bio.symbolic.mito_ethics_sync",
      "lukhas.bio.symbolic.stress_gate",
      "lukhas.bio.symbolic.bio_symbolic",
      "lukhas.bio.symbolic.glyph_id_hash",
      "lukhas.bio.endocrine_daily_operations",
      "lukhas.bio.symbolic.dna_simulator",
      "lukhas.bio.systems.mitochondria_model",
      "lukhas.bio.systems.orchestration.compatibility",
      "lukhas.bio.systems.orchestration.base_orchestrator",
      "lukhas.bio.symbolic.mito_quantum_attention",
      "lukhas.bio.systems.orchestration.adapters.voice_adapter",
      "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator",
      "lukhas.bio.systems.orchestration.oscillator_orchestrator",
      "lukhas.bio.systems.orchestration.bio_orchestrator"
    ],
    "edges": [
      {
        "from": "lukhas.bio.endocrine_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.endocrine_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.endocrine_integration",
        "to": "lukhas.core.bio_systems"
      },
      {
        "from": "lukhas.bio.endocrine_integration",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.bio.stress_signal",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.curiosity_spark",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.trust_binder",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.trust_binder",
        "to": "lukhas.core.bio_systems.stress_signal"
      },
      {
        "from": "lukhas.bio.trust_binder",
        "to": "lukhas.core.bio_systems.symbolic_entropy"
      },
      {
        "from": "lukhas.bio.trust_binder",
        "to": "json"
      },
      {
        "from": "lukhas.bio.trust_binder",
        "to": "lukhas.core.bio_systems.stability_anchor"
      },
      {
        "from": "lukhas.bio.trust_binder",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.resilience_boost",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "asyncio"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "enum"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "lukhas.core.bio_systems.bio_oscillator"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "math"
      },
      {
        "from": "lukhas.bio.simulation_controller",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "enum"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "hashlib"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "json"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.oscillator",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.bio_homeostasis",
        "to": "random"
      },
      {
        "from": "lukhas.bio.symbolic_entropy",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.symbolic_entropy",
        "to": "math"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.systems.mitochondria_model"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.stability_anchor"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.stress_signal"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.base_oscillator"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.curiosity_spark"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.trust_binder"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.eeg_sync_bridge"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.bio_simulation_controller"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.prime_oscillator"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.bio_oscillator"
      },
      {
        "from": "lukhas.bio.__init__",
        "to": "lukhas.bio.resilience_boost"
      },
      {
        "from": "lukhas.bio.core",
        "to": "asyncio"
      },
      {
        "from": "lukhas.bio.core",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.core",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.core",
        "to": "math"
      },
      {
        "from": "lukhas.bio.core",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.prime_oscillator",
        "to": "numpy"
      },
      {
        "from": "lukhas.bio.prime_oscillator",
        "to": "lukhas.bio.base_oscillator"
      },
      {
        "from": "lukhas.bio.prime_oscillator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.prime_oscillator",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.prime_oscillator",
        "to": "math"
      },
      {
        "from": "lukhas.bio.quantum_inspired_layer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.bio.quantum_inspired_layer",
        "to": "random"
      },
      {
        "from": "lukhas.bio.quantum_inspired_layer",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.quantum_inspired_layer",
        "to": "math"
      },
      {
        "from": "lukhas.bio.quantum_inspired_layer",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.protein_synthesizer",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.protein_synthesizer",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.recovery_protocol",
        "to": "asyncio"
      },
      {
        "from": "lukhas.bio.recovery_protocol",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.bio.recovery_protocol",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.recovery_protocol",
        "to": "core.bio_systems.bio_simulation_controller"
      },
      {
        "from": "lukhas.bio.recovery_protocol",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.recovery_protocol",
        "to": "core.bio_systems.bio_oscillator"
      },
      {
        "from": "lukhas.bio.recovery_protocol",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.symbolic_entropy_observer",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.symbolic_entropy_observer",
        "to": "json"
      },
      {
        "from": "lukhas.bio.base_oscillator",
        "to": "enum"
      },
      {
        "from": "lukhas.bio.base_oscillator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.bio.base_oscillator",
        "to": "numpy"
      },
      {
        "from": "lukhas.bio.base_oscillator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.base_oscillator",
        "to": "abc"
      },
      {
        "from": "lukhas.bio.base_oscillator",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.base_oscillator",
        "to": "math"
      },
      {
        "from": "lukhas.bio.eeg_sync_bridge",
        "to": "enum"
      },
      {
        "from": "lukhas.bio.eeg_sync_bridge",
        "to": "random"
      },
      {
        "from": "lukhas.bio.eeg_sync_bridge",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.eeg_sync_bridge",
        "to": "__future__"
      },
      {
        "from": "lukhas.bio.endocrine_daily_operations",
        "to": "enum"
      },
      {
        "from": "lukhas.bio.endocrine_daily_operations",
        "to": "asyncio"
      },
      {
        "from": "lukhas.bio.endocrine_daily_operations",
        "to": "lukhas.core.bio_systems.endocrine_integration"
      },
      {
        "from": "lukhas.bio.endocrine_daily_operations",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.endocrine_daily_operations",
        "to": "lukhas.core.bio_systems"
      },
      {
        "from": "lukhas.bio.endocrine_daily_operations",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.endocrine_daily_operations",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.bio_affect_model",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.colony_self_repair",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.colony_self_repair",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.colony_self_repair",
        "to": "lukhas.bio.protein_synthesizer"
      },
      {
        "from": "lukhas.bio.stability_anchor",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.symbolic.mito_ethics_sync",
        "to": "numpy"
      },
      {
        "from": "lukhas.bio.symbolic.mito_ethics_sync",
        "to": "math"
      },
      {
        "from": "lukhas.bio.symbolic.__init__",
        "to": "lukhas.bio.symbolic.quantum_attention"
      },
      {
        "from": "lukhas.bio.symbolic.__init__",
        "to": "lukhas.bio.systems.orchestration.bio_orchestrator"
      },
      {
        "from": "lukhas.bio.symbolic.__init__",
        "to": "lukhas.bio.symbolic.bio_symbolic"
      },
      {
        "from": "lukhas.bio.symbolic.__init__",
        "to": "lukhas.bio.symbolic.dna_simulator"
      },
      {
        "from": "lukhas.bio.symbolic.stress_gate",
        "to": "numpy"
      },
      {
        "from": "lukhas.bio.symbolic.glyph_id_hash",
        "to": "random"
      },
      {
        "from": "lukhas.bio.symbolic.glyph_id_hash",
        "to": "time"
      },
      {
        "from": "lukhas.bio.symbolic.glyph_id_hash",
        "to": "hashlib"
      },
      {
        "from": "lukhas.bio.symbolic.glyph_id_hash",
        "to": "base64"
      },
      {
        "from": "lukhas.bio.symbolic.mito_quantum_attention",
        "to": "numpy"
      },
      {
        "from": "lukhas.bio.symbolic.mito_quantum_attention",
        "to": "random"
      },
      {
        "from": "lukhas.bio.symbolic.mito_quantum_attention",
        "to": "hashlib"
      },
      {
        "from": "lukhas.bio.symbolic.mito_quantum_attention",
        "to": "torch"
      },
      {
        "from": "lukhas.bio.symbolic.mito_quantum_attention",
        "to": "torch.nn"
      },
      {
        "from": "lukhas.bio.symbolic.mito_quantum_attention",
        "to": "time"
      },
      {
        "from": "lukhas.bio.symbolic.dna_simulator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.symbolic.dna_simulator",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.bio.symbolic.dna_simulator",
        "to": "lukhas.core.symbolism.tags"
      },
      {
        "from": "lukhas.bio.systems.mitochondria_model",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.systems.mitochondria_model",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.systems.mitochondria_model",
        "to": "random"
      },
      {
        "from": "lukhas.bio.systems.orchestration.compatibility",
        "to": "warnings"
      },
      {
        "from": "lukhas.bio.systems.orchestration.compatibility",
        "to": "sys"
      },
      {
        "from": "lukhas.bio.systems.orchestration.base_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.bio.systems.orchestration.base_orchestrator",
        "to": "abc"
      },
      {
        "from": "lukhas.bio.systems.orchestration.base_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.systems.orchestration.base_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator",
        "to": "lukhas.bio.systems.orchestration.bio_orchestrator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator",
        "to": "lukhas.core.identity_aware_base"
      },
      {
        "from": "lukhas.bio.systems.orchestration.identity_aware_bio_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.bio.systems.orchestration.__init__",
        "to": "lukhas.bio.systems.orchestration.oscillator_orchestrator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.__init__",
        "to": "lukhas.bio.systems.orchestration.bio_orchestrator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.__init__",
        "to": "lukhas.bio.systems.orchestration.base_orchestrator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "threading"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "lukhas.bio.systems.orchestration.base_orchestrator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "concurrent.futures"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "lukhas.orchestration.brain.attention.quantum_attention"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "lukhas.orchestration.brain.bio_symbolic.bio_orchestrator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.systems.orchestration.bio_orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "lukhas.bio.systems.orchestration.base_orchestrator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "lukhas.core.bio_systems.prime_oscillator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "lukhas.core.bio_systems.base_oscillator"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "lukhas.quantum.quantum_inspired_layer"
      },
      {
        "from": "lukhas.bio.systems.orchestration.oscillator_orchestrator",
        "to": "math"
      },
      {
        "from": "lukhas.bio.systems.orchestration.adapters.__init__",
        "to": "lukhas.bio.systems.orchestration.adapters.voice_adapter"
      },
      {
        "from": "lukhas.bio.systems.orchestration.adapters.voice_adapter",
        "to": "logging"
      },
      {
        "from": "lukhas.bio.systems.orchestration.adapters.voice_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.bio.systems.orchestration.adapters.voice_adapter",
        "to": "lukhas.bio.systems.orchestration.bio_orchestrator"
      }
    ]
  }
}