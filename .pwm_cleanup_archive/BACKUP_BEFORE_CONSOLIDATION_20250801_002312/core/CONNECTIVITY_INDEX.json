{
  "directory": "lukhas/core",
  "timestamp": "2025-07-28T17:40:38.644830",
  "summary": {
    "total_modules": 207,
    "total_symbols": 2556,
    "total_dependencies": 1380,
    "missed_opportunities": 134
  },
  "modules": {
    "lukhas.core.minimal_actor": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 1,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.2,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "Actor",
          "kind": "class",
          "line": 10,
          "used": true,
          "used_by": [
            "lukhas/core/image_processing_pipeline.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "echo_behavior",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "send",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_run",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.fault_tolerance": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 2,
        "unused_symbols": 6,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "SupervisionStrategy",
          "kind": "class",
          "line": 4,
          "used": true,
          "used_by": [
            "lukhas/core/swarm.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Supervisor",
          "kind": "class",
          "line": 9,
          "used": true,
          "used_by": [
            "lukhas/core/swarm.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_child",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "handle_failure",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "_restart_child",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_stop_child",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_escalate_failure",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.integrated_system": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 15,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07281553398058252
      },
      "symbols": [
        {
          "name": "DistributedAISystem",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "task_priority_score",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.api_controllers": {
      "metrics": {
        "total_symbols": 24,
        "used_symbols": 0,
        "unused_symbols": 24,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07766990291262135
      },
      "symbols": [
        {
          "name": "require_auth",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "handle_api_error",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_request_user_id",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "ethics_assess_action_endpoint",
          "kind": "function",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "ethics_check_compliance_endpoint",
          "kind": "function",
          "line": 285,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "memory_store_item_endpoint",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "memory_retrieve_item_endpoint",
          "kind": "function",
          "line": 379,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "memory_search_items_endpoint",
          "kind": "function",
          "line": 405,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "creativity_generate_content_endpoint",
          "kind": "function",
          "line": 454,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "creativity_synthesize_dream_endpoint",
          "kind": "function",
          "line": 500,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "consciousness_process_awareness_endpoint",
          "kind": "function",
          "line": 547,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "consciousness_perform_introspection_endpoint",
          "kind": "function",
          "line": 591,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "consciousness_get_state_endpoint",
          "kind": "function",
          "line": 636,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "learning_learn_from_data_endpoint",
          "kind": "function",
          "line": 667,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "learning_adapt_behavior_endpoint",
          "kind": "function",
          "line": 712,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "quantum_perform_computation_endpoint",
          "kind": "function",
          "line": 764,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "quantum_create_entanglement_endpoint",
          "kind": "function",
          "line": 836,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "system_health_check_endpoint",
          "kind": "function",
          "line": 883,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "system_api_info_endpoint",
          "kind": "function",
          "line": 911,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_not_found_error",
          "kind": "function",
          "line": 977,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_method_not_allowed_error",
          "kind": "function",
          "line": 999,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_internal_server_error",
          "kind": "function",
          "line": 1021,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "decorated_function",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.integration_hub": {
      "metrics": {
        "total_symbols": 29,
        "used_symbols": 0,
        "unused_symbols": 29,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "IntegrationConfig",
          "kind": "dataclass",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "IntegrationResult",
          "kind": "dataclass",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedIntegration",
          "kind": "class",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "max_concurrent_operations",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout_seconds",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retry_attempts",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "integration_logging",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "async_processing",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component_isolation",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result_data",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_message",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_time",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component_id",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_setup_logger",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "unregister_component",
          "kind": "function",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "invoke_component",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "batch_invoke",
          "kind": "function",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_data_pipeline",
          "kind": "function",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "execute_pipeline",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_component_status",
          "kind": "function",
          "line": 400,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_integration_metrics",
          "kind": "function",
          "line": 440,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "cleanup",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "export_configuration",
          "kind": "function",
          "line": 483,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "import_configuration",
          "kind": "function",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.swarm": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 3,
        "unused_symbols": 15,
        "import_count": 6,
        "export_count": 3,
        "connectivity_score": 0.16666666666666666,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "ResourceState",
          "kind": "class",
          "line": 17,
          "used": true,
          "used_by": [
            "lukhas/core/resource_scheduler.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SwarmAgent",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AgentColony",
          "kind": "class",
          "line": 43,
          "used": true,
          "used_by": [
            "lukhas/core/collaboration.py",
            "lukhas/core/specialized_colonies.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SwarmHub",
          "kind": "class",
          "line": 76,
          "used": true,
          "used_by": [
            "lukhas/core/resource_scheduler.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "receive",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_handle_message",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_resource_state",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_symbolic_tag",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "create_agent",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "handle_failure",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_colony",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_colony",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "handle_heartbeat",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "update_colony_resource_state",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "check_colony_health",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "broadcast_event",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_symbolic_address",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.quorum_override": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "QuorumOverride",
          "kind": "class",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "request_access",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.lukhas_id": {
      "metrics": {
        "total_symbols": 45,
        "used_symbols": 0,
        "unused_symbols": 45,
        "import_count": 14,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06796116504854369
      },
      "symbols": [
        {
          "name": "AccessTier",
          "kind": "class",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceRegion",
          "kind": "class",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalMemoryVector",
          "kind": "dataclass",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumSignature",
          "kind": "dataclass",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AuditLogEntry",
          "kind": "dataclass",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TraumaLockedMemory",
          "kind": "class",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComplianceMonitor",
          "kind": "class",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhosIDManager",
          "kind": "class",
          "line": 383,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "valence",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "arousal",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dominance",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trust",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "signature_data",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "algorithm",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "signer_id",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tier",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decision_logic",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_state",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_region",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_signature",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "privacy_impact",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "lock_memory",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "unlock_memory",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_emotional_key",
          "kind": "function",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_standard_key",
          "kind": "function",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_encrypt_data",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_decrypt_data",
          "kind": "function",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_emotional_similarity",
          "kind": "function",
          "line": 282,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_load_compliance_rules",
          "kind": "function",
          "line": 309,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "_verify_emoji_seed",
          "kind": "function",
          "line": 538,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_verify_biometrics",
          "kind": "function",
          "line": 544,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_verify_sid_puzzle",
          "kind": "function",
          "line": 552,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_verify_emergency_gesture",
          "kind": "function",
          "line": 559,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_tier_permissions",
          "kind": "function",
          "line": 565,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_quantum_signature",
          "kind": "function",
          "line": 629,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_compliance_status",
          "kind": "function",
          "line": 683,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.resource_scheduler": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "SwarmResourceScheduler",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "schedule_task",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_score",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.plugin_registry": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 3,
        "unused_symbols": 9,
        "import_count": 6,
        "export_count": 2,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "PluginType",
          "kind": "class",
          "line": 17,
          "used": true,
          "used_by": [
            "lukhas/core/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Plugin",
          "kind": "class",
          "line": 26,
          "used": true,
          "used_by": [
            "lukhas/core/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PluginRegistry",
          "kind": "class",
          "line": 45,
          "used": true,
          "used_by": [
            "lukhas/core/__init__.py",
            "lukhas/core/lukhas_core.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_plugin_type",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_plugin_name",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_version",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_entry_points",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "register_plugin",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_plugin",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "list_plugins",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "all_plugins",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.symbolic_contract": {
      "metrics": {
        "total_symbols": 15,
        "used_symbols": 0,
        "unused_symbols": 15,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "SymbolicContract",
          "kind": "dataclass",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicContractRegistry",
          "kind": "class",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "tag_name",
          "kind": "constant",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "version",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_propagation_depth",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "allowed_colonies",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "schema",
          "kind": "constant",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "author",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validate_propagation",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "validate_payload",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "to_json",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.actor_supervision_integration": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "patch_actor_system_for_supervision",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "patch_actor_for_supervision",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "SupervisedActorSystem",
          "kind": "class",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "new_init",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.lukhas_core": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 2,
        "unused_symbols": 3,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.4,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "LukhasCore",
          "kind": "class",
          "line": 19,
          "used": true,
          "used_by": [
            "lukhas/core/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_lukhas_core",
          "kind": "function",
          "line": 91,
          "used": true,
          "used_by": [
            "lukhas/core/__init__.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_core_systems",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.config_manager": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "get_config",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_config",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.generate_autotest_docs": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "extract_symbolic_blocks",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "generate_lambda_doc",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "export_to_markdown",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "classes",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "functions",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "features",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.config": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 1,
        "unused_symbols": 20,
        "import_count": 4,
        "export_count": 2,
        "connectivity_score": 0.047619047619047616,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "LukhasConfig",
          "kind": "class",
          "line": 16,
          "used": true,
          "used_by": [
            "lukhas/core/config_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_config",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_config",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "database_url",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "secret_key",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "api_base_url",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "orchestration_api_url",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_api_url",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_api_url",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ollama_url",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "debug",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "environment",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "openai_api_key",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cors_origins",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validate_database_url",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "validate_secret_strength",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "validate_environment",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_cors_origins_list",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_production",
          "kind": "function",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_development",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.integrator": {
      "metrics": {
        "total_symbols": 34,
        "used_symbols": 0,
        "unused_symbols": 34,
        "import_count": 18,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08737864077669903
      },
      "symbols": [
        {
          "name": "lukhas_tier_required",
          "kind": "function",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "EnhancedCoreConfig",
          "kind": "dataclass",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CoreMessageType",
          "kind": "class",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnhancedCoreIntegrator",
          "kind": "class",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "quantum_config",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_config",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "oscillator_config",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component_paths_cfg",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_quantum",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_bio_oscillator",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enable_security",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_component",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "send_message_to_component",
          "kind": "function",
          "line": 237,
          "used": false,
          "used_by": [],
          "complexity": 16,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "broadcast_event",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "subscribe_to_event",
          "kind": "function",
          "line": 373,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "QuantumBioOscillator",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "BioOrchestrator",
          "kind": "class",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "AccessTier",
          "kind": "class",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "AccessController",
          "kind": "class",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "QuantumAuthenticator",
          "kind": "class",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ComplianceMonitor",
          "kind": "class",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "UnifiedIntegration",
          "kind": "class",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verify_component_state",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "verify_message_state",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "sign_message",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_coherence",
          "kind": "function",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process_message",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process_event",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_health",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_permission",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.p2p_fabric": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "P2PNode",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_listen",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_handle_connection",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "connect",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "broadcast",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.benchmark_swarm": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "bench_behavior",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_benchmark",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.autotest_validation": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "autotest_instance",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "captured_op_for_ai",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "run_results",
          "kind": "constant",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "captured_ops_list",
          "kind": "constant",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "validation_suite_results",
          "kind": "constant",
          "line": 371,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.event_replayer": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "EventReplayer",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "replay_ethical_events",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_events",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "filter_events_by_tag",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "replay_events",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "params",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "events",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.resource_optimization_integration": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 2,
        "unused_symbols": 19,
        "import_count": 12,
        "export_count": 1,
        "connectivity_score": 0.09523809523809523,
        "cohesion_score": 0.0,
        "coupling_score": 0.05825242718446602
      },
      "symbols": [
        {
          "name": "ResourceState",
          "kind": "class",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OptimizationStrategy",
          "kind": "class",
          "line": 67,
          "used": true,
          "used_by": [
            "lukhas/core/efficient_communication.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceMetrics",
          "kind": "dataclass",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceOptimizationCoordinator",
          "kind": "class",
          "line": 101,
          "used": true,
          "used_by": [
            "lukhas/core/efficient_communication.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceError",
          "kind": "class",
          "line": 522,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_used_joules",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_used_mb",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_total_mb",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "network_bandwidth_mbps",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpu_utilization",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_state",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active_optimizations",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_setup_communication_energy_tracking",
          "kind": "function",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_register_integrated_optimizations",
          "kind": "function",
          "line": 178,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_update_resource_state",
          "kind": "function",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_resource_summary",
          "kind": "function",
          "line": 426,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "energy_aware_memory_compression",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        },
        {
          "name": "resource_aware_communication",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.cluster_sharding": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "ShardManager",
          "kind": "class",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_shard_id",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "assign_actor",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "move_actor",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_actor_state",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.resource_efficiency_analyzer": {
      "metrics": {
        "total_symbols": 69,
        "used_symbols": 0,
        "unused_symbols": 69,
        "import_count": 18,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08737864077669903
      },
      "symbols": [
        {
          "name": "ResourceType",
          "kind": "class",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceSnapshot",
          "kind": "dataclass",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceTrend",
          "kind": "dataclass",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EfficiencyReport",
          "kind": "dataclass",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceEfficiencyAnalyzer",
          "kind": "class",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpu_percent",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_rss",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_vms",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_percent",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "disk_read_bytes",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "disk_write_bytes",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "network_sent_bytes",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "network_recv_bytes",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "thread_count",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "open_files",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_estimate",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "gc_stats",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "resource_type",
          "kind": "type_alias",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_value",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_value",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "peak_value",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "min_value",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trend_direction",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trend_rate",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "prediction_1h",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "optimization_potential",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "duration_seconds",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "snapshots_analyzed",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "efficiency_score",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resource_utilization",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "trends",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bottlenecks",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_analysis",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpu_analysis",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "io_analysis",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_analysis",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_json",
          "kind": "function",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_estimate_cpu_tdp",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "start_monitoring",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "stop_monitoring",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_monitoring_loop",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_capture_snapshot",
          "kind": "function",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_estimate_energy_consumption",
          "kind": "function",
          "line": 281,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_efficiency",
          "kind": "function",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_trends",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_trend",
          "kind": "function",
          "line": 393,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_identify_bottlenecks",
          "kind": "function",
          "line": 460,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_estimate_time_to_oom",
          "kind": "function",
          "line": 529,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_check_io_bottlenecks",
          "kind": "function",
          "line": 544,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 575,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_analyze_memory_usage",
          "kind": "function",
          "line": 672,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_gc_pressure",
          "kind": "function",
          "line": 712,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_calculate_memory_efficiency",
          "kind": "function",
          "line": 746,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_analyze_cpu_usage",
          "kind": "function",
          "line": 778,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_cpu_efficiency",
          "kind": "function",
          "line": 796,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_analyze_io_patterns",
          "kind": "function",
          "line": 818,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_estimate_disk_utilization",
          "kind": "function",
          "line": 841,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_network_utilization",
          "kind": "function",
          "line": 853,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_classify_io_pattern",
          "kind": "function",
          "line": 865,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_analyze_energy_consumption",
          "kind": "function",
          "line": 882,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_energy_efficiency",
          "kind": "function",
          "line": 914,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_carbon_footprint",
          "kind": "function",
          "line": 922,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_efficiency_score",
          "kind": "function",
          "line": 929,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_quick_stats",
          "kind": "function",
          "line": 969,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "export_metrics",
          "kind": "function",
          "line": 982,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.symbolic_boot": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "SymbolicBootstrap",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_bootstrap",
          "kind": "function",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "symbolic_boot",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "validate_workspace",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "load_system_modules",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.tier_unification_adapter": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 0,
        "unused_symbols": 18,
        "import_count": 9,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043689320388349516
      },
      "symbols": [
        {
          "name": "TierSystemAdapter",
          "kind": "class",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OneiricTierAdapter",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmotionalTierAdapter",
          "kind": "class",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedTierAdapter",
          "kind": "class",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_unified_adapter",
          "kind": "constant",
          "line": 329,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_unified_adapter",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "oneiric_tier_required",
          "kind": "function",
          "line": 341,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "emotional_tier_required",
          "kind": "function",
          "line": 347,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "to_lambda_tier",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "from_lambda_tier",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_access",
          "kind": "function",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "create_middleware",
          "kind": "function",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_emotional_access_matrix",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "normalize_any_tier",
          "kind": "function",
          "line": 246,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "create_unified_decorator",
          "kind": "function",
          "line": 267,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": true
        },
        {
          "name": "middleware",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 286,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.api_diff_analyzer": {
      "metrics": {
        "total_symbols": 39,
        "used_symbols": 0,
        "unused_symbols": 39,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05339805825242718
      },
      "symbols": [
        {
          "name": "APICall",
          "kind": "dataclass",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MethodSignature",
          "kind": "dataclass",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "APIMismatch",
          "kind": "dataclass",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TestAPIExtractor",
          "kind": "class",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ImplementationAnalyzer",
          "kind": "class",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "APIDiffAnalyzer",
          "kind": "class",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 494,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "file_path",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "line_number",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "class_name",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "method_name",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "full_call",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameters",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_async",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "docstring",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_call",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expected_method",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "actual_methods",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "suggested_fix",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "extract_calls",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "visit_Call",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "visit_Attribute",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_infer_class_name",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "extract_signatures",
          "kind": "function",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "visit_ClassDef",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "visit_FunctionDef",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "visit_AsyncFunctionDef",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "analyze",
          "kind": "function",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_extract_test_calls",
          "kind": "function",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_extract_implementations",
          "kind": "function",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_find_mismatches",
          "kind": "function",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_find_best_match",
          "kind": "function",
          "line": 316,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_report",
          "kind": "function",
          "line": 343,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_fixes",
          "kind": "function",
          "line": 383,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_migration_script",
          "kind": "function",
          "line": 415,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_get_timestamp",
          "kind": "function",
          "line": 488,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.specialized_colonies": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 3,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 0.75,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "ReasoningColony",
          "kind": "class",
          "line": 11,
          "used": true,
          "used_by": [
            "lukhas/core/resource_scheduler.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MemoryColony",
          "kind": "class",
          "line": 16,
          "used": true,
          "used_by": [
            "lukhas/core/resource_scheduler.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "CreativityColony",
          "kind": "class",
          "line": 21,
          "used": true,
          "used_by": [
            "lukhas/core/resource_scheduler.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.test_mailbox_simple": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "Counter",
          "kind": "class",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.distributed_tracing": {
      "metrics": {
        "total_symbols": 59,
        "used_symbols": 4,
        "unused_symbols": 55,
        "import_count": 10,
        "export_count": 3,
        "connectivity_score": 0.06779661016949153,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "TraceSpan",
          "kind": "dataclass",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TraceContext",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TraceCollector",
          "kind": "class",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DistributedTracer",
          "kind": "class",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIAgentTracer",
          "kind": "class",
          "line": 419,
          "used": true,
          "used_by": [
            "lukhas/core/swarm.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_global_collector",
          "kind": "function",
          "line": 492,
          "used": true,
          "used_by": [
            "lukhas/core/integrated_system.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_global_tracer",
          "kind": "function",
          "line": 500,
          "used": true,
          "used_by": [
            "lukhas/core/swarm.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_ai_tracer",
          "kind": "function",
          "line": 508,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/integrated_system.py"
          ],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "demo_distributed_tracing",
          "kind": "function",
          "line": 513,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "AgentState",
          "kind": "dataclass",
          "line": 568,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "StateSnapshotter",
          "kind": "class",
          "line": 574,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EventReplayer",
          "kind": "class",
          "line": 609,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "span_id",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "trace_id",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parent_span_id",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "operation_name",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "service_name",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "end_time",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "duration",
          "kind": "constant",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tags",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "logs",
          "kind": "constant",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "finish",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_tag",
          "kind": "function",
          "line": 378,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "add_log",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "span_stack",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "baggage",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "with_span",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_baggage_item",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_baggage_item",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "to_headers",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "from_headers",
          "kind": "function",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_span",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_check_trace_completion",
          "kind": "function",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_trace_duration",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_trace",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_traces_by_operation",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_trace_statistics",
          "kind": "function",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "start_trace",
          "kind": "function",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "start_span",
          "kind": "function",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "finish_span",
          "kind": "function",
          "line": 370,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "trace_operation",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_current_context",
          "kind": "function",
          "line": 414,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "trace_agent_operation",
          "kind": "function",
          "line": 425,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "trace_agent_collaboration",
          "kind": "function",
          "line": 448,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "trace_memory_operation",
          "kind": "function",
          "line": 467,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "agent_id",
          "kind": "constant",
          "line": 570,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 571,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_data",
          "kind": "constant",
          "line": 572,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "take_snapshot",
          "kind": "function",
          "line": 581,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "restore_latest_snapshot",
          "kind": "function",
          "line": 594,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "replay_trace",
          "kind": "function",
          "line": 615,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "replay_agent_state",
          "kind": "function",
          "line": 638,
          "used": false,
          "used_by": [],
          "complexity": 14,
          "has_docstring": true
        },
        {
          "name": "_trace",
          "kind": "function",
          "line": 474,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.symbolic_arbitration": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "TagConflictResolver",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TagLineageTracker",
          "kind": "class",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "resolve",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_majority_rule",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_seniority_based",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_event",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_history",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.consistency_manager": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "Consistency",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ConsistencyManager",
          "kind": "class",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.event_bus": {
      "metrics": {
        "total_symbols": 10,
        "used_symbols": 1,
        "unused_symbols": 9,
        "import_count": 7,
        "export_count": 1,
        "connectivity_score": 0.1,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "Event",
          "kind": "dataclass",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EventBus",
          "kind": "class",
          "line": 21,
          "used": true,
          "used_by": [
            "lukhas/core/image_processing_pipeline.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "event_id",
          "kind": "constant",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_type",
          "kind": "constant",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source",
          "kind": "constant",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "subscribe",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "unsubscribe",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.image_processing_pipeline": {
      "metrics": {
        "total_symbols": 40,
        "used_symbols": 0,
        "unused_symbols": 40,
        "import_count": 18,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.08737864077669903
      },
      "symbols": [
        {
          "name": "EventType",
          "kind": "class",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ImageEvent",
          "kind": "dataclass",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProcessingStage",
          "kind": "class",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ImageProcessingColony",
          "kind": "class",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ColonySupervisor",
          "kind": "class",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ImageProcessingWorker",
          "kind": "class",
          "line": 449,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ValidationColony",
          "kind": "class",
          "line": 478,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PreprocessingColony",
          "kind": "class",
          "line": 538,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FeatureExtractionColony",
          "kind": "class",
          "line": 583,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ClassificationColony",
          "kind": "class",
          "line": 629,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ThumbnailColony",
          "kind": "class",
          "line": 673,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AggregationColony",
          "kind": "class",
          "line": 713,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ImageProcessingPipeline",
          "kind": "class",
          "line": 832,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "event_id",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_type",
          "kind": "type_alias",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "image_id",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "from_dict",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_subscribe_to_events",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_handle_event",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_handle_call_for_proposals",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_can_handle_work",
          "kind": "function",
          "line": 278,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_create_proposal",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_publish_result",
          "kind": "function",
          "line": 365,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_publish_failure",
          "kind": "function",
          "line": 398,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_worker_failure",
          "kind": "function",
          "line": 442,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_healthy",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_handle_result_event",
          "kind": "function",
          "line": 743,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_event_type_to_stage",
          "kind": "function",
          "line": 780,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_is_processing_complete",
          "kind": "function",
          "line": 791,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_publish_completion_event",
          "kind": "function",
          "line": 802,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_pipeline_stats",
          "kind": "function",
          "line": 913,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "EventBus",
          "kind": "class",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "subscribe",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "publish",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.fallback_services": {
      "metrics": {
        "total_symbols": 24,
        "used_symbols": 7,
        "unused_symbols": 17,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.2916666666666667,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "FallbackEthicsService",
          "kind": "class",
          "line": 26,
          "used": true,
          "used_by": [
            "lukhas/core/api_controllers.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FallbackMemoryService",
          "kind": "class",
          "line": 56,
          "used": true,
          "used_by": [
            "lukhas/core/api_controllers.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FallbackCreativityService",
          "kind": "class",
          "line": 95,
          "used": true,
          "used_by": [
            "lukhas/core/api_controllers.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FallbackConsciousnessService",
          "kind": "class",
          "line": 123,
          "used": true,
          "used_by": [
            "lukhas/core/api_controllers.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FallbackLearningService",
          "kind": "class",
          "line": 161,
          "used": true,
          "used_by": [
            "lukhas/core/api_controllers.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FallbackQuantumService",
          "kind": "class",
          "line": 191,
          "used": true,
          "used_by": [
            "lukhas/core/api_controllers.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FallbackIdentityClient",
          "kind": "class",
          "line": 220,
          "used": true,
          "used_by": [
            "lukhas/core/api_controllers.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "assess_action",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_compliance",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "store_memory",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "retrieve_memory",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "search_memory",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_content",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "synthesize_dream",
          "kind": "function",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "process_awareness",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "introspect",
          "kind": "function",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_consciousness_state",
          "kind": "function",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "learn_from_data",
          "kind": "function",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "adapt_behavior",
          "kind": "function",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "quantum_compute",
          "kind": "function",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "quantum_entangle",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "verify_user_access",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_activity",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.event_sourcing": {
      "metrics": {
        "total_symbols": 35,
        "used_symbols": 5,
        "unused_symbols": 30,
        "import_count": 10,
        "export_count": 4,
        "connectivity_score": 0.14285714285714285,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "Event",
          "kind": "dataclass",
          "line": 37,
          "used": true,
          "used_by": [
            "lukhas/core/event_replayer.py",
            "lukhas/core/tiered_state_management.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EventStore",
          "kind": "class",
          "line": 57,
          "used": true,
          "used_by": [
            "lukhas/core/event_replayer.py",
            "lukhas/core/tiered_state_management.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EventSourcedAggregate",
          "kind": "class",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIAgentAggregate",
          "kind": "class",
          "line": 313,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/event_replayer.py",
            "lukhas/core/integrated_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EventReplayService",
          "kind": "class",
          "line": 390,
          "used": true,
          "used_by": [
            "lukhas/core/integrated_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_global_event_store",
          "kind": "function",
          "line": 492,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/integrated_system.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "event_id",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_type",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "aggregate_id",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "version",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "from_dict",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 396,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_get_connection",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_database",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "append_event",
          "kind": "function",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_events_for_aggregate",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_events_by_correlation_id",
          "kind": "function",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_events_in_time_range",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "replay_events",
          "kind": "function",
          "line": 258,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "apply_event",
          "kind": "function",
          "line": 326,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "raise_event",
          "kind": "function",
          "line": 273,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "commit_events",
          "kind": "function",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "create_agent",
          "kind": "function",
          "line": 352,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "assign_task",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "complete_task",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_memory",
          "kind": "function",
          "line": 377,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_capability",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "replay_aggregate_to_point_in_time",
          "kind": "function",
          "line": 399,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_causal_chain",
          "kind": "function",
          "line": 421,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_agent_behavior",
          "kind": "function",
          "line": 427,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.demo_coordination": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "ProjectManagerAgent",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.module_registry": {
      "metrics": {
        "total_symbols": 27,
        "used_symbols": 0,
        "unused_symbols": 27,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043689320388349516
      },
      "symbols": [
        {
          "name": "ModuleInfo",
          "kind": "dataclass",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ModuleRegistry",
          "kind": "class",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "require_tier",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "module_id",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "version",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "path",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "instance",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "min_tier",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "permissions",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "health_status",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "registered_at",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_accessed",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_count",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_module",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_module",
          "kind": "function",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "require_module_tier",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_check_tier_access",
          "kind": "function",
          "line": 267,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_log_audit",
          "kind": "function",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "list_modules",
          "kind": "function",
          "line": 295,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_module_health",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 338,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "TierLevel",
          "kind": "class",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.symbolic_drift_analyzer": {
      "metrics": {
        "total_symbols": 50,
        "used_symbols": 0,
        "unused_symbols": 50,
        "import_count": 25,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.12135922330097088
      },
      "symbols": [
        {
          "name": "DriftAlertLevel",
          "kind": "class",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PatternTrend",
          "kind": "class",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EntropyMetrics",
          "kind": "dataclass",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TagVarianceMetrics",
          "kind": "dataclass",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftAlert",
          "kind": "dataclass",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicDriftAnalyzer",
          "kind": "class",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "shannon_entropy",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tag_entropy",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "temporal_entropy",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "semantic_entropy",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_entropy",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "unique_tags",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tag_frequency_variance",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tag_co_occurrence_score",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tag_evolution_rate",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dominant_tags",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emerging_tags",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "declining_tags",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "level",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metric_type",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_value",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "threshold",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "remediation_suggestions",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "calculate_shannon_entropy",
          "kind": "function",
          "line": 235,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "calculate_tag_entropy",
          "kind": "function",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "calculate_temporal_entropy",
          "kind": "function",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "calculate_semantic_entropy",
          "kind": "function",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "calculate_tag_variance",
          "kind": "function",
          "line": 317,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_co_occurrence_score",
          "kind": "function",
          "line": 372,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_calculate_tag_evolution_rate",
          "kind": "function",
          "line": 397,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_identify_emerging_tags",
          "kind": "function",
          "line": 426,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_identify_declining_tags",
          "kind": "function",
          "line": 444,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "detect_pattern_trend",
          "kind": "function",
          "line": 462,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "check_ethical_drift",
          "kind": "function",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_generate_alerts",
          "kind": "function",
          "line": 654,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_calculate_divergence_rate",
          "kind": "function",
          "line": 767,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_drift_phase",
          "kind": "function",
          "line": 784,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_generate_recommendations",
          "kind": "function",
          "line": 797,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_trigger_alert_callback",
          "kind": "function",
          "line": 834,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "register_alert_callback",
          "kind": "function",
          "line": 842,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_synthetic_dreams",
          "kind": "function",
          "line": 889,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "generate_cli_summary",
          "kind": "function",
          "line": 946,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_text_summary",
          "kind": "function",
          "line": 1042,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_get_status_emoji",
          "kind": "function",
          "line": 1082,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "export_analysis_report",
          "kind": "function",
          "line": 1091,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "print_alert",
          "kind": "function",
          "line": 1187,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.energy_consumption_analysis": {
      "metrics": {
        "total_symbols": 39,
        "used_symbols": 4,
        "unused_symbols": 35,
        "import_count": 13,
        "export_count": 1,
        "connectivity_score": 0.10256410256410256,
        "cohesion_score": 0.0,
        "coupling_score": 0.06310679611650485
      },
      "symbols": [
        {
          "name": "EnergyComponent",
          "kind": "class",
          "line": 59,
          "used": true,
          "used_by": [
            "lukhas/core/resource_optimization_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyProfile",
          "kind": "class",
          "line": 71,
          "used": true,
          "used_by": [
            "lukhas/core/resource_optimization_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyMetric",
          "kind": "dataclass",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyBudget",
          "kind": "dataclass",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyModel",
          "kind": "class",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyConsumptionAnalyzer",
          "kind": "class",
          "line": 239,
          "used": true,
          "used_by": [
            "lukhas/core/resource_optimization_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyAwareComponent",
          "kind": "class",
          "line": 627,
          "used": true,
          "used_by": [
            "lukhas/core/resource_optimization_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "operation",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_joules",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "duration_ms",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "power_watts",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "total_budget_joules",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "time_window_seconds",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "component_budgets",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consumed_joules",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "remaining_budget",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "budget_percentage_used",
          "kind": "function",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "time_elapsed",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_within_budget",
          "kind": "function",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "reset",
          "kind": "function",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 630,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "record_observation",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "predict_energy",
          "kind": "function",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_update_model",
          "kind": "function",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "record_energy_consumption",
          "kind": "function",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "create_budget",
          "kind": "function",
          "line": 333,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "set_active_budget",
          "kind": "function",
          "line": 352,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "predict_operation_energy",
          "kind": "function",
          "line": 361,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_energy_statistics",
          "kind": "function",
          "line": 386,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "set_energy_profile",
          "kind": "function",
          "line": 457,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_optimization_recommendations",
          "kind": "function",
          "line": 463,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "_estimate_component_energy",
          "kind": "function",
          "line": 590,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "export_metrics",
          "kind": "function",
          "line": 603,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_estimate_operation_energy",
          "kind": "function",
          "line": 677,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.lukhas_ai_interface": {
      "metrics": {
        "total_symbols": 17,
        "used_symbols": 0,
        "unused_symbols": 17,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "LukhusAITaskType",
          "kind": "class",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhusAI",
          "kind": "class",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ai_code",
          "kind": "function",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ai_audit",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ai_docs",
          "kind": "function",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ai_chat",
          "kind": "function",
          "line": 227,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ai_research",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_missing_",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_response",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "code_assistance",
          "kind": "function",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "security_audit",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "web_research",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "documentation_assist",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "creative_generation",
          "kind": "function",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analysis",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "chat",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.supervision": {
      "metrics": {
        "total_symbols": 34,
        "used_symbols": 3,
        "unused_symbols": 31,
        "import_count": 10,
        "export_count": 2,
        "connectivity_score": 0.08823529411764706,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "SupervisionDirective",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RestartPolicy",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FailureInfo",
          "kind": "dataclass",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SupervisionStrategy",
          "kind": "dataclass",
          "line": 55,
          "used": true,
          "used_by": [
            "lukhas/core/actor_supervision_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SupervisionDecider",
          "kind": "class",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DefaultSupervisionDecider",
          "kind": "class",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AllForOneStrategy",
          "kind": "class",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OneForOneStrategy",
          "kind": "class",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RestForOneStrategy",
          "kind": "class",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CircuitBreaker",
          "kind": "class",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SupervisorActor",
          "kind": "class",
          "line": 232,
          "used": true,
          "used_by": [
            "lukhas/core/actor_supervision_integration.py",
            "lukhas/core/observability_steering.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RootSupervisor",
          "kind": "class",
          "line": 503,
          "used": true,
          "used_by": [
            "lukhas/core/actor_supervision_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "actor_id",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failure_count",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stack_trace",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_failures",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "within_time_window",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "restart_policy",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "restart_delay",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "backoff_multiplier",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_restart_delay",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "calculate_restart_delay",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 561,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_child",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_affected_children",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "record_success",
          "kind": "function",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "record_failure",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "can_proceed",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "reset",
          "kind": "function",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_supervision_stats",
          "kind": "function",
          "line": 483,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "DepartmentSupervisor",
          "kind": "class",
          "line": 560,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.integrity_probe": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "IntegrityProbe",
          "kind": "dataclass",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_consistency_check",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.collaboration": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "ReactiveDataPipeline",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DynamicTaskNegotiation",
          "kind": "class",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SelfOrganizingSwarm",
          "kind": "class",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_pipeline",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_negotiation",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "run_training",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.efficient_communication": {
      "metrics": {
        "total_symbols": 39,
        "used_symbols": 3,
        "unused_symbols": 36,
        "import_count": 12,
        "export_count": 4,
        "connectivity_score": 0.07692307692307693,
        "cohesion_score": 0.0,
        "coupling_score": 0.05825242718446602
      },
      "symbols": [
        {
          "name": "MessagePriority",
          "kind": "class",
          "line": 26,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/reasoning_colony.py",
            "lukhas/core/integrated_system.py",
            "lukhas/core/resource_optimization_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CommunicationMode",
          "kind": "class",
          "line": 35,
          "used": true,
          "used_by": [
            "lukhas/core/resource_optimization_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Message",
          "kind": "dataclass",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MessageRouter",
          "kind": "class",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EventBus",
          "kind": "class",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "P2PChannel",
          "kind": "class",
          "line": 271,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EfficientCommunicationFabric",
          "kind": "class",
          "line": 351,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/integrated_system.py",
            "lukhas/core/resource_optimization_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyMonitor",
          "kind": "class",
          "line": 509,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "message_id",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "destination",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mode",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ttl",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compression",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "size_bytes",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_cost",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_calculate_energy_cost",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_expired",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 512,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_node",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "select_communication_mode",
          "kind": "function",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "find_optimal_path",
          "kind": "function",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "can_afford_message",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "record_message_sent",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "subscribe",
          "kind": "function",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "unsubscribe",
          "kind": "function",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_connection_stats",
          "kind": "function",
          "line": 335,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "subscribe_to_events",
          "kind": "function",
          "line": 441,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_communication_stats",
          "kind": "function",
          "line": 450,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_statistics",
          "kind": "function",
          "line": 463,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "record_energy_usage",
          "kind": "function",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_stats",
          "kind": "function",
          "line": 533,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_efficiency_score",
          "kind": "function",
          "line": 555,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.validation_script_fixes": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "fix_validation_script",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "fix_efficient_communication",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "replace_send_message",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "add_message_count",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        },
        {
          "name": "add_counter_increment",
          "kind": "function",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.test_tiered_state_management": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "MockEventStore",
          "kind": "class",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MockActor",
          "kind": "class",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "append",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_events",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "callback",
          "kind": "function",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.observability_steering": {
      "metrics": {
        "total_symbols": 52,
        "used_symbols": 2,
        "unused_symbols": 50,
        "import_count": 16,
        "export_count": 1,
        "connectivity_score": 0.038461538461538464,
        "cohesion_score": 0.0,
        "coupling_score": 0.07766990291262135
      },
      "symbols": [
        {
          "name": "ObservabilityLevel",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SystemHealth",
          "kind": "class",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ActorSnapshot",
          "kind": "dataclass",
          "line": 46,
          "used": true,
          "used_by": [
            "lukhas/core/circuit_breaker.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MessageFlow",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EmergentPattern",
          "kind": "dataclass",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ObservabilityCollector",
          "kind": "class",
          "line": 84,
          "used": true,
          "used_by": [
            "lukhas/core/circuit_breaker.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SteeringController",
          "kind": "class",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ObservableActor",
          "kind": "class",
          "line": 399,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ObservabilityDashboard",
          "kind": "class",
          "line": 520,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "actor_id",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mailbox_size",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_rate",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_rate",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_usage",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "custom_metrics",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "relationships",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "destination",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "latency",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload_size",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pattern_id",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pattern_type",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "involved_actors",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "first_detected",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_observed",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "occurrence_count",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 610,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "start",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "stop",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "record_actor_snapshot",
          "kind": "function",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "record_message_flow",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "record_system_event",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_pattern_detector",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_aggregation_loop",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_clean_old_data",
          "kind": "function",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_detect_patterns",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_detect_hotspots",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_detect_cascades",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_system_health",
          "kind": "function",
          "line": 276,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_system_overview",
          "kind": "function",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_steering_policy",
          "kind": "function",
          "line": 386,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_log_intervention",
          "kind": "function",
          "line": 390,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_custom_metrics",
          "kind": "function",
          "line": 614,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_visualization",
          "kind": "function",
          "line": 530,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_pattern_summary",
          "kind": "function",
          "line": 580,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "ObservableAgent",
          "kind": "class",
          "line": 609,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.quantized_cycle_manager": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "QuantizedCycleManager",
          "kind": "class",
          "line": 4,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.circuit_breaker": {
      "metrics": {
        "total_symbols": 54,
        "used_symbols": 0,
        "unused_symbols": 54,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07766990291262135
      },
      "symbols": [
        {
          "name": "CircuitState",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FailureType",
          "kind": "class",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "FailureRecord",
          "kind": "dataclass",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "HealthCheck",
          "kind": "dataclass",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdvancedCircuitBreaker",
          "kind": "class",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CircuitBreakerOpen",
          "kind": "class",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AnomalyDetector",
          "kind": "class",
          "line": 315,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ErrorPropagationTracker",
          "kind": "class",
          "line": 418,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsensusValidator",
          "kind": "class",
          "line": 505,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CascadePreventionSystem",
          "kind": "class",
          "line": 619,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ActorQuarantined",
          "kind": "class",
          "line": 931,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AnomalyDetected",
          "kind": "class",
          "line": 936,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failure_type",
          "kind": "type_alias",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "actor_id",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_message",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "propagation_path",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "check_function",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "interval",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failure_threshold",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success_threshold",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 957,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "call",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_allow_request",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_on_success",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_on_failure",
          "kind": "function",
          "line": 181,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_should_open",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_transition_to",
          "kind": "function",
          "line": 226,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "force_open",
          "kind": "function",
          "line": 250,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "force_close",
          "kind": "function",
          "line": 255,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_health_check",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 283,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "record_metric",
          "kind": "function",
          "line": 342,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "detect_anomalies",
          "kind": "function",
          "line": 347,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_calculate_z_score",
          "kind": "function",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_anomaly_score",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "record_failure",
          "kind": "function",
          "line": 437,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "is_actor_infected",
          "kind": "function",
          "line": 456,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "quarantine_actor",
          "kind": "function",
          "line": 461,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_quarantined",
          "kind": "function",
          "line": 467,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "analyze_propagation_patterns",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_analyze_responses",
          "kind": "function",
          "line": 586,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_create_cache_key",
          "kind": "function",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_or_create_circuit_breaker",
          "kind": "function",
          "line": 662,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "report_failure",
          "kind": "function",
          "line": 738,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_system_health_score",
          "kind": "function",
          "line": 820,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_check_emergency_conditions",
          "kind": "function",
          "line": 856,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_execute_emergency_protocol",
          "kind": "function",
          "line": 879,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_on_circuit_state_change",
          "kind": "function",
          "line": 903,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 915,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "TestActor",
          "kind": "class",
          "line": 956,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.direct_ai_router": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "DirectAIRouter",
          "kind": "class",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "route_ai_request",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_ai_available",
          "kind": "function",
          "line": 226,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "route_request",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "is_available",
          "kind": "function",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.task_manager": {
      "metrics": {
        "total_symbols": 39,
        "used_symbols": 0,
        "unused_symbols": 39,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "TaskStatus",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskPriority",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Task",
          "kind": "dataclass",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskQueue",
          "kind": "dataclass",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Agent",
          "kind": "dataclass",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Lukh\u03bbsTaskManager",
          "kind": "class",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "handler",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "parameters",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "started_at",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "completed_at",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "result",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "retry_count",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_retries",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "agent_id",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "auto_start",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "persistent",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capabilities",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_concurrent_tasks",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_activity",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_setup_default_queues",
          "kind": "function",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_setup_default_agents",
          "kind": "function",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_register_task_handlers",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_queue",
          "kind": "function",
          "line": 224,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_agent",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_task",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_task_status",
          "kind": "function",
          "line": 362,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 381,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.event_replay_snapshot": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 17,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0825242718446602
      },
      "symbols": [
        {
          "name": "EventType",
          "kind": "class",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Event",
          "kind": "dataclass",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ActorStateSnapshot",
          "kind": "dataclass",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EventStore",
          "kind": "class",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SnapshotStore",
          "kind": "class",
          "line": 378,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EventSourcedActor",
          "kind": "class",
          "line": 480,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ReplayController",
          "kind": "class",
          "line": 646,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "event_id",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_type",
          "kind": "type_alias",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "actor_id",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "causation_id",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_json",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "from_json",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "actor_class",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_data",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_hash",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "create_from_actor",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "restore_to_actor",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 766,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_index",
          "kind": "function",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "DemoActor",
          "kind": "class",
          "line": 765,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.practical_optimizations": {
      "metrics": {
        "total_symbols": 63,
        "used_symbols": 0,
        "unused_symbols": 63,
        "import_count": 20,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0970873786407767
      },
      "symbols": [
        {
          "name": "OptimizationStrategy",
          "kind": "class",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CacheEntry",
          "kind": "dataclass",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdaptiveCache",
          "kind": "class",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ObjectPool",
          "kind": "class",
          "line": 284,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LazyComputation",
          "kind": "class",
          "line": 393,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DeferredComputation",
          "kind": "class",
          "line": 438,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BatchProcessor",
          "kind": "class",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryMappedStorage",
          "kind": "class",
          "line": 590,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ComputationReuse",
          "kind": "class",
          "line": 698,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceManager",
          "kind": "class",
          "line": 823,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "optimize_swarm_communication",
          "kind": "function",
          "line": 1022,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "deserialize_swarm_message",
          "kind": "function",
          "line": 1042,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "apply",
          "kind": "function",
          "line": 801,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 805,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "key",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "value",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "size",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_count",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_access",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "creation_time",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ttl",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_expired",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "access",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "score",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 1087,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get",
          "kind": "function",
          "line": 447,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "put",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_estimate_size",
          "kind": "function",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_evict_one",
          "kind": "function",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_prefetch_related",
          "kind": "function",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "clear_expired",
          "kind": "function",
          "line": 251,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_prepopulate",
          "kind": "function",
          "line": 321,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "acquire",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "release",
          "kind": "function",
          "line": 351,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "borrowed",
          "kind": "function",
          "line": 365,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "lazy_property",
          "kind": "function",
          "line": 406,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "defer",
          "kind": "function",
          "line": 418,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_computed",
          "kind": "function",
          "line": 455,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__del__",
          "kind": "function",
          "line": 459,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "add",
          "kind": "function",
          "line": 505,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_process_loop",
          "kind": "function",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "flush",
          "kind": "function",
          "line": 562,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 583,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "store_array",
          "kind": "function",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_array",
          "kind": "function",
          "line": 645,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "cleanup",
          "kind": "function",
          "line": 690,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "memoize",
          "kind": "function",
          "line": 717,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "share_computation",
          "kind": "function",
          "line": 754,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "invalidate_dependents",
          "kind": "function",
          "line": 781,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_monitor_resources",
          "kind": "function",
          "line": 859,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_adjust_for_memory_pressure",
          "kind": "function",
          "line": 883,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_adjust_for_cpu_pressure",
          "kind": "function",
          "line": 894,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_strategy",
          "kind": "function",
          "line": 902,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_all_metrics",
          "kind": "function",
          "line": 906,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "optimize_computation",
          "kind": "function",
          "line": 913,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "optimize_memory_access",
          "kind": "function",
          "line": 955,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "create_resource_report",
          "kind": "function",
          "line": 987,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "expensive_computation",
          "kind": "function",
          "line": 1068,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "ExpensiveObject",
          "kind": "class",
          "line": 1086,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "fibonacci",
          "kind": "function",
          "line": 1124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 721,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 719,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "reset",
          "kind": "function",
          "line": 1091,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.targeted_api_fixes": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "apply_actor_ref_fixes",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "fix_communication_fabric",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "fix_integrated_system",
          "kind": "function",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "update_validation_script",
          "kind": "function",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "main",
          "kind": "function",
          "line": 263,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "add_total_messages",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "add_send_large_data",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "fix_import",
          "kind": "function",
          "line": 236,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.mailbox": {
      "metrics": {
        "total_symbols": 27,
        "used_symbols": 10,
        "unused_symbols": 17,
        "import_count": 12,
        "export_count": 4,
        "connectivity_score": 0.37037037037037035,
        "cohesion_score": 0.0,
        "coupling_score": 0.05825242718446602
      },
      "symbols": [
        {
          "name": "MessagePriority",
          "kind": "class",
          "line": 29,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py",
            "lukhas/core/agent_coordination.py",
            "lukhas/core/examples/mailbox_demo.py",
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MailboxType",
          "kind": "class",
          "line": 38,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py",
            "lukhas/core/agent_coordination.py",
            "lukhas/core/examples/mailbox_demo.py",
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PrioritizedMessage",
          "kind": "dataclass",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DeadLetterQueue",
          "kind": "class",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BackPressureStrategy",
          "kind": "class",
          "line": 91,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py",
            "lukhas/core/examples/mailbox_demo.py",
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Mailbox",
          "kind": "class",
          "line": 99,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnboundedMailbox",
          "kind": "class",
          "line": 145,
          "used": true,
          "used_by": [
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BoundedMailbox",
          "kind": "class",
          "line": 174,
          "used": true,
          "used_by": [
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PriorityMailbox",
          "kind": "class",
          "line": 237,
          "used": true,
          "used_by": [
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PersistentMailbox",
          "kind": "class",
          "line": 360,
          "used": true,
          "used_by": [
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MailboxFactory",
          "kind": "class",
          "line": 471,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py",
            "lukhas/core/examples/mailbox_demo.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MailboxActor",
          "kind": "class",
          "line": 509,
          "used": true,
          "used_by": [
            "lukhas/core/agent_coordination.py",
            "lukhas/core/examples/mailbox_demo.py",
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sequence",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "enqueued_at",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__lt__",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 655,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "qsize",
          "kind": "function",
          "line": 351,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "is_full",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_stats",
          "kind": "function",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_priority_stats",
          "kind": "function",
          "line": 355,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_mailbox",
          "kind": "function",
          "line": 475,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "add_message_filter",
          "kind": "function",
          "line": 529,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_determine_priority",
          "kind": "function",
          "line": 548,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_mailbox_stats",
          "kind": "function",
          "line": 631,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "PriorityActor",
          "kind": "class",
          "line": 654,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.tiered_state_management": {
      "metrics": {
        "total_symbols": 30,
        "used_symbols": 2,
        "unused_symbols": 28,
        "import_count": 14,
        "export_count": 1,
        "connectivity_score": 0.06666666666666667,
        "cohesion_score": 0.0,
        "coupling_score": 0.06796116504854369
      },
      "symbols": [
        {
          "name": "StateType",
          "kind": "class",
          "line": 56,
          "used": true,
          "used_by": [
            "lukhas/core/consistency_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ConsistencyLevel",
          "kind": "class",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "StateSnapshot",
          "kind": "dataclass",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "StateAggregator",
          "kind": "class",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DefaultStateAggregator",
          "kind": "class",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TieredStateManager",
          "kind": "class",
          "line": 134,
          "used": true,
          "used_by": [
            "lukhas/core/consistency_manager.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "StateCoordinator",
          "kind": "class",
          "line": 459,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CounterAggregator",
          "kind": "class",
          "line": 580,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetricsAggregator",
          "kind": "class",
          "line": 601,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "snapshot_id",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "aggregate_id",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "version",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_data",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "state_type",
          "kind": "type_alias",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "aggregate",
          "kind": "function",
          "line": 604,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "can_handle",
          "kind": "function",
          "line": 634,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 465,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_aggregator",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "subscribe_to_replicated_state",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "unsubscribe_from_replicated_state",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_next_version",
          "kind": "function",
          "line": 440,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_statistics",
          "kind": "function",
          "line": 446,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "Event",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_id",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_type",
          "kind": "constant",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "data",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.actor_model": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "Actor",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PingActor",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "PongActor",
          "kind": "class",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_run",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "receive",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "send",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.coordination": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 2,
        "unused_symbols": 7,
        "import_count": 1,
        "export_count": 2,
        "connectivity_score": 0.2222222222222222,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "ContractNetInitiator",
          "kind": "class",
          "line": 3,
          "used": true,
          "used_by": [
            "lukhas/core/collaboration.py",
            "lukhas/core/swarm.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ContractNetParticipant",
          "kind": "class",
          "line": 29,
          "used": true,
          "used_by": [
            "lukhas/core/collaboration.py",
            "lukhas/core/swarm.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "call_for_proposals",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "receive_proposal",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "award_contract",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "handle_call_for_proposals",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "can_perform_task",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "calculate_bid",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.identity_aware_base": {
      "metrics": {
        "total_symbols": 24,
        "used_symbols": 0,
        "unused_symbols": 24,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "IdentityAwareService",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TieredOperationMixin",
          "kind": "class",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ResourceLimitedService",
          "kind": "class",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "tier_required",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 313,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_initialize_identity",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_create_fallback_client",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "identity_client",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "validate_user_tier",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_user_consent",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "log_user_activity",
          "kind": "function",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_user_context",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "clear_user_cache",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_service_info",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "execute_tiered_operation",
          "kind": "function",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_user_resource_limits",
          "kind": "function",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "check_resource_availability",
          "kind": "function",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "consume_resource",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 403,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "FallbackIdentityClient",
          "kind": "class",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 405,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "verify_user_access",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_consent",
          "kind": "function",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_activity",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.monitoring_observability": {
      "metrics": {
        "total_symbols": 45,
        "used_symbols": 0,
        "unused_symbols": 45,
        "import_count": 37,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.1796116504854369
      },
      "symbols": [
        {
          "name": "AlertSeverity",
          "kind": "class",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetricType",
          "kind": "class",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftType",
          "kind": "class",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Alert",
          "kind": "dataclass",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetricThreshold",
          "kind": "dataclass",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MonitoringConfig",
          "kind": "dataclass",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DistributedTracer",
          "kind": "class",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ModelDriftDetector",
          "kind": "class",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AlertManager",
          "kind": "class",
          "line": 411,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PerformanceProfiler",
          "kind": "class",
          "line": 643,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ObservabilitySystem",
          "kind": "class",
          "line": 721,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "title",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metric_name",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_value",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "threshold",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "service",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "model_id",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resolved",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resolution_time",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "warning_threshold",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "critical_threshold",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "comparison_operator",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluation_window_minutes",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "min_data_points",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "prometheus_port",
          "kind": "constant",
          "line": 158,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "jaeger_endpoint",
          "kind": "constant",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "elasticsearch_host",
          "kind": "constant",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "redis_host",
          "kind": "constant",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "datadog_api_key",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alert_webhook_url",
          "kind": "constant",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_detection_threshold",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "anomaly_detection_sensitivity",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_level",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 726,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_span_event",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_check_threshold_violation",
          "kind": "function",
          "line": 464,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_compare_values",
          "kind": "function",
          "line": 482,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_matches_suppression_rule",
          "kind": "function",
          "line": 547,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_memory_usage",
          "kind": "function",
          "line": 682,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_gpu_usage",
          "kind": "function",
          "line": 691,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_performance_summary",
          "kind": "function",
          "line": 700,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.resource_efficiency": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "ResourceEfficiencyAnalyzer",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_resource_efficiency_table",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "collect_metrics",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.identity_integration": {
      "metrics": {
        "total_symbols": 18,
        "used_symbols": 3,
        "unused_symbols": 15,
        "import_count": 7,
        "export_count": 2,
        "connectivity_score": 0.16666666666666666,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "_identity_client",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "TierMappingConfig",
          "kind": "class",
          "line": 53,
          "used": true,
          "used_by": [
            "lukhas/core/tier_unification_adapter.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_identity_client",
          "kind": "function",
          "line": 129,
          "used": true,
          "used_by": [
            "lukhas/core/identity_aware_base.py",
            "lukhas/core/tier_unification_adapter.py"
          ],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "require_identity",
          "kind": "function",
          "line": 147,
          "used": true,
          "used_by": [
            "lukhas/core/identity_aware_base.py",
            "lukhas/core/tier_unification_adapter.py"
          ],
          "complexity": 16,
          "has_docstring": true
        },
        {
          "name": "IdentityContext",
          "kind": "class",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "validate_and_log",
          "kind": "function",
          "line": 276,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "ModuleIntegrationExamples",
          "kind": "class",
          "line": 300,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "normalize_tier",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": true
        },
        {
          "name": "get_tier_index",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": 16,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__enter__",
          "kind": "function",
          "line": 249,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "__exit__",
          "kind": "function",
          "line": 264,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "memory_operation_example",
          "kind": "function",
          "line": 305,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "dream_generation_example",
          "kind": "function",
          "line": 313,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "quantum_operation_example",
          "kind": "function",
          "line": 321,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "context_manager_example",
          "kind": "function",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 16,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.agent_coordination": {
      "metrics": {
        "total_symbols": 52,
        "used_symbols": 5,
        "unused_symbols": 47,
        "import_count": 11,
        "export_count": 1,
        "connectivity_score": 0.09615384615384616,
        "cohesion_score": 0.0,
        "coupling_score": 0.05339805825242718
      },
      "symbols": [
        {
          "name": "actorref_to_dict",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "actorref_from_dict",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "TaskStatus",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SkillLevel",
          "kind": "class",
          "line": 60,
          "used": true,
          "used_by": [
            "lukhas/core/test_coordination_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Skill",
          "kind": "dataclass",
          "line": 69,
          "used": true,
          "used_by": [
            "lukhas/core/test_coordination_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskAnnouncement",
          "kind": "dataclass",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SkillOffer",
          "kind": "dataclass",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "WorkingGroup",
          "kind": "dataclass",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CoordinationProtocol",
          "kind": "class",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SkillRegistry",
          "kind": "class",
          "line": 179,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CoordinationHub",
          "kind": "class",
          "line": 226,
          "used": true,
          "used_by": [
            "lukhas/core/test_coordination_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AutonomousAgent",
          "kind": "class",
          "line": 538,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DataProcessorAgent",
          "kind": "class",
          "line": 725,
          "used": true,
          "used_by": [
            "lukhas/core/test_coordination_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AnalyticsAgent",
          "kind": "class",
          "line": 776,
          "used": true,
          "used_by": [
            "lukhas/core/test_coordination_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MLModelAgent",
          "kind": "class",
          "line": 789,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "level",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success_rate",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "avg_completion_time",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_tasks",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "update_metrics",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "task_id",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "required_skills",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "initiator",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "deadline",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_group_size",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "announced_at",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "is_expired",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "agent_ref",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "agent_id",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "offered_skills",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "availability",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_time",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cost_estimate",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "constraints",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "group_id",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "leader",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "members",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "skills_covered",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "formed_at",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "add_member",
          "kind": "function",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "all_skills_covered",
          "kind": "function",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 792,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_register_handlers",
          "kind": "function",
          "line": 247,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_register_coordination_handlers",
          "kind": "function",
          "line": 558,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_ref",
          "kind": "function",
          "line": 567,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_estimate_task_time",
          "kind": "function",
          "line": 704,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.test_image_processing_pipeline": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "create_test_image",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "EventCollector",
          "kind": "class",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "collect_event",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_events_by_type",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "clear",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.governance": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "GovernanceLayer",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_rule",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_action",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.state_management": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "StateManager",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_load_latest_snapshot",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_replay_events",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "apply_event",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "log_event",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "take_snapshot",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.automatic_testing_system": {
      "metrics": {
        "total_symbols": 65,
        "used_symbols": 0,
        "unused_symbols": 65,
        "import_count": 20,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0970873786407767
      },
      "symbols": [
        {
          "name": "TestOperation",
          "kind": "dataclass",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TestSession",
          "kind": "dataclass",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PerformanceMonitor",
          "kind": "class",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AITestAnalyzer",
          "kind": "class",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AutomaticTestingSystem",
          "kind": "class",
          "line": 529,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_autotest_global_instance",
          "kind": "constant",
          "line": 1151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_get_global_autotest_instance",
          "kind": "function",
          "line": 1154,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "stop",
          "kind": "function",
          "line": 1197,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "operation_id",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "operation_type",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "command",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "end_time",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "duration_ms",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "output",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "exit_code",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_metrics",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_analysis",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "operations",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_operations",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "successful_operations",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failed_operations",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_summary",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ai_insights",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 536,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "capture_metrics",
          "kind": "function",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_check_performance_alerts",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_performance_summary",
          "kind": "function",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_health_score",
          "kind": "function",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_load_default_rules_and_patterns",
          "kind": "function",
          "line": 261,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "analyze_operation",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "analyze_session",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_categorize_performance",
          "kind": "function",
          "line": 344,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_predict_success_probability",
          "kind": "function",
          "line": 356,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_generate_optimization_suggestions",
          "kind": "function",
          "line": 371,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_assess_risk_score",
          "kind": "function",
          "line": 389,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_find_known_pattern_matches",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_hash_operation",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_duration_trend",
          "kind": "function",
          "line": 420,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_calculate_performance_grade",
          "kind": "function",
          "line": 441,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "_generate_session_recommendations",
          "kind": "function",
          "line": 469,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_identify_session_risks",
          "kind": "function",
          "line": 486,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_find_optimization_opportunities",
          "kind": "function",
          "line": 503,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_watch_loop_entry",
          "kind": "function",
          "line": 695,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_most_recent_session",
          "kind": "function",
          "line": 929,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_serialize_session",
          "kind": "function",
          "line": 960,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_serialize_operation",
          "kind": "function",
          "line": 977,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_deserialize_session",
          "kind": "function",
          "line": 997,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_deserialize_operation",
          "kind": "function",
          "line": 1016,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_format_operations_for_report",
          "kind": "function",
          "line": 1036,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "stop_watching",
          "kind": "function",
          "line": 1123,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "suggestions",
          "kind": "constant",
          "line": 373,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "matched_patterns",
          "kind": "constant",
          "line": 404,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recs",
          "kind": "constant",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risks_found",
          "kind": "constant",
          "line": 489,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "opportunities_found",
          "kind": "constant",
          "line": 506,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "run_results",
          "kind": "constant",
          "line": 617,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_session",
          "kind": "constant",
          "line": 724,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "initial_perf_metrics",
          "kind": "constant",
          "line": 811,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "final_perf_metrics",
          "kind": "constant",
          "line": 858,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.observatory": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "Observatory",
          "kind": "class",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_decision_trail",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_system_status",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.p2p_communication": {
      "metrics": {
        "total_symbols": 26,
        "used_symbols": 3,
        "unused_symbols": 23,
        "import_count": 12,
        "export_count": 1,
        "connectivity_score": 0.11538461538461539,
        "cohesion_score": 0.0,
        "coupling_score": 0.05825242718446602
      },
      "symbols": [
        {
          "name": "PeerStatus",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MessageType",
          "kind": "class",
          "line": 44,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PeerInfo",
          "kind": "dataclass",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "P2PMessage",
          "kind": "dataclass",
          "line": 80,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "P2PNode",
          "kind": "class",
          "line": 118,
          "used": true,
          "used_by": [
            "lukhas/core/actor_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "peer_id",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "address",
          "kind": "constant",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "port",
          "kind": "constant",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_seen",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "capabilities",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "latency_ms",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reliability_score",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "message_id",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sender_id",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recipient_id",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "type_alias",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ttl",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_bytes",
          "kind": "function",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "from_bytes",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "register_handler",
          "kind": "function",
          "line": 330,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_network_stats",
          "kind": "function",
          "line": 641,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.validation": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "final_status_success",
          "kind": "constant",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "autotest_instance",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "captured_operation_for_ai_test",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "stress_durations",
          "kind": "constant",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.actor_system": {
      "metrics": {
        "total_symbols": 29,
        "used_symbols": 6,
        "unused_symbols": 23,
        "import_count": 15,
        "export_count": 14,
        "connectivity_score": 0.20689655172413793,
        "cohesion_score": 0.0,
        "coupling_score": 0.07281553398058252
      },
      "symbols": [
        {
          "name": "ActorState",
          "kind": "class",
          "line": 50,
          "used": true,
          "used_by": [
            "lukhas/core/tiered_state_management.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SupervisionStrategy",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ActorMessage",
          "kind": "dataclass",
          "line": 70,
          "used": true,
          "used_by": [
            "lukhas/core/agent_coordination.py",
            "lukhas/core/circuit_breaker.py",
            "lukhas/core/event_replay_snapshot.py",
            "lukhas/core/mailbox.py",
            "lukhas/core/observability_steering.py",
            "lukhas/core/supervision.py",
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ActorRef",
          "kind": "class",
          "line": 86,
          "used": true,
          "used_by": [
            "lukhas/core/agent_coordination.py",
            "lukhas/core/circuit_breaker.py",
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/event_replay_snapshot.py",
            "lukhas/core/integrated_system.py",
            "lukhas/core/observability_steering.py",
            "lukhas/core/supervision.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Actor",
          "kind": "class",
          "line": 150,
          "used": true,
          "used_by": [
            "lukhas/core/actor_supervision_integration.py",
            "lukhas/core/agent_coordination.py",
            "lukhas/core/circuit_breaker.py",
            "lukhas/core/event_replay_snapshot.py",
            "lukhas/core/examples/mailbox_demo.py",
            "lukhas/core/mailbox.py",
            "lukhas/core/observability_steering.py",
            "lukhas/core/supervision.py",
            "lukhas/core/swarm.py",
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ActorSystem",
          "kind": "class",
          "line": 394,
          "used": true,
          "used_by": [
            "lukhas/core/actor_supervision_integration.py",
            "lukhas/core/agent_coordination.py",
            "lukhas/core/circuit_breaker.py",
            "lukhas/core/event_replay_snapshot.py",
            "lukhas/core/examples/mailbox_demo.py",
            "lukhas/core/observability_steering.py",
            "lukhas/core/supervision.py",
            "lukhas/core/test_coordination_simple.py",
            "lukhas/core/test_mailbox_simple.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIAgentActor",
          "kind": "class",
          "line": 589,
          "used": true,
          "used_by": [
            "lukhas/core/circuit_breaker.py",
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/integrated_system.py",
            "lukhas/core/observability_steering.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "message_id",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "sender",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recipient",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message_type",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "payload",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "correlation_id",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reply_to",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 597,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "__str__",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "register_handler",
          "kind": "function",
          "line": 288,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "become",
          "kind": "function",
          "line": 292,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "supervision_strategy",
          "kind": "function",
          "line": 354,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_stats",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_actor_ref",
          "kind": "function",
          "line": 497,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_actor",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_response_handler",
          "kind": "function",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "unregister_response_handler",
          "kind": "function",
          "line": 518,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "handle_response",
          "kind": "function",
          "line": 522,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_shard",
          "kind": "function",
          "line": 528,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_system_stats",
          "kind": "function",
          "line": 562,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.decorators": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 1,
        "unused_symbols": 6,
        "import_count": 6,
        "export_count": 1,
        "connectivity_score": 0.14285714285714285,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "lukhas_tier_required",
          "kind": "function",
          "line": 62,
          "used": true,
          "used_by": [
            "lukhas/core/identity_integration.py"
          ],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "glyph_bind",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "trace",
          "kind": "function",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "TierLevel",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "PermissionScope",
          "kind": "class",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.colonies.temporal_colony": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "TemporalColony",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "snapshot_state",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "revert_last",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_state",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_operations",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "simulate_future_state",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.colonies.creativity_colony": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 1,
        "unused_symbols": 2,
        "import_count": 4,
        "export_count": 1,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "CreativityColony",
          "kind": "class",
          "line": 15,
          "used": true,
          "used_by": [
            "lukhas/core/integrated_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "update_task_slots",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.colonies.tensor_colony_ops": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "tags_to_tensor",
          "kind": "function",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "batch_propagate",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "colony_reasoning_tensor",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "simulate_throughput",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "plot_throughput",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "timings",
          "kind": "constant",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.colonies.memory_colony": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 1,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 0.5,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "MemoryColony",
          "kind": "class",
          "line": 13,
          "used": true,
          "used_by": [
            "lukhas/core/integrated_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.colonies.supervisor_agent": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 1,
        "unused_symbols": 0,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "SupervisorAgent",
          "kind": "class",
          "line": 9,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py"
          ],
          "complexity": null,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.colonies.base_colony": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 1,
        "unused_symbols": 8,
        "import_count": 13,
        "export_count": 9,
        "connectivity_score": 0.1111111111111111,
        "cohesion_score": 0.0,
        "coupling_score": 0.06310679611650485
      },
      "symbols": [
        {
          "name": "BaseColony",
          "kind": "class",
          "line": 23,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/creativity_colony.py",
            "lukhas/core/colonies/governance_colony.py",
            "lukhas/core/colonies/memory_colony.py",
            "lukhas/core/colonies/reasoning_colony.py",
            "lukhas/core/colonies/temporal_colony.py",
            "lukhas/core/colonies/tensor_colony_ops.py",
            "lukhas/core/governance/governance_colony.py",
            "lukhas/core/integrated_system.py",
            "lukhas/core/symbolism/archiver.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "set_governance_colony",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "link_symbolic_contexts",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "prune_expired_tags",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "request_permission_escalation",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "override_tag",
          "kind": "function",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "entangle_tags",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.colonies.governance_colony": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "GovernanceColony",
          "kind": "class",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "review_scenario",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.symbolic_bridge.token_map": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "BridgeTokenMap",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "add_mapping",
          "kind": "function",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_mapping",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_schema",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.colonies.reasoning_colony": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 9,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.043689320388349516
      },
      "symbols": [
        {
          "name": "ReasoningColony",
          "kind": "class",
          "line": 19,
          "used": true,
          "used_by": [
            "lukhas/core/integrated_system.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "propagate_tags",
          "kind": "function",
          "line": 243,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "dream_context",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.symbolic_bridge.integrator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "SymbolicBridgeIntegrator",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "route_symbolic_event",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.identity.mapper": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "IdentityMapper",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_identity_component",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.identity.processor": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "IdentityProcessor",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_identity_component",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.identity.engine": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "IdentityEngine",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_identity_component",
          "kind": "function",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.identity.persona_engine": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "PersonaEngine",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_identity_component",
          "kind": "function",
          "line": 174,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.identity.lukhas_id_manager": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "get_current_sid",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_user_tier",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "register_new_user",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.identity.manager": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 0,
        "unused_symbols": 21,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "EmotionalMemoryVector",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SymbolicIdentityHash",
          "kind": "class",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TraumaLock",
          "kind": "class",
          "line": 257,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdvancedIdentityManager",
          "kind": "class",
          "line": 353,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 363,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "extract_vector",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "update_vector",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_vector",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_update_composite_vector",
          "kind": "function",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "create_hash",
          "kind": "function",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "store_hash",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "verify",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_calculate_hash_similarity",
          "kind": "function",
          "line": 247,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "secure",
          "kind": "function",
          "line": 271,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "unlock",
          "kind": "function",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_trauma_score",
          "kind": "function",
          "line": 327,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "authenticate",
          "kind": "function",
          "line": 391,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "register_user",
          "kind": "function",
          "line": 417,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "update",
          "kind": "function",
          "line": 462,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "apply_trauma_lock",
          "kind": "function",
          "line": 483,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_log_identity_event",
          "kind": "function",
          "line": 489,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.spine.integration_orchestrator": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "ComponentInfo",
          "kind": "dataclass",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "IntegrationPlan",
          "kind": "dataclass",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LukhasIntegrationOrchestrator",
          "kind": "class",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source_path",
          "kind": "constant",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "target_path",
          "kind": "constant",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "conflicts",
          "kind": "constant",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "integration_status",
          "kind": "constant",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_systems",
          "kind": "constant",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dream_systems",
          "kind": "constant",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_systems",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "voice_systems",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_systems",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_systems",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_scan_directory",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_detect_duplications",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_similarity_check",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_count_fragmented_dirs",
          "kind": "function",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_complexity",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_find_candidates_by_pattern",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_create_component_infos",
          "kind": "function",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_priority",
          "kind": "function",
          "line": 234,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.personality.lukhas_es_creativo": {
      "metrics": {
        "total_symbols": 32,
        "used_symbols": 0,
        "unused_symbols": 32,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "LucasAGI",
          "kind": "class",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaLearningSystem",
          "kind": "class",
          "line": 195,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "FederatedLearningManager",
          "kind": "class",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ReflectiveIntrospectionSystem",
          "kind": "class",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "NeuroHaikuGenerator",
          "kind": "class",
          "line": 209,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MetaDoodler",
          "kind": "class",
          "line": 212,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EthicalProtestModule",
          "kind": "class",
          "line": 215,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "KnowledgeGraph",
          "kind": "class",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "HarmonyEngine",
          "kind": "class",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "unified_processing",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_select_models",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_multimodal_fusion",
          "kind": "function",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_output",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_attention_fusion",
          "kind": "function",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_metrics",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_federated_update",
          "kind": "function",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "federated_lifecycle",
          "kind": "function",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "adaptive_learning_loop",
          "kind": "function",
          "line": 186,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "analyze_context",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "optimize_learning_approach",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_model_output",
          "kind": "function",
          "line": 198,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_model",
          "kind": "function",
          "line": 199,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_insights",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "incorporate_feedback",
          "kind": "function",
          "line": 201,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "contribute_gradients",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "ethical_reasoning",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "meta_haiku",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "meta_draw",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "plan_protest",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "early_fusion",
          "kind": "function",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "synthesize_response",
          "kind": "function",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.personality.personality": {
      "metrics": {
        "total_symbols": 25,
        "used_symbols": 0,
        "unused_symbols": 25,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "InteractionContext",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CulturalStyle",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InteractionMetrics",
          "kind": "dataclass",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ShynessModule",
          "kind": "class",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EtiquetteEngine",
          "kind": "class",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PersonalityManager",
          "kind": "class",
          "line": 252,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_personality_manager",
          "kind": "constant",
          "line": 380,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_personality_manager",
          "kind": "function",
          "line": 383,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "interaction_count",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "positive_feedback",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "negative_feedback",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_session_length",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "preferred_topics",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "communication_style_rating",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_shyness",
          "kind": "function",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_interaction_style",
          "kind": "function",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_initialize_context_rules",
          "kind": "function",
          "line": 189,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_cultural_preference",
          "kind": "function",
          "line": 218,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_etiquette_adjustments",
          "kind": "function",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_personality_profile",
          "kind": "function",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "update_from_interaction",
          "kind": "function",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_mood",
          "kind": "function",
          "line": 346,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_energy_level",
          "kind": "function",
          "line": 351,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_status",
          "kind": "function",
          "line": 356,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.personality.creative_expressions": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "NeuroHaikuGenerator",
          "kind": "class",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_style_preferences",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_haiku",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_create_base_haiku",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_build_line",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_expand_haiku",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_apply_expansion_rules",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_add_sensory_detail",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_infuse_emotion",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_create_juxtaposition",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "load_inspiration_profile",
          "kind": "function",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.personality.neuro_haiku_generator": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 0,
        "unused_symbols": 11,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "NeuroHaikuGenerator",
          "kind": "class",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_style_preferences",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_haiku",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_create_base_haiku",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_build_line",
          "kind": "function",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_expand_haiku",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_apply_expansion_rules",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_add_sensory_detail",
          "kind": "function",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_infuse_emotion",
          "kind": "function",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_create_juxtaposition",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.symbolic_diagnostics.trace_repair_engine": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "TraceRepairEngine",
          "kind": "class",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "repair_trace",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.personality.lukhas_es_creativo_clean": {
      "metrics": {
        "total_symbols": 32,
        "used_symbols": 0,
        "unused_symbols": 32,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "LucasAGI",
          "kind": "class",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaLearningSystem",
          "kind": "class",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "FederatedLearningManager",
          "kind": "class",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ReflectiveIntrospectionSystem",
          "kind": "class",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "NeuroHaikuGenerator",
          "kind": "class",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MetaDoodler",
          "kind": "class",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EthicalProtestModule",
          "kind": "class",
          "line": 222,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "KnowledgeGraph",
          "kind": "class",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "HarmonyEngine",
          "kind": "class",
          "line": 228,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "unified_processing",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_select_models",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_multimodal_fusion",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_output",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_attention_fusion",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_metrics",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_federated_update",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "federated_lifecycle",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "adaptive_learning_loop",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "analyze_context",
          "kind": "function",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "optimize_learning_approach",
          "kind": "function",
          "line": 204,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_model_output",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_model",
          "kind": "function",
          "line": 206,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_insights",
          "kind": "function",
          "line": 207,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "incorporate_feedback",
          "kind": "function",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "contribute_gradients",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "ethical_reasoning",
          "kind": "function",
          "line": 214,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "meta_haiku",
          "kind": "function",
          "line": 217,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "meta_draw",
          "kind": "function",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "plan_protest",
          "kind": "function",
          "line": 223,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "early_fusion",
          "kind": "function",
          "line": 229,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "synthesize_response",
          "kind": "function",
          "line": 230,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.utils.symbolic_utils": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "tier_label",
          "kind": "function",
          "line": 6,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "summarize_emotion_vector",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.utils.__init__": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "generate_symbolic_id",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "legacy_parse_lukhas_command",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.utils.dream_utils": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "load_dreams",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_latest_dream_timestamp",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "filter_dreams_by_tag",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "filter_dreams",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": false
        },
        {
          "name": "filter_by_rem_phase",
          "kind": "function",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "filter_by_collapse",
          "kind": "function",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "filter_by_resonance",
          "kind": "function",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.observability.collector": {
      "metrics": {
        "total_symbols": 11,
        "used_symbols": 0,
        "unused_symbols": 11,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "ActorMetric",
          "kind": "dataclass",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ObservabilityCollector",
          "kind": "class",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "actor_id",
          "kind": "constant",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metric_name",
          "kind": "constant",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "value",
          "kind": "constant",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 14,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "start",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "stop",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "record_metric",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_metrics",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.introspection.introspector": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 3,
        "unused_symbols": 5,
        "import_count": 10,
        "export_count": 1,
        "connectivity_score": 0.375,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "ModuleIntrospector",
          "kind": "class",
          "line": 27,
          "used": true,
          "used_by": [
            "lukhas/core/introspection/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "analyze_module",
          "kind": "function",
          "line": 49,
          "used": true,
          "used_by": [
            "lukhas/core/introspection/__init__.py"
          ],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "report_symbolic_state",
          "kind": "function",
          "line": 188,
          "used": true,
          "used_by": [
            "lukhas/core/introspection/__init__.py"
          ],
          "complexity": 19,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_process_special_tags",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_analyze_ast",
          "kind": "function",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_get_decorator_name",
          "kind": "function",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_base_name",
          "kind": "function",
          "line": 180,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.symbolic_reasoning.symbolic_trace": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "SymbolicTrace",
          "kind": "class",
          "line": 1,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.ethics.__init__": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "EthicalFramework",
          "kind": "class",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ETHICAL_PRINCIPLES",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SafetyConstraintLevel",
          "kind": "class",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SAFETY_CONSTRAINTS_DEFINITIONS",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "evaluate_ethics",
          "kind": "function",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "ethical_concerns",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action_advisability",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.testing.plugin_test_framework": {
      "metrics": {
        "total_symbols": 67,
        "used_symbols": 0,
        "unused_symbols": 67,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06310679611650485
      },
      "symbols": [
        {
          "name": "TestCase",
          "kind": "dataclass",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TestResult",
          "kind": "dataclass",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TestSuite",
          "kind": "dataclass",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TestReport",
          "kind": "dataclass",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasTestAssertions",
          "kind": "class",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LucasPluginTestRunner",
          "kind": "class",
          "line": 175,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "description",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_function",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "category",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timeout",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_level",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_requirements",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expected_symbolic_outputs",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_case",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "status",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "duration",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "message",
          "kind": "constant",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error",
          "kind": "constant",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "outputs",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_traces",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_metrics",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_scores",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_cases",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "setup_function",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "teardown_function",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_path",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_name",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "plugin_version",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "test_session_id",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_time",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "end_time",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_duration",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "total_tests",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "passed_tests",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "failed_tests",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "skipped_tests",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_tests",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "unit_test_results",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "integration_test_results",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_test_results",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_test_results",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_test_results",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_score",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consciousness_compatibility_score",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_score",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_score",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "performance_score",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "coverage_percentage",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_reasoning_validation",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lukhas_integration_status",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "assert_consciousness_compatible",
          "kind": "function",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "assert_symbolic_output",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "assert_compliance_metadata",
          "kind": "function",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "assert_security_patterns",
          "kind": "function",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "assert_performance_threshold",
          "kind": "function",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 183,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "discover_tests",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_discover_tests_in_directory",
          "kind": "function",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_load_test_file",
          "kind": "function",
          "line": 250,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "_determine_test_category",
          "kind": "function",
          "line": 293,
          "used": false,
          "used_by": [],
          "complexity": 12,
          "has_docstring": true
        },
        {
          "name": "_create_default_test_suite",
          "kind": "function",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_test_plugin_loads",
          "kind": "function",
          "line": 522,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_test_manifest_valid",
          "kind": "function",
          "line": 541,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_test_consciousness_compatibility",
          "kind": "function",
          "line": 558,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_test_basic_compliance",
          "kind": "function",
          "line": 571,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "generate_test_report_html",
          "kind": "function",
          "line": 585,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.symbolism.methylation_model": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 1,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.3333333333333333,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "MethylationModel",
          "kind": "class",
          "line": 6,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "adjust_lifespan",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.ai.integration_manager": {
      "metrics": {
        "total_symbols": 27,
        "used_symbols": 0,
        "unused_symbols": 27,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05339805825242718
      },
      "symbols": [
        {
          "name": "lukhas_tier_required",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "AITask",
          "kind": "dataclass",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIResponse",
          "kind": "dataclass",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AIIntegrationManager",
          "kind": "class",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TaskTemplates",
          "kind": "class",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "type",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "prompt",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "files",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "task_id",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "service_name",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_content",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata_dict",
          "kind": "constant",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "_load_ai_service_config",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "use_github_copilot_cli",
          "kind": "function",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_local_analysis_fallback",
          "kind": "function",
          "line": 187,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_save_ai_task_response",
          "kind": "function",
          "line": 192,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "code_analysis",
          "kind": "function",
          "line": 205,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "AIOHTTPClientSessionPH",
          "kind": "class",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cfg_data",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response",
          "kind": "constant",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MR",
          "kind": "class",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.ethics.dream_ethics_injector": {
      "metrics": {
        "total_symbols": 29,
        "used_symbols": 0,
        "unused_symbols": 29,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "EthicalAnnotation",
          "kind": "dataclass",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DreamEthicalAssessment",
          "kind": "dataclass",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DreamEthicsInjector",
          "kind": "class",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "tag",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alignment_score",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "policy_references",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_level",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "dream_id",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "original_narrative",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_tags",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "annotations",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "overall_safety_score",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dream_safe",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "filtered_narrative",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_insights",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "transformation_suggestions",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_filter_narrative",
          "kind": "function",
          "line": 302,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_insights",
          "kind": "function",
          "line": 326,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_generate_transformations",
          "kind": "function",
          "line": 364,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "get_safety_statistics",
          "kind": "function",
          "line": 412,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "EthicsEngine",
          "kind": "class",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EthicalPolicy",
          "kind": "class",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "PolicyViolation",
          "kind": "class",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "concern_counts",
          "kind": "constant",
          "line": 429,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.examples.mailbox_demo": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "SequentialCounterActor",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PriorityTaskActor",
          "kind": "class",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "BackPressureActor",
          "kind": "class",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PersistentStateActor",
          "kind": "class",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.symbolism.tags": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 2,
        "unused_symbols": 0,
        "import_count": 1,
        "export_count": 5,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "TagScope",
          "kind": "class",
          "line": 8,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/colonies/reasoning_colony.py",
            "lukhas/core/colonies/tensor_colony_ops.py",
            "lukhas/core/symbolic/collapse/vector_ops.py",
            "lukhas/core/symbolism/methylation_model.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "TagPermission",
          "kind": "class",
          "line": 19,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/base_colony.py",
            "lukhas/core/colonies/reasoning_colony.py",
            "lukhas/core/colonies/tensor_colony_ops.py"
          ],
          "complexity": null,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.symbolism.archiver": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "SymbolicShellArchiver",
          "kind": "class",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "get_full_symbolic_state",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_snapshot",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "start",
          "kind": "function",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "stop",
          "kind": "function",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.governance.governance_colony": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "GovernanceColony",
          "kind": "class",
          "line": 10,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.verifold.verifold_unified": {
      "metrics": {
        "total_symbols": 44,
        "used_symbols": 0,
        "unused_symbols": 44,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05825242718446602
      },
      "symbols": [
        {
          "name": "require_identity",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "VeriFoldCollapseType",
          "kind": "class",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "VeriFoldPhase",
          "kind": "class",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "VeriFoldSnapshot",
          "kind": "dataclass",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "VeriFoldRecord",
          "kind": "dataclass",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedVeriFoldSystem",
          "kind": "class",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "get_global_verifold_system",
          "kind": "function",
          "line": 581,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "generate_verifold_hash",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "verify_verifold_hash",
          "kind": "function",
          "line": 603,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "decorator",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        },
        {
          "name": "collapse_id",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "collapse_type",
          "kind": "type_alias",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_id",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "lambda_tier",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intent_vector",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_state",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_context",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "temporal_context",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "system_context",
          "kind": "constant",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy_score",
          "kind": "constant",
          "line": 109,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "snapshot",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verifold_hash",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "signature",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "public_key",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "verified",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "algorithm",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "verify_verifold_record",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_system_metrics",
          "kind": "function",
          "line": 362,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_collapse_snapshot",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_compute_verifold_hash",
          "kind": "function",
          "line": 404,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_sign_verifold_hash",
          "kind": "function",
          "line": 419,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_verify_signature",
          "kind": "function",
          "line": 435,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_entropy_score",
          "kind": "function",
          "line": 451,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_determine_collapse_phase",
          "kind": "function",
          "line": 462,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_monitor_system_entropy",
          "kind": "function",
          "line": 469,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_analyze_tier_risks",
          "kind": "function",
          "line": 485,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_get_tier_level",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_get_phase_distribution",
          "kind": "function",
          "line": 561,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_tier_activity",
          "kind": "function",
          "line": 569,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.orchestration.energy_aware_execution_planner": {
      "metrics": {
        "total_symbols": 64,
        "used_symbols": 0,
        "unused_symbols": 64,
        "import_count": 16,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.07766990291262135
      },
      "symbols": [
        {
          "name": "EnergyProfile",
          "kind": "class",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "Priority",
          "kind": "class",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyTask",
          "kind": "dataclass",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyBudget",
          "kind": "dataclass",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyMetrics",
          "kind": "dataclass",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EnergyAwareExecutionPlanner",
          "kind": "class",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_eaxp_instance",
          "kind": "function",
          "line": 857,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "task_id",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "priority",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_energy",
          "kind": "constant",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "max_energy",
          "kind": "constant",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "estimated_duration",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "deadline",
          "kind": "constant",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "dependencies",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_profile",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "callback",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "total_capacity",
          "kind": "constant",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "current_available",
          "kind": "constant",
          "line": 113,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reserved_critical",
          "kind": "constant",
          "line": 114,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "reserved_maintenance",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "peak_consumption_rate",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "regeneration_rate",
          "kind": "constant",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_updated",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_usable_energy",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "can_allocate",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "total_consumed",
          "kind": "constant",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "efficiency_score",
          "kind": "constant",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "waste_ratio",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "peak_utilization",
          "kind": "constant",
          "line": 137,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "average_utilization",
          "kind": "constant",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tasks_completed",
          "kind": "constant",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "tasks_failed",
          "kind": "constant",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "energy_violations",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_calculated",
          "kind": "constant",
          "line": 142,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_default_config",
          "kind": "function",
          "line": 210,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "submit_task",
          "kind": "function",
          "line": 269,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "cancel_task",
          "kind": "function",
          "line": 304,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_task_status",
          "kind": "function",
          "line": 340,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "optimize_energy_allocation",
          "kind": "function",
          "line": 387,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "get_energy_metrics",
          "kind": "function",
          "line": 468,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_can_start_task",
          "kind": "function",
          "line": 562,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_execute_task",
          "kind": "function",
          "line": 597,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_simulate_task_execution",
          "kind": "function",
          "line": 654,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_energy_monitor_loop",
          "kind": "function",
          "line": 673,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_validate_task",
          "kind": "function",
          "line": 713,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_energy_profile",
          "kind": "function",
          "line": 720,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_priority_score",
          "kind": "function",
          "line": 727,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_insert_task_by_priority",
          "kind": "function",
          "line": 743,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_allocate_energy",
          "kind": "function",
          "line": 759,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_cleanup_completed_tasks",
          "kind": "function",
          "line": 765,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_energy_budget",
          "kind": "function",
          "line": 775,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_energy_metrics",
          "kind": "function",
          "line": 779,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_analyze_task_queue",
          "kind": "function",
          "line": 788,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_get_priority_distribution",
          "kind": "function",
          "line": 803,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_efficiency_metrics",
          "kind": "function",
          "line": 811,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_apply_adaptive_optimizations",
          "kind": "function",
          "line": 828,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_is_dependency_satisfied",
          "kind": "function",
          "line": 840,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_completion_time",
          "kind": "function",
          "line": 844,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_estimate_start_time",
          "kind": "function",
          "line": 849,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.meta_learning.rate_modulator": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 3,
        "unused_symbols": 0,
        "import_count": 2,
        "export_count": 2,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "AdaptationStrategy",
          "kind": "class",
          "line": 4,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ConvergenceSignal",
          "kind": "dataclass",
          "line": 8,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "DynamicLearningRateModulator",
          "kind": "class",
          "line": 11,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py",
            "lukhas/core/meta_learning/remediator_agent.py"
          ],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.meta_learning.symbolic_feedback": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 3,
        "unused_symbols": 0,
        "import_count": 1,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "IntentNodeHistory",
          "kind": "dataclass",
          "line": 4,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MemoriaSnapshot",
          "kind": "dataclass",
          "line": 8,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SymbolicFeedbackSystem",
          "kind": "class",
          "line": 11,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py"
          ],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.meta_learning.monitor_dashboard": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 3,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 2,
        "connectivity_score": 0.75,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "LearningMetrics",
          "kind": "dataclass",
          "line": 5,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "EthicalAuditEntry",
          "kind": "dataclass",
          "line": 9,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MetaLearningMonitorDashboard",
          "kind": "class",
          "line": 12,
          "used": true,
          "used_by": [
            "lukhas/core/meta_learning/enhancement_system.py",
            "lukhas/core/meta_learning/remediator_agent.py"
          ],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "_generate_quantum_signature",
          "kind": "function",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.symbolic.collapse.vector_ops": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 1,
        "unused_symbols": 0,
        "import_count": 3,
        "export_count": 1,
        "connectivity_score": 1.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "vector_collapse",
          "kind": "function",
          "line": 12,
          "used": true,
          "used_by": [
            "lukhas/core/colonies/reasoning_colony.py"
          ],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.meta_learning.remediator_agent": {
      "metrics": {
        "total_symbols": 53,
        "used_symbols": 0,
        "unused_symbols": 53,
        "import_count": 20,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0970873786407767
      },
      "symbols": [
        {
          "name": "RemediationLevel",
          "kind": "class",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RemediationType",
          "kind": "class",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RemediationEvent",
          "kind": "dataclass",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "RemediatorAgent",
          "kind": "class",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "create_remediator_agent",
          "kind": "function",
          "line": 589,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 143,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "event_type",
          "kind": "type_alias",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 145,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy_measure",
          "kind": "constant",
          "line": 147,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "affected_components",
          "kind": "constant",
          "line": 148,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "remediation_actions",
          "kind": "constant",
          "line": 149,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_signature",
          "kind": "constant",
          "line": 150,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "resolution_time_seconds",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success_metric",
          "kind": "constant",
          "line": 152,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 153,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 163,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        },
        {
          "name": "_generate_agent_id",
          "kind": "function",
          "line": 197,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "_load_manifest",
          "kind": "function",
          "line": 216,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "_initialize_thresholds",
          "kind": "function",
          "line": 238,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_setup_logging_structlog",
          "kind": "function",
          "line": 245,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_log_agent_startup",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_quantum_signature",
          "kind": "function",
          "line": 260,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "calculate_drift_score",
          "kind": "function",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "calculate_entropy_measure",
          "kind": "function",
          "line": 292,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "assess_system_state",
          "kind": "function",
          "line": 306,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "trigger_dream_replay",
          "kind": "function",
          "line": 345,
          "used": false,
          "used_by": [],
          "complexity": 19,
          "has_docstring": true
        },
        {
          "name": "spawn_sub_agent",
          "kind": "function",
          "line": 368,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "update_dashboard",
          "kind": "function",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "emit_voice_alert",
          "kind": "function",
          "line": 405,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "execute_remediation",
          "kind": "function",
          "line": 419,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": true
        },
        {
          "name": "check_system_health",
          "kind": "function",
          "line": 472,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "run_monitoring_cycle",
          "kind": "function",
          "line": 517,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_agent_status",
          "kind": "function",
          "line": 560,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "shutdown",
          "kind": "function",
          "line": 576,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "QuantumMemoryManager",
          "kind": "class",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "AdvancedMemoryManager",
          "kind": "class",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "replay_dream_by_id",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "replay_recent_dreams",
          "kind": "function",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "LucasReplayer",
          "kind": "class",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "GlyphIDHasher",
          "kind": "class",
          "line": 90,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "generate_collapse_hash",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "MetaLearningMonitorDashboard",
          "kind": "class",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "DynamicLearningRateModulator",
          "kind": "class",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "detected_issues",
          "kind": "constant",
          "line": 311,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "actions_performed",
          "kind": "constant",
          "line": 426,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "consolidate_memories",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "optimize_performance",
          "kind": "function",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "replay_memories",
          "kind": "function",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "generate_hash",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "update_remediation_status",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "adjust_for_drift",
          "kind": "function",
          "line": 112,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.user_interface_manager.text_handler": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "TextHandler",
          "kind": "class",
          "line": 6,
          "used": true,
          "used_by": [
            "lukhas/core/interaction/symptom_reporter.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "send_message",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_message",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.meta_learning.enhancement_system": {
      "metrics": {
        "total_symbols": 16,
        "used_symbols": 0,
        "unused_symbols": 16,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05339805825242718
      },
      "symbols": [
        {
          "name": "EnhancementMode",
          "kind": "class",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "SystemIntegrationStatus",
          "kind": "dataclass",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MetaLearningEnhancementSystem",
          "kind": "class",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "meta_learning_systems_found",
          "kind": "constant",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "systems_enhanced",
          "kind": "constant",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "monitoring_active",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "rate_optimization_active",
          "kind": "constant",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_feedback_active",
          "kind": "constant",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "federation_enabled",
          "kind": "constant",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_health_check",
          "kind": "constant",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "integration_errors",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_simulate_meta_learning_system_discovery",
          "kind": "function",
          "line": 586,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_mock_system",
          "kind": "function",
          "line": 719,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_synchronize_quantum_signatures",
          "kind": "function",
          "line": 979,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_analyze_common_ethical_issues",
          "kind": "function",
          "line": 1213,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.user_interface_manager.voice_handler": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 1,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 1,
        "connectivity_score": 0.25,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "VoiceHandler",
          "kind": "class",
          "line": 6,
          "used": true,
          "used_by": [
            "lukhas/core/interaction/symptom_reporter.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "speak",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "listen",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.monitoring.collapse_tracker": {
      "metrics": {
        "total_symbols": 23,
        "used_symbols": 3,
        "unused_symbols": 20,
        "import_count": 13,
        "export_count": 1,
        "connectivity_score": 0.13043478260869565,
        "cohesion_score": 0.0,
        "coupling_score": 0.06310679611650485
      },
      "symbols": [
        {
          "name": "CollapseAlertLevel",
          "kind": "class",
          "line": 55,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/collapse_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CollapseState",
          "kind": "dataclass",
          "line": 64,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CollapseTracker",
          "kind": "class",
          "line": 83,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/collapse_integration.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "_global_tracker",
          "kind": "constant",
          "line": 452,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_global_tracker",
          "kind": "function",
          "line": 455,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/collapse_integration.py"
          ],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "collapse_trace_id",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy_score",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alert_level",
          "kind": "constant",
          "line": 69,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy_slope",
          "kind": "constant",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "affected_components",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_drift",
          "kind": "constant",
          "line": 72,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "to_dict",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "calculate_shannon_entropy",
          "kind": "function",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "update_entropy_score",
          "kind": "function",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_entropy_slope",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_update_alert_level",
          "kind": "function",
          "line": 233,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "record_collapse_event",
          "kind": "function",
          "line": 310,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_collapse_history",
          "kind": "function",
          "line": 358,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_system_health",
          "kind": "function",
          "line": 382,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_synthetic_test_data",
          "kind": "function",
          "line": 401,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.monitoring.collapse_integration": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "CollapseIntegration",
          "kind": "class",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "integrate_collapse_tracking",
          "kind": "function",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_entropy_from_components",
          "kind": "function",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.monitoring.drift_monitor": {
      "metrics": {
        "total_symbols": 37,
        "used_symbols": 5,
        "unused_symbols": 32,
        "import_count": 15,
        "export_count": 1,
        "connectivity_score": 0.13513513513513514,
        "cohesion_score": 0.0,
        "coupling_score": 0.07281553398058252
      },
      "symbols": [
        {
          "name": "DriftType",
          "kind": "class",
          "line": 75,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "InterventionType",
          "kind": "class",
          "line": 85,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedDriftScore",
          "kind": "dataclass",
          "line": 96,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DriftAlert",
          "kind": "dataclass",
          "line": 113,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "UnifiedDriftMonitor",
          "kind": "class",
          "line": 127,
          "used": true,
          "used_by": [
            "lukhas/core/monitoring/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "overall_score",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbolic_drift",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_drift",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_drift",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "temporal_drift",
          "kind": "constant",
          "line": 102,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "entropy_drift",
          "kind": "constant",
          "line": 103,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "phase",
          "kind": "constant",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "risk_level",
          "kind": "constant",
          "line": 105,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_required",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommended_interventions",
          "kind": "type_alias",
          "line": 107,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "alert_id",
          "kind": "constant",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_type",
          "kind": "type_alias",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "severity",
          "kind": "constant",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 119,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "session_id",
          "kind": "constant",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "symbol_id",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "context",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_triggered",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "intervention_results",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 135,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_emotional_drift",
          "kind": "function",
          "line": 440,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_temporal_drift",
          "kind": "function",
          "line": 452,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_intent_drift",
          "kind": "function",
          "line": 464,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_calculate_theta_delta",
          "kind": "function",
          "line": 578,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_determine_phase",
          "kind": "function",
          "line": 600,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_determine_risk_level",
          "kind": "function",
          "line": 611,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_determine_interventions",
          "kind": "function",
          "line": 622,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "_create_zero_drift_score",
          "kind": "function",
          "line": 650,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_drift_summary",
          "kind": "function",
          "line": 896,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_is_recent",
          "kind": "function",
          "line": 950,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.infrastructure.base_node": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "Node",
          "kind": "class",
          "line": 8,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "add_link",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "evolve",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "trigger_event",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "reflect",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "activate",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_propagate_activation",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.infrastructure.node_collection": {
      "metrics": {
        "total_symbols": 21,
        "used_symbols": 0,
        "unused_symbols": 21,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "IntentNode",
          "kind": "class",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MemoryNode",
          "kind": "class",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "EthicsNode",
          "kind": "class",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GoalManagementNode",
          "kind": "class",
          "line": 191,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "DAOGovernanceNode",
          "kind": "class",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "register_core_nodes",
          "kind": "function",
          "line": 364,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 259,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "process",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "refine_intent",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "store",
          "kind": "function",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "retrieve",
          "kind": "function",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "evaluate_action",
          "kind": "function",
          "line": 144,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_update_principles",
          "kind": "function",
          "line": 184,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_goal",
          "kind": "function",
          "line": 203,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_progress",
          "kind": "function",
          "line": 221,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_active_goals",
          "kind": "function",
          "line": 240,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_goal",
          "kind": "function",
          "line": 244,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_initialize_council",
          "kind": "function",
          "line": 265,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "create_proposal",
          "kind": "function",
          "line": 274,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "vote",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_finalize_proposal",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.performance.orchestrator": {
      "metrics": {
        "total_symbols": 37,
        "used_symbols": 0,
        "unused_symbols": 37,
        "import_count": 13,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.06310679611650485
      },
      "symbols": [
        {
          "name": "IdentityClient",
          "kind": "class",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OptimizationStrategy",
          "kind": "class",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PerformanceStatus",
          "kind": "class",
          "line": 110,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PerformanceMetrics",
          "kind": "dataclass",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "OptimizationResult",
          "kind": "dataclass",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "PerformanceOrchestrator",
          "kind": "class",
          "line": 176,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "verify_user_access",
          "kind": "function",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "check_consent",
          "kind": "function",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "log_activity",
          "kind": "function",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 122,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cpu_usage",
          "kind": "constant",
          "line": 123,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_usage",
          "kind": "constant",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "gpu_usage",
          "kind": "constant",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "response_time_ms",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "throughput_rps",
          "kind": "constant",
          "line": 127,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_rate",
          "kind": "constant",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_score",
          "kind": "constant",
          "line": 129,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "drift_score",
          "kind": "constant",
          "line": 130,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "user_satisfaction",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "security_score",
          "kind": "constant",
          "line": 132,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_overall_score",
          "kind": "function",
          "line": 134,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "optimization_id",
          "kind": "constant",
          "line": 164,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "strategy",
          "kind": "constant",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "before_metrics",
          "kind": "constant",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "after_metrics",
          "kind": "constant",
          "line": 167,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "improvements",
          "kind": "constant",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "compliance_maintained",
          "kind": "constant",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "recommendations",
          "kind": "constant",
          "line": 170,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "execution_time_ms",
          "kind": "constant",
          "line": 171,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "success",
          "kind": "constant",
          "line": 172,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "error_message",
          "kind": "constant",
          "line": 173,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_init_observability_system",
          "kind": "function",
          "line": 225,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_init_compliance_system",
          "kind": "function",
          "line": 242,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_init_ltrace_system",
          "kind": "function",
          "line": 262,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_improvements",
          "kind": "function",
          "line": 683,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_compare_with_baseline",
          "kind": "function",
          "line": 730,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.infrastructure.node_registry": {
      "metrics": {
        "total_symbols": 16,
        "used_symbols": 0,
        "unused_symbols": 16,
        "import_count": 7,
        "export_count": 1,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "NodeRegistry",
          "kind": "class",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "MessageBus",
          "kind": "class",
          "line": 385,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 390,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "discover_nodes",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "register_node_type",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_node",
          "kind": "function",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "get_node",
          "kind": "function",
          "line": 160,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "send_message",
          "kind": "function",
          "line": 395,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "broadcast_message",
          "kind": "function",
          "line": 451,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "establish_relationship",
          "kind": "function",
          "line": 211,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "initialize_standard_nodes",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "get_node_info",
          "kind": "function",
          "line": 287,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "execute_node",
          "kind": "function",
          "line": 326,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_to_node_id",
          "kind": "function",
          "line": 374,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "subscribe",
          "kind": "function",
          "line": 475,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_messages",
          "kind": "function",
          "line": 488,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.infrastructure.node_manager": {
      "metrics": {
        "total_symbols": 12,
        "used_symbols": 0,
        "unused_symbols": 12,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "NodeManager",
          "kind": "class",
          "line": 9,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "register_node",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "discover_nodes",
          "kind": "function",
          "line": 125,
          "used": false,
          "used_by": [],
          "complexity": 9,
          "has_docstring": true
        },
        {
          "name": "_is_node_file",
          "kind": "function",
          "line": 161,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_load_node",
          "kind": "function",
          "line": 185,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "dispatch_message",
          "kind": "function",
          "line": 232,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "broadcast_to_nodes",
          "kind": "function",
          "line": 291,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "process_message",
          "kind": "function",
          "line": 337,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "handle_node_status_change",
          "kind": "function",
          "line": 402,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "_process_queued_messages",
          "kind": "function",
          "line": 422,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.modules.nias.dream_recorder": {
      "metrics": {
        "total_symbols": 13,
        "used_symbols": 0,
        "unused_symbols": 13,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "DreamRecorder",
          "kind": "class",
          "line": 13,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "record_dream_message",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_dream_recorder",
          "kind": "function",
          "line": 322,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "set_dream_recorder",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_setup_logger",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_session_id",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_save_to_file",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_recorded_dreams",
          "kind": "function",
          "line": 120,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "search_dreams",
          "kind": "function",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "get_dream_stats",
          "kind": "function",
          "line": 166,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "clear_dreams",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "export_dreams",
          "kind": "function",
          "line": 241,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.neural_architectures.neural_integrator": {
      "metrics": {
        "total_symbols": 31,
        "used_symbols": 6,
        "unused_symbols": 25,
        "import_count": 19,
        "export_count": 1,
        "connectivity_score": 0.1935483870967742,
        "cohesion_score": 0.0,
        "coupling_score": 0.09223300970873786
      },
      "symbols": [
        {
          "name": "NeuralMode",
          "kind": "class",
          "line": 60,
          "used": true,
          "used_by": [
            "lukhas/core/neural_architectures/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NeuralArchitectureType",
          "kind": "class",
          "line": 69,
          "used": true,
          "used_by": [
            "lukhas/core/neural_architectures/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NeuralPattern",
          "kind": "dataclass",
          "line": 79,
          "used": true,
          "used_by": [
            "lukhas/core/neural_architectures/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NeuralContext",
          "kind": "dataclass",
          "line": 92,
          "used": true,
          "used_by": [
            "lukhas/core/neural_architectures/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "AdaptiveNeuralNetwork",
          "kind": "class",
          "line": 102,
          "used": true,
          "used_by": [
            "lukhas/core/neural_architectures/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "NeuralIntegrator",
          "kind": "class",
          "line": 211,
          "used": true,
          "used_by": [
            "lukhas/core/neural_architectures/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "neural_integrator",
          "kind": "constant",
          "line": 717,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "pattern_type",
          "kind": "constant",
          "line": 82,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "features",
          "kind": "constant",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "confidence",
          "kind": "constant",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "created_at",
          "kind": "constant",
          "line": 85,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "last_accessed",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "access_count",
          "kind": "constant",
          "line": 87,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "associations",
          "kind": "constant",
          "line": 88,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_weight",
          "kind": "constant",
          "line": 89,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mode",
          "kind": "constant",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "architecture_type",
          "kind": "type_alias",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "input_dimensions",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "output_dimensions",
          "kind": "constant",
          "line": 97,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_parameters",
          "kind": "constant",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "memory_context",
          "kind": "constant",
          "line": 99,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "emotional_context",
          "kind": "constant",
          "line": 100,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 220,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "forward",
          "kind": "function",
          "line": 133,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "adapt_architecture",
          "kind": "function",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_expand_architecture",
          "kind": "function",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_optimize_architecture",
          "kind": "function",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_rebuild_network",
          "kind": "function",
          "line": 177,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_load_config",
          "kind": "function",
          "line": 248,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_neural_processing_loop",
          "kind": "function",
          "line": 573,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interaction.symptom_reporter": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "SymptomReporter",
          "kind": "class",
          "line": 11,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "_get_comfort_phrase",
          "kind": "function",
          "line": 196,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.helpers.__init__": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "sanitize_string_for_logging",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "truncate_string",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "safe_json_loads",
          "kind": "function",
          "line": 60,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "to_bool",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "get_utc_timestamp",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_nested_value",
          "kind": "function",
          "line": 118,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.services.location.geofencing_manager": {
      "metrics": {
        "total_symbols": 13,
        "used_symbols": 1,
        "unused_symbols": 12,
        "import_count": 7,
        "export_count": 1,
        "connectivity_score": 0.07692307692307693,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "GeofenceRegion",
          "kind": "dataclass",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "GeofencingManager",
          "kind": "class",
          "line": 36,
          "used": true,
          "used_by": [
            "lukhas/core/services/location/__init__.py"
          ],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "id",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "name",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "latitude",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "longitude",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "radius",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "active",
          "kind": "constant",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "triggers",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "metadata",
          "kind": "constant",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__post_init__",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_calculate_distance",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.neural_architectures.abas.abas_quantum_specialist": {
      "metrics": {
        "total_symbols": 45,
        "used_symbols": 0,
        "unused_symbols": 45,
        "import_count": 12,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05825242718446602
      },
      "symbols": [
        {
          "name": "QuantumBioCapabilityLevel",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumBioResponse",
          "kind": "dataclass",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumTunnelingEthics",
          "kind": "class",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "ProtonMotiveProcessor",
          "kind": "class",
          "line": 182,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "CristaeTopologyManager",
          "kind": "class",
          "line": 318,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "QuantumBiologicalAGI",
          "kind": "class",
          "line": 514,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "content",
          "kind": "constant",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bio_confidence",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "quantum_coherence",
          "kind": "constant",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "atp_efficiency",
          "kind": "constant",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ethical_resonance",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "cristae_topology",
          "kind": "constant",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "identity_signature",
          "kind": "constant",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "processing_pathway",
          "kind": "constant",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 519,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "quantum_ethical_arbitration",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_create_ethical_wavefunction",
          "kind": "function",
          "line": 92,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_collapse_wavefunction",
          "kind": "function",
          "line": 115,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_relevance",
          "kind": "function",
          "line": 138,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_tunneling_probabilities",
          "kind": "function",
          "line": 154,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_ethical_resonance",
          "kind": "function",
          "line": 168,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "create_attention_gradient",
          "kind": "function",
          "line": 193,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "synthesize_symbolic_atp",
          "kind": "function",
          "line": 219,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_proton_concentration",
          "kind": "function",
          "line": 256,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_generate_attention_flow",
          "kind": "function",
          "line": 270,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_atp_potential",
          "kind": "function",
          "line": 290,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_processing_cost",
          "kind": "function",
          "line": 298,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "optimize_cristae_topology",
          "kind": "function",
          "line": 329,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_analyze_topology_efficiency",
          "kind": "function",
          "line": 359,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_design_optimal_cristae",
          "kind": "function",
          "line": 381,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_cristae_transformation",
          "kind": "function",
          "line": 407,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_apply_tubular_folding",
          "kind": "function",
          "line": 433,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_lamellar_folding",
          "kind": "function",
          "line": 456,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_apply_hybrid_folding",
          "kind": "function",
          "line": 476,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_atp_distribution",
          "kind": "function",
          "line": 491,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_calculate_improvement",
          "kind": "function",
          "line": 501,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_passes_ethical_arbitration",
          "kind": "function",
          "line": 667,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_classify_processing_type",
          "kind": "function",
          "line": 681,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_calculate_bio_confidence",
          "kind": "function",
          "line": 735,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_quantum_coherence",
          "kind": "function",
          "line": 746,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_generate_cellular_signature",
          "kind": "function",
          "line": 759,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_update_biological_metrics",
          "kind": "function",
          "line": 771,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_advance_capability_level",
          "kind": "function",
          "line": 797,
          "used": false,
          "used_by": [],
          "complexity": 13,
          "has_docstring": true
        },
        {
          "name": "get_biological_status",
          "kind": "function",
          "line": 827,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.services.location.tracker": {
      "metrics": {
        "total_symbols": 15,
        "used_symbols": 0,
        "unused_symbols": 15,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "LocationUpdate",
          "kind": "dataclass",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "LocationTracker",
          "kind": "class",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "latitude",
          "kind": "constant",
          "line": 19,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "longitude",
          "kind": "constant",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "accuracy",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "timestamp",
          "kind": "constant",
          "line": 22,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "source",
          "kind": "constant",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "altitude",
          "kind": "constant",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "speed",
          "kind": "constant",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "heading",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_should_update_location",
          "kind": "function",
          "line": 98,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": true
        },
        {
          "name": "_calculate_distance",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_update_callback",
          "kind": "function",
          "line": 155,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "remove_update_callback",
          "kind": "function",
          "line": 159,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.services.personality.lukhas_personas": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "load_persona",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.services.personality.lukhas_empathy": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "generate_empathic_response",
          "kind": "function",
          "line": 4,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": false
        },
        {
          "name": "trait_bar",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "display_visual_traits",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.cli": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "display_mood",
          "kind": "function",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "display_flashback_preview",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "display_system_status",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "voice_welcome",
          "kind": "function",
          "line": 40,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "launch",
          "kind": "function",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.custom_llm": {
      "metrics": {
        "total_symbols": 7,
        "used_symbols": 0,
        "unused_symbols": 7,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "CustomLlm",
          "kind": "class",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "url",
          "kind": "constant",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "model_id",
          "kind": "constant",
          "line": 43,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "api_key",
          "kind": "constant",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "log_creation",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "model_config",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.launcher": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "launch_lukhas",
          "kind": "function",
          "line": 16,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.main": {
      "metrics": {
        "total_symbols": 8,
        "used_symbols": 0,
        "unused_symbols": 8,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043689320388349516
      },
      "symbols": [
        {
          "name": "log_event",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "symbolic_intro",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "symbolic_menu",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "launch_gui",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "launch_cli",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "launch_socket",
          "kind": "function",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "launch_narration",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.dashboad": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "generate_symbolic_html_url",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "build_publish_payload",
          "kind": "function",
          "line": 65,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "show_social_post_preview",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.web_formatter": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "load_latest_expression",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "format_html",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "format_markdown",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "format_caption",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "save_formats",
          "kind": "function",
          "line": 55,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.ui.gui_launcher": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "launch_dashboard",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.ui.config.lukhas_dashboard_settings": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "set_user_preference",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_user_preference",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "toggle_widget_visibility",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "list_active_widgets",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "store_paired_app",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "get_paired_apps",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.ui.components.audio_exporter": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 10,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.04854368932038835
      },
      "symbols": [
        {
          "name": "generate_filename",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "export_as_text_narration",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 16,
          "has_docstring": false
        },
        {
          "name": "safe_subprocess_run",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "SecurityError",
          "kind": "class",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "get_env_var",
          "kind": "function",
          "line": 39,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "Args",
          "kind": "class",
          "line": 74,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.ui.adaptive.ui_orchestrator": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "AdaptiveUI",
          "kind": "class",
          "line": 12,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": true
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 15,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.tools.research.research_dashboard": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 11,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.05339805825242718
      },
      "symbols": [
        {
          "name": "log_session_end",
          "kind": "function",
          "line": 250,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.tools.security.session_logger": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "is_access_allowed",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": false
        },
        {
          "name": "log_session_event",
          "kind": "function",
          "line": 75,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.tools.dao.dao_vote": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "cast_vote",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.tools.dao.dao_propose": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "submit_proposal",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.tools.cli.lukhasdream_cli": {
      "metrics": {
        "total_symbols": 5,
        "used_symbols": 0,
        "unused_symbols": 5,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "run_narrator_queue",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_voice_narrator",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "inject_test_dream",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_all",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "main",
          "kind": "function",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.tools.cli.command_registry": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "list_commands",
          "kind": "function",
          "line": 78,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.nias.__init__": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "NIASPlugin",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "NIASConfig",
          "kind": "class",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.nias.generate_nias_docs": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "generate_nias_documentation",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "start_documentation_server",
          "kind": "function",
          "line": 200,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.logic.consent_manager": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "is_action_allowed",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "revoke_access",
          "kind": "function",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "verify_or_revoke",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.logic.delegate_logic": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "can_delegate",
          "kind": "function",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "delegate_action",
          "kind": "function",
          "line": 94,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.logic.agent_logic_architecture": {
      "metrics": {
        "total_symbols": 9,
        "used_symbols": 0,
        "unused_symbols": 9,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "initialize_agent",
          "kind": "function",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "sync_user_mood",
          "kind": "function",
          "line": 62,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "verify_access_level",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_response",
          "kind": "function",
          "line": 84,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "store_memory_echo",
          "kind": "function",
          "line": 95,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "generate_dream_digest",
          "kind": "function",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "activate_delegate_mode",
          "kind": "function",
          "line": 117,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "check_and_quarantine",
          "kind": "function",
          "line": 128,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "ethical_review",
          "kind": "function",
          "line": 139,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.logic.agent_core": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "start_agent",
          "kind": "function",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "run_agent_simulation",
          "kind": "function",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.logic.context.context_builder": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "build_user_context",
          "kind": "function",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.logic.voice.voice_renderer": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "render_voice",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.voice.lukhas_voice_agent": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "speak",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.voice.lukhas_listen": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043689320388349516
      },
      "symbols": [
        {
          "name": "listen_to_human",
          "kind": "function",
          "line": 17,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "gpt_symbolic_response",
          "kind": "function",
          "line": 37,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "loop_symbolic_conversation",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "log_daily_entry",
          "kind": "function",
          "line": 73,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.voice.edge_voice": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "load_config",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.voice.core.sayit": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "classify",
          "kind": "function",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "route",
          "kind": "function",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice": {
      "metrics": {
        "total_symbols": 30,
        "used_symbols": 0,
        "unused_symbols": 30,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "NLPEngine",
          "kind": "class",
          "line": 7,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "LocationAnalyzer",
          "kind": "class",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "TimeAnalyzer",
          "kind": "class",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "DeviceAnalyzer",
          "kind": "class",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ContextAnalyzer",
          "kind": "class",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "VoiceModulator",
          "kind": "class",
          "line": 157,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "MemoryManager",
          "kind": "class",
          "line": 208,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "ComplianceEngine",
          "kind": "class",
          "line": 272,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SafetyGuard",
          "kind": "class",
          "line": 328,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "LucasVoiceSystem",
          "kind": "class",
          "line": 386,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "analyze",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "__init__",
          "kind": "function",
          "line": 387,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "_analyze_memory",
          "kind": "function",
          "line": 80,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_determine_urgency",
          "kind": "function",
          "line": 104,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "_determine_formality",
          "kind": "function",
          "line": 124,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_calculate_confidence",
          "kind": "function",
          "line": 140,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "determine_parameters",
          "kind": "function",
          "line": 169,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "_select_voice",
          "kind": "function",
          "line": 202,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "store_interaction",
          "kind": "function",
          "line": 213,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "get_relevant_memories",
          "kind": "function",
          "line": 239,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "_calculate_importance",
          "kind": "function",
          "line": 253,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "anonymize_metadata",
          "kind": "function",
          "line": 277,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        },
        {
          "name": "should_retain_data",
          "kind": "function",
          "line": 312,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_hash_identifier",
          "kind": "function",
          "line": 323,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "validate_response",
          "kind": "function",
          "line": 332,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        },
        {
          "name": "_check_ethical_issues",
          "kind": "function",
          "line": 349,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_apply_ethical_fixes",
          "kind": "function",
          "line": 361,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_ensure_positive_intent",
          "kind": "function",
          "line": 369,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_log_ethical_concerns",
          "kind": "function",
          "line": 376,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "_load_ethical_guidelines",
          "kind": "function",
          "line": 381,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.core.lukhas_overview_log": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "log_event",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.core.generate_image": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "generate_symbolic_image",
          "kind": "function",
          "line": 50,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "dalle_generate",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.auth.lukhas_registry": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "validate_user_tier",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "get_user_preferences",
          "kind": "function",
          "line": 42,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "share_preferences",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        },
        {
          "name": "can_recover_full_state",
          "kind": "function",
          "line": 79,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "pair_device",
          "kind": "function",
          "line": 93,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "auto_login",
          "kind": "function",
          "line": 108,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.auth.vendor_hospitality_sync": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "pair_with_vendor",
          "kind": "function",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.utils.symbolic_utils": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "tier_label",
          "kind": "function",
          "line": 18,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "summarize_emotion_vector",
          "kind": "function",
          "line": 33,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.utils.constants": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "SYMBOLIC_TIERS",
          "kind": "constant",
          "line": 48,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "DEFAULT_COOLDOWN_SECONDS",
          "kind": "constant",
          "line": 57,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SEED_TAG_VOCAB",
          "kind": "constant",
          "line": 63,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "SYMBOLIC_THRESHOLDS",
          "kind": "constant",
          "line": 68,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.delivery_loop": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "run_delivery_queue",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.dream_narrator_queue": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "extract_narratable_dreams",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 7,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.feedback_log_viewer": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "view_feedback",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 11,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.lukhas_voice_narrator": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "narrate_dreams",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 10,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.validate_payload": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "validate_payload",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.nias_core": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "push_symbolic_message",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.replay_heatmap": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 5,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.024271844660194174
      },
      "symbols": [
        {
          "name": "load_replay_data",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": false
        },
        {
          "name": "plot_heatmap",
          "kind": "function",
          "line": 59,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.generate_payload_cli": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "generate_payload",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.symbolic_reply_generator": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "generate_symbolic_reply",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.05_25_dream_clustering_engine": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "cluster_dreams_by_tag",
          "kind": "function",
          "line": 47,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.symbolic_matcher": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "match_message_to_context",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.consent_filter": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "is_allowed",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.replay_visualizer": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 4,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.019417475728155338
      },
      "symbols": [
        {
          "name": "color_emotion",
          "kind": "function",
          "line": 35,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        },
        {
          "name": "visualize_replays",
          "kind": "function",
          "line": 49,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.dream_recorder": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "record_dream_message",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.feedback_loop": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "record_feedback",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.nias.narration_controller": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "load_user_settings",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "filter_narration_queue",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "fetch_narration_entries",
          "kind": "function",
          "line": 44,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "print_debug_narration_summary",
          "kind": "function",
          "line": 52,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.dast_core": {
      "metrics": {
        "total_symbols": 3,
        "used_symbols": 0,
        "unused_symbols": 3,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "get_current_tags",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "add_tag",
          "kind": "function",
          "line": 34,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "remove_tag",
          "kind": "function",
          "line": 38,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.store": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "save_tags_to_file",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "load_tags_from_file",
          "kind": "function",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.partner_sdk": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "receive_partner_input",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.aggregator": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "aggregate_symbolic_tags",
          "kind": "function",
          "line": 30,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.dast": {
      "metrics": {
        "total_symbols": 6,
        "used_symbols": 0,
        "unused_symbols": 6,
        "import_count": 6,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.02912621359223301
      },
      "symbols": [
        {
          "name": "register_task",
          "kind": "function",
          "line": 28,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "dispatch",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 6,
          "has_docstring": true
        },
        {
          "name": "handle_dream_summary",
          "kind": "function",
          "line": 70,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "handle_delegate_payment",
          "kind": "function",
          "line": 77,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "handle_ethical_signal",
          "kind": "function",
          "line": 83,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "wrapper",
          "kind": "function",
          "line": 32,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.schedule_manager": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "is_time_to_deliver",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.lukhas_launcher": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "startup_sequence",
          "kind": "function",
          "line": 27,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.dast.dast_logger": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "log_tag_event",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.sys.abas.abas": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "is_allowed_now",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.widgets.live_renderer_widget": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 1,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0048543689320388345
      },
      "symbols": [
        {
          "name": "render_widget_preview",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.widgets.terminal_widget": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "render_terminal_widget",
          "kind": "function",
          "line": 24,
          "used": false,
          "used_by": [],
          "complexity": 3,
          "has_docstring": true
        },
        {
          "name": "show_dst_status",
          "kind": "function",
          "line": 45,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.widgets.lukhas_widget_archive": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 0,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.0
      },
      "symbols": [
        {
          "name": "render_widget_preview",
          "kind": "function",
          "line": 23,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.widgets.travel_widget": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "suggest_travel_action",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 5,
          "has_docstring": true
        },
        {
          "name": "suggest_long_distance_travel",
          "kind": "function",
          "line": 54,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.widgets.delivery_tracker_widget": {
      "metrics": {
        "total_symbols": 2,
        "used_symbols": 0,
        "unused_symbols": 2,
        "import_count": 2,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.009708737864077669
      },
      "symbols": [
        {
          "name": "create_delivery_widget",
          "kind": "function",
          "line": 25,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        },
        {
          "name": "update_delivery_status",
          "kind": "function",
          "line": 67,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.widgets.widget_config": {
      "metrics": {
        "total_symbols": 31,
        "used_symbols": 0,
        "unused_symbols": 31,
        "import_count": 8,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.038834951456310676
      },
      "symbols": [
        {
          "name": "WidgetConfig",
          "kind": "class",
          "line": 20,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "variant",
          "kind": "constant",
          "line": 21,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expandable",
          "kind": "constant",
          "line": 26,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "avatar",
          "kind": "constant",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "feedback_mode",
          "kind": "constant",
          "line": 36,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "bg_color",
          "kind": "constant",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "text_color",
          "kind": "constant",
          "line": 46,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "btn_color",
          "kind": "constant",
          "line": 51,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "btn_text_color",
          "kind": "constant",
          "line": 56,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "border_color",
          "kind": "constant",
          "line": 61,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "focus_color",
          "kind": "constant",
          "line": 66,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "border_radius",
          "kind": "constant",
          "line": 71,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "btn_radius",
          "kind": "constant",
          "line": 76,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "action_text",
          "kind": "constant",
          "line": 81,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "start_call_text",
          "kind": "constant",
          "line": 86,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "end_call_text",
          "kind": "constant",
          "line": 91,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "expand_text",
          "kind": "constant",
          "line": 96,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "listening_text",
          "kind": "constant",
          "line": 101,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "speaking_text",
          "kind": "constant",
          "line": 106,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "shareable_page_text",
          "kind": "constant",
          "line": 111,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "shareable_page_show_terms",
          "kind": "constant",
          "line": 116,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "terms_text",
          "kind": "constant",
          "line": 121,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "terms_html",
          "kind": "constant",
          "line": 126,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "terms_key",
          "kind": "constant",
          "line": 131,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "show_avatar_when_collapsed",
          "kind": "constant",
          "line": 136,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "disable_banner",
          "kind": "constant",
          "line": 141,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "mic_muting_enabled",
          "kind": "constant",
          "line": 146,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "language_selector",
          "kind": "constant",
          "line": 151,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "custom_avatar_path",
          "kind": "constant",
          "line": 156,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "model_config",
          "kind": "constant",
          "line": 162,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        },
        {
          "name": "Config",
          "kind": "class",
          "line": 165,
          "used": false,
          "used_by": [],
          "complexity": null,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher": {
      "metrics": {
        "total_symbols": 4,
        "used_symbols": 0,
        "unused_symbols": 4,
        "import_count": 7,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.03398058252427184
      },
      "symbols": [
        {
          "name": "load_pending_posts",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 4,
          "has_docstring": false
        },
        {
          "name": "simulate_publish",
          "kind": "function",
          "line": 41,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        },
        {
          "name": "update_dispatch_log",
          "kind": "function",
          "line": 53,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": false
        },
        {
          "name": "rewrite_queue",
          "kind": "function",
          "line": 58,
          "used": false,
          "used_by": [],
          "complexity": 2,
          "has_docstring": false
        }
      ]
    },
    "lukhas.core.interfaces.as_agent.news_and_social.lukhas_affiliate_log": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 3,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.014563106796116505
      },
      "symbols": [
        {
          "name": "log_referral_click",
          "kind": "function",
          "line": 31,
          "used": false,
          "used_by": [],
          "complexity": 1,
          "has_docstring": true
        }
      ]
    },
    "lukhas.core.router.llm_multiverse_router": {
      "metrics": {
        "total_symbols": 1,
        "used_symbols": 0,
        "unused_symbols": 1,
        "import_count": 9,
        "export_count": 0,
        "connectivity_score": 0.0,
        "cohesion_score": 0.0,
        "coupling_score": 0.043689320388349516
      },
      "symbols": [
        {
          "name": "multiverse_route",
          "kind": "function",
          "line": 29,
          "used": false,
          "used_by": [],
          "complexity": 8,
          "has_docstring": true
        }
      ]
    }
  },
  "missed_opportunities": [
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.api_controllers has 24 unused public symbols",
      "affected_files": [
        "lukhas.core.api_controllers"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: require_auth, handle_api_error, get_request_user_id, ethics_assess_action_endpoint, ethics_check_compliance_endpoint..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.integration_hub has 26 unused public symbols",
      "affected_files": [
        "lukhas.core.integration_hub"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: IntegrationConfig, IntegrationResult, UnifiedIntegration, max_concurrent_operations, timeout_seconds..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.swarm has 13 unused public symbols",
      "affected_files": [
        "lukhas.core.swarm"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SwarmAgent, receive, update_resource_state, add_symbolic_tag, create_agent..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.lukhas_id has 31 unused public symbols",
      "affected_files": [
        "lukhas.core.lukhas_id"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AccessTier, ComplianceRegion, EmotionalMemoryVector, QuantumSignature, AuditLogEntry..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.plugin_registry has 7 unused public symbols",
      "affected_files": [
        "lukhas.core.plugin_registry"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: get_plugin_type, get_plugin_name, get_version, register_plugin, get_plugin..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.symbolic_contract has 14 unused public symbols",
      "affected_files": [
        "lukhas.core.symbolic_contract"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SymbolicContract, SymbolicContractRegistry, tag_name, description, version..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.generate_autotest_docs has 7 unused public symbols",
      "affected_files": [
        "lukhas.core.generate_autotest_docs"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: extract_symbolic_blocks, generate_lambda_doc, export_to_markdown, main, classes..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.config has 19 unused public symbols",
      "affected_files": [
        "lukhas.core.config"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: get_config, database_url, secret_key, api_base_url, orchestration_api_url..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.integrator has 33 unused public symbols",
      "affected_files": [
        "lukhas.core.integrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: lukhas_tier_required, EnhancedCoreConfig, CoreMessageType, EnhancedCoreIntegrator, decorator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.event_replayer has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.event_replayer"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EventReplayer, replay_ethical_events, filter_events_by_tag, replay_events, params..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.resource_optimization_integration has 15 unused public symbols",
      "affected_files": [
        "lukhas.core.resource_optimization_integration"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ResourceState, ResourceMetrics, ResourceError, timestamp, energy_used_joules..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.resource_efficiency_analyzer has 45 unused public symbols",
      "affected_files": [
        "lukhas.core.resource_efficiency_analyzer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ResourceType, ResourceSnapshot, ResourceTrend, EfficiencyReport, ResourceEfficiencyAnalyzer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.symbolic_boot has 7 unused public symbols",
      "affected_files": [
        "lukhas.core.symbolic_boot"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: SymbolicBootstrap, get_bootstrap, symbolic_boot, main, validate_workspace..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.tier_unification_adapter has 16 unused public symbols",
      "affected_files": [
        "lukhas.core.tier_unification_adapter"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: TierSystemAdapter, OneiricTierAdapter, EmotionalTierAdapter, UnifiedTierAdapter, get_unified_adapter..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.api_diff_analyzer has 29 unused public symbols",
      "affected_files": [
        "lukhas.core.api_diff_analyzer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: APICall, MethodSignature, APIMismatch, TestAPIExtractor, ImplementationAnalyzer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.distributed_tracing has 50 unused public symbols",
      "affected_files": [
        "lukhas.core.distributed_tracing"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: TraceSpan, TraceContext, TraceCollector, DistributedTracer, demo_distributed_tracing..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.event_bus has 8 unused public symbols",
      "affected_files": [
        "lukhas.core.event_bus"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: Event, event_id, event_type, payload, source..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.image_processing_pipeline has 28 unused public symbols",
      "affected_files": [
        "lukhas.core.image_processing_pipeline"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EventType, ImageEvent, ProcessingStage, ImageProcessingColony, ColonySupervisor..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.fallback_services has 16 unused public symbols",
      "affected_files": [
        "lukhas.core.fallback_services"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: assess_action, check_compliance, store_memory, retrieve_memory, search_memory..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.event_sourcing has 27 unused public symbols",
      "affected_files": [
        "lukhas.core.event_sourcing"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EventSourcedAggregate, event_id, event_type, aggregate_id, data..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.module_registry has 24 unused public symbols",
      "affected_files": [
        "lukhas.core.module_registry"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ModuleInfo, ModuleRegistry, require_tier, module_id, name..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.symbolic_drift_analyzer has 37 unused public symbols",
      "affected_files": [
        "lukhas.core.symbolic_drift_analyzer"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: DriftAlertLevel, PatternTrend, EntropyMetrics, TagVarianceMetrics, DriftAlert..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.energy_consumption_analysis has 30 unused public symbols",
      "affected_files": [
        "lukhas.core.energy_consumption_analysis"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnergyMetric, EnergyBudget, EnergyModel, timestamp, component..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.lukhas_ai_interface has 15 unused public symbols",
      "affected_files": [
        "lukhas.core.lukhas_ai_interface"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: LukhusAITaskType, LukhusAI, ai_code, ai_audit, ai_docs..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.supervision has 30 unused public symbols",
      "affected_files": [
        "lukhas.core.supervision"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SupervisionDirective, RestartPolicy, FailureInfo, SupervisionDecider, DefaultSupervisionDecider..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.collaboration has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.collaboration"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: ReactiveDataPipeline, DynamicTaskNegotiation, SelfOrganizingSwarm, run_pipeline, run_negotiation..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.efficient_communication has 32 unused public symbols",
      "affected_files": [
        "lukhas.core.efficient_communication"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: Message, MessageRouter, EventBus, P2PChannel, EnergyMonitor..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.validation_script_fixes has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.validation_script_fixes"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: fix_validation_script, fix_efficient_communication, main, replace_send_message, add_message_count..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.observability_steering has 42 unused public symbols",
      "affected_files": [
        "lukhas.core.observability_steering"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ObservabilityLevel, SystemHealth, MessageFlow, EmergentPattern, SteeringController..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.circuit_breaker has 41 unused public symbols",
      "affected_files": [
        "lukhas.core.circuit_breaker"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: CircuitState, FailureType, FailureRecord, HealthCheck, AdvancedCircuitBreaker..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.task_manager has 34 unused public symbols",
      "affected_files": [
        "lukhas.core.task_manager"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: TaskStatus, TaskPriority, Task, TaskQueue, Agent..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.event_replay_snapshot has 23 unused public symbols",
      "affected_files": [
        "lukhas.core.event_replay_snapshot"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EventType, Event, ActorStateSnapshot, EventStore, SnapshotStore..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.practical_optimizations has 53 unused public symbols",
      "affected_files": [
        "lukhas.core.practical_optimizations"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: OptimizationStrategy, CacheEntry, AdaptiveCache, ObjectPool, LazyComputation..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.targeted_api_fixes has 8 unused public symbols",
      "affected_files": [
        "lukhas.core.targeted_api_fixes"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: apply_actor_ref_fixes, fix_communication_fabric, fix_integrated_system, update_validation_script, main..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.mailbox has 14 unused public symbols",
      "affected_files": [
        "lukhas.core.mailbox"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: PrioritizedMessage, DeadLetterQueue, priority, sequence, message..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.tiered_state_management has 26 unused public symbols",
      "affected_files": [
        "lukhas.core.tiered_state_management"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ConsistencyLevel, StateSnapshot, StateAggregator, DefaultStateAggregator, StateCoordinator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.coordination has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.coordination"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: call_for_proposals, receive_proposal, award_contract, handle_call_for_proposals, can_perform_task..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.identity_aware_base has 21 unused public symbols",
      "affected_files": [
        "lukhas.core.identity_aware_base"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: IdentityAwareService, TieredOperationMixin, ResourceLimitedService, tier_required, identity_client..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.monitoring_observability has 39 unused public symbols",
      "affected_files": [
        "lukhas.core.monitoring_observability"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: AlertSeverity, MetricType, DriftType, Alert, MetricThreshold..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.identity_integration has 11 unused public symbols",
      "affected_files": [
        "lukhas.core.identity_integration"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: IdentityContext, validate_and_log, ModuleIntegrationExamples, normalize_tier, get_tier_index..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.agent_coordination has 43 unused public symbols",
      "affected_files": [
        "lukhas.core.agent_coordination"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: actorref_to_dict, actorref_from_dict, TaskStatus, TaskAnnouncement, SkillOffer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.automatic_testing_system has 41 unused public symbols",
      "affected_files": [
        "lukhas.core.automatic_testing_system"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: TestOperation, TestSession, PerformanceMonitor, AITestAnalyzer, AutomaticTestingSystem..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.p2p_communication has 22 unused public symbols",
      "affected_files": [
        "lukhas.core.p2p_communication"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: PeerStatus, PeerInfo, peer_id, address, port..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.actor_system has 20 unused public symbols",
      "affected_files": [
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: SupervisionStrategy, message_id, sender, recipient, message_type..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.decorators has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.decorators"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: glyph_bind, trace, decorator, TierLevel, PermissionScope..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.colonies.tensor_colony_ops has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.colonies.tensor_colony_ops"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: tags_to_tensor, batch_propagate, colony_reasoning_tensor, simulate_throughput, plot_throughput..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.colonies.base_colony has 7 unused public symbols",
      "affected_files": [
        "lukhas.core.colonies.base_colony"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: set_governance_colony, get_status, link_symbolic_contexts, prune_expired_tags, request_permission_escalation..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.identity.manager has 16 unused public symbols",
      "affected_files": [
        "lukhas.core.identity.manager"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EmotionalMemoryVector, SymbolicIdentityHash, TraumaLock, AdvancedIdentityManager, extract_vector..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.spine.integration_orchestrator has 16 unused public symbols",
      "affected_files": [
        "lukhas.core.spine.integration_orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ComponentInfo, IntegrationPlan, LukhasIntegrationOrchestrator, name, source_path..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.personality.lukhas_es_creativo has 25 unused public symbols",
      "affected_files": [
        "lukhas.core.personality.lukhas_es_creativo"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: LucasAGI, MetaLearningSystem, FederatedLearningManager, ReflectiveIntrospectionSystem, NeuroHaikuGenerator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.personality.personality has 22 unused public symbols",
      "affected_files": [
        "lukhas.core.personality.personality"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: InteractionContext, CulturalStyle, InteractionMetrics, ShynessModule, EtiquetteEngine..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.personality.lukhas_es_creativo_clean has 25 unused public symbols",
      "affected_files": [
        "lukhas.core.personality.lukhas_es_creativo_clean"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: LucasAGI, MetaLearningSystem, FederatedLearningManager, ReflectiveIntrospectionSystem, NeuroHaikuGenerator..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.utils.dream_utils has 7 unused public symbols",
      "affected_files": [
        "lukhas.core.utils.dream_utils"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: load_dreams, get_latest_dream_timestamp, filter_dreams_by_tag, filter_dreams, filter_by_rem_phase..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.observability.collector has 10 unused public symbols",
      "affected_files": [
        "lukhas.core.observability.collector"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: ActorMetric, ObservabilityCollector, actor_id, metric_name, value..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.ethics.__init__ has 8 unused public symbols",
      "affected_files": [
        "lukhas.core.ethics.__init__"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: EthicalFramework, ETHICAL_PRINCIPLES, SafetyConstraintLevel, SAFETY_CONSTRAINTS_DEFINITIONS, evaluate_ethics..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.testing.plugin_test_framework has 58 unused public symbols",
      "affected_files": [
        "lukhas.core.testing.plugin_test_framework"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: TestCase, TestResult, TestSuite, TestReport, LucasTestAssertions..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.ai.integration_manager has 23 unused public symbols",
      "affected_files": [
        "lukhas.core.ai.integration_manager"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: lukhas_tier_required, AITask, AIResponse, AIIntegrationManager, TaskTemplates..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.ethics.dream_ethics_injector has 25 unused public symbols",
      "affected_files": [
        "lukhas.core.ethics.dream_ethics_injector"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EthicalAnnotation, DreamEthicalAssessment, DreamEthicsInjector, tag, alignment_score..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.verifold.verifold_unified has 32 unused public symbols",
      "affected_files": [
        "lukhas.core.verifold.verifold_unified"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: require_identity, VeriFoldCollapseType, VeriFoldPhase, VeriFoldSnapshot, VeriFoldRecord..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.orchestration.energy_aware_execution_planner has 42 unused public symbols",
      "affected_files": [
        "lukhas.core.orchestration.energy_aware_execution_planner"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnergyProfile, Priority, EnergyTask, EnergyBudget, EnergyMetrics..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.meta_learning.remediator_agent has 45 unused public symbols",
      "affected_files": [
        "lukhas.core.meta_learning.remediator_agent"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: RemediationLevel, RemediationType, RemediationEvent, RemediatorAgent, create_remediator_agent..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.meta_learning.enhancement_system has 11 unused public symbols",
      "affected_files": [
        "lukhas.core.meta_learning.enhancement_system"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: EnhancementMode, SystemIntegrationStatus, MetaLearningEnhancementSystem, meta_learning_systems_found, systems_enhanced..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.monitoring.collapse_tracker has 16 unused public symbols",
      "affected_files": [
        "lukhas.core.monitoring.collapse_tracker"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: CollapseState, collapse_trace_id, timestamp, entropy_score, alert_level..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.monitoring.drift_monitor has 22 unused public symbols",
      "affected_files": [
        "lukhas.core.monitoring.drift_monitor"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: overall_score, symbolic_drift, emotional_drift, ethical_drift, temporal_drift..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.infrastructure.base_node has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.infrastructure.base_node"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: Node, add_link, evolve, trigger_event, reflect..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.infrastructure.node_collection has 17 unused public symbols",
      "affected_files": [
        "lukhas.core.infrastructure.node_collection"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: IntentNode, MemoryNode, EthicsNode, GoalManagementNode, DAOGovernanceNode..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.performance.orchestrator has 31 unused public symbols",
      "affected_files": [
        "lukhas.core.performance.orchestrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: IdentityClient, OptimizationStrategy, PerformanceStatus, PerformanceMetrics, OptimizationResult..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.infrastructure.node_registry has 14 unused public symbols",
      "affected_files": [
        "lukhas.core.infrastructure.node_registry"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: NodeRegistry, MessageBus, discover_nodes, register_node_type, create_node..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.infrastructure.node_manager has 7 unused public symbols",
      "affected_files": [
        "lukhas.core.infrastructure.node_manager"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: NodeManager, register_node, discover_nodes, dispatch_message, broadcast_to_nodes..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.modules.nias.dream_recorder has 9 unused public symbols",
      "affected_files": [
        "lukhas.core.modules.nias.dream_recorder"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: DreamRecorder, record_dream_message, get_dream_recorder, set_dream_recorder, get_recorded_dreams..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.neural_architectures.neural_integrator has 19 unused public symbols",
      "affected_files": [
        "lukhas.core.neural_architectures.neural_integrator"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: neural_integrator, id, pattern_type, features, confidence..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.helpers.__init__ has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.helpers.__init__"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: sanitize_string_for_logging, truncate_string, safe_json_loads, to_bool, get_utc_timestamp..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.services.location.geofencing_manager has 9 unused public symbols",
      "affected_files": [
        "lukhas.core.services.location.geofencing_manager"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: GeofenceRegion, id, name, latitude, longitude..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.neural_architectures.abas.abas_quantum_specialist has 20 unused public symbols",
      "affected_files": [
        "lukhas.core.neural_architectures.abas.abas_quantum_specialist"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: QuantumBioCapabilityLevel, QuantumBioResponse, QuantumTunnelingEthics, ProtonMotiveProcessor, CristaeTopologyManager..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.services.location.tracker has 12 unused public symbols",
      "affected_files": [
        "lukhas.core.services.location.tracker"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: LocationUpdate, LocationTracker, latitude, longitude, accuracy..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.custom_llm has 7 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.custom_llm"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: CustomLlm, url, model_id, api_key, log_creation..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.main has 8 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.main"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: log_event, symbolic_intro, symbolic_menu, launch_gui, launch_cli..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.ui.config.lukhas_dashboard_settings has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.ui.config.lukhas_dashboard_settings"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: set_user_preference, get_user_preference, toggle_widget_visibility, list_active_widgets, store_paired_app..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.ui.components.audio_exporter has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.ui.components.audio_exporter"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: generate_filename, export_as_text_narration, safe_subprocess_run, SecurityError, get_env_var..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.logic.agent_logic_architecture has 9 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.logic.agent_logic_architecture"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: initialize_agent, sync_user_mood, verify_access_level, generate_response, store_memory_echo..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice has 17 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: NLPEngine, LocationAnalyzer, TimeAnalyzer, DeviceAnalyzer, ContextAnalyzer..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.as_agent.auth.lukhas_registry has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.auth.lukhas_registry"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: validate_user_tier, get_user_preferences, share_preferences, can_recover_full_state, pair_device..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.as_agent.sys.dast.dast has 6 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.sys.dast.dast"
      ],
      "severity": "medium",
      "suggestion": "Consider making these symbols private or removing them: register_task, dispatch, handle_dream_summary, handle_delegate_payment, handle_ethical_signal..."
    },
    {
      "type": "unused_exports",
      "description": "Module lukhas.core.interfaces.as_agent.widgets.widget_config has 31 unused public symbols",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.widgets.widget_config"
      ],
      "severity": "high",
      "suggestion": "Consider making these symbols private or removing them: WidgetConfig, variant, expandable, avatar, feedback_mode..."
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.resource_optimization_integration -> lukhas.core.efficient_communication -> lukhas.core.resource_optimization_integration",
      "affected_files": [
        "lukhas.core.resource_optimization_integration",
        "lukhas.core.efficient_communication",
        "lukhas.core.resource_optimization_integration"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.efficient_communication -> lukhas.core.resource_optimization_integration -> lukhas.core.efficient_communication",
      "affected_files": [
        "lukhas.core.efficient_communication",
        "lukhas.core.resource_optimization_integration",
        "lukhas.core.efficient_communication"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.mailbox -> lukhas.core.actor_system -> lukhas.core.mailbox",
      "affected_files": [
        "lukhas.core.mailbox",
        "lukhas.core.actor_system",
        "lukhas.core.mailbox"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "circular_dependency",
      "description": "Circular dependency detected: lukhas.core.actor_system -> lukhas.core.mailbox -> lukhas.core.actor_system",
      "affected_files": [
        "lukhas.core.actor_system",
        "lukhas.core.mailbox",
        "lukhas.core.actor_system"
      ],
      "severity": "high",
      "suggestion": "Refactor to break the circular dependency, possibly by introducing an abstraction"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.core.symbolic_drift_analyzer has too many dependencies (25)",
      "affected_files": [
        "lukhas.core.symbolic_drift_analyzer"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "god_module",
      "description": "Module lukhas.core.monitoring_observability has too many dependencies (37)",
      "affected_files": [
        "lukhas.core.monitoring_observability"
      ],
      "severity": "high",
      "suggestion": "Consider breaking this module into smaller, more focused modules"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.governance is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.governance"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.identity.lukhas_id_manager is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.identity.lukhas_id_manager"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.utils.symbolic_utils is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.utils.symbolic_utils"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.symbolic_reasoning.symbolic_trace is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.symbolic_reasoning.symbolic_trace"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.infrastructure.base_node is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.infrastructure.base_node"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.services.personality.lukhas_personas is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.services.personality.lukhas_personas"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.launcher is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.launcher"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.dashboad is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.dashboad"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.ui.config.lukhas_dashboard_settings is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.ui.config.lukhas_dashboard_settings"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.logic.voice.voice_renderer is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.logic.voice.voice_renderer"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.auth.lukhas_registry is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.auth.lukhas_registry"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.auth.vendor_hospitality_sync is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.auth.vendor_hospitality_sync"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.utils.symbolic_utils is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.utils.symbolic_utils"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.sys.nias.symbolic_matcher is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.sys.nias.symbolic_matcher"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.sys.dast.schedule_manager is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.sys.dast.schedule_manager"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.sys.dast.dast_logger is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.sys.dast.dast_logger"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.sys.abas.abas is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.sys.abas.abas"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.widgets.terminal_widget is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.widgets.terminal_widget"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    },
    {
      "type": "isolated_module",
      "description": "Module lukhas.core.interfaces.as_agent.widgets.lukhas_widget_archive is isolated (no imports or exports)",
      "affected_files": [
        "lukhas.core.interfaces.as_agent.widgets.lukhas_widget_archive"
      ],
      "severity": "low",
      "suggestion": "Consider if this module should be integrated with others or removed"
    }
  ],
  "dependency_graph": {
    "nodes": [
      "lukhas.core.minimal_actor",
      "lukhas.core.fault_tolerance",
      "lukhas.core.integrated_system",
      "lukhas.core.api_controllers",
      "lukhas.core.integration_hub",
      "lukhas.core.swarm",
      "lukhas.core.quorum_override",
      "lukhas.core.lukhas_id",
      "lukhas.core.resource_scheduler",
      "lukhas.core.plugin_registry",
      "lukhas.core.symbolic_contract",
      "lukhas.core.actor_supervision_integration",
      "lukhas.core.lukhas_core",
      "lukhas.core.config_manager",
      "lukhas.core.generate_autotest_docs",
      "lukhas.core.config",
      "lukhas.core.integrator",
      "lukhas.core.p2p_fabric",
      "lukhas.core.benchmark_swarm",
      "lukhas.core.autotest_validation",
      "lukhas.core.event_replayer",
      "lukhas.core.resource_optimization_integration",
      "lukhas.core.cluster_sharding",
      "lukhas.core.resource_efficiency_analyzer",
      "lukhas.core.symbolic_boot",
      "lukhas.core.tier_unification_adapter",
      "lukhas.core.api_diff_analyzer",
      "lukhas.core.specialized_colonies",
      "lukhas.core.test_mailbox_simple",
      "lukhas.core.distributed_tracing",
      "lukhas.core.symbolic_arbitration",
      "lukhas.core.consistency_manager",
      "lukhas.core.event_bus",
      "lukhas.core.image_processing_pipeline",
      "lukhas.core.fallback_services",
      "lukhas.core.event_sourcing",
      "lukhas.core.demo_coordination",
      "lukhas.core.module_registry",
      "lukhas.core.symbolic_drift_analyzer",
      "lukhas.core.energy_consumption_analysis",
      "lukhas.core.lukhas_ai_interface",
      "lukhas.core.supervision",
      "lukhas.core.integrity_probe",
      "lukhas.core.collaboration",
      "lukhas.core.efficient_communication",
      "lukhas.core.validation_script_fixes",
      "lukhas.core.test_tiered_state_management",
      "lukhas.core.observability_steering",
      "lukhas.core.quantized_cycle_manager",
      "lukhas.core.circuit_breaker",
      "lukhas.core.direct_ai_router",
      "lukhas.core.task_manager",
      "lukhas.core.event_replay_snapshot",
      "lukhas.core.practical_optimizations",
      "lukhas.core.targeted_api_fixes",
      "lukhas.core.mailbox",
      "lukhas.core.tiered_state_management",
      "lukhas.core.actor_model",
      "lukhas.core.coordination",
      "lukhas.core.identity_aware_base",
      "lukhas.core.monitoring_observability",
      "lukhas.core.resource_efficiency",
      "lukhas.core.identity_integration",
      "lukhas.core.agent_coordination",
      "lukhas.core.test_image_processing_pipeline",
      "lukhas.core.governance",
      "lukhas.core.state_management",
      "lukhas.core.automatic_testing_system",
      "lukhas.core.observatory",
      "lukhas.core.p2p_communication",
      "lukhas.core.validation",
      "lukhas.core.actor_system",
      "lukhas.core.decorators",
      "lukhas.core.colonies.temporal_colony",
      "lukhas.core.colonies.creativity_colony",
      "lukhas.core.colonies.tensor_colony_ops",
      "lukhas.core.colonies.memory_colony",
      "lukhas.core.colonies.supervisor_agent",
      "lukhas.core.colonies.base_colony",
      "lukhas.core.colonies.governance_colony",
      "lukhas.core.symbolic_bridge.token_map",
      "lukhas.core.colonies.reasoning_colony",
      "lukhas.core.symbolic_bridge.integrator",
      "lukhas.core.identity.mapper",
      "lukhas.core.identity.processor",
      "lukhas.core.identity.engine",
      "lukhas.core.identity.persona_engine",
      "lukhas.core.identity.lukhas_id_manager",
      "lukhas.core.identity.manager",
      "lukhas.core.spine.integration_orchestrator",
      "lukhas.core.personality.lukhas_es_creativo",
      "lukhas.core.personality.personality",
      "lukhas.core.personality.creative_expressions",
      "lukhas.core.personality.neuro_haiku_generator",
      "lukhas.core.symbolic_diagnostics.trace_repair_engine",
      "lukhas.core.personality.lukhas_es_creativo_clean",
      "lukhas.core.utils.symbolic_utils",
      "lukhas.core.utils.__init__",
      "lukhas.core.utils.dream_utils",
      "lukhas.core.observability.collector",
      "lukhas.core.introspection.introspector",
      "lukhas.core.symbolic_reasoning.symbolic_trace",
      "lukhas.core.ethics.__init__",
      "lukhas.core.testing.plugin_test_framework",
      "lukhas.core.symbolism.methylation_model",
      "lukhas.core.ai.integration_manager",
      "lukhas.core.ethics.dream_ethics_injector",
      "lukhas.core.examples.mailbox_demo",
      "lukhas.core.symbolism.tags",
      "lukhas.core.symbolism.archiver",
      "lukhas.core.governance.governance_colony",
      "lukhas.core.verifold.verifold_unified",
      "lukhas.core.orchestration.energy_aware_execution_planner",
      "lukhas.core.meta_learning.rate_modulator",
      "lukhas.core.meta_learning.symbolic_feedback",
      "lukhas.core.meta_learning.monitor_dashboard",
      "lukhas.core.symbolic.collapse.vector_ops",
      "lukhas.core.meta_learning.remediator_agent",
      "lukhas.core.user_interface_manager.text_handler",
      "lukhas.core.meta_learning.enhancement_system",
      "lukhas.core.user_interface_manager.voice_handler",
      "lukhas.core.monitoring.collapse_tracker",
      "lukhas.core.monitoring.collapse_integration",
      "lukhas.core.monitoring.drift_monitor",
      "lukhas.core.infrastructure.base_node",
      "lukhas.core.infrastructure.node_collection",
      "lukhas.core.performance.orchestrator",
      "lukhas.core.infrastructure.node_registry",
      "lukhas.core.infrastructure.node_manager",
      "lukhas.core.modules.nias.dream_recorder",
      "lukhas.core.neural_architectures.neural_integrator",
      "lukhas.core.interaction.symptom_reporter",
      "lukhas.core.helpers.__init__",
      "lukhas.core.services.location.geofencing_manager",
      "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
      "lukhas.core.services.location.tracker",
      "lukhas.core.services.personality.lukhas_personas",
      "lukhas.core.services.personality.lukhas_empathy",
      "lukhas.core.interfaces.cli",
      "lukhas.core.interfaces.custom_llm",
      "lukhas.core.interfaces.launcher",
      "lukhas.core.interfaces.main",
      "lukhas.core.interfaces.dashboad",
      "lukhas.core.interfaces.web_formatter",
      "lukhas.core.interfaces.ui.gui_launcher",
      "lukhas.core.interfaces.ui.config.lukhas_dashboard_settings",
      "lukhas.core.interfaces.ui.components.audio_exporter",
      "lukhas.core.interfaces.ui.adaptive.ui_orchestrator",
      "lukhas.core.interfaces.tools.research.research_dashboard",
      "lukhas.core.interfaces.tools.security.session_logger",
      "lukhas.core.interfaces.tools.dao.dao_vote",
      "lukhas.core.interfaces.tools.dao.dao_propose",
      "lukhas.core.interfaces.tools.cli.lukhasdream_cli",
      "lukhas.core.interfaces.tools.cli.command_registry",
      "lukhas.core.interfaces.nias.__init__",
      "lukhas.core.interfaces.nias.generate_nias_docs",
      "lukhas.core.interfaces.logic.consent_manager",
      "lukhas.core.interfaces.logic.delegate_logic",
      "lukhas.core.interfaces.logic.agent_logic_architecture",
      "lukhas.core.interfaces.logic.agent_core",
      "lukhas.core.interfaces.logic.context.context_builder",
      "lukhas.core.interfaces.logic.voice.voice_renderer",
      "lukhas.core.interfaces.voice.lukhas_voice_agent",
      "lukhas.core.interfaces.voice.lukhas_listen",
      "lukhas.core.interfaces.voice.edge_voice",
      "lukhas.core.interfaces.voice.core.sayit",
      "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice",
      "lukhas.core.interfaces.as_agent.core.lukhas_overview_log",
      "lukhas.core.interfaces.as_agent.core.generate_image",
      "lukhas.core.interfaces.as_agent.auth.lukhas_registry",
      "lukhas.core.interfaces.as_agent.auth.vendor_hospitality_sync",
      "lukhas.core.interfaces.as_agent.utils.symbolic_utils",
      "lukhas.core.interfaces.as_agent.utils.constants",
      "lukhas.core.interfaces.as_agent.sys.nias.delivery_loop",
      "lukhas.core.interfaces.as_agent.sys.nias.dream_narrator_queue",
      "lukhas.core.interfaces.as_agent.sys.nias.feedback_log_viewer",
      "lukhas.core.interfaces.as_agent.sys.nias.lukhas_voice_narrator",
      "lukhas.core.interfaces.as_agent.sys.nias.validate_payload",
      "lukhas.core.interfaces.as_agent.sys.nias.nias_core",
      "lukhas.core.interfaces.as_agent.sys.nias.replay_heatmap",
      "lukhas.core.interfaces.as_agent.sys.nias.generate_payload_cli",
      "lukhas.core.interfaces.as_agent.sys.nias.symbolic_reply_generator",
      "lukhas.core.interfaces.as_agent.sys.nias.05_25_dream_clustering_engine",
      "lukhas.core.interfaces.as_agent.sys.nias.symbolic_matcher",
      "lukhas.core.interfaces.as_agent.sys.nias.consent_filter",
      "lukhas.core.interfaces.as_agent.sys.nias.replay_visualizer",
      "lukhas.core.interfaces.as_agent.sys.nias.dream_recorder",
      "lukhas.core.interfaces.as_agent.sys.nias.feedback_loop",
      "lukhas.core.interfaces.as_agent.sys.nias.narration_controller",
      "lukhas.core.interfaces.as_agent.sys.dast.dast_core",
      "lukhas.core.interfaces.as_agent.sys.dast.store",
      "lukhas.core.interfaces.as_agent.sys.dast.partner_sdk",
      "lukhas.core.interfaces.as_agent.sys.dast.aggregator",
      "lukhas.core.interfaces.as_agent.sys.dast.dast",
      "lukhas.core.interfaces.as_agent.sys.dast.schedule_manager",
      "lukhas.core.interfaces.as_agent.sys.dast.lukhas_launcher",
      "lukhas.core.interfaces.as_agent.sys.dast.dast_logger",
      "lukhas.core.interfaces.as_agent.sys.abas.abas",
      "lukhas.core.interfaces.as_agent.widgets.live_renderer_widget",
      "lukhas.core.interfaces.as_agent.widgets.terminal_widget",
      "lukhas.core.interfaces.as_agent.widgets.lukhas_widget_archive",
      "lukhas.core.interfaces.as_agent.widgets.travel_widget",
      "lukhas.core.interfaces.as_agent.widgets.delivery_tracker_widget",
      "lukhas.core.interfaces.as_agent.widgets.widget_config",
      "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
      "lukhas.core.interfaces.as_agent.news_and_social.lukhas_affiliate_log",
      "lukhas.core.router.llm_multiverse_router"
    ],
    "edges": [
      {
        "from": "lukhas.core.minimal_actor",
        "to": "threading"
      },
      {
        "from": "lukhas.core.minimal_actor",
        "to": "queue"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "typing"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.memory.memory_service"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.learning.learning_service"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.quantum.quantum_service"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "sys"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "flask"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.ethics.ethics_service"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.consciousness.consciousness_service"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.core.fallback_services"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "functools"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "lukhas.creativity.creativity_service"
      },
      {
        "from": "lukhas.core.api_controllers",
        "to": "os"
      },
      {
        "from": "lukhas.core.fault_tolerance",
        "to": "enum"
      },
      {
        "from": "lukhas.core.fault_tolerance",
        "to": "time"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "typing"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "time"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "logging"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.colonies.memory_colony"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.efficient_communication"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.colonies.creativity_colony"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.event_sourcing"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.bio"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.colonies.reasoning_colony"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "lukhas.core.distributed_tracing"
      },
      {
        "from": "lukhas.core.integrated_system",
        "to": "json"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "typing"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "cryptography.hazmat.primitives.asymmetric"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "logging"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "cryptography.hazmat.primitives"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "cryptography.hazmat.primitives.ciphers"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "base64"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "enum"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "secrets"
      },
      {
        "from": "lukhas.core.lukhas_id",
        "to": "json"
      },
      {
        "from": "lukhas.core.integration_hub",
        "to": "typing"
      },
      {
        "from": "lukhas.core.integration_hub",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.integration_hub",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.integration_hub",
        "to": "logging"
      },
      {
        "from": "lukhas.core.integration_hub",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.integration_hub",
        "to": "threading"
      },
      {
        "from": "lukhas.core.integration_hub",
        "to": "json"
      },
      {
        "from": "lukhas.core.swarm",
        "to": "lukhas.core.coordination"
      },
      {
        "from": "lukhas.core.swarm",
        "to": "lukhas.core.fault_tolerance"
      },
      {
        "from": "lukhas.core.swarm",
        "to": "time"
      },
      {
        "from": "lukhas.core.swarm",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.swarm",
        "to": "enum"
      },
      {
        "from": "lukhas.core.swarm",
        "to": "lukhas.core.distributed_tracing"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "typing"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "platform"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "logging"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "time"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "resource"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "threading"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "sys"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "gc"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "tracemalloc"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "random"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "collections"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "psutil"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "enum"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "json"
      },
      {
        "from": "lukhas.core.resource_efficiency_analyzer",
        "to": "os"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "typing"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "logging"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "sys"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "re"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "json"
      },
      {
        "from": "lukhas.core.generate_autotest_docs",
        "to": "os"
      },
      {
        "from": "lukhas.core.quorum_override",
        "to": "typing"
      },
      {
        "from": "lukhas.core.quorum_override",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.resource_scheduler",
        "to": "lukhas.core.specialized_colonies"
      },
      {
        "from": "lukhas.core.resource_scheduler",
        "to": "lukhas.core.swarm"
      },
      {
        "from": "lukhas.core.plugin_registry",
        "to": "typing"
      },
      {
        "from": "lukhas.core.plugin_registry",
        "to": "logging"
      },
      {
        "from": "lukhas.core.plugin_registry",
        "to": "importlib.metadata"
      },
      {
        "from": "lukhas.core.plugin_registry",
        "to": "abc"
      },
      {
        "from": "lukhas.core.plugin_registry",
        "to": "enum"
      },
      {
        "from": "lukhas.core.plugin_registry",
        "to": "__future__"
      },
      {
        "from": "lukhas.core.symbolic_contract",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.symbolic_contract",
        "to": "typing"
      },
      {
        "from": "lukhas.core.symbolic_contract",
        "to": "json"
      },
      {
        "from": "lukhas.core.actor_supervision_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.core.actor_supervision_integration",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.actor_supervision_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.core.actor_supervision_integration",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.actor_supervision_integration",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.actor_supervision_integration",
        "to": "lukhas.core.supervision"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "typing"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "time"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "lukhas.core.bio_systems.quantum_inspired_layer"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "sys"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "lukhas.core.security.quantum_auth"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "collections"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "lukhas.core.security.compliance"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "lukhas.core.unified_integration"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "enum"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "lukhas.bio.systems.orchestration"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "json"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "lukhas.core.security.access_control"
      },
      {
        "from": "lukhas.core.integrator",
        "to": "os"
      },
      {
        "from": "lukhas.core.config",
        "to": "typing"
      },
      {
        "from": "lukhas.core.config",
        "to": "pydantic"
      },
      {
        "from": "lukhas.core.config",
        "to": "secrets"
      },
      {
        "from": "lukhas.core.config",
        "to": "os"
      },
      {
        "from": "lukhas.core.lukhas_core",
        "to": "typing"
      },
      {
        "from": "lukhas.core.lukhas_core",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.lukhas_core",
        "to": "lukhas.core.plugin_registry"
      },
      {
        "from": "lukhas.core.lukhas_core",
        "to": "logging"
      },
      {
        "from": "lukhas.core.config_manager",
        "to": "lukhas.core.config"
      },
      {
        "from": "lukhas.core.config_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "time"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "lukhas.core.efficient_communication"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "gc"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "lukhas.memory.memory_optimization"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "collections"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "lukhas.core.energy_consumption_analysis"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "enum"
      },
      {
        "from": "lukhas.core.resource_optimization_integration",
        "to": "json"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "typing"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "time"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "logging"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "threading"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "collections"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "json"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "contextlib"
      },
      {
        "from": "lukhas.core.distributed_tracing",
        "to": "os"
      },
      {
        "from": "lukhas.core.autotest_validation",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.autotest_validation",
        "to": "sys"
      },
      {
        "from": "lukhas.core.autotest_validation",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.autotest_validation",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.autotest_validation",
        "to": "core.automatic_testing_system"
      },
      {
        "from": "lukhas.core.autotest_validation",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.autotest_validation",
        "to": "os"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "typing"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "re"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "difflib"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "sys"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "collections"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "ast"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "json"
      },
      {
        "from": "lukhas.core.api_diff_analyzer",
        "to": "os"
      },
      {
        "from": "lukhas.core.p2p_fabric",
        "to": "socket"
      },
      {
        "from": "lukhas.core.p2p_fabric",
        "to": "threading"
      },
      {
        "from": "lukhas.core.p2p_fabric",
        "to": "time"
      },
      {
        "from": "lukhas.core.benchmark_swarm",
        "to": "minimal_actor"
      },
      {
        "from": "lukhas.core.benchmark_swarm",
        "to": "threading"
      },
      {
        "from": "lukhas.core.benchmark_swarm",
        "to": "time"
      },
      {
        "from": "lukhas.core.benchmark_swarm",
        "to": "event_bus"
      },
      {
        "from": "lukhas.core.event_replayer",
        "to": "typing"
      },
      {
        "from": "lukhas.core.event_replayer",
        "to": "logging"
      },
      {
        "from": "lukhas.core.event_replayer",
        "to": "lukhas.core.event_sourcing"
      },
      {
        "from": "lukhas.core.event_replayer",
        "to": "__future__"
      },
      {
        "from": "lukhas.core.event_replayer",
        "to": "json"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "typing"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "mimetypes"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "logging"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "time"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "lukhas.core.lightweight_concurrency"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "lukhas.core.minimal_actor"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "PIL"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "collections"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "enum"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "json"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "lukhas.core.event_bus"
      },
      {
        "from": "lukhas.core.image_processing_pipeline",
        "to": "os"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "typing"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "rich.table"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "time"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "lukhas.core.symbolic.glyphs"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "enum"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "math"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "rich.panel"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "collections"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "json"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "lukhas.memory.dream_memory_manager"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "lukhas.ethics.ethical_drift_detector"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "rich.progress"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "rich.layout"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "random"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "lukhas.symbolic.drift.symbolic_drift_tracker"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "rich.live"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "logging"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "statistics"
      },
      {
        "from": "lukhas.core.symbolic_drift_analyzer",
        "to": "rich.console"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "typing"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "lukhas.identity.core.user_tier_mapping"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "lukhas.core.identity_integration"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "fastapi"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "abc"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "lukhas.emotion.dreamseed_upgrade"
      },
      {
        "from": "lukhas.core.tier_unification_adapter",
        "to": "functools"
      },
      {
        "from": "lukhas.core.symbolic_boot",
        "to": "typing"
      },
      {
        "from": "lukhas.core.symbolic_boot",
        "to": "logging"
      },
      {
        "from": "lukhas.core.symbolic_boot",
        "to": "sys"
      },
      {
        "from": "lukhas.core.symbolic_boot",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.symbolic_boot",
        "to": "os"
      },
      {
        "from": "lukhas.core.cluster_sharding",
        "to": "typing"
      },
      {
        "from": "lukhas.core.cluster_sharding",
        "to": "logging"
      },
      {
        "from": "lukhas.core.test_coordination_simple",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.test_coordination_simple",
        "to": "logging"
      },
      {
        "from": "lukhas.core.test_coordination_simple",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.test_coordination_simple",
        "to": "sys"
      },
      {
        "from": "lukhas.core.test_coordination_simple",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.test_coordination_simple",
        "to": "lukhas.core.agent_coordination"
      },
      {
        "from": "lukhas.core.test_coordination_simple",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.core.__init__",
        "to": "lukhas.core.plugin_registry"
      },
      {
        "from": "lukhas.core.__init__",
        "to": "lukhas.core.lukhas_core"
      },
      {
        "from": "lukhas.core.__init__",
        "to": "logging"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "typing"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "time"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "logging"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "abc"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "threading"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "sqlite3"
      },
      {
        "from": "lukhas.core.event_sourcing",
        "to": "json"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "sys"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "lukhas.core.mailbox"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "tempfile"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.test_mailbox_simple",
        "to": "os"
      },
      {
        "from": "lukhas.core.specialized_colonies",
        "to": "lukhas.core.swarm"
      },
      {
        "from": "lukhas.core.symbolic_arbitration",
        "to": "collections"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "typing"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "time"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "logging"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "threading"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "collections"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "psutil"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "enum"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "json"
      },
      {
        "from": "lukhas.core.energy_consumption_analysis",
        "to": "math"
      },
      {
        "from": "lukhas.core.test_p2p_communication",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.test_p2p_communication",
        "to": "time"
      },
      {
        "from": "lukhas.core.test_p2p_communication",
        "to": "pytest"
      },
      {
        "from": "lukhas.core.test_p2p_communication",
        "to": "p2p_communication"
      },
      {
        "from": "lukhas.core.test_p2p_communication",
        "to": "collections"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "typing"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "time"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "functools"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "abc"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "gc"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "collections"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "json"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "weakref"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "os"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "pickle"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "psutil"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "zlib"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "contextlib"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "logging"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "threading"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.practical_optimizations",
        "to": "msgpack"
      },
      {
        "from": "lukhas.core.fallback_services",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.fallback_services",
        "to": "typing"
      },
      {
        "from": "lukhas.core.consistency_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.core.consistency_manager",
        "to": "lukhas.core.tiered_state_management"
      },
      {
        "from": "lukhas.core.consistency_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.consistency_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.core.consistency_manager",
        "to": "enum"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "typing"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "logging"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "lukhas.memory.core.tier_system"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "lukhas.identity.core.lambd_id_service"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.module_registry",
        "to": "functools"
      },
      {
        "from": "lukhas.core.event_bus",
        "to": "typing"
      },
      {
        "from": "lukhas.core.event_bus",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.event_bus",
        "to": "logging"
      },
      {
        "from": "lukhas.core.event_bus",
        "to": "time"
      },
      {
        "from": "lukhas.core.event_bus",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.event_bus",
        "to": "collections"
      },
      {
        "from": "lukhas.core.event_bus",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.demo_coordination",
        "to": "typing"
      },
      {
        "from": "lukhas.core.demo_coordination",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.demo_coordination",
        "to": "logging"
      },
      {
        "from": "lukhas.core.demo_coordination",
        "to": "agent_coordination"
      },
      {
        "from": "lukhas.core.demo_coordination",
        "to": "actor_system"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "typing"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "logging"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "time"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "abc"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "lukhas.bio.colony_self_repair"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "enum"
      },
      {
        "from": "lukhas.core.supervision",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.lukhas_ai_interface",
        "to": "typing"
      },
      {
        "from": "lukhas.core.lukhas_ai_interface",
        "to": "logging"
      },
      {
        "from": "lukhas.core.lukhas_ai_interface",
        "to": "sys"
      },
      {
        "from": "lukhas.core.lukhas_ai_interface",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.lukhas_ai_interface",
        "to": "router.llm_multiverse_router"
      },
      {
        "from": "lukhas.core.lukhas_ai_interface",
        "to": "enum"
      },
      {
        "from": "lukhas.core.lukhas_ai_interface",
        "to": "os"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "typing"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "logging"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "time"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "threading"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "random"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "collections"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "enum"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "json"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "lukhas.core.observability_steering"
      },
      {
        "from": "lukhas.core.circuit_breaker",
        "to": "weakref"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "typing"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "time"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "logging"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "threading"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "collections"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "lukhas.core.resource_optimization_integration"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "enum"
      },
      {
        "from": "lukhas.core.efficient_communication",
        "to": "json"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "typing"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "logging"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "time"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "threading"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "sys"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "collections"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "enum"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "json"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "weakref"
      },
      {
        "from": "lukhas.core.observability_steering",
        "to": "lukhas.core.supervision"
      },
      {
        "from": "lukhas.core.integrity_probe",
        "to": "typing"
      },
      {
        "from": "lukhas.core.integrity_probe",
        "to": "memory.core_memory.memory_collapse_verifier"
      },
      {
        "from": "lukhas.core.integrity_probe",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.integrity_probe",
        "to": "core.symbolic_diagnostics.trace_repair_engine"
      },
      {
        "from": "lukhas.core.integrity_probe",
        "to": "core.symbolic.drift.drift_score"
      },
      {
        "from": "lukhas.core.collaboration",
        "to": "lukhas.core.coordination"
      },
      {
        "from": "lukhas.core.collaboration",
        "to": "lukhas.core.swarm"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "enum"
      },
      {
        "from": "lukhas.core.task_manager",
        "to": "json"
      },
      {
        "from": "lukhas.core.validation_script_fixes",
        "to": "re"
      },
      {
        "from": "lukhas.core.validation_script_fixes",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "typing"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "heapq"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "logging"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "time"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "pickle"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "collections"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "enum"
      },
      {
        "from": "lukhas.core.mailbox",
        "to": "json"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "typing"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "aiofiles"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "logging"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "time"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "threading"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "copy"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "pickle"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "gzip"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "collections"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "enum"
      },
      {
        "from": "lukhas.core.event_replay_snapshot",
        "to": "json"
      },
      {
        "from": "lukhas.core.test_tiered_state_management",
        "to": "pytest"
      },
      {
        "from": "lukhas.core.test_tiered_state_management",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.test_tiered_state_management",
        "to": "tiered_state_management"
      },
      {
        "from": "lukhas.core.test_tiered_state_management",
        "to": "time"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "typing"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "time"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "sys"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "collections"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "shlex"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "json"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "os"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "psutil"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "threading"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.automatic_testing_system",
        "to": "lukhas.core.test_framework"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "typing"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "time"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "prometheus_client"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "creative_expressions_v2"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "redis"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "enum"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "datadog"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "abc"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "redis.asyncio"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "collections"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "opentelemetry.exporter.jaeger.thrift"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "json"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "scipy"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "torch"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "sklearn.ensemble"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "torch.nn.functional"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "aioredis"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "opentelemetry.sdk.trace"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "aiohttp"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "psutil"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "contextlib"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "opentelemetry"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "logging"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "opentelemetry.sdk.trace.export"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "statistics"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "elasticsearch"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "sklearn.preprocessing"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "boto3"
      },
      {
        "from": "lukhas.core.monitoring_observability",
        "to": "opentelemetry.instrumentation.requests"
      },
      {
        "from": "lukhas.core.quantized_cycle_manager",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.quantized_cycle_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "typing"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "logging"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "time"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "abc"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "threading"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "lukhas.core.lightweight_concurrency"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "collections"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "lukhas.core.event_sourcing"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "enum"
      },
      {
        "from": "lukhas.core.tiered_state_management",
        "to": "json"
      },
      {
        "from": "lukhas.core.targeted_api_fixes",
        "to": "re"
      },
      {
        "from": "lukhas.core.targeted_api_fixes",
        "to": "typing"
      },
      {
        "from": "lukhas.core.targeted_api_fixes",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.direct_ai_router",
        "to": "typing"
      },
      {
        "from": "lukhas.core.direct_ai_router",
        "to": "lukhas.core.config"
      },
      {
        "from": "lukhas.core.direct_ai_router",
        "to": "logging"
      },
      {
        "from": "lukhas.core.direct_ai_router",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.direct_ai_router",
        "to": "sys"
      },
      {
        "from": "lukhas.core.direct_ai_router",
        "to": "json"
      },
      {
        "from": "lukhas.core.direct_ai_router",
        "to": "os"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "typing"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "lukhas.identity.core.user_tier_mapping"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "lukhas.core.identity_integration"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "abc"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.identity_aware_base",
        "to": "functools"
      },
      {
        "from": "lukhas.core.actor_model",
        "to": "threading"
      },
      {
        "from": "lukhas.core.actor_model",
        "to": "time"
      },
      {
        "from": "lukhas.core.actor_model",
        "to": "queue"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "typing"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "logging"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "time"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "lukhas.core.mailbox"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "collections"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "enum"
      },
      {
        "from": "lukhas.core.agent_coordination",
        "to": "json"
      },
      {
        "from": "lukhas.core.coordination",
        "to": "time"
      },
      {
        "from": "lukhas.core.identity_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.core.identity_integration",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.identity_integration",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.core.identity_integration",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.identity_integration",
        "to": "lukhas.core.decorators"
      },
      {
        "from": "lukhas.core.identity_integration",
        "to": "enum"
      },
      {
        "from": "lukhas.core.identity_integration",
        "to": "functools"
      },
      {
        "from": "lukhas.core.resource_efficiency",
        "to": "typing"
      },
      {
        "from": "lukhas.core.resource_efficiency",
        "to": "psutil"
      },
      {
        "from": "lukhas.core.resource_efficiency",
        "to": "logging"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "time"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "pytest"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "image_processing_pipeline"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "PIL"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "collections"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "tempfile"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "glob"
      },
      {
        "from": "lukhas.core.test_image_processing_pipeline",
        "to": "os"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "typing"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "logging"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "time"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "abc"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "threading"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "queue"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "lukhas.core.mailbox"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "collections"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "lukhas.core.p2p_communication"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "enum"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "json"
      },
      {
        "from": "lukhas.core.actor_system",
        "to": "weakref"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "typing"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "logging"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "time"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "random"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "collections"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "enum"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "socket"
      },
      {
        "from": "lukhas.core.p2p_communication",
        "to": "json"
      },
      {
        "from": "lukhas.core.state_management",
        "to": "json"
      },
      {
        "from": "lukhas.core.state_management",
        "to": "os"
      },
      {
        "from": "lukhas.core.validation",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.validation",
        "to": "time"
      },
      {
        "from": "lukhas.core.validation",
        "to": "logging"
      },
      {
        "from": "lukhas.core.validation",
        "to": "sys"
      },
      {
        "from": "lukhas.core.validation",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.validation",
        "to": "core.automatic_testing_system"
      },
      {
        "from": "lukhas.core.validation",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.validation",
        "to": "os"
      },
      {
        "from": "lukhas.core.observatory",
        "to": "typing"
      },
      {
        "from": "lukhas.core.observatory",
        "to": "lukhas.memory.manager"
      },
      {
        "from": "lukhas.core.observatory",
        "to": "lukhas.core.symbolic.tracer"
      },
      {
        "from": "lukhas.core.decorators",
        "to": "typing"
      },
      {
        "from": "lukhas.core.decorators",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.decorators",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.core.decorators",
        "to": "lukhas.memory.systems.tier_system"
      },
      {
        "from": "lukhas.core.decorators",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.decorators",
        "to": "functools"
      },
      {
        "from": "lukhas.core.net.client_event",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.temporal_colony",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.temporal_colony",
        "to": "logging"
      },
      {
        "from": "lukhas.core.colonies.temporal_colony",
        "to": "copy"
      },
      {
        "from": "lukhas.core.colonies.temporal_colony",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.colonies.creativity_colony",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.creativity_colony",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.colonies.creativity_colony",
        "to": "logging"
      },
      {
        "from": "lukhas.core.colonies.creativity_colony",
        "to": "lukhas.bio.bio_homeostasis"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "torch"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "time"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "lukhas.tagging"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "matplotlib.pyplot"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "lukhas.core.symbolism.tags"
      },
      {
        "from": "lukhas.core.colonies.tensor_colony_ops",
        "to": "__future__"
      },
      {
        "from": "lukhas.core.colonies.memory_colony",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.memory_colony",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.colonies.memory_colony",
        "to": "logging"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "lukhas.core.symbolism.methylation_model"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "time"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "logging"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "lukhas.core.distributed_tracing"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "abc"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "lukhas.core.efficient_communication"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "lukhas.core.symbolism.tags"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "lukhas.core.event_sourcing"
      },
      {
        "from": "lukhas.core.colonies.base_colony",
        "to": "lukhas.core.colonies.supervisor_agent"
      },
      {
        "from": "lukhas.core.colonies.supervisor_agent",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.supervisor_agent",
        "to": "logging"
      },
      {
        "from": "lukhas.core.colonies.governance_colony",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.governance_colony",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.colonies.governance_colony",
        "to": "logging"
      },
      {
        "from": "lukhas.core.colonies.governance_colony",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.colonies.governance_colony",
        "to": "lukhas.ethics.policy_engines.base"
      },
      {
        "from": "lukhas.core.colonies.governance_colony",
        "to": "lukhas.ethics.meg_bridge"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "typing"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "lukhas.core.symbolic.collapse.vector_ops"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "time"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "logging"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "lukhas.core.efficient_communication"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "lukhas.core.symbolism.tags"
      },
      {
        "from": "lukhas.core.colonies.reasoning_colony",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.symbolic_bridge.token_map",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.symbolic_bridge.token_map",
        "to": "typing"
      },
      {
        "from": "lukhas.core.symbolic_bridge.integrator",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.identity.mapper",
        "to": "typing"
      },
      {
        "from": "lukhas.core.identity.mapper",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.identity.mapper",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.identity.mapper",
        "to": "logging"
      },
      {
        "from": "lukhas.core.identity.processor",
        "to": "typing"
      },
      {
        "from": "lukhas.core.identity.processor",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.identity.processor",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.identity.processor",
        "to": "logging"
      },
      {
        "from": "lukhas.core.identity.engine",
        "to": "typing"
      },
      {
        "from": "lukhas.core.identity.engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.identity.engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.identity.engine",
        "to": "logging"
      },
      {
        "from": "lukhas.core.identity.persona_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.core.identity.persona_engine",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.identity.persona_engine",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.identity.persona_engine",
        "to": "logging"
      },
      {
        "from": "lukhas.core.identity.manager",
        "to": "typing"
      },
      {
        "from": "lukhas.core.identity.manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.identity.manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.identity.manager",
        "to": "logging"
      },
      {
        "from": "lukhas.core.identity.manager",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.identity.manager",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.identity.manager",
        "to": "json"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "sys"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "shutil"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "importlib.util"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.core.spine.integration_orchestrator",
        "to": "os"
      },
      {
        "from": "lukhas.core.security.__init__",
        "to": "lukhas.ethics.security.secure_utils"
      },
      {
        "from": "lukhas.core.personality.lukhas_es_creativo",
        "to": "typing"
      },
      {
        "from": "lukhas.core.personality.lukhas_es_creativo",
        "to": "logging"
      },
      {
        "from": "lukhas.core.personality.personality",
        "to": "typing"
      },
      {
        "from": "lukhas.core.personality.personality",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.personality.personality",
        "to": "time"
      },
      {
        "from": "lukhas.core.personality.personality",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.personality.personality",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.personality.personality",
        "to": "collections"
      },
      {
        "from": "lukhas.core.personality.personality",
        "to": "enum"
      },
      {
        "from": "lukhas.core.personality.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.core.personality.__init__",
        "to": "logging"
      },
      {
        "from": "lukhas.core.personality.creative_expressions",
        "to": "typing"
      },
      {
        "from": "lukhas.core.personality.creative_expressions",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.personality.creative_expressions",
        "to": "json"
      },
      {
        "from": "lukhas.core.personality.creative_expressions",
        "to": "random"
      },
      {
        "from": "lukhas.core.personality.neuro_haiku_generator",
        "to": "typing"
      },
      {
        "from": "lukhas.core.personality.neuro_haiku_generator",
        "to": "logging"
      },
      {
        "from": "lukhas.core.personality.neuro_haiku_generator",
        "to": "random"
      },
      {
        "from": "lukhas.core.personality.lukhas_es_creativo_clean",
        "to": "typing"
      },
      {
        "from": "lukhas.core.personality.lukhas_es_creativo_clean",
        "to": "logging"
      },
      {
        "from": "lukhas.core.symbolic_diagnostics.trace_repair_engine",
        "to": "typing"
      },
      {
        "from": "lukhas.core.unified.bio_signals",
        "to": "quantum.quantum_inspired_layer"
      },
      {
        "from": "lukhas.core.unified.integration",
        "to": "core.unified_integration"
      },
      {
        "from": "lukhas.core.unified.orchestration",
        "to": "typing"
      },
      {
        "from": "lukhas.core.unified.orchestration",
        "to": "orchestration.signal_router"
      },
      {
        "from": "lukhas.core.unified.orchestration",
        "to": "logging"
      },
      {
        "from": "lukhas.core.unified.orchestration",
        "to": "lukhas.orchestration.orchestrator"
      },
      {
        "from": "lukhas.core.output.message_hub",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.output.message_hub",
        "to": "lukhas_dna_link"
      },
      {
        "from": "lukhas.core.output.message_hub",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.output.message_hub",
        "to": "json"
      },
      {
        "from": "lukhas.core.utils.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.core.utils.__init__",
        "to": "core.common"
      },
      {
        "from": "lukhas.core.utils.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.utils.__init__",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.utils.__init__",
        "to": "ast"
      },
      {
        "from": "lukhas.core.utils.__init__",
        "to": "core.helpers"
      },
      {
        "from": "lukhas.core.utils.dream_utils",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.utils.dream_utils",
        "to": "modules.dream_seed"
      },
      {
        "from": "lukhas.core.utils.dream_utils",
        "to": "sys"
      },
      {
        "from": "lukhas.core.utils.dream_utils",
        "to": "modules.alignment_score"
      },
      {
        "from": "lukhas.core.utils.dream_utils",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.utils.dream_utils",
        "to": "json"
      },
      {
        "from": "lukhas.core.utils.dream_utils",
        "to": "os"
      },
      {
        "from": "lukhas.core.observability.collector",
        "to": "typing"
      },
      {
        "from": "lukhas.core.observability.collector",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.observability.collector",
        "to": "time"
      },
      {
        "from": "lukhas.core.observability.collector",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.observability.collector",
        "to": "collections"
      },
      {
        "from": "lukhas.core.observability.collector",
        "to": "psutil"
      },
      {
        "from": "lukhas.core.introspection.__init__",
        "to": "lukhas.core.introspection.introspector"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "typing"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "re"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "logging"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "sys"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "ast"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "json"
      },
      {
        "from": "lukhas.core.introspection.introspector",
        "to": "os"
      },
      {
        "from": "lukhas.core.rem.sleep_cycle",
        "to": "modules.memoria"
      },
      {
        "from": "lukhas.core.rem.sleep_cycle",
        "to": "lukhas.creativity.dream_systems.dream_log"
      },
      {
        "from": "lukhas.core.rem.sleep_cycle",
        "to": "modules.dream_seed"
      },
      {
        "from": "lukhas.core.rem.sleep_cycle",
        "to": "modules.fold_token"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "typing"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "time"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "sys"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "ast"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "importlib.util"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "json"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "traceback"
      },
      {
        "from": "lukhas.core.testing.plugin_test_framework",
        "to": "inspect"
      },
      {
        "from": "lukhas.core.ethics.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.ethics.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.core.ethics.__init__",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.ethics.__init__",
        "to": "enum"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "typing"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "lukhas.ethics"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "json"
      },
      {
        "from": "lukhas.core.ethics.dream_ethics_injector",
        "to": "math"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "aiohttp"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "json"
      },
      {
        "from": "lukhas.core.ai.integration_manager",
        "to": "os"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "typing"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "time"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "lukhas.core.actor_system"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "sys"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "lukhas.core.mailbox"
      },
      {
        "from": "lukhas.core.examples.mailbox_demo",
        "to": "json"
      },
      {
        "from": "lukhas.core.symbolism.methylation_model",
        "to": "typing"
      },
      {
        "from": "lukhas.core.symbolism.methylation_model",
        "to": "lukhas.core.symbolism.tags"
      },
      {
        "from": "lukhas.core.symbolism.tags",
        "to": "enum"
      },
      {
        "from": "lukhas.core.symbolism.archiver",
        "to": "typing"
      },
      {
        "from": "lukhas.core.symbolism.archiver",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.symbolism.archiver",
        "to": "logging"
      },
      {
        "from": "lukhas.core.symbolism.archiver",
        "to": "time"
      },
      {
        "from": "lukhas.core.symbolism.archiver",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.symbolism.archiver",
        "to": "json"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "typing"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "time"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "oqs"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "enum"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "json"
      },
      {
        "from": "lukhas.core.verifold.verifold_unified",
        "to": "lukhas.core.tier_unification_adapter"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "typing"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "memory.core_memory.memoria"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "time"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "threading"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "random"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "collections"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "orchestration.orchestrator"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "enum"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "json"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "concurrent.futures"
      },
      {
        "from": "lukhas.core.orchestration.energy_aware_execution_planner",
        "to": "core.bio_symbolic"
      },
      {
        "from": "lukhas.core.governance.governance_colony",
        "to": "typing"
      },
      {
        "from": "lukhas.core.governance.governance_colony",
        "to": "lukhas.core.colonies.base_colony"
      },
      {
        "from": "lukhas.core.governance.governance_colony",
        "to": "logging"
      },
      {
        "from": "lukhas.core.meta_learning.rate_modulator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.meta_learning.rate_modulator",
        "to": "enum"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "typing"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.core.meta_learning.monitor_dashboard"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "time"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "enum"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.MODULES.memoria.lukhas_replayer"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.core.bio_core.memory.quantum_memory_manager"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.core.bio_symbolic.glyph_id_hash"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.LUKHAS_ID.backend.app.crypto"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "json"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.core.meta_learning.rate_modulator"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.core.spine.healix_mapper"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.AID.dream_engine.dream_replay"
      },
      {
        "from": "lukhas.core.meta_learning.remediator_agent",
        "to": "lukhas.brain.memory.AdvancedMemoryManager"
      },
      {
        "from": "lukhas.core.meta_learning.symbolic_feedback",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.meta_learning.monitor_dashboard",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.meta_learning.monitor_dashboard",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "typing"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "lukhas.core.meta_learning.monitor_dashboard"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "logging"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "lukhas.core.meta_learning.rate_modulator"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "lukhas.core.meta_learning.symbolic_feedback"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "lukhas.core.meta_learning.federated_integration"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "enum"
      },
      {
        "from": "lukhas.core.meta_learning.enhancement_system",
        "to": "json"
      },
      {
        "from": "lukhas.core.symbolic.collapse.vector_ops",
        "to": "typing"
      },
      {
        "from": "lukhas.core.symbolic.collapse.vector_ops",
        "to": "lukhas.core.symbolism.tags"
      },
      {
        "from": "lukhas.core.symbolic.collapse.vector_ops",
        "to": "__future__"
      },
      {
        "from": "lukhas.core.user_interface_manager.text_handler",
        "to": "typing"
      },
      {
        "from": "lukhas.core.user_interface_manager.text_handler",
        "to": "logging"
      },
      {
        "from": "lukhas.core.user_interface_manager.voice_handler",
        "to": "typing"
      },
      {
        "from": "lukhas.core.user_interface_manager.voice_handler",
        "to": "logging"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "typing"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "logging"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "random"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "collections"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "enum"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "json"
      },
      {
        "from": "lukhas.core.monitoring.collapse_tracker",
        "to": "math"
      },
      {
        "from": "lukhas.core.monitoring.__init__",
        "to": "lukhas.core.monitoring.drift_monitor"
      },
      {
        "from": "lukhas.core.monitoring.collapse_integration",
        "to": "typing"
      },
      {
        "from": "lukhas.core.monitoring.collapse_integration",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.monitoring.collapse_integration",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.monitoring.collapse_integration",
        "to": "logging"
      },
      {
        "from": "lukhas.core.monitoring.collapse_integration",
        "to": "lukhas.core.monitoring.collapse_tracker"
      },
      {
        "from": "lukhas.core.monitoring.collapse_integration",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "typing"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "lukhas.core.symbolic.drift.symbolic_drift_tracker"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "time"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "lukhas.trace.drift_alignment_controller"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "lukhas.ethics.sentinel.ethical_drift_sentinel"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "collections"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "enum"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "lukhas.trace.drift_metrics"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "json"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "math"
      },
      {
        "from": "lukhas.core.monitoring.drift_monitor",
        "to": "lukhas.trace.drift_harmonizer"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "lukhas.identity.interface"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "logging"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "time"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "identity.core.trace.activity_logger"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "core.monitoring_observability"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "enum"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "json"
      },
      {
        "from": "lukhas.core.performance.orchestrator",
        "to": "lukhas.ethics.compliance_engine"
      },
      {
        "from": "lukhas.core.infrastructure.node_collection",
        "to": "typing"
      },
      {
        "from": "lukhas.core.infrastructure.node_collection",
        "to": "lukhas.core.infrastructure.node_registry"
      },
      {
        "from": "lukhas.core.infrastructure.node_collection",
        "to": "time"
      },
      {
        "from": "lukhas.core.infrastructure.node_collection",
        "to": "logging"
      },
      {
        "from": "lukhas.core.infrastructure.node_registry",
        "to": "typing"
      },
      {
        "from": "lukhas.core.infrastructure.node_registry",
        "to": "importlib"
      },
      {
        "from": "lukhas.core.infrastructure.node_registry",
        "to": "time"
      },
      {
        "from": "lukhas.core.infrastructure.node_registry",
        "to": "logging"
      },
      {
        "from": "lukhas.core.infrastructure.node_registry",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.infrastructure.node_registry",
        "to": "inspect"
      },
      {
        "from": "lukhas.core.infrastructure.node_registry",
        "to": "os"
      },
      {
        "from": "lukhas.core.infrastructure.node_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.core.infrastructure.node_manager",
        "to": "time"
      },
      {
        "from": "lukhas.core.infrastructure.node_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.core.infrastructure.node_manager",
        "to": "json"
      },
      {
        "from": "lukhas.core.infrastructure.node_manager",
        "to": "os"
      },
      {
        "from": "lukhas.core.modules.nias.dream_recorder",
        "to": "typing"
      },
      {
        "from": "lukhas.core.modules.nias.dream_recorder",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.modules.nias.dream_recorder",
        "to": "logging"
      },
      {
        "from": "lukhas.core.modules.nias.dream_recorder",
        "to": "csv"
      },
      {
        "from": "lukhas.core.modules.nias.dream_recorder",
        "to": "json"
      },
      {
        "from": "lukhas.core.modules.nias.dream_recorder",
        "to": "os"
      },
      {
        "from": "lukhas.core.neural_architectures.__init__",
        "to": "lukhas.core.neural_architectures.neural_integrator"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "typing"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "time"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "lukhas.core.memory.enhanced_memory_manager"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "enum"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "collections"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "json"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "torch"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "torch.nn.functional"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "torch.nn"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "lukhas.core.consciousness.consciousness_integrator"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "lukhas.quantum.systems.quantum_inspired_processor"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "logging"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.neural_architectures.neural_integrator",
        "to": "threading"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "typing"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "numpy"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "logging"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "copy"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "enum"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "json"
      },
      {
        "from": "lukhas.core.neural_architectures.abas.abas_quantum_specialist",
        "to": "math"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "lukhas.core.diagnostic_engine.engine"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "random"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "lukhas.core.user_interface_manager.voice_handler"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "lukhas.core.user_interface_manager.text_handler"
      },
      {
        "from": "lukhas.core.interaction.symptom_reporter",
        "to": "lukhas.core.data_manager.crud_operations"
      },
      {
        "from": "lukhas.core.helpers.__init__",
        "to": "typing"
      },
      {
        "from": "lukhas.core.helpers.__init__",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.helpers.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.helpers.__init__",
        "to": "re"
      },
      {
        "from": "lukhas.core.helpers.__init__",
        "to": "json"
      },
      {
        "from": "lukhas.core.services.location.geofencing_manager",
        "to": "typing"
      },
      {
        "from": "lukhas.core.services.location.geofencing_manager",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.services.location.geofencing_manager",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.services.location.geofencing_manager",
        "to": "logging"
      },
      {
        "from": "lukhas.core.services.location.geofencing_manager",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.services.location.geofencing_manager",
        "to": "json"
      },
      {
        "from": "lukhas.core.services.location.geofencing_manager",
        "to": "math"
      },
      {
        "from": "lukhas.core.services.location.__init__",
        "to": "lukhas.core.services.location.location_tracker"
      },
      {
        "from": "lukhas.core.services.location.__init__",
        "to": "lukhas.core.services.location.geofencing_manager"
      },
      {
        "from": "lukhas.core.services.location.tracker",
        "to": "typing"
      },
      {
        "from": "lukhas.core.services.location.tracker",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.services.location.tracker",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.services.location.tracker",
        "to": "logging"
      },
      {
        "from": "lukhas.core.services.location.tracker",
        "to": "dataclasses"
      },
      {
        "from": "lukhas.core.services.location.tracker",
        "to": "math"
      },
      {
        "from": "lukhas.core.services.personality.lukhas_empathy",
        "to": "symbolic_ai.lukhas_voice"
      },
      {
        "from": "lukhas.core.services.personality.lukhas_empathy",
        "to": "symbolic_ai.trait_manager"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "importlib.util"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "pypandoc"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "re"
      },
      {
        "from": "lukhas.core.interfaces.research_dashboard",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.cli",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.cli",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.cli",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.cli",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.cli",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.lukhas_socket",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.interfaces.lukhas_socket",
        "to": "time"
      },
      {
        "from": "lukhas.core.interfaces.lukhas_socket",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.lukhas_socket",
        "to": "websockets"
      },
      {
        "from": "lukhas.core.interfaces.lukhas_socket",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.lukhas_socket",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.app",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.app",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.app",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.app",
        "to": "pypandoc"
      },
      {
        "from": "lukhas.core.interfaces.app",
        "to": "re"
      },
      {
        "from": "lukhas.core.interfaces.app",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.custom_llm",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interfaces.custom_llm",
        "to": "pydantic"
      },
      {
        "from": "lukhas.core.interfaces.custom_llm",
        "to": "lukhas.core.core.unchecked_base_model"
      },
      {
        "from": "lukhas.core.interfaces.custom_llm",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.custom_llm",
        "to": "lukhas.core.interfaces.conv_ai_secret_locator"
      },
      {
        "from": "lukhas.core.interfaces.custom_llm",
        "to": "lukhas.core.core.pydantic_utilities"
      },
      {
        "from": "lukhas.core.interfaces.dev_dashboard",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.dev_dashboard",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.dev_dashboard",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.dev_dashboard",
        "to": "pypandoc"
      },
      {
        "from": "lukhas.core.interfaces.dev_dashboard",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.dev_dashboard",
        "to": "re"
      },
      {
        "from": "lukhas.core.interfaces.dev_dashboard",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "platform"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "core.interfaces.voice.edge_voice"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "time"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "pyfiglet"
      },
      {
        "from": "lukhas.core.interfaces.main",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.web_formatter",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.web_formatter",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.web_formatter",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.web_formatter",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.ui.gui_launcher",
        "to": "tools.session_logger"
      },
      {
        "from": "lukhas.core.interfaces.ui.gui_launcher",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.ui.gui_launcher",
        "to": "id_portal.backend.app.tier_manager"
      },
      {
        "from": "lukhas.core.interfaces.ui.gui_launcher",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.ui.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.ui.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_self"
      },
      {
        "from": "lukhas.core.interfaces.ui.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_overview_log"
      },
      {
        "from": "lukhas.core.interfaces.ui.app",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.ui.app",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.ui.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_agent_handoff"
      },
      {
        "from": "lukhas.core.interfaces.ui.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.dashboard_settings"
      },
      {
        "from": "lukhas.core.interfaces.ui.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_widget_engine"
      },
      {
        "from": "lukhas.core.interfaces.ui.config.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.dream_export_streamlit",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.dream_export_streamlit",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.dream_export_streamlit",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.voice_preview_streamlit",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.voice_preview_streamlit",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.voice_preview_streamlit",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.voice_preview_streamlit",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "elevenlabs.client"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "elevenlabs"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "core.interfaces.voice.core.sayit"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.audio_exporter",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.replay_graphs",
        "to": "core.utils.symbolic_utils"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.replay_graphs",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.replay_graphs",
        "to": "collections"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.replay_graphs",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.replay_graphs",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.tier_visualizer",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.tier_visualizer",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.ui.components.tier_visualizer",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.ui.adaptive.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.ui.adaptive.ui_orchestrator",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interfaces.ui.adaptive.ui_orchestrator",
        "to": "lukhas.voice.cognitive_voice"
      },
      {
        "from": "lukhas.core.interfaces.ui.adaptive.ui_orchestrator",
        "to": "lukhas.memory.systems.helix_dna"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "atexit"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "importlib.util"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "pypandoc"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "re"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.research_dashboard",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.dev_dashboard",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.dev_dashboard",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.dev_dashboard",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.dev_dashboard",
        "to": "pypandoc"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.dev_dashboard",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.dev_dashboard",
        "to": "re"
      },
      {
        "from": "lukhas.core.interfaces.tools.research.dev_dashboard",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.tools.security.session_logger",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.tools.security.session_logger",
        "to": "pytz"
      },
      {
        "from": "lukhas.core.interfaces.tools.security.session_logger",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.tools.security.session_logger",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.tools.security.session_logger",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.tools.security.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_vote",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_vote",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_vote",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_vote",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_vote",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_propose",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_propose",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_propose",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_propose",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.tools.dao.dao_propose",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.tools.cli.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.tools.cli.lukhasdream_cli",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.tools.cli.lukhasdream_cli",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.tools.cli.lukhasdream_cli",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.tools.cli.lukhasdream_cli",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.tools.cli.command_registry",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.nias.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.nias.__init__",
        "to": "lukhas.core.interfaces.nias.src.core.nias_plugin"
      },
      {
        "from": "lukhas.core.interfaces.nias.__init__",
        "to": "lukhas.core.interfaces.nias.src.core.config"
      },
      {
        "from": "lukhas.core.interfaces.nias.generate_nias_docs",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.nias.generate_nias_docs",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.nias.generate_nias_docs",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.nias.generate_nias_docs",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.nias.generate_nias_docs",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.nias.generate_nias_docs",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.logic.consent_manager",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.logic.consent_manager",
        "to": "lukhas_config"
      },
      {
        "from": "lukhas.core.interfaces.logic.delegate_logic",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.logic.delegate_logic",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_logic_architecture",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_emotion_log"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_self"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "openai"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "dotenv"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_widget_engine"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_self",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.logic.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_core",
        "to": "Agent_Logic_Architecture"
      },
      {
        "from": "lukhas.core.interfaces.logic.agent_core",
        "to": "lukhas_config"
      },
      {
        "from": "lukhas.core.interfaces.logic.context.context_builder",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.logic.context.context_builder",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interfaces.logic.context.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.logic.voice.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_voice_agent",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_voice_agent",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_voice_agent",
        "to": "utils.logging"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_voice_agent",
        "to": "lukhas_core.emotional_state"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_voice_agent",
        "to": "lukhas_core.event_bus"
      },
      {
        "from": "lukhas.core.interfaces.voice.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "speech_recognition"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "openai"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "traits.trait_manager"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "voice.lukhas_voice"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.voice.lukhas_listen",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "asyncio"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "subprocess"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "elevenlabs"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "edge_tts"
      },
      {
        "from": "lukhas.core.interfaces.voice.edge_voice",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.voice.core.sayit",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.voice.core.sayit",
        "to": "symbolic_ai.personas.lukhas.lukhas_voice"
      },
      {
        "from": "lukhas.core.interfaces.voice.core.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.voice.voice_emotional.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice",
        "to": "time"
      },
      {
        "from": "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice",
        "to": "logging"
      },
      {
        "from": "lukhas.core.interfaces.voice.voice_emotional.context_aware_modular_voice",
        "to": "hashlib"
      },
      {
        "from": "lukhas.core.interfaces.voice.integrations.elevenlabs.__init__",
        "to": "lukhas.core.interfaces.voice.integrations.elevenlabs.elevenlabs_client"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_emotion_log"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_self"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "openai"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "dotenv"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_widget_engine"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.agent_self",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.agent_logic.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_self"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_overview_log"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.app",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.app",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_agent_handoff"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.dashboard_settings"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.app",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_widget_engine"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.dream_export_streamlit",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.dream_export_streamlit",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.dream_export_streamlit",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.voice_preview_streamlit",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.voice_preview_streamlit",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.voice_preview_streamlit",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.voice_preview_streamlit",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.replay_graphs",
        "to": "core.utils.symbolic_utils"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.replay_graphs",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.replay_graphs",
        "to": "collections"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.replay_graphs",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.replay_graphs",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.tier_visualizer",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.tier_visualizer",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.streamlit.components.tier_visualizer",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.core.lukhas_overview_log",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.core.lukhas_overview_log",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.core.lukhas_overview_log",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.core.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.core.generate_image",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.core.generate_image",
        "to": "LUKHAS_AGENT_PLUGIN.core.lukhas_render_ai"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.auth.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.utils.constants",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.utils.constants",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.utils.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.delivery_loop",
        "to": "core.interfaces.as_agent.utils.constants"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.delivery_loop",
        "to": "core.interfaces.as_agent.utils.symbolic_utils"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.feedback_log_viewer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.feedback_log_viewer",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.feedback_log_viewer",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_narrator_queue",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_narrator_queue",
        "to": "os"
      },
      {
        "from voice.voice_narrator",
        "to": "pathlib"
      },
      {
        "from voice.voice_narrator",
        "to": "core.utils.symbolic_utils"
      },
      {
        "from voice.voice_narrator",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.validate_payload",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.validate_payload",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.validate_payload",
        "to": "jsonschema"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.nias_core",
        "to": "core.interfaces.as_agent.sys.abas.abas"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.nias_core",
        "to": "core.interfaces.as_agent.sys.nias.consent_filter"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.nias_core",
        "to": "core.interfaces.as_agent.sys.nias.trace_logger"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.nias_core",
        "to": "core.interfaces.as_agent.sys.nias.symbolic_matcher"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_heatmap",
        "to": "seaborn"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_heatmap",
        "to": "matplotlib.pyplot"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_heatmap",
        "to": "pandas"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_heatmap",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_heatmap",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.inject_message_simulator",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.inject_message_simulator",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.inject_message_simulator",
        "to": "random"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.inject_message_simulator",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.inject_message_simulator",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_export_streamlit",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_export_streamlit",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_export_streamlit",
        "to": "streamlit"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.generate_payload_cli",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.generate_payload_cli",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.generate_payload_cli",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.symbolic_reply_generator",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.symbolic_reply_generator",
        "to": "random"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.05_25_dream_clustering_engine",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.05_25_dream_clustering_engine",
        "to": "collections"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.05_25_dream_clustering_engine",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.consent_filter",
        "to": "core.interfaces.as_agent.utils.constants"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.consent_filter",
        "to": "core.interfaces.as_agent.utils.symbolic_utils"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_visualizer",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_visualizer",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_visualizer",
        "to": "collections"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.replay_visualizer",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_recorder",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_recorder",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.dream_recorder",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.feedback_loop",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.feedback_loop",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.feedback_loop",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.narration_controller",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.nias.narration_controller",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast_core",
        "to": "core.interfaces.as_agent.utils.constants"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast_core",
        "to": "core.interfaces.as_agent.utils.symbolic_utils"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.store",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.partner_sdk",
        "to": "core.interfaces.as_agent.utils.constants"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.partner_sdk",
        "to": "core.interfaces.as_agent.utils.symbolic_utils"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.aggregator",
        "to": "core.interfaces.as_agent.utils.constants"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.aggregator",
        "to": "core.interfaces.as_agent.utils.symbolic_utils"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast",
        "to": "dream_engine"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast",
        "to": "delegate_logic"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast",
        "to": "core.interfaces.logic.voice.voice_renderer"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast",
        "to": "ethics_jury"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast",
        "to": "consent_manager"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.dast",
        "to": "lukhas_config"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.lukhas_launcher",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.sys.dast.lukhas_launcher",
        "to": "LUKHAS_AGENT_PLUGIN.core"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.live_renderer_widget",
        "to": "dashboards.widgets.visualizer_engine"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.travel_widget",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.travel_widget",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.delivery_tracker_widget",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.delivery_tracker_widget",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "typing"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "lukhas.core.interfaces.as_agent.widgets.widget_expandable"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "lukhas.core.interfaces.as_agent.core.unchecked_base_model"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "pydantic"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "lukhas.core.interfaces.as_agent.core.pydantic_utilities"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "lukhas.core.interfaces.as_agent.widgets.widget_feedback_mode"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "lukhas.core.interfaces.as_agent.widgets.embed_variant"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.widgets.widget_config",
        "to": "lukhas.core.interfaces.as_agent.widgets.widget_config_avatar"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
        "to": "argparse"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
        "to": "sys"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
        "to": "modules.voice.lukhas_voice_agent"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhass_dispatcher",
        "to": "os"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhas_affiliate_log",
        "to": "pathlib"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhas_affiliate_log",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.lukhas_affiliate_log",
        "to": "json"
      },
      {
        "from": "lukhas.core.interfaces.as_agent.news_and_social.__init__",
        "to": "structlog"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "typing"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "datetime"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "bridge.llm_wrappers.perplexity_wrapper"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "bridge.llm_wrappers.anthropic_wrapper"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "bridge.llm_wrappers.openai_wrapper"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "uuid"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "bridge.llm_wrappers.azure_openai_wrapper"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "bridge.llm_wrappers.gemini_wrapper"
      },
      {
        "from": "lukhas.core.router.llm_multiverse_router",
        "to": "os"
      }
    ]
  }
}