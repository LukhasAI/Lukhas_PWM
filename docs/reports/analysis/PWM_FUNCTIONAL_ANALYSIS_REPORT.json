{
  "timestamp": "/Users/agi_dev/Lukhas_PWM",
  "system_capabilities": {
    "consciousness": {
      "status": "functional",
      "files_scanned": 55,
      "functional_files": 39,
      "capabilities": [
        {
          "capability": "awareness",
          "file": "consciousness/service.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/service.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/cognitive_architecture_controller.py",
          "confidence": "high"
        },
        {
          "capability": "awareness",
          "file": "consciousness/openai_consciousness_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/openai_consciousness_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/quantum_consciousness_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/quantum_consciousness_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/consciousness_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/consciousness_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/cognitive/adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/cognitive/reflective_introspection.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/core/engine_poetic.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/core/engine_poetic.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/core/engine_complete.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/core/engine_codex.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/core/engine_alt.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/core/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/quantum_integration/quantum_creative_consciousness.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/quantum_integration/quantum_creative_consciousness.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/quantum_integration/quantum_consciousness_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/awareness/symbolic_trace_logger.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/awareness/awareness_protocol.py",
          "confidence": "high"
        },
        {
          "capability": "awareness",
          "file": "consciousness/awareness/bio_symbolic_awareness_adapter.py",
          "confidence": "high"
        },
        {
          "capability": "awareness",
          "file": "consciousness/awareness/awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "awareness",
          "file": "consciousness/awareness/system_awareness.py",
          "confidence": "high"
        },
        {
          "capability": "awareness",
          "file": "consciousness/awareness/awareness_processor.py",
          "confidence": "high"
        },
        {
          "capability": "awareness",
          "file": "consciousness/awareness/awareness_tracker.py",
          "confidence": "high"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/systems/integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/systems/consciousness_colony_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/systems/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "cognitive",
          "file": "consciousness/systems/\u039bBot_consciousness_monitor.py",
          "confidence": "medium"
        },
        {
          "capability": "awareness",
          "file": "consciousness/reflection/lambda_mirror.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.7090909090909091
    },
    "memory": {
      "status": "functional",
      "files_scanned": 222,
      "functional_files": 160,
      "capabilities": [
        {
          "capability": "storage",
          "file": "memory/service.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/service.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/services.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/services.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/structural_conscience.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/memory_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "association",
          "file": "memory/emotional.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/core.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/core.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/memory_optimization.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/privacy_preserving_memory_vault.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/unified_memory_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/unified_memory_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/basic.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/basic.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/glyph_memory_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/dreamseed_example.py",
          "confidence": "medium"
        },
        {
          "capability": "association",
          "file": "memory/tools/memory_drift_auditor.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/colonies/episodic_memory_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/core/base_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/core/unified_memory_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/hippocampal/theta_oscillator.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/hippocampal/pattern_separator.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/hippocampal/hippocampal_buffer.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/hippocampal/hippocampal_buffer.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/episodic/episodic_replay_buffer.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/episodic/episodic_replay_buffer.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/protection/symbolic_quarantine_sanctum.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/fold_system/optimized_hybrid_memory_fold.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/fold_system/optimized_hybrid_memory_fold.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/fold_system/fold_lineage_tracker.py",
          "confidence": "medium"
        },
        {
          "capability": "association",
          "file": "memory/fold_system/fold_lineage_tracker.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/fold_system/hybrid_memory_fold.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/fold_system/hybrid_memory_fold.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/resonance/resonant_memory_access.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/governance/ethical_drift_governor.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/replay/replay_buffer.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/replay/replay_buffer.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/scaffold/atomic_memory_scaffold.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/systems/memory_recall.py",
          "confidence": "high"
        },
        {
          "capability": "storage",
          "file": "memory/systems/hierarchical_data_store.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/systems/hierarchical_data_store.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/memory_profiler.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/in_memory_cache_storage_wrapper.py",
          "confidence": "high"
        },
        {
          "capability": "learning",
          "file": "memory/systems/dream_memory_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/systems/multimodal_memory_support.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/systems/glyph_memory_bridge.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/memory_reflector.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/systems/memory_reflector.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/memory_helix.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/causal_memory_chains.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/identity_lineage_bridge.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/systems/resonance_memory_retrieval.py",
          "confidence": "high"
        },
        {
          "capability": "learning",
          "file": "memory/systems/integration_example.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/systems/integration_example.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/memory_media_file_storage.py",
          "confidence": "high"
        },
        {
          "capability": "storage",
          "file": "memory/systems/memory_session_storage.py",
          "confidence": "high"
        },
        {
          "capability": "learning",
          "file": "memory/systems/core.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/learn_to_learn.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/simple_store.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/memory_advanced_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/systems/memory_advanced_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/memory_advanced_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "recall",
          "file": "memory/systems/memory_advanced_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/integration_adapters.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/module_integrations.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/exponential_learning.py",
          "confidence": "high"
        },
        {
          "capability": "storage",
          "file": "memory/systems/distributed_memory.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/lazy_loading_embeddings.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/causal_identity_tracker.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/meta_learning_patterns.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/systems/meta_learning_patterns.py",
          "confidence": "high"
        },
        {
          "capability": "storage",
          "file": "memory/systems/bio_symbolic_memory.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/neurosymbolic_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/neocortical/concept_hierarchy.py",
          "confidence": "medium"
        },
        {
          "capability": "retrieval",
          "file": "memory/neocortical/neocortical_network.py",
          "confidence": "medium"
        },
        {
          "capability": "learning",
          "file": "memory/neocortical/neocortical_network.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/core/interfaces/episodic_interface.py",
          "confidence": "medium"
        },
        {
          "capability": "storage",
          "file": "memory/systems/memory_learning/memory_manager.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.7207207207207207
    },
    "identity": {
      "status": "functional",
      "files_scanned": 148,
      "functional_files": 98,
      "capabilities": [
        {
          "capability": "authentication",
          "file": "identity/qrg_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/identity_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/qrg_showcase.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/deployment_package.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/deployment_package.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/qrg_100_percent_coverage.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/qrg_coverage_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/auth_backend/multi_user_sync.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/auth_backend/trust_scorer.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/auth_backend/trust_scorer.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/auth_backend/authentication_server.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/auth_backend/authentication_server.py",
          "confidence": "high"
        },
        {
          "capability": "profile",
          "file": "identity/auth_backend/authentication_server.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/auth_backend/pqc_crypto_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/auth_backend/qr_entropy_generator.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/tools/onboarding_cli.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/auth_utils/cultural_safety_checker.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/qrs_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/qrs_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/core/qrs_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/lambd_id_service.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/core/user_tier_mapping.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/enterprise/auth.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/enterprise/auth.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/auth/constitutional_gatekeeper.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/auth/constitutional_gatekeeper.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/auth/qrg_generators.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/auth/qrg_generators.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/auth/qrg_generators.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/auth/cultural_profile_manager.py",
          "confidence": "high"
        },
        {
          "capability": "validation",
          "file": "identity/public/lambda_id_previewer.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/api/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/api/api.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/api/api.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/api/api.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/visualization/lukhas_orb.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/id_service/lambd_id_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/core/swarm/tier_aware_swarm_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/colonies/consciousness_verification_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/colonies/dream_verification_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/auth/dream_auth.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/auth/bio_symbolic_fusion.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/auth/biometric_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/auth/biometric_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/sent/consent_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/commercial/commercial_module.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/integrations/inference_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/integrations/memory_connector.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/glyph/distributed_glyph_generation.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/core/glyph/glyph_pipeline.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/events/identity_event_types.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/onboarding/onboarding_config.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/onboarding/onboarding.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/core/onboarding/onboarding.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/qrg/qrg_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/qrg/qrg_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/sing/sso_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/sing/sso_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/tier/tier_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/core/tier/tier_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/core/tier/tier_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/api/auth/onboarding.py",
          "confidence": "medium"
        },
        {
          "capability": "profile",
          "file": "identity/api/auth/onboarding.py",
          "confidence": "medium"
        },
        {
          "capability": "authentication",
          "file": "identity/api/auth/flows.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/api/controllers/lambd_id_controller.py",
          "confidence": "medium"
        },
        {
          "capability": "validation",
          "file": "identity/api/routes/lambd_id_routes.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.6621621621621622
    },
    "bio": {
      "status": "functional",
      "files_scanned": 49,
      "functional_files": 32,
      "capabilities": [
        {
          "capability": "endocrine",
          "file": "bio/endocrine_integration.py",
          "confidence": "high"
        },
        {
          "capability": "signal",
          "file": "bio/bio_utilities.py",
          "confidence": "medium"
        },
        {
          "capability": "adaptation",
          "file": "bio/bio_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "endocrine",
          "file": "bio/simulation_controller.py",
          "confidence": "medium"
        },
        {
          "capability": "endocrine",
          "file": "bio/endocrine_daily_operations.py",
          "confidence": "high"
        },
        {
          "capability": "signal",
          "file": "bio/core/symbolic_adaptive_threshold_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "signal",
          "file": "bio/core/symbolic_preprocessing_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "synthesis",
          "file": "bio/core/bio_symbolic_swarm_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "signal",
          "file": "bio/core/symbolic_anomaly_filter_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "homeostasis",
          "file": "bio/core/symbolic_bio_symbolic.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.6530612244897959
    },
    "quantum": {
      "status": "functional",
      "files_scanned": 93,
      "functional_files": 77,
      "capabilities": [
        {
          "capability": "processing",
          "file": "quantum/validator.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/system_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "measurement",
          "file": "quantum/web_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/coordinator.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/service.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/service.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/system.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/awareness_system.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/voice_enhancer.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/healix_mapper.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/bio_optimization_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/bio.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/dream_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/dream_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/dream_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/consensus_system.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/processor.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/bio_components.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/integration.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/distributed_quantum_architecture.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/bio_crista_optimizer_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/attention_economics.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/attention_economics.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/abas_quantum_specialist.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/layer.py",
          "confidence": "medium"
        },
        {
          "capability": "measurement",
          "file": "quantum/layer.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/bio_system.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/neuro_symbolic_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/processing_core.py",
          "confidence": "high"
        },
        {
          "capability": "entanglement",
          "file": "quantum/processing_core.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/bio_multi_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/entanglement.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/entanglement.py",
          "confidence": "high"
        },
        {
          "capability": "superposition",
          "file": "quantum/entanglement.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/phase_quantum_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/core/ethics_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/core/ethics_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/core/ethics_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/core/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/core/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/core/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "measurement",
          "file": "quantum/core/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/core/neural_symbolic_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/core/neuro_symbolic_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/core/neuro_symbolic_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/core/neuro_symbolic_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/processing/quantum_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/processing/quantum_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "measurement",
          "file": "quantum/processing/quantum_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/processing/quantum_bio_coordinator.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/processing/quantum_oscillator.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/processing/quantum_consensus_system_enhanced.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/processing/quantum_consensus_system_enhanced.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/processing/quantum_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/utils/add_module_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/utils/add_module_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/utils/add_module_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/utils/add_poetic_headers.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/utils/add_poetic_headers.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/utils/regenerate_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/utils/regenerate_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/utils/regenerate_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/utils/fix_module_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/utils/fix_module_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/utils/fix_module_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/utils/add_compliant_headers.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/utils/add_compliant_headers.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/utils/add_compliant_headers.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/utils/add_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/utils/add_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/utils/add_verbose_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/utils/add_verbose_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "superposition",
          "file": "quantum/utils/add_verbose_intelligent_descriptions.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/systems/quantum_entanglement.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/systems/quantum_entanglement.py",
          "confidence": "high"
        },
        {
          "capability": "processing",
          "file": "quantum/systems/quantum_processing_core.py",
          "confidence": "high"
        },
        {
          "capability": "entanglement",
          "file": "quantum/systems/quantum_processing_core.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/systems/quantum_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/systems/quantum_processor.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "quantum/systems/quantum_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "entanglement",
          "file": "quantum/quantum_processing/quantum_engine.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.8279569892473119
    },
    "emotion": {
      "status": "functional",
      "files_scanned": 17,
      "functional_files": 11,
      "capabilities": [
        {
          "capability": "processing",
          "file": "emotion/dreamseed_upgrade.py",
          "confidence": "medium"
        },
        {
          "capability": "regulation",
          "file": "emotion/dreamseed_upgrade.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "emotion/dreamseed_unified.py",
          "confidence": "medium"
        },
        {
          "capability": "regulation",
          "file": "emotion/dreamseed_unified.py",
          "confidence": "medium"
        },
        {
          "capability": "regulation",
          "file": "emotion/emotion_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "processing",
          "file": "emotion/tools/emotional_echo_detector.py",
          "confidence": "medium"
        },
        {
          "capability": "response",
          "file": "emotion/tools/emotional_echo_detector.py",
          "confidence": "medium"
        },
        {
          "capability": "regulation",
          "file": "emotion/mood_regulation/mood_regulator.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.6470588235294118
    },
    "orchestration": {
      "status": "functional",
      "files_scanned": 349,
      "functional_files": 211,
      "capabilities": [
        {
          "capability": "integration",
          "file": "orchestration/integration_hub.py",
          "confidence": "high"
        },
        {
          "capability": "workflow",
          "file": "orchestration/workflow_engine.py",
          "confidence": "high"
        },
        {
          "capability": "integration",
          "file": "orchestration/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "coordination",
          "file": "orchestration/colony_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/colony_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/colony_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/integration_engine.py",
          "confidence": "high"
        },
        {
          "capability": "coordination",
          "file": "orchestration/master_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/master_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/master_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/master_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/agent_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/base.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/apis/drift_monitoring_api.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/apis/drift_monitoring_api.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/apis/code_process_integration_api.py",
          "confidence": "high"
        },
        {
          "capability": "integration",
          "file": "orchestration/integration/human_in_the_loop_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/agents/meta_cognitive_orchestrator_alt.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/specialized/lambda_dependa_bot.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/examples/endocrine_module_example.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/symbol_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/brain_integration.py",
          "confidence": "high"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/us_institutional_awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/eu_awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/eu_ai_transparency.py",
          "confidence": "medium"
        },
        {
          "capability": "coordination",
          "file": "orchestration/brain/research_awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/research_awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/brain/autonomous_github_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/autonomous_github_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/awareness_engine_elevated.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/github_vulnerability_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/core_system.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/brain/lambda_bot_batch_processor.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
          "confidence": "high"
        },
        {
          "capability": "workflow",
          "file": "orchestration/brain/autonomous_system.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/cognitive_core.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/cognitive_core.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/brain/lambdabot_autonomous_fixer.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "coordination",
          "file": "orchestration/brain/MultiBrainSymphony.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/MultiBrainSymphony.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/demo.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/collaborative_ai_agent_system.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/collaborative_ai_agent_system.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/GlobalInstitutionalFramework.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/core_modules/controller.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/core_modules/controller.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/core_modules/workflow_engine.py",
          "confidence": "high"
        },
        {
          "capability": "coordination",
          "file": "orchestration/core_modules/orchestration_service.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/core_modules/orchestration_service.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/core_modules/orchestration_service.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/core_modules/orchestration_service.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/core_modules/core_integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "coordination",
          "file": "orchestration/monitoring/remediator_agent.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/monitoring/remediator_agent.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/monitoring/reflection_layer.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/dream/dream_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/interfaces/plugin_registry.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/security/dast/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/security/dast/intelligence.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/security/dast/api.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/security/dast/api.py",
          "confidence": "medium"
        },
        {
          "capability": "workflow",
          "file": "orchestration/security/dast/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/security/dast/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/security/dast/processors.py",
          "confidence": "medium"
        },
        {
          "capability": "coordination",
          "file": "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/mesh/cognitive_mesh_coordinator.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/visualization/memory_helix_visualizer.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/core/azure_free_tier_strategy.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/core/types.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/spine/accent_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/integration/brain_integration.py",
          "confidence": "high"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/personality/voice_personality.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/consciousness/memory_identity.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/abstract_reasoning/interface.py",
          "confidence": "medium"
        },
        {
          "capability": "coordination",
          "file": "orchestration/brain/abstract_reasoning/oscillator.py",
          "confidence": "medium"
        },
        {
          "capability": "coordination",
          "file": "orchestration/brain/abstract_reasoning/bio_quantum_radar_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/abstract_reasoning/bio_quantum_radar_integration.py",
          "confidence": "high"
        },
        {
          "capability": "management",
          "file": "orchestration/brain/compliance/ai_compliance_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/reasoning/symbolic_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/neuro_symbolic/hybrid_integration.py",
          "confidence": "high"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/neuro_symbolic/neuro_symbolic_integration.py",
          "confidence": "high"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/ethics/ethical_hierarchy.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/unified_integration/adapters/awareness_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/unified_integration/adapters/bio_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/unified_integration/adapters/dream_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/unified_integration/adapters/voice_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/unified_integration/adapters/legacy_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/unified_integration/adapters/cognitive_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/unified_integration/adapters/brain_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/brain/meta/cognition/reflection_layer.py",
          "confidence": "medium"
        },
        {
          "capability": "management",
          "file": "orchestration/monitoring/sub_agents/memory_cleaner.py",
          "confidence": "medium"
        },
        {
          "capability": "integration",
          "file": "orchestration/monitoring/sub_agents/ethics_guardian.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.6045845272206304
    },
    "api": {
      "status": "functional",
      "files_scanned": 12,
      "functional_files": 4,
      "capabilities": [
        {
          "capability": "service",
          "file": "api/services.py",
          "confidence": "high"
        },
        {
          "capability": "endpoint",
          "file": "api/controllers.py",
          "confidence": "medium"
        },
        {
          "capability": "service",
          "file": "api/controllers.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "api/controllers.py",
          "confidence": "high"
        },
        {
          "capability": "endpoint",
          "file": "api/api_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "service",
          "file": "api/api_hub.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.3333333333333333
    },
    "security": {
      "status": "functional",
      "files_scanned": 8,
      "functional_files": 2,
      "capabilities": [
        {
          "capability": "compliance",
          "file": "security/moderator.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.25
    }
  },
  "entry_points": {
    ".pwm_cleanup_archive/main.py": {
      "type": "main_executable",
      "functional": true
    },
    "quantum/main.py": {
      "type": "main_executable",
      "functional": true
    },
    "core/interfaces/main.py": {
      "type": "main_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/main.py": {
      "type": "main_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/main.py": {
      "type": "main_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/main.py": {
      "type": "main_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/security/main.py": {
      "type": "main_executable",
      "functional": true
    },
    "features/symbolic/security/main.py": {
      "type": "main_executable",
      "functional": true
    },
    "dream/oneiric/oneiric_core/main.py": {
      "type": "main_executable",
      "functional": true
    },
    "PWM_OPERATIONAL_SUMMARY.py": {
      "type": "script_executable",
      "functional": true
    },
    "PWM_WORKSPACE_STATUS_ANALYSIS.py": {
      "type": "script_executable",
      "functional": true
    },
    "test_governance.py": {
      "type": "script_executable",
      "functional": true
    },
    "PWM_SECURITY_COMPLIANCE_GAP_ANALYSIS.py": {
      "type": "script_executable",
      "functional": true
    },
    "test_comprehensive_governance.py": {
      "type": "script_executable",
      "functional": true
    },
    "pwm_deep_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    "PWM_FUNCTIONAL_ANALYSIS.py": {
      "type": "script_executable",
      "functional": true
    },
    "PWM_MISSING_COMPONENTS_ANALYZER.py": {
      "type": "script_executable",
      "functional": true
    },
    "test_enhanced_governance.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning_advanced/lukhas_id_enhanced_reasoning_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "neural_architecture_advanced/brain_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "neural_architecture_advanced/federated_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "neural_architecture_advanced/quantum_neuro_symbolic_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "neural_architecture_advanced/visionary_orchestrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "foundry/lambda_sage.py": {
      "type": "script_executable",
      "functional": true
    },
    "foundry/symbolic_foundry.py": {
      "type": "script_executable",
      "functional": true
    },
    "foundry/lambda_mirror.py": {
      "type": "script_executable",
      "functional": true
    },
    "trace/commit_log_checker.py": {
      "type": "script_executable",
      "functional": true
    },
    "trace/drift_dashboard_visual.py": {
      "type": "script_executable",
      "functional": true
    },
    "trace/drift_tools.py": {
      "type": "script_executable",
      "functional": true
    },
    "trace/symbolic_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    "trace/restabilization_index.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/minimal_actor.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/apply_api_fixes.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/integrated_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/ai_interface.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/resource_efficiency_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/resource_scheduler.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/symbolic_contract.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/resource_optimization_integration.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/id.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/distributed_tracing.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/api_diff_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/p2p_fabric.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/benchmark_swarm.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/symbolic_drift_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/integrated_safety_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/symbolic_boot.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/enhanced_swarm.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/event_sourcing.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/symbolic_arbitration.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/energy_consumption_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/practical_optimizations.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/demo_coordination.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/notion_sync.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/supervision.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/circuit_breaker.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/efficient_communication.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/observability_steering.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/task_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/validation_script_fixes.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/mailbox.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/event_replay_snapshot.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/monitoring_observability.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/quantized_thought_cycles.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/targeted_api_fixes.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/direct_ai_router.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/actor_model.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/agent_coordination.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/swarm_visualizer.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/memoria.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/actor_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/governance.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/state_management.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/validation.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/openai_memory_adapter.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/service.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/memory_optimization.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/distributed_state_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/dreamseed_example.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/lightweight_concurrency.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/qrg_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/trace.py": {
      "type": "script_executable",
      "functional": false
    },
    "identity/interface.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/qrg_showcase.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/deployment_package.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/qrg_100_percent_coverage.py": {
      "type": "script_executable",
      "functional": true
    },
    "security/self_healing_eu_compliance_monitor.py": {
      "type": "script_executable",
      "functional": false
    },
    "creativity/service.py": {
      "type": "script_executable",
      "functional": true
    },
    "creativity/creative_expression_processor.py": {
      "type": "script_executable",
      "functional": false
    },
    "creativity/healix_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    "creativity/creative_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "creativity/advanced_haiku_generator.py": {
      "type": "script_executable",
      "functional": true
    },
    "creativity/quantum_creative_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/safe_consolidation_tool.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/fix_imports_after_cleanup.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/deploy_commercial_apis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/professional_audit_tool.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/fix_imports_tool.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/consolidate_properly.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/main_fastapi.py": {
      "type": "script_executable",
      "functional": true
    },
    "bridge/symbolic_memory_mapper.py": {
      "type": "script_executable",
      "functional": true
    },
    "bridge/openai_core_service.py": {
      "type": "script_executable",
      "functional": true
    },
    "bridge/trace_logger.py": {
      "type": "script_executable",
      "functional": true
    },
    "bridge/symbolic_dream_bridge.py": {
      "type": "script_executable",
      "functional": true
    },
    "bridge/symbolic_reasoning_adapter.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/service.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/metalearningenhancementsystem.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/neural_integrator.py": {
      "type": "script_executable",
      "functional": false
    },
    "learning/adaptive_meta_learning.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/meta_learning_recovery.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/service.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/cognitive_architecture_controller.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/openai_consciousness_adapter.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/quantum_consciousness_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "tests/test_main_server.py": {
      "type": "script_executable",
      "functional": true
    },
    "tests/test_audit_trail.py": {
      "type": "script_executable",
      "functional": true
    },
    "narrative/symbolic_weaver.py": {
      "type": "script_executable",
      "functional": true
    },
    "meta/HEADER_FOOTER_STANDARD.py": {
      "type": "script_executable",
      "functional": true
    },
    "compliance/compliance_digest.py": {
      "type": "script_executable",
      "functional": true
    },
    "compliance/A-consent-verifier.py": {
      "type": "script_executable",
      "functional": false
    },
    "compliance/audit_log.py": {
      "type": "script_executable",
      "functional": false
    },
    "reasoning/id_reasoning_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/\u039bBot_reasoning.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/oracle_predictor.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/master_loop.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/LBot_reasoning_processed.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/ethical_reasoning_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/reasoning_colony.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/scaffold_modules_reasoning_engine.py": {
      "type": "script_executable",
      "functional": false
    },
    "reasoning/abstract_reasoning_demo.original.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning_advanced/metalearningenhancementsystem.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning_advanced/adaptive_meta_learning_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning_advanced/enhancement_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning_advanced/meta_learning_recovery.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning_advanced/integrated_system_orchestrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/service.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/policy_validator.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/policy_engine.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/governance_engine.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/batch_guard.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/tier_enforcer.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/audit_ethics_monitor.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/ethical_drift_detector.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/redteam_sim.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/export_report.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/quantum_mesh_integrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/ethical_auditor.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/meg_guard.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/ethics.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/ethical_reasoning_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/governance_validator.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/decision_framework.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/governance_model.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/ethical_evaluator.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/dao_community.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/compliance_validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/recognition.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/symbolic_voice_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/voice_narrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/speech_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/dream_voice_pipeline.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/audio_processor.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/audio_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "devtools/consolidate_duplicates.py": {
      "type": "script_executable",
      "functional": true
    },
    "devtools/practical_integration_hub.py": {
      "type": "script_executable",
      "functional": true
    },
    "devtools/smart_consolidation.py": {
      "type": "script_executable",
      "functional": true
    },
    "devtools/INTEGRATION_ACHIEVEMENT_REPORT.py": {
      "type": "script_executable",
      "functional": true
    },
    "diagnostics/entropy_radar.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/workflow_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/main_node.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/service_registry.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/integration_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/learning_initializer.py": {
      "type": "script_executable",
      "functional": true
    },
    "governance/compliance_report_generator.py": {
      "type": "script_executable",
      "functional": true
    },
    "governance/pwm_workspace_guardian.py": {
      "type": "script_executable",
      "functional": true
    },
    "governance/EthicalAuditor.py": {
      "type": "script_executable",
      "functional": false
    },
    "governance/enhanced_pwm_guardian.py": {
      "type": "script_executable",
      "functional": true
    },
    "api/controllers.py": {
      "type": "script_executable",
      "functional": true
    },
    "api/memory_endpoints.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/dream_pipeline.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/dream_stats.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/dream_replay.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/oracle_dream.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/dream_mutator.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/openai_dream_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/immersive_ingestion.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/dream_injector.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/dream_data_sources.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/dream_summary_generator.py": {
      "type": "script_executable",
      "functional": false
    },
    "quantum/validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/web_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/service.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/metadata.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/healix_mapper.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/processor.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/vault_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/certificate_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/setup_api_keys.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/abas_quantum_specialist.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/creative_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/\u039bBot_quantum_security.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/processing_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/bio_multi_orchestrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/api_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/entanglement.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/phase_quantum_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning_advanced/ethical/EthicalReasoningSystem.py": {
      "type": "script_executable",
      "functional": true
    },
    "lukhas_personality/voice/voice_narrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "bio/core/symbolic_stress_gate.py": {
      "type": "script_executable",
      "functional": true
    },
    "bio/core/bio_symbolic_swarm_hub.py": {
      "type": "script_executable",
      "functional": true
    },
    "bio/core/symbolic_glyph_id_hash.py": {
      "type": "script_executable",
      "functional": true
    },
    "bio/core/symbolic_mito_ethics_sync.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/colonies/memory_colony_enhanced.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/colonies/governance_colony_enhanced.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/identity/mapper.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/identity/processor.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/identity/engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/identity/persona_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/identity/manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/introspection/introspector.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/ethics/dream_ethics_injector.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/audit/audit_integration_example.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/audit/audit_decision_embedding_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/ai/integration_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/examples/mailbox_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/meta_learning/remediator_agent.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/meta_learning/enhancement_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/monitoring/drift_monitor.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/neural_architectures/neural_integrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/cli.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/launcher.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/socket.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/web_formatter.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/symbolic/drift/symbolic_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/neural_architectures/abas/abas_quantum_specialist.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/services/personality/empathy.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/ui/gui_launcher.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/nias/generate_nias_docs.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/logic/voice_narration_player.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/logic/agent_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/voice/listen.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/voice/edge_voice.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/ui/components/audio_exporter.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/tools/dao/dao_vote.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/tools/dao/dao_propose.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/tools/cli/speak.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/tools/cli/command_registry.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/voice/core/sayit.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/agent_logic/voice_narration_player.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/as_agent/sample_payloads/trace_log_viewer.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/as_agent/utils/symbolic_github_export.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/as_agent/news_and_social/s_dispatcher.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/replay_queue.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/as_agent/sys/nias/voice_narrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/feedback_log_viewer.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/dream_narrator_queue.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/validate_payload.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/replay_heatmap.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/generate_payload_cli.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/dream_log_viewer.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/as_agent/sys/nias/replay_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/feedback_loop.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/nias/feedback_insight_cli.py": {
      "type": "script_executable",
      "functional": false
    },
    "core/interfaces/as_agent/sys/nias/narration_controller.py": {
      "type": "script_executable",
      "functional": true
    },
    "core/interfaces/as_agent/sys/dast/launcher.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/tools/lambda_vault_scan.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/tools/memory_drift_auditor.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/tools/lambda_archive_inspector.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/core/unified_memory_orchestrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/proteome/symbolic_proteome.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/hippocampal/theta_oscillator.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/hippocampal/pattern_separator.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/hippocampal/hippocampal_buffer.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/episodic/episodic_replay_buffer.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/adapters/colony_memory_adapter.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/protection/symbolic_quarantine_sanctum.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/fold_system/distributed_memory_fold.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/resonance/resonant_memory_access.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/governance/ethical_drift_governor.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/integrity/collapse_hash.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/replay/replay_buffer.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/scaffold/atomic_memory_scaffold.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_recall.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_safety_features.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/multimodal_memory_support.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/dream_memory_export.py": {
      "type": "script_executable",
      "functional": false
    },
    "memory/systems/optimized_memory_item.py": {
      "type": "script_executable",
      "functional": false
    },
    "memory/systems/causal_memory_chains.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/resonance_memory_retrieval.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/integration_example.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_comprehensive_new.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_comprehensive.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/core.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/processor.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/trace_injector.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/agent_memory.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_trace.py": {
      "type": "script_executable",
      "functional": false
    },
    "memory/systems/memory_encryptor.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_advanced_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/healix_memory_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/tier_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_seeder.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/integration_adapters.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/module_integrations.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/distributed_memory.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/lazy_loading_embeddings.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/meta_learning_patterns.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memory_viz.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/neurosymbolic_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/colony_swarm_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/agent_memory_trace_animator.py": {
      "type": "script_executable",
      "functional": false
    },
    "memory/systems/chatgpt_memory_integrator.py": {
      "type": "script_executable",
      "functional": false
    },
    "memory/consolidation/sleep_cycle_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/consolidation/memory_consolidator.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/consolidation/ripple_generator.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/repair/advanced_trauma_repair.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/neocortical/concept_hierarchy.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/neocortical/neocortical_network.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/neocortical/semantic_extractor.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memoria/dreams.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memoria/replayer.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memoria/reflector.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memoria/dream_cron.py": {
      "type": "script_executable",
      "functional": true
    },
    "memory/systems/memoria/dreams_alt.py": {
      "type": "script_executable",
      "functional": false
    },
    "memory/systems/memoria/gpt_reflection.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/tools/onboarding_cli.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/lambd_id_service.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/user_tier_mapping.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/brain_identity_connector.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/auth/qrg_generators.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/diagnostics/insight_cli.py": {
      "type": "script_executable",
      "functional": false
    },
    "identity/governance/policy_board.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/id_service/entropy_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/id_service/portability_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/id_service/lambd_id_validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/id_service/lambd_id_entropy.py": {
      "type": "script_executable",
      "functional": true
    },
    "identity/core/id_service/lambd_id_generator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/safe_consolidation_tool.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/fix_imports_after_cleanup.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/deploy_commercial_apis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/professional_audit_tool.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/fix_imports_tool.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/consolidate_properly.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/main_fastapi.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/qrg_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/generate_autotest_docs.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/brain_integration_integration_v1_backup_20250731_120345.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_unified_memory.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/dream_convergence_tester.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/autotest_validation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/lukhus_ultimate_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/bio_test_oracle.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_identity_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_oracle.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/run_basic_tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_coordination_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_mailbox_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/simple_512_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_migrations.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_lazy_loading.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_512_dim_optimization.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_p2p_communication.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_with_mocks.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tags_debug.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/brain_integration_v1_backup_20250731_120345.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/extreme_ethical_testing.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/simple_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_tiered_state_management.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_lightweight_concurrency.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/run_integration_tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/lambda_shield_tester.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_create_qrglyph.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/integration_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_image_processing_pipeline.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/verifier_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_reorganization.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/dao/log_viewer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/dao/dao_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/entropy_fusion.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/setup_project.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/qr_encoder.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/verifold_replay_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/hardware_entropy_seed.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/web_qr_verifier.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/verifold_gui.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/verifold_hash_pq.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/web_dashboard.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/verifold_hash_utils.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/yubi_seeder.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/verifold_verifier.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/verifold_chain.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/ledger_auditor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/narrative_utils.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/journal_mode.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/qrglyphs/qrglymph_public.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/dream_engine/publish_queue_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/web_journal/launch_web_journal.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/web_journal/web_journal_app.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/scanner_pwa/scanner_backend.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/features_analytics/archetype/lambda_sage.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/archive/timestamped/brain_integration/brain_integration_20250620_013824.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/minimal_actor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/apply_api_fixes.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/integrated_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/ai_interface.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/resource_efficiency_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/resource_scheduler.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic_contract.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/resource_optimization_integration.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/id.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/distributed_tracing.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/api_diff_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/p2p_fabric.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/benchmark_swarm.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic_drift_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/integrated_safety_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic_boot.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/enhanced_swarm.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/event_sourcing.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic_arbitration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/energy_consumption_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/practical_optimizations.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/demo_coordination.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/notion_sync.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/supervision.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/circuit_breaker.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/efficient_communication.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/observability_steering.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/task_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/validation_script_fixes.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/mailbox.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/event_replay_snapshot.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/monitoring_observability.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/quantized_thought_cycles.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/targeted_api_fixes.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/direct_ai_router.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/actor_model.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/agent_coordination.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/swarm_visualizer.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/memoria.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/actor_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/governance.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/state_management.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/validation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/validator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/web_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/service.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/metadata.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/healix_mapper.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/vault_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/certificate_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/setup_api_keys.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/abas_quantum_specialist.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/creative_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/\u039bBot_quantum_security.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_multi_orchestrator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/api_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/entanglement.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/phase_quantum_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/lukhas_personality/voice/voice_narrator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/core/bio_symbolic_swarm_hub.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/mito_ethics_sync.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/stress_gate.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/glyph_id_hash.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/colonies/memory_colony_enhanced.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/colonies/governance_colony_enhanced.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/identity/mapper.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/identity/processor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/identity/engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/identity/persona_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/identity/manager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/introspection/introspector.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/ethics/dream_ethics_injector.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/audit/audit_integration_example.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/audit/audit_decision_embedding_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/ai/integration_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/examples/mailbox_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/meta_learning/remediator_agent.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/meta_learning/enhancement_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/monitoring/drift_monitor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/neural_architectures/neural_integrator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/cli.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/launcher.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/socket.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/web_formatter.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic/drift/symbolic_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/neural_architectures/abas/abas_quantum_specialist.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/services/personality/empathy.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/ui/gui_launcher.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/nias/generate_nias_docs.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/logic/voice_narration_player.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/logic/agent_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/voice/listen.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/voice/edge_voice.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/ui/components/audio_exporter.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/tools/dao/dao_vote.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/tools/dao/dao_propose.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/tools/cli/speak.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/tools/cli/command_registry.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/voice/core/sayit.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/agent_logic/voice_narration_player.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sample_payloads/trace_log_viewer.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/utils/symbolic_github_export.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/news_and_social/s_dispatcher.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/replay_queue.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/voice_narrator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/feedback_log_viewer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/dream_narrator_queue.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/validate_payload.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/replay_heatmap.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/generate_payload_cli.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/dream_log_viewer.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/replay_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/feedback_loop.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/feedback_insight_cli.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/nias/narration_controller.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/dast/launcher.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/connection_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/config/read_settings.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/integration/system_coordinator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/integration/connectivity_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/integration/system_bridge.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/security/glyph_redactor_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/collapse/entropy_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/drift/symbolic_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/drift/trace_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/identity_engine.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/creative_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/neuro_symbolic_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_colony.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_oscillator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_consensus_system_enhanced.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_bio_bulletproof_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_module_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_poetic_headers.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/fix_proper_ascii.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/fix_ascii_headers.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/regenerate_intelligent_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/fix_module_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_compliant_headers.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_intelligent_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_verbose_intelligent_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_template_reference.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_entanglement.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_processing_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_processor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_validator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/bulletproof_system.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/connectivity_consolidator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/digest_extractor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/focused_connectivity_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/core_module_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/task_migration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/test_knowledge_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/cleanup_and_organize.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/update_init_files.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/fix_corrupted_lukhas.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/fix_remaining_issues.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/test_entity_activation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/integrate_hubs.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/connect_all_hubs.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/comprehensive_isolation_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/fix_headers.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/safe_workspace_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/collapse_simulator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/interactive_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/task_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/entity_activator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory_stress_tests_light.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_priority_modules.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_quantum_security_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_documentation_single.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_security_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_glyph_recall_drift_correlation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_actor_colony_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_creativity_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_affect_stagnation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_integration_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_drift_regression.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_quantized_cycles.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_system_integration_e2e.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_ethical_reasoning_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/auditor_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_nias_transparency_layers.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_emotion_recursion.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_policy_engines.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_integration_complete.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_self_reflective_debugger_correlation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_entropy_radar.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_cleaner_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_event_bus.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_replay_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_neuro_symbolic_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold_universal_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_lambda_governor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_security_core_broken.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_ethical_drift_sentinel.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_golden_trio_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory_stress_tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_quantum_ethics_mesh.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_evolution_recursion.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_multimodal_memory_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_ai_functionality.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_attention_memory.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_abas_quantum_specialist_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_reflection_layer_metrics.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_integrated_safety.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_dream_engine_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_quantum_identity_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_dream_system_complete.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_ethical_drift_governor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_metalearning_enhancement_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_qrg_coverage_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_all_interactive.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_performance_benchmarks.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_reflection_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_integrated_safety_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_cleaner_dreams.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_glyph_memory_timeline.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_quantum_coordinator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/advanced_memory_fold_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_connectivity_phase3.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_learning_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_colony_integrations.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_reflection_standalone.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_symbolic_replay_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_ethics_guardian_assessment.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_emotion_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_episodic_memory_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_security_core_fixed.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_lambda_bot_consciousness_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_security_fixes.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_runner.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_oracle_predictor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_nias_transparency_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold_performance.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_drift_recovery.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_voice_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_dream_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_dream_snapshot_export.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_governance_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_optimized_memory_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_all_integrations.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_brain_identity_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_lightweight_concurrency.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_symbolic_reasoning.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_tracker_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_verifold_unified.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_cleaner_cleanup.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_self_reflective_debugger_ml_models.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_security_validation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_ethics_guardian_realignment.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_simple_optimized_memory.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_introspection_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_actor_supervision.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_simple_dream_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_guardian_system_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_stress_final.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_trauma_repair_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/run_integration_tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_brain_colony_coordinator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_phase3b_memory_recurrence.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_chaos_engineering.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_bio_symbolic_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/real_world_creativity_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_safety_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_comprehensive.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_symbiotic_swarm_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_golden_trio_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_tier_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_dream_system_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/run_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/high_confidence_matcher.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/update_branding.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/focused_connectivity_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/audit_trail_drift_self_healing_system.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/show_unused_files.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/intelligent_file_integrator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/filter_meaningful_matches.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/connectivity_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/integration_impact_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/golden_trio_integration_tasks.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/unused_files_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/audit_drift_self_healing_hitlo_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/core_connectivity_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/simple_audit_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/quick_core_connectivity_check.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/phase3_integration_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/critical_unused_files.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/user_centric_audit_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/AUDIT_DRIFT_SELF_HEALING_IMPLEMENTATION_ROADMAP.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/decision_audit_trail_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/ethics_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/memory_integration_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/connectivity_and_broken_path_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/quick_integration_finder.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/connectivity_assessment.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/practical_audit_integration_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/intelligent_unused_integrator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/missing_components_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/p2p_collaboration_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_coherence_diagnostic.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_coherence_optimization_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/test_bio_symbolic_enhanced.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/dream_openai_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/api_usage_examples.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_comprehensive_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/perception_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/dashboard_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/bridge_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/clean_whitespace.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/security_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/api_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/optimized_actor_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/simple_actor_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/reasoning_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/trace_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/configuration_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/emotion_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/learning_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/symbolic_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/voice_system_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/run_colony_validation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/release.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/generate_connectivity_visualization.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/check_circular_imports.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_imports.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/energy_efficiency.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_features_imports.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/generate_report.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/check_cross_layer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/analyze_critical_broken_imports.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_import_paths.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/update_documentation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/analyze_dependencies.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/find_unused_files.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/rename_quantum_references.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/migrate_to_enhanced_swarm.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/test_api.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_memory_imports.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_tests_imports.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_core_imports.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/connect_critical_systems.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/check_syntax.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/entity_activation/entity_activator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/parsers/test_knowledge_loader.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/prediction/test_prophet.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/prediction/prophet_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/prediction/prophet_predictor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/cli/drift_analyzer_cli.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/cli/ctl.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/init_scripts/init_file_generator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/dev/add_verbose_core_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/bio/test_eeg_sync_bridge.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/bio/test_colony_self_repair.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_governance.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_symbiotic_swarm.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_actor_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_symbolic_drift_analyzer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_agent_coordination.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_energy_consumption_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_resource_optimization_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_mailbox.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_observatory.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_resource_scheduler.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_supervision.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_glyph_memory_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_identity_lineage_validation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_fold_engine_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_fold_entropy_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_memory_optimization.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/identity/test_identity_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/suites/advanced_agi_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/security/test_moderator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_memory_comprehensive_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_dast_components.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_meta_learning_enhancement_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_comprehensive_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_event_replay_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_enterprise_auth_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/consciousness/test_dream_bridge_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/consciousness/test_consciousness_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/consciousness/test_consciousness_integrations.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/consciousness/test_cognitive_adapter_complete_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task16_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task11_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task10_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task5_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task15_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task12_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task13_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task14_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task13_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task14_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/utils/orphan_test_scanner.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/utils/symbolic_test_scaffold.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/utils/test_collector.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/utils/validate_test_env.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/compliance/test_eu_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/compliance/test_ethical_auditor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/compliance/test_global_institutional_framework.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream_system/test_dream_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/unified_grammar/run_tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/unified_grammar/test_grammar_compliance.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/runners/run_tests_resilient.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/symbolic/test_emotion_vocabulary.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/active/test_dream_feedback_propagator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/active/test_strategy_engine_core.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/active/test_mood_tuning_feedback_loop.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/active/test_symptom_reporter.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/monitoring/test_drift_monitor.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_dream_metrics_view.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_tag_flow_visualization.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_rl_dream_cycle.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_dream_ethics_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_memoryscape_viewport.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_dream_seed_entropy.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_dream_sandbox.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_dream_governance_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/hold/simple_security_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/hold/test_security_fixes_verification.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/hold/test_security_fixes_validation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/hold/test_security_fixes.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/emotion/test_emotion_feedback.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/emotion/test_mood_entropy_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/analytics/test_drift_timeline_gen.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/quantum/test_quantum_waveform.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/symbolic/test_archiver.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/monitoring/test_collapse_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task11_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task16_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task09_direct.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task10_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task12_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task07_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task08_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task15_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task14_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task09_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task06_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task13_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task14_simple.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/emotion/affect/test_affect_stagnation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/id_trace_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/qrg_standalone_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/lukhus_qrg_complete_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/qrg_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_voice.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_beautiful_consciousness.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_all.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_chatgpt_memory_integrator.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_autotest_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_quantum_creative_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_brain_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_introspection.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_cretivity.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_batch_efficiency.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_memory_comprehensive.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_symbolic_anomaly_explorer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/creativity/dream_interpreter_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/test_integration_communication.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/quantum_identity_integration_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/core_integration_demo.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/integrated_abot_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/integration_tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/content_enterprise_integration_demo.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/run_integration_tests.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/simple_integration_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/demo_ai_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/consciousness/demo_reflection_layer.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/consciousness/quantum_creative_consciousness_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/consciousness/consciousness_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/tests/bio_quantum_radar_integration_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/tests/quantum_creative_integration_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/tests/debug_brain_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/reasoning/abstract_reasoning_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/reasoning/oracle_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/orchestration_src/adaptive_agi_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/ethics/demo_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/ethics/ethical_sentinel_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/ethics/lambda_governor_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/orchestration/demo_reflection_layer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/orchestration/demo_guardian_system.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/orchestration/demo_complete_guardian.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/demos/memory_system_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/quantum/quantum_security_integration_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/quantum/bio_quantum_radar_comprehensive_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/quantum/quantum_steganographic_demo.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/memory/optimized_memory_system_test_script.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/biological_memory_validation_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/bio_symbolic_coherence_optimization_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/ethical_compliance_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/comprehensive_functional_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/bio_symbolic_coherence_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/actor_throughput_simple_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/test_swarm_coherence_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/api_performance_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/functional_capability_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/ethical_compliance.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/run_comprehensive_test_suite.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/dream_tools_functional_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/real_world_creativity_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/dream_system_functional_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/actor_throughput_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/safety/comprehensive_safety_test_reference.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/safety/integrated_safety_test_script_20250729_064441.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/ethics/ethical_compliance.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/scripts/daily_benchmark_organizer.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/performance/run_quantized_benchmark.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/performance/quantized_cycles_stress_test.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/memory/memory_stress_tests/test_memory_stress_final.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/daily_archives/2025-07-29/safety/scripts/comprehensive_safety_test_reference.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/daily_archives/2025-07-29/safety/scripts/integrated_safety_test_script_20250729_064441.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/temp-scripts/test_integration_success.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/temp-scripts/test_agent1_task10_integration.py": {
      "type": "script_executable",
      "functional": false
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/temp-scripts/practical_integration_hub.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/temp-scripts/INTEGRATION_ACHIEVEMENT_REPORT.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/temp-scripts/test_agent1_task9_service.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/temp-scripts/test_simple_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/temp-scripts/missing_components_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/analysis/analyze_core_overlap.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/analysis/memory_optimization_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/docs/demo_documentation_update.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/docs/update_documentation.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/dev/extract_enumerated_readmes.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/dev/create_clean_delivery_package.py": {
      "type": "script_executable",
      "functional": true
    },
    ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/dev/generate_mega_verbose_readmes.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/meta_adaptive/system.py": {
      "type": "script_executable",
      "functional": false
    },
    "learning/meta_adaptive/adaptive_ux_core.py": {
      "type": "script_executable",
      "functional": false
    },
    "learning/results/trace_reader.py": {
      "type": "script_executable",
      "functional": false
    },
    "learning/meta_learning/federated_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/meta_learning/symbolic_feedback.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/systems/intent_language.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/systems/core_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/systems/symbolic_voice_loop.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning/adaptive_agi/Meta_Learning/symbolic_feedback.py": {
      "type": "script_executable",
      "functional": false
    },
    "learning/adaptive_agi/Meta_Learning/monitor_dashboard.py": {
      "type": "script_executable",
      "functional": false
    },
    "consciousness/cognitive/adapter.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/core/engine_poetic.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/core/engine_complete.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/core/engine_codex.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/core/engine_alt.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/core/engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/quantum_integration/quantum_creative_consciousness.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/quantum_integration/quantum_consciousness_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/awareness/awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/awareness/awareness_processor.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/awareness/awareness_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/systems/validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/systems/integrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/systems/consciousness.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/systems/consciousness_colony_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/systems/lambda_mirror.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/systems/\u039bBot_consciousness_monitor.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/systems/state.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/reflection/lambda_mirror.py": {
      "type": "script_executable",
      "functional": true
    },
    "consciousness/reflection/self_reflection_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/memory/connection_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/config/read_settings.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/integration/system_coordinator.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/integration/connectivity_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/integration/system_bridge.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/symbolic/security/glyph_redactor_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/symbolic/collapse/entropy_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/symbolic/drift/symbolic_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    "features/symbolic/drift/trace_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    "reasoning/dashboard/trace_dashboard.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning_advanced/meta/MetaLearningEnhancement.py": {
      "type": "script_executable",
      "functional": true
    },
    "learning_advanced/federated/FederatedIntegration.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/stabilization/tuner.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/tools/quantum_mesh_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/tools/lambda_auditor.py": {
      "type": "script_executable",
      "functional": false
    },
    "ethics/security/main_node_security_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/security/flagship_security_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/sentinel/ethical_sentinel_dashboard.py": {
      "type": "script_executable",
      "functional": true
    },
    "ethics/safety/compliance_digest.py": {
      "type": "script_executable",
      "functional": true
    },
    "voice/interfaces/eleven_tts.py": {
      "type": "script_executable",
      "functional": true
    },
    "commercial_apis/consciousness_platform/consciousness_api.py": {
      "type": "script_executable",
      "functional": true
    },
    "commercial_apis/memory_services/memory_api.py": {
      "type": "script_executable",
      "functional": true
    },
    "commercial_apis/dream_commerce/dream_api.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/__main__.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/packaging/_musllinux.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/dependency_groups/_lint_dependency_groups.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/dependency_groups/_pip_wrapper.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/dependency_groups/__main__.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/distro/distro.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/distro/__main__.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/cachecontrol/_cmd.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/requests/certs.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/requests/help.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/logging.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/tree.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/console.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/box.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/color.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/align.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/theme.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/default_styles.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/_wrap.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/_log_render.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/emoji.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/layout.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/traceback.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/control.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/__init__.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/palette.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/markup.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/_ratio.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/repr.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/pretty.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/diagnose.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/columns.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/rule.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/pager.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/text.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/highlighter.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/live.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/syntax.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/table.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/progress_bar.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/prompt.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/segment.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/progress.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/_windows.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/cells.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/_win32_console.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/panel.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/styled.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/spinner.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/json.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/padding.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/__main__.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/scope.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/status.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/rich/abc.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/platformdirs/__main__.py": {
      "type": "script_executable",
      "functional": true
    },
    ".venv/lib/python3.12/site-packages/pip/_vendor/pyproject_hooks/_in_process/_in_process.py": {
      "type": "script_executable",
      "functional": true
    },
    ".github/scripts/lambda-bot-conflict-resolver.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/agents/meta_cognitive_orchestrator_alt.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/specialized/lambda_dependa_bot.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/specialized/\u039bDependaBoT_robust.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/specialized/freeze_protection_check.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/specialized/content_enterprise_orchestrator.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/specialized/inter_agent_simulation.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/specialized/loop_recovery_simulator.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/examples/endocrine_module_example.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/symbol_validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/canadian_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/pr_security_review_github_actions.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/brain_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/us_institutional_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/das_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/monitor.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/dynamic_adaptive_dashboard.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/integration_manager.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/validate_pr_security_review.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/eu_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/eu_ai_transparency.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/research_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/autonomous_github_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/awareness_engine_elevated.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/pr_security_review_starter.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/uk_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/github_vulnerability_manager.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/core_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/main_node.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/dream_mutator.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/lambda_bot_batch_processor.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/lambdabot_autonomous_workflow_fixer.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/autonomous_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/cognitive_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/lambdabot_autonomous_fixer.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/fix_lambda_symbols.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/australian_awareness_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/\u039bbot_brain_system.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/pr_security_review_task.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/MultiBrainSymphony.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/GlobalInstitutionalCompliantEngine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/vulnerability_dashboard.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/main_bot.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/demo.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/trace_memoria_logger.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/token_budget_controller.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/collaborative_ai_agent_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/expression.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/unified_self_merge_divergence.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/cpu_friendly_compliance.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/user_feedback/feedback_collector.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/core_modules/controller.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/core_modules/workflow_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/core_modules/orchestration_service.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/monitoring/the_oscillator.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/monitoring/reflection_layer.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/security/dast/verify.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/visualization/healix_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/core/azure_free_tier_strategy.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/core/capability_analyzer.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/core/azure_openai_client.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/core/ai_config.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/core/brand_manager.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/spine/main_loop.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/spine/unified_self.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/spine/emotion_intent_link.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/spine/trait_sync.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/spine/hash.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/spine/emotion_mapper.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/spine/trait_sync_gpt_synb_ref.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/config/settings_loader.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/integration/brain_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/integration/federated_integrator.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/abstract_reasoning/interface.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/abstract_reasoning/bio_quantum_radar_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/output/report_generator.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/rem/generate_dream.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/rem/lidar_emotion_interpreter.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/rem/dream_stats.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/rem/generate_dream_data.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/rem/rem.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/orchestration/the_oscillator.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/orchestration/main_node.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/monitoring/rate_modulator.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/monitoring/remediator_agent.py": {
      "type": "script_executable",
      "functional": false
    },
    "orchestration/brain/dream_engine/visualizer_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/dream_engine/dream_replay_cli.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/neural/neural_intelligence_api.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/neural/neural_intelligence_main.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/meta/cognition/reflection_layer.py": {
      "type": "script_executable",
      "functional": true
    },
    "orchestration/brain/dream_engine/cli/dream_cli.py": {
      "type": "script_executable",
      "functional": true
    },
    "symbolic/vocabularies/usage_examples.py": {
      "type": "script_executable",
      "functional": true
    },
    "symbolic/vocabularies/vocabulary_template.py": {
      "type": "script_executable",
      "functional": false
    },
    "symbolic/vocabularies/emotion_vocabulary.py": {
      "type": "script_executable",
      "functional": true
    },
    "symbolic/bio/mito_ethics_sync.py": {
      "type": "script_executable",
      "functional": true
    },
    "symbolic/bio/stress_gate.py": {
      "type": "script_executable",
      "functional": true
    },
    "symbolic/bio/glyph_id_hash.py": {
      "type": "script_executable",
      "functional": true
    },
    "symbolic/drift/symbolic_drift_tracker.py": {
      "type": "script_executable",
      "functional": true
    },
    "symbolic/drift/symbolic_drift_tracker_trace.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/visualization/dream_timeline_visualizer.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/visualization/visualizer_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/visualization/dream_log_viewer.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/visualization/dream_viewer.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/tools/symbolic_anomaly_explorer.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/tools/symbolic_theme_clusterer.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/tools/run_dream_analysis.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/tools/dream_divergence_map.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/core/dream_replay.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/core/dream_cli.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/core/dream_log_viewer.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/core/dream_injector.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/core/dream_viewer.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/cli/dream_cli.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/cli/dream_replay_cli.py": {
      "type": "script_executable",
      "functional": false
    },
    "dream/dashboard/dream_metrics_view.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/oneiric/oneiric_core/engine/dream_engine_fastapi.py": {
      "type": "script_executable",
      "functional": true
    },
    "dream/base/dream_refold/dream_refold.py": {
      "type": "script_executable",
      "functional": true
    },
    "emotion/tools/emotional_echo_detector.py": {
      "type": "script_executable",
      "functional": true
    },
    "interfaces/api/lambda_bot_api_integration.py": {
      "type": "script_executable",
      "functional": true
    },
    "interfaces/api/v1/grpc/server.py": {
      "type": "script_executable",
      "functional": true
    },
    "deployments/consciousness_platform/consciousness_platform/consciousness_api.py": {
      "type": "script_executable",
      "functional": true
    },
    "deployments/consciousness_platform/examples/example.py": {
      "type": "script_executable",
      "functional": true
    },
    "deployments/memory_services/memory_services/memory_api.py": {
      "type": "script_executable",
      "functional": true
    },
    "deployments/memory_services/examples/example.py": {
      "type": "script_executable",
      "functional": true
    },
    "deployments/dream_commerce/examples/example.py": {
      "type": "script_executable",
      "functional": true
    },
    "deployments/dream_commerce/dream_commerce/dream_api.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/core/identity_engine.py": {
      "type": "script_executable",
      "functional": false
    },
    "quantum/core/creative_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/core/neuro_symbolic_engine.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/processing/quantum_colony.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/processing/quantum_oscillator.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/processing/quantum_consensus_system_enhanced.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/processing/quantum_bio_bulletproof_system.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/add_module_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/add_poetic_headers.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/fix_proper_ascii.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/fix_ascii_headers.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/regenerate_intelligent_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/fix_module_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/add_compliant_headers.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/add_intelligent_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/add_verbose_intelligent_descriptions.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/utils/add_template_reference.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/systems/quantum_entanglement.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/systems/quantum_processing_core.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/systems/quantum_processor.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/systems/quantum_validator.py": {
      "type": "script_executable",
      "functional": true
    },
    "quantum/systems/bio_integration/bulletproof_system.py": {
      "type": "script_executable",
      "functional": false
    },
    "quantum/systems/bio_integration/connectivity_consolidator.py": {
      "type": "script_executable",
      "functional": true
    }
  },
  "critical_analysis": {
    "consciousness": {
      "status": "functional",
      "files_scanned": 55,
      "functional_files": 39,
      "capabilities": [
        {
          "capability": "core",
          "file": "consciousness/service.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/cognitive_architecture_controller.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "consciousness/cognitive_architecture_controller.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "consciousness/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "consciousness/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/quantum_consciousness_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/quantum_consciousness_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/consciousness_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/consciousness_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/core/engine_poetic.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/core/engine_poetic.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "consciousness/core/engine_complete.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "consciousness/core/engine_codex.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/core/engine_codex.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/core/engine_codex.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "consciousness/core/engine_alt.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/core/engine_alt.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/core/engine_alt.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "consciousness/core/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/core/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/core/engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "consciousness/awareness/symbolic_trace_logger.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/awareness/awareness_protocol.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/awareness/bio_symbolic_awareness_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/awareness/awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/awareness/awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "consciousness/awareness/system_awareness.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/awareness/awareness_processor.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/systems/integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/systems/integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "consciousness/systems/integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/systems/consciousness.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/systems/consciousness_colony_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/systems/consciousness_colony_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/systems/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/systems/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/systems/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "consciousness/systems/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "consciousness/systems/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/systems/\u039bBot_consciousness_monitor.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/systems/state.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "consciousness/reflection/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/reflection/lambda_mirror.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/reflection/self_reflection_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "consciousness/systems/cognitive_systems/voice_personality.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "consciousness/systems/dream_engine/dream_reflection_loop.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "consciousness/systems/dream_engine/dream_reflection_loop.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.7090909090909091
    },
    "memory": {
      "status": "functional",
      "files_scanned": 222,
      "functional_files": 160,
      "capabilities": [
        {
          "capability": "core",
          "file": "memory/services.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/voice_memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/structural_conscience.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/memory_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/memory_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "memory/evolution.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "memory/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "memory/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "memory/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/emotional.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/core.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "memory/distributed_state_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/privacy_preserving_memory_vault.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/unified_memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/glyph_memory_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/emotional_memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "memory/drift_memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "memory/emotional_memory_manager_unified.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "memory/quantum_memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "memory/tools/lambda_archive_inspector.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/core/base_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/core/base_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "memory/protection/symbolic_quarantine_sanctum.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/scaffold/atomic_memory_scaffold.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_recall.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "memory/systems/dream_memory_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/dream_memory_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/dream_memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_evolution.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_lock.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_helix.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "memory/systems/causal_memory_chains.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/integration_example.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "memory/systems/integration_example.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/integration_example.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "memory/systems/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_processing.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/core.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/systems/processor.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/trauma_lock.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/agent_memory.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_encryptor.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "memory/systems/helix_mapper.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/helix_mapper.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/simple_store.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/simple_store.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/emotional_memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_advanced_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "memory/systems/memory_advanced_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/memory_advanced_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/systems/healix_memory_core.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/systems/symbolic_delta_compression.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "memory/systems/symbolic_delta_compression.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/symbolic_delta_compression.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/exponential_learning.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/distributed_memory.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/distributed_memory.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/dream_trace_linker.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/dream_integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/causal_identity_tracker.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "memory/systems/memory_research.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/consolidation/sleep_cycle_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/consolidation/memory_consolidator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/neocortical/neocortical_network.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "memory/systems/memory_learning/memory_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "memory/systems/memory_learning/memory_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "memory/systems/memoria/dreams.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.7207207207207207
    },
    "identity": {
      "status": "functional",
      "files_scanned": 148,
      "functional_files": 98,
      "capabilities": [
        {
          "capability": "core",
          "file": "identity/qrg_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/interface.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "identity/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "identity/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/identity_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "identity/identity_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/privacy_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "identity/qrg_showcase.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "identity/deployment_package.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/auth_backend/trust_scorer.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "identity/auth_backend/authentication_server.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "identity/auth_backend/pqc_crypto_engine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "identity/tools/onboarding_cli.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/tools/onboarding_cli.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/tools/onboarding_cli.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/qrs_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/core/qrs_manager.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "identity/enterprise/auth.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/auth/qrg_generators.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/auth/cultural_profile_manager.py",
          "confidence": "high"
        },
        {
          "capability": "controller",
          "file": "identity/auth/adaptive_ui_controller.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "identity/mobile/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "identity/api/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "identity/api/api.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/api/api.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/api/onboarding_api.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/api/onboarding_api.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "identity/core/id_service/entropy_engine.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "identity/core/id_service/lambd_id_entropy.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/swarm/tier_aware_swarm_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/colonies/biometric_verification_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/colonies/consciousness_verification_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/colonies/dream_verification_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "identity/core/auth/dream_auth.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "identity/core/auth/bio_symbolic_fusion.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/health/identity_health_monitor.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/core/sent/consent_manager.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "identity/core/sent/policy_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "identity/core/tagging/identity_tag_resolver.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "identity/core/integrations/inference_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/glyph/distributed_glyph_generation.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/core/onboarding/onboarding_config.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/onboarding/onboarding.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/core/onboarding/onboarding.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "identity/core/qrg/qrg_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "identity/core/qrg/qrg_manager.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "identity/core/sing/sso_engine.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "identity/core/sing/cross_device_manager.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "identity/core/tier/tier_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "identity/api/controllers/lambd_id_controller.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "identity/api/controllers/lambd_id_controller.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "identity/api/routes/lambd_id_routes.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "identity/api/routes/lambd_id_routes.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.6621621621621622
    },
    "bio": {
      "status": "functional",
      "files_scanned": 49,
      "functional_files": 32,
      "capabilities": [
        {
          "capability": "core",
          "file": "bio/endocrine_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/bio_integration_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "bio/bio_integration_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/bio_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "bio/bio_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "bio/simulation_controller.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "bio/simulation_controller.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "bio/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "bio/endocrine_daily_operations.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/core/symbolic_adaptive_threshold_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/core/symbolic_preprocessing_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "bio/core/symbolic_fallback_systems.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/core/bio_symbolic_swarm_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/core/symbolic_bio_symbolic_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/core/symbolic_contextual_mapping_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "bio/core/oscillators_base_oscillator.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.6530612244897959
    },
    "orchestration": {
      "status": "functional",
      "files_scanned": 349,
      "functional_files": 211,
      "capabilities": [
        {
          "capability": "core",
          "file": "orchestration/integration_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/integration_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/workflow_engine.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "orchestration/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "orchestration/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/colony_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/main_node.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/main_node.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/service_registry.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/integration_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/integration_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/master_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "orchestration/learning_initializer.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/golden_trio/trio_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "orchestration/echo/echo_controller.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/agents/meta_cognitive_orchestrator_alt.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/agents/meta_cognitive_orchestrator_alt.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/agents/meta_cognitive_orchestrator_alt.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/specialized/lambda_dependa_bot.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/specialized/lambda_dependa_bot.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/specialized/content_enterprise_orchestrator.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/specialized/inter_agent_simulation.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "orchestration/specialized/inter_agent_simulation.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/symbol_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/symbol_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/canadian_awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/brain_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/brain_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/us_institutional_awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "controller",
          "file": "orchestration/brain/controller.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/das_awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/dynamic_adaptive_dashboard.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/dynamic_adaptive_dashboard.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/eu_awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/eu_awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "controller",
          "file": "orchestration/brain/eu_awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/research_awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/research_awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/autonomous_github_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/autonomous_github_manager.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/awareness_engine_elevated.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/consciousness_core.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/uk_awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/llm_engine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/security_pr_analyzer.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/github_vulnerability_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/github_vulnerability_manager.py",
          "confidence": "high"
        },
        {
          "capability": "controller",
          "file": "orchestration/brain/github_vulnerability_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/privacy_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/core_system.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/unified_collapse_system.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/unified_collapse_system.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/main_node.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/main_node.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/identity_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/identity_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/lambdabot_autonomous_workflow_fixer.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/autonomous_system.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/brain_collapse_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/cognitive_core.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/cognitive_core.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/cognitive_core.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/lambdabot_autonomous_fixer.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/awareness_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/australian_awareness_engine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/pr_security_review_task.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/MultiBrainSymphony.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/GlobalInstitutionalCompliantEngine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/vulnerability_dashboard.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/main_bot.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/main_bot.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/demo.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/demo.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/demo.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/trace_memoria_logger.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "orchestration/brain/token_budget_controller.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/collaborative_ai_agent_system.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/unified_self_merge_divergence.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/GlobalInstitutionalFramework.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/core_modules/controller.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/core_modules/controller.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/core_modules/controller.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/core_modules/controller.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "orchestration/core_modules/controller.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/core_modules/workflow_engine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/core_modules/orchestration_service.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/core_modules/orchestration_service.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/core_modules/core_integrator.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/monitoring/remediator_agent.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/monitoring/reflection_layer.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/monitoring/reflection_layer.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/monitoring/reflection_layer.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "orchestration/security/dast/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/security/dast/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/security/dast/api.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/security/dast/engine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/security/dast/verify.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/security/dast/verify.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/visualization/memory_helix_visualizer.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/cognitive/voice_engine.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/net/async_client.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/core/azure_free_tier_strategy.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/core/azure_openai_client.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/access/tier_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/access/tier_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/spine/main_loop.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/spine/main_loop.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/spine/trait_manager.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/spine/fold_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/config/paths.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/integration/brain_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/personality/voice_personality.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/prediction/predictive_resource_manager.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/prediction/world_models.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/abstract_reasoning/interface.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/abstract_reasoning/core.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/meta/compliance_engine_20250503213400.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/compliance/constitutional_ai.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "orchestration/brain/compliance/ai_compliance_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/reasoning/symbolic_validator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/symbolic_engine/symbolic_core.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/symbolic_engine/pattern_recognition.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/neuro_symbolic/hybrid_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/neuro_symbolic/neuro_symbolic_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/ethics/ethics_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/ethics/ethics_engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/emotional/core.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/orchestration/main_node.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/orchestration/main_node.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/monitoring/guardian_reflector.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/dream_engine/visualizer_core.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/dream_engine/dream_replay_cli.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/neural/neural_intelligence_main.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "orchestration/brain/neural/cognitive_core.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/neural/cognitive_core.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/neural/cognitive_core.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "orchestration/brain/unified_integration/adapters/dream_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/unified_integration/adapters/legacy_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/meta/cognition/reflection_layer.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/meta/learning/system.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/brain/dream_engine/cli/dream_cli.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "orchestration/monitoring/sub_agents/memory_cleaner.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "orchestration/monitoring/sub_agents/ethics_guardian.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.6045845272206304
    },
    "api": {
      "status": "functional",
      "files_scanned": 12,
      "functional_files": 4,
      "capabilities": [
        {
          "capability": "core",
          "file": "api/controllers.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "api/controllers.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "api/dream_commerce.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "api/dream_commerce.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.3333333333333333
    },
    "core": {
      "status": "functional",
      "files_scanned": 396,
      "functional_files": 195,
      "capabilities": [
        {
          "capability": "core",
          "file": "core/integrated_system.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/ai_interface.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/swarm.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/resource_efficiency_analyzer.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/config.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/config_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/config_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "core/api_diff_analyzer.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/symbolic_drift_analyzer.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/oracle_nervous_system.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/integrated_safety_system.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/tier_unification_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/tier_unification_adapter.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/symbolic_boot.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/core_hub.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "core/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "core/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/enhanced_swarm.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/event_sourcing.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/core_system.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "core/practical_optimizations.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/fallback_services.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/module_registry.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/notion_sync.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/notion_sync.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/notion_sync.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/core_utilities.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "core/task_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/task_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/validation_script_fixes.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/identity_aware_base_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/monitoring_observability.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/quantum_identity_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/quantum_identity_manager.py",
          "confidence": "high"
        },
        {
          "capability": "main",
          "file": "core/quantized_thought_cycles.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/hub_registry.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/targeted_api_fixes.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/direct_ai_router.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/identity_aware_base.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/identity_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/tier_aware_colony_proxy.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/tier_aware_colony_proxy.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/validation.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/validation.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/decorators.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/agi/self_improvement.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/colonies/memory_colony_enhanced.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/colonies/base_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/colonies/governance_colony_enhanced.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/colonies/ethics_swarm_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/colonies/ethics_swarm_colony.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/identity/mapper.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/identity/id_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/identity/id_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/identity/processor.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/identity/engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/identity/engine.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/identity/persona_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/identity/persona_engine.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "core/identity/manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/personality/personality.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/personality/personality.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/personality/personality.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/personality/creative_personality.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/personality/creative_personality.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/personality/creative_expressions.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/personality/creative_personality_clean.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/personality/creative_personality_clean.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "core/utils/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/utils/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/utils/orchestration_energy_aware_execution_planner.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/utils/orchestration_energy_aware_execution_planner.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/bridges/identity_core_bridge.py",
          "confidence": "high"
        },
        {
          "capability": "init",
          "file": "core/bridges/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/bridges/core_safety_bridge.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/safety/constitutional_safety.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/safety/multi_agent_consensus.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/safety/safety_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/ethics/dream_ethics_injector.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/ethics/dream_ethics_injector.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/audit/audit_decision_embedding_engine.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/audit/audit_decision_embedding_engine.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "core/ai/integration_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/meta_learning/remediator_agent.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/meta_learning/enhancement_system.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/meta_learning/enhancement_system.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/monitoring/collapse_tracker.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/monitoring/collapse_integration.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/monitoring/drift_monitor.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/monitoring/drift_monitor.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/infrastructure/node_collection.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/infrastructure/node_manager.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/infrastructure/node_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/neural_architectures/neural_integrator.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "core/helpers/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/helpers/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/interfaces_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/interfaces/main.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/interfaces/main.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/symbolic/drift/symbolic_drift_tracker.py",
          "confidence": "medium"
        },
        {
          "capability": "init",
          "file": "core/modules/nias/__init__.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/modules/nias/__init__.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/modules/nias/nias_hub.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/neural_architectures/abas/abas_quantum_specialist_wrapper.py",
          "confidence": "medium"
        },
        {
          "capability": "main",
          "file": "core/neural_architectures/abas/abas_quantum_specialist.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/neural_architectures/abas/abas_quantum_specialist.py",
          "confidence": "medium"
        },
        {
          "capability": "manager",
          "file": "core/services/location/geofencing_manager.py",
          "confidence": "high"
        },
        {
          "capability": "manager",
          "file": "core/interfaces/logic/consent_manager.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/interfaces/logic/delegate_logic.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/logic/agent_logic_architecture.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/logic/agent_core.py",
          "confidence": "high"
        },
        {
          "capability": "engine",
          "file": "core/interfaces/voice/edge_voice.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/ui/components/audio_exporter.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/voice_narrator.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/feedback_log_viewer.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/dream_narrator_queue.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/validate_payload.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/replay_heatmap.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/generate_payload_cli.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/feedback_loop.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/nias/narration_controller.py",
          "confidence": "medium"
        },
        {
          "capability": "controller",
          "file": "core/interfaces/as_agent/sys/nias/narration_controller.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/dast/dast_core.py",
          "confidence": "high"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/dast/store.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/dast/partner_sdk.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/dast/aggregator.py",
          "confidence": "medium"
        },
        {
          "capability": "engine",
          "file": "core/interfaces/as_agent/sys/dast/dast.py",
          "confidence": "medium"
        },
        {
          "capability": "core",
          "file": "core/interfaces/as_agent/sys/dast/launcher.py",
          "confidence": "medium"
        }
      ],
      "functionality_ratio": 0.49242424242424243
    }
  },
  "summary": {
    "functional_systems": 9,
    "total_systems": 9,
    "executable_entry_points": 1109,
    "total_entry_points": 1197
  }
}