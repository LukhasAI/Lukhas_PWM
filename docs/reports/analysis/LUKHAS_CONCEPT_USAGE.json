{
  "total_concepts_found": 5956,
  "unique_concepts_used": 31,
  "concepts_by_frequency": [
    [
      "glyph",
      2546
    ],
    [
      "memory_fold",
      506
    ],
    [
      "quantum_coherence",
      474
    ],
    [
      "dream_engine",
      424
    ],
    [
      "emotional_vector",
      421
    ],
    [
      "dream_state",
      220
    ],
    [
      "emotional_drift",
      188
    ],
    [
      "bio_symbolic",
      187
    ],
    [
      "quantum_state",
      169
    ],
    [
      "awareness_level",
      123
    ],
    [
      "ethical_drift",
      110
    ],
    [
      "oneiric",
      103
    ],
    [
      "quantum_entanglement",
      84
    ],
    [
      "memory_helix",
      79
    ],
    [
      "crista",
      79
    ],
    [
      "symbolic_drift",
      75
    ],
    [
      "quantum_consciousness",
      27
    ],
    [
      "symbolic_coherence",
      25
    ],
    [
      "fold_system",
      19
    ],
    [
      "bio_oscillation",
      14
    ],
    [
      "dream_recall",
      13
    ],
    [
      "bio_coherence",
      12
    ],
    [
      "tier_access",
      12
    ],
    [
      "quantum_identity",
      9
    ],
    [
      "memory_cascade",
      6
    ],
    [
      "bio_adaptation",
      6
    ],
    [
      "trace_trail",
      6
    ],
    [
      "affect_grid",
      5
    ],
    [
      "guardian_protocol",
      5
    ],
    [
      "moral_compass",
      5
    ],
    [
      "identity_helix",
      4
    ]
  ],
  "most_connected": [
    [
      "tools/scripts/smart_naming_refactor.py",
      31
    ],
    [
      "tools/analysis/lukhas_naming_refiner.py",
      31
    ],
    [
      "tools/analysis/lukhas_concept_scanner.py",
      31
    ],
    [
      "tools/analysis/validate_lukhas_concepts.py",
      21
    ],
    [
      "tools/analysis/naming_convention_scanner.py",
      6
    ],
    [
      "tools/scripts/create_memory_fold_api.py",
      5
    ],
    [
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_bio_symbolic_integration.py",
      5
    ],
    [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_universal_bridge.py",
      5
    ],
    [
      "memory/fold_universal_bridge.py",
      5
    ],
    [
      "tools/analysis/lukhas_2030_full_consolidator.py",
      4
    ]
  ],
  "concept_details": {
    "memory_fold": {
      "description": "DNA-helix memory structure",
      "usage_count": 506,
      "file_count": 58,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 23,
          "context": "ts = { # Memory concepts 'memory_fold', 'fold_system', 'fold_type', 'fold_id",
          "exact_match": "memory_fold"
        },
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 302,
          "context": "'examples': [ 'memory_fold.py', 'dream_engine.py',",
          "exact_match": "memory_fold"
        },
        {
          "file": "tools/analysis/naming_convention_scanner.py",
          "line": 26,
          "context": "} self.lukhas_terms = { 'memory_fold', 'dream_resonance', 'quantum_consciou",
          "exact_match": "memory_fold"
        }
      ]
    },
    "fold_system": {
      "description": "Memory folding system",
      "usage_count": 19,
      "file_count": 10,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 23,
          "context": "# Memory concepts 'memory_fold', 'fold_system', 'fold_type', 'fold_id',",
          "exact_match": "fold_system"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 21,
          "context": "like memory with emotional vectors', 'fold_system': 'Memory folding mechanism',",
          "exact_match": "fold_system"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 216,
          "context": "helix` - DNA-like structure (future direction) - `fold_system` - Essential for memory organization",
          "exact_match": "fold_system"
        }
      ]
    },
    "memory_helix": {
      "description": "Helical memory organization",
      "usage_count": 79,
      "file_count": 22,
      "examples": [
        {
          "file": "tools/missing_component_hunter.py",
          "line": 105,
          "context": "py' ] }, 'memory_helix': { 'patterns': [",
          "exact_match": "memory_helix"
        },
        {
          "file": "tools/PatternScanner.py",
          "line": 55,
          "context": "ice\"], # Memory Systems \"memory_helix\": [r\"memory.*helix\", r\"helix\", r\"spir",
          "exact_match": "memory_helix"
        },
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 24,
          "context": "old_system', 'fold_type', 'fold_id', 'memory_helix', 'helix_strand', 'memory_cascade',",
          "exact_match": "memory_helix"
        }
      ]
    },
    "memory_cascade": {
      "description": "Cascading memory effects",
      "usage_count": 6,
      "file_count": 5,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 24,
          "context": "id', 'memory_helix', 'helix_strand', 'memory_cascade', # Dream",
          "exact_match": "memory_cascade"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 22,
          "context": "system': 'Memory folding mechanism', 'memory_cascade': 'Chain reaction of memory associa",
          "exact_match": "memory_cascade"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 24,
          "context": "lix': 'Helical memory organization', 'memory_cascade': 'Cascading memory effects',",
          "exact_match": "memory_cascade"
        }
      ]
    },
    "dream_recall": {
      "description": "Parallel universe exploration",
      "usage_count": 13,
      "file_count": 8,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 27,
          "context": "# Dream concepts 'dream_recall', 'dream_engine', 'dream_resonance',",
          "exact_match": "dream_recall"
        },
        {
          "file": "tools/analysis/smart_consolidator.py",
          "line": 430,
          "context": "quantum-inspired recall pass def dream_recall(self, scenario: Dict) -> List[Dict]:",
          "exact_match": "dream_recall"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 25,
          "context": ", # Dream 'dream_recall': 'Ability to remember and analyze dr",
          "exact_match": "dream_recall"
        }
      ]
    },
    "dream_engine": {
      "description": "Dream generation system",
      "usage_count": 424,
      "file_count": 92,
      "examples": [
        {
          "file": "tools/comprehensive_core_auditor.py",
          "line": 82,
          "context": "ard\"], \"dreams\": [\"dream\", \"dreams\", \"dream_engine\", \"subconscious\", \"imagination\", \"cre",
          "exact_match": "dream_engine"
        },
        {
          "file": "tools/PatternScanner.py",
          "line": 60,
          "context": "ate\", r\"dream.*mutation\", r\"narrative.*mutate\", r\"dream_engine\"], \"dream_delivery\": [r\"d",
          "exact_match": "dream_engine"
        },
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 27,
          "context": "# Dream concepts 'dream_recall', 'dream_engine', 'dream_resonance', 'one",
          "exact_match": "dream_engine"
        }
      ]
    },
    "oneiric": {
      "description": "Dream-related processing",
      "usage_count": 103,
      "file_count": 38,
      "examples": [
        {
          "file": "tools/keyword_extractor.py",
          "line": 26,
          "context": "y|vision|hallucination|lucid|nightmare|rem.*sleep|oneiric)\\b', re.IGNORECASE), \"voice\":",
          "exact_match": "oneiric"
        },
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 28,
          "context": ", 'dream_engine', 'dream_resonance', 'oneiric', 'dream_state', 'dream_scenario',",
          "exact_match": "oneiric"
        },
        {
          "file": "tools/analysis/smart_consolidator.py",
          "line": 210,
          "context": "[ 'dream/engine', 'dream/oneiric', 'creativity/generators',",
          "exact_match": "oneiric"
        }
      ]
    },
    "dream_state": {
      "description": "Dream consciousness state",
      "usage_count": 220,
      "file_count": 37,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 28,
          "context": "gine', 'dream_resonance', 'oneiric', 'dream_state', 'dream_scenario',",
          "exact_match": "dream_state"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 30,
          "context": "neiric': 'Dream-related processing', 'dream_state': 'Dream consciousness state',",
          "exact_match": "dream_state"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 284,
          "context": "ystem - **oneiric**: Dream-related processing - **dream_state**: Dream consciousness state ### Quan",
          "exact_match": "dream_state"
        }
      ]
    },
    "quantum_state": {
      "description": "Quantum superposition states",
      "usage_count": 169,
      "file_count": 36,
      "examples": [
        {
          "file": "tools/comprehensive_core_auditor.py",
          "line": 64,
          "context": "erposition\", \"coherence\", \"decoherence\", \"qbit\", \"quantum_state\"], \"brain\": [\"brain\", \"n",
          "exact_match": "quantum_state"
        },
        {
          "file": "tools/full_connectivity_resolver.py",
          "line": 214,
          "context": "ponents.\"\"\" def __init__(self): self.quantum_state = \"entangled\" self.bio_reson",
          "exact_match": "quantum_state"
        },
        {
          "file": "tools/full_connectivity_resolver.py",
          "line": 220,
          "context": "uantum bio data.\"\"\" return { \"quantum_state\": self.quantum_state, \"b",
          "exact_match": "quantum_state"
        }
      ]
    },
    "quantum_consciousness": {
      "description": "Quantum-aware consciousness",
      "usage_count": 27,
      "file_count": 12,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 31,
          "context": "# Quantum concepts 'quantum_state', 'quantum_consciousness', 'quantum_coherence',",
          "exact_match": "quantum_consciousness"
        },
        {
          "file": "tools/analysis/naming_convention_scanner.py",
          "line": 26,
          "context": "{ 'memory_fold', 'dream_resonance', 'quantum_consciousness', 'bio_oscillati",
          "exact_match": "quantum_consciousness"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 33,
          "context": "': 'Superposition of possibilities', 'quantum_consciousness': 'Quantum-inspired awarenes",
          "exact_match": "quantum_consciousness"
        }
      ]
    },
    "quantum_coherence": {
      "description": "Quantum system coherence",
      "usage_count": 474,
      "file_count": 180,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 31,
          "context": "'quantum_state', 'quantum_consciousness', 'quantum_coherence', 'quantum_entanglem",
          "exact_match": "quantum_coherence"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 34,
          "context": "ness': 'Quantum-inspired awareness', 'quantum_coherence': 'Maintaining quantum propertie",
          "exact_match": "quantum_coherence"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 35,
          "context": "ess': 'Quantum-aware consciousness', 'quantum_coherence': 'Quantum system coherence',",
          "exact_match": "quantum_coherence"
        }
      ]
    },
    "quantum_entanglement": {
      "description": "Memory entanglement",
      "usage_count": 84,
      "file_count": 37,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 32,
          "context": "consciousness', 'quantum_coherence', 'quantum_entanglement', 'quantum_superposition',",
          "exact_match": "quantum_entanglement"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 35,
          "context": "': 'Maintaining quantum properties', 'quantum_entanglement': 'Connected states across mo",
          "exact_match": "quantum_entanglement"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 226,
          "context": "`quantum_consciousness` - Awareness mechanism - `quantum_entanglement` - Module interconnection ##",
          "exact_match": "quantum_entanglement"
        }
      ]
    },
    "bio_oscillation": {
      "description": "Biological rhythm patterns",
      "usage_count": 14,
      "file_count": 10,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 35,
          "context": "# Bio concepts 'bio_oscillation', 'bio_rhythm', 'bio_coherence',",
          "exact_match": "bio_oscillation"
        },
        {
          "file": "tools/analysis/naming_convention_scanner.py",
          "line": 27,
          "context": "resonance', 'quantum_consciousness', 'bio_oscillation', 'symbolic_mutation', 'emotional_",
          "exact_match": "bio_oscillation"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 38,
          "context": "# Bio-Symbolic 'bio_oscillation': 'Biological rhythm patterns',",
          "exact_match": "bio_oscillation"
        }
      ]
    },
    "bio_coherence": {
      "description": "Bio-symbolic alignment",
      "usage_count": 12,
      "file_count": 8,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 35,
          "context": "pts 'bio_oscillation', 'bio_rhythm', 'bio_coherence', 'bio_adaptation', 'bio",
          "exact_match": "bio_coherence"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 39,
          "context": "tion': 'Biological rhythm patterns', 'bio_coherence': 'Harmony between biological and sy",
          "exact_match": "bio_coherence"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 40,
          "context": "tion': 'Biological rhythm patterns', 'bio_coherence': 'Bio-symbolic alignment',",
          "exact_match": "bio_coherence"
        }
      ]
    },
    "bio_symbolic": {
      "description": "Biological-symbolic bridge",
      "usage_count": 187,
      "file_count": 65,
      "examples": [
        {
          "file": "tools/comprehensive_core_auditor.py",
          "line": 63,
          "context": "\", \"protein\", \"enzyme\", \"metabolic\", \"bio_core\", \"BIO_SYMBOLIC\", \"bio_symbolic\", \"oscillator\", \"rhyt",
          "exact_match": "BIO_SYMBOLIC"
        },
        {
          "file": "tools/comprehensive_core_auditor.py",
          "line": 63,
          "context": "nzyme\", \"metabolic\", \"bio_core\", \"BIO_SYMBOLIC\", \"bio_symbolic\", \"oscillator\", \"rhythm\"],",
          "exact_match": "bio_symbolic"
        },
        {
          "file": "tools/CriticalConnectivityAnalyzer.py",
          "line": 78,
          "context": "# Bio-symbolic issues bio_related = ['bio_symbolic', 'bio_awareness', 'bio_core']",
          "exact_match": "bio_symbolic"
        }
      ]
    },
    "bio_adaptation": {
      "description": "Biological adaptation system",
      "usage_count": 6,
      "file_count": 5,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 36,
          "context": "ion', 'bio_rhythm', 'bio_coherence', 'bio_adaptation', 'bio_symbolic',",
          "exact_match": "bio_adaptation"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 42,
          "context": "olic': 'Biological-symbolic bridge', 'bio_adaptation': 'Biological adaptation system',",
          "exact_match": "bio_adaptation"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 296,
          "context": "**bio_symbolic**: Biological-symbolic bridge - **bio_adaptation**: Biological adaptation system ##",
          "exact_match": "bio_adaptation"
        }
      ]
    },
    "glyph": {
      "description": "Universal symbolic tokens",
      "usage_count": 2546,
      "file_count": 159,
      "examples": [
        {
          "file": "tools/analysis/generate_function_index.py",
          "line": 153,
          "context": "'fold', 'drift', 'resonance', 'oscillation', 'glyph', 'quantum', 'consciousness', 'd",
          "exact_match": "glyph"
        },
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 39,
          "context": "mbolic concepts 'symbolic_mutation', 'glyph', 'glyph_token', 'symbolic_drift',",
          "exact_match": "glyph"
        },
        {
          "file": "tools/analysis/visualize_lukhas_2030.py",
          "line": 28,
          "context": "Identity<br/>Unbreakable security] SYMBOLIC[\ud83d\udd2e GLYPH Communication<br/>Universal language] BR",
          "exact_match": "GLYPH"
        }
      ]
    },
    "symbolic_drift": {
      "description": "Symbol meaning evolution",
      "usage_count": 75,
      "file_count": 23,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 39,
          "context": "'symbolic_mutation', 'glyph', 'glyph_token', 'symbolic_drift', 'symbolic_coherence',",
          "exact_match": "symbolic_drift"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 46,
          "context": "glyph': 'Universal symbolic tokens', 'symbolic_drift': 'Symbol meaning evolution',",
          "exact_match": "symbolic_drift"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 300,
          "context": "l symbolic tokens - Core communication method - **symbolic_drift**: Symbol meaning evolution - **sym",
          "exact_match": "symbolic_drift"
        }
      ]
    },
    "symbolic_coherence": {
      "description": "Symbol system alignment",
      "usage_count": 25,
      "file_count": 12,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 40,
          "context": "h', 'glyph_token', 'symbolic_drift', 'symbolic_coherence', 'symbolic_resonance',",
          "exact_match": "symbolic_coherence"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 47,
          "context": "_drift': 'Symbol meaning evolution', 'symbolic_coherence': 'Symbol system alignment',",
          "exact_match": "symbolic_coherence"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 301,
          "context": "**symbolic_drift**: Symbol meaning evolution - **symbolic_coherence**: Symbol system alignment ###",
          "exact_match": "symbolic_coherence"
        }
      ]
    },
    "emotional_drift": {
      "description": "Emotional state changes",
      "usage_count": 188,
      "file_count": 24,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 43,
          "context": "# Emotional concepts 'emotional_drift', 'emotional_vector', 'emotion_cas",
          "exact_match": "emotional_drift"
        },
        {
          "file": "tools/analysis/naming_convention_scanner.py",
          "line": 27,
          "context": "'bio_oscillation', 'symbolic_mutation', 'emotional_drift', 'trace_trail', 'glyp",
          "exact_match": "emotional_drift"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 45,
          "context": "# Emotional 'emotional_drift': 'Gradual shift in emotional stat",
          "exact_match": "emotional_drift"
        }
      ]
    },
    "emotional_vector": {
      "description": "Multi-dimensional emotions",
      "usage_count": 421,
      "file_count": 42,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 43,
          "context": "motional concepts 'emotional_drift', 'emotional_vector', 'emotion_cascade',",
          "exact_match": "emotional_vector"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 46,
          "context": "'Gradual shift in emotional states', 'emotional_vector': 'Direction and magnitude of emo",
          "exact_match": "emotional_vector"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 258,
          "context": "eam_recall` \u2192 `multi_dimensional_dream_recall` - `emotional_vector` \u2192 `empathic_emotional_vector` A",
          "exact_match": "emotional_vector"
        }
      ]
    },
    "affect_grid": {
      "description": "Emotional mapping system",
      "usage_count": 5,
      "file_count": 4,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 44,
          "context": "motional_vector', 'emotion_cascade', 'affect_grid', 'mood_regulation',",
          "exact_match": "affect_grid"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 48,
          "context": "in reaction of emotional responses', 'affect_grid': '2D representation of emotional stat",
          "exact_match": "affect_grid"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 52,
          "context": "ctor': 'Multi-dimensional emotions', 'affect_grid': 'Emotional mapping system',",
          "exact_match": "affect_grid"
        }
      ]
    },
    "crista": {
      "description": "Consciousness peaks",
      "usage_count": 79,
      "file_count": 22,
      "examples": [
        {
          "file": "tools/analysis/generate_function_index.py",
          "line": 155,
          "context": "'symbolic', 'trace', 'mutation', 'helix', 'crista' ] # Check functio",
          "exact_match": "crista"
        },
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 47,
          "context": "# Consciousness concepts 'crista', 'trace_trail', 'consciousness_state',",
          "exact_match": "crista"
        },
        {
          "file": "tools/analysis/naming_convention_scanner.py",
          "line": 28,
          "context": "ift', 'trace_trail', 'glyph_tokens', 'crista', 'helix', 'resonance', 'oscill",
          "exact_match": "crista"
        }
      ]
    },
    "trace_trail": {
      "description": "Consciousness tracking",
      "usage_count": 6,
      "file_count": 5,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 47,
          "context": "# Consciousness concepts 'crista', 'trace_trail', 'consciousness_state', '",
          "exact_match": "trace_trail"
        },
        {
          "file": "tools/analysis/naming_convention_scanner.py",
          "line": 28,
          "context": "mbolic_mutation', 'emotional_drift', 'trace_trail', 'glyph_tokens', 'crista', 'helix',",
          "exact_match": "trace_trail"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 52,
          "context": ": 'Consciousness crystal structure', 'trace_trail': 'Path of consciousness through time'",
          "exact_match": "trace_trail"
        }
      ]
    },
    "awareness_level": {
      "description": "Consciousness depth",
      "usage_count": 123,
      "file_count": 44,
      "examples": [
        {
          "file": "tools/full_connectivity_resolver.py",
          "line": 185,
          "context": "ocessor.\"\"\" def __init__(self): self.awareness_level = 0.8 self.quantum_compone",
          "exact_match": "awareness_level"
        },
        {
          "file": "tools/full_connectivity_resolver.py",
          "line": 191,
          "context": "-awareness data.\"\"\" return { \"awareness_level\": self.awareness_level,",
          "exact_match": "awareness_level"
        },
        {
          "file": "tools/full_connectivity_resolver.py",
          "line": 191,
          "context": "return { \"awareness_level\": self.awareness_level, \"processed_data\": bio",
          "exact_match": "awareness_level"
        }
      ]
    },
    "tier_access": {
      "description": "Hierarchical access control",
      "usage_count": 12,
      "file_count": 10,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 51,
          "context": "# Identity concepts 'tier_access', 'identity_helix', 'quantum_identity'",
          "exact_match": "tier_access"
        },
        {
          "file": "tools/analysis/lukhas_2030_full_consolidator.py",
          "line": 165,
          "context": "'identity', 'tier_access', 'authentication'",
          "exact_match": "tier_access"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 55,
          "context": "# Identity & Governance 'tier_access': 'Multi-level security system',",
          "exact_match": "tier_access"
        }
      ]
    },
    "identity_helix": {
      "description": "Identity DNA structure",
      "usage_count": 4,
      "file_count": 3,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 51,
          "context": "# Identity concepts 'tier_access', 'identity_helix', 'quantum_identity',",
          "exact_match": "identity_helix"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 61,
          "context": "ess': 'Hierarchical access control', 'identity_helix': 'Identity DNA structure',",
          "exact_match": "identity_helix"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 315,
          "context": "**tier_access**: Hierarchical access control - **identity_helix**: Identity DNA structure - **quant",
          "exact_match": "identity_helix"
        }
      ]
    },
    "quantum_identity": {
      "description": "Quantum-secure identity",
      "usage_count": 9,
      "file_count": 8,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 51,
          "context": "pts 'tier_access', 'identity_helix', 'quantum_identity', # Guar",
          "exact_match": "quantum_identity"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 62,
          "context": "ty_helix': 'Identity DNA structure', 'quantum_identity': 'Quantum-secure identity',",
          "exact_match": "quantum_identity"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 316,
          "context": "- **identity_helix**: Identity DNA structure - **quantum_identity**: Quantum-secure identity ### G",
          "exact_match": "quantum_identity"
        }
      ]
    },
    "guardian_protocol": {
      "description": "Ethical oversight system",
      "usage_count": 5,
      "file_count": 4,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 54,
          "context": "# Guardian concepts 'guardian_protocol', 'ethical_drift', 'moral_compas",
          "exact_match": "guardian_protocol"
        },
        {
          "file": "tools/analysis/validate_lukhas_concepts.py",
          "line": 56,
          "context": "ess': 'Multi-level security system', 'guardian_protocol': 'Ethical oversight system',",
          "exact_match": "guardian_protocol"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 65,
          "context": "# Guardian concepts 'guardian_protocol': 'Ethical oversight system',",
          "exact_match": "guardian_protocol"
        }
      ]
    },
    "ethical_drift": {
      "description": "Ethical alignment changes",
      "usage_count": 110,
      "file_count": 21,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 54,
          "context": "ardian concepts 'guardian_protocol', 'ethical_drift', 'moral_compass',",
          "exact_match": "ethical_drift"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 66,
          "context": "otocol': 'Ethical oversight system', 'ethical_drift': 'Ethical alignment changes',",
          "exact_match": "ethical_drift"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 320,
          "context": "guardian_protocol**: Ethical oversight system - **ethical_drift**: Ethical alignment changes - **mor",
          "exact_match": "ethical_drift"
        }
      ]
    },
    "moral_compass": {
      "description": "Ethical navigation",
      "usage_count": 5,
      "file_count": 4,
      "examples": [
        {
          "file": "tools/analysis/lukhas_naming_refiner.py",
          "line": 54,
          "context": "'guardian_protocol', 'ethical_drift', 'moral_compass', # Special",
          "exact_match": "moral_compass"
        },
        {
          "file": "tools/analysis/lukhas_2030_full_consolidator.py",
          "line": 147,
          "context": "'guardian', 'moral_compass' ],",
          "exact_match": "moral_compass"
        },
        {
          "file": "tools/analysis/lukhas_concept_scanner.py",
          "line": 67,
          "context": "drift': 'Ethical alignment changes', 'moral_compass': 'Ethical navigation' }",
          "exact_match": "moral_compass"
        }
      ]
    }
  },
  "naming_patterns": {
    "class_with_memory_fold": 42,
    "function_with_quantum_state": 1,
    "function_with_quantum_entanglement": 8,
    "function_with_memory_fold": 31,
    "class_with_dream_recall": 1,
    "class_with_dream_engine": 6,
    "function_with_quantum_coherence": 13,
    "class_with_emotional_vector": 1,
    "class_with_bio_symbolic": 28,
    "function_with_bio_symbolic": 15,
    "function_with_symbolic_coherence": 6,
    "class_with_crista": 28,
    "function_with_crista": 19,
    "function_with_glyph": 185,
    "class_with_quantum_state": 4,
    "class_with_quantum_coherence": 2,
    "class_with_glyph": 81,
    "class_with_symbolic_drift": 12,
    "function_with_symbolic_drift": 16,
    "function_with_emotional_drift": 12,
    "function_with_ethical_drift": 10,
    "class_with_oneiric": 2,
    "function_with_oneiric": 3,
    "function_with_tier_access": 7,
    "class_with_tier_access": 3,
    "class_with_quantum_identity": 3,
    "function_with_quantum_identity": 2,
    "class_with_ethical_drift": 8,
    "class_with_fold_system": 6,
    "function_with_fold_system": 3,
    "function_with_dream_state": 12,
    "class_with_dream_state": 6,
    "class_with_memory_helix": 3,
    "function_with_memory_helix": 3,
    "class_with_quantum_consciousness": 7,
    "class_with_quantum_entanglement": 4,
    "function_with_awareness_level": 2,
    "function_with_emotional_vector": 1,
    "function_with_quantum_consciousness": 2,
    "class_with_emotional_drift": 3,
    "function_with_bio_oscillation": 2,
    "function_with_dream_engine": 2
  },
  "preservation_recommendations": [
    "Low usage of 'identity_helix' - ensure it's properly integrated",
    "Maintain consistent naming patterns for LUKHAS concepts",
    "Preserve all memory_fold and dream_recall implementations",
    "Keep quantum_state and bio_symbolic concepts intact",
    "Document LUKHAS-specific concepts in code comments",
    "Create a glossary of LUKHAS terms for new developers"
  ],
  "concept_files": {
    "oneiric": [
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/conftest.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_introspection.py",
      "tools/scripts/smart_naming_refactor.py",
      "dream/oneiric/oneiric_core/main.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/identity_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_waveform.py",
      "memory/dream_memory_fold.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/dream_memory_fold.py",
      ".pwm_cleanup_archive/safe_consolidation_tool.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_api.py",
      "dream/core/dream_memory_manager.py",
      "core/tier_unification_adapter.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "core/identity_integration.py",
      "tools/keyword_extractor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/tier_unification_adapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/drift/unified_drift_system.py",
      "dream/oneiric/oneiric_core/analysis/drift_score.py",
      "tools/analysis/smart_consolidator.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "quantum/utils/regenerate_intelligent_descriptions.py",
      "quantum/utils/add_module_descriptions.py",
      "bridge/symbolic_dream_bridge.py",
      "trace/drift/unified_drift_system.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/analysis/lukhas_2030_full_consolidator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/safe_consolidation_tool.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/professional_audit_tool.py",
      "quantum/processing/quantum_waveform.py",
      "quantum/utils/add_intelligent_descriptions.py",
      "tools/analysis/duplicate_detector.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/analysis/analyze_core_overlap.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/runners/run_tests_resilient.py",
      ".pwm_cleanup_archive/professional_audit_tool.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/regenerate_intelligent_descriptions.py",
      "symbolic/vocabularies/dream_vocabulary.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_intelligent_descriptions.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_module_descriptions.py"
    ],
    "dream_engine": [
      "memory/systems/memory_handler.py",
      "consciousness/loop_meta_learning.py",
      "tools/PatternScanner.py",
      "consciousness/dream_bridge.py",
      "learning/adaptive_agi/Meta_Learning/symbolic_feedback.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/brain_integration_v1_backup_20250731_120345.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/id.py",
      "memory/systems/memory_learning/memory_manager.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "core/meta_learning/remediator_agent.py",
      "dream/core/dream_engine.py",
      "orchestration/brain/cognitive/curious_lukhas.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_emotional_repair_loop.py",
      "core/oracle_nervous_system.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_reorganization.py",
      "orchestration/brain/neural/cognitive_core.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/creativity_activation.py",
      "orchestration/brain/core/capability_analyzer.py",
      "orchestration/brain/monitoring/remediator_agent.py",
      "identity/__init__.py",
      "orchestration/brain/brain_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/dream_convergence_tester.py",
      "dream/oneiric/oneiric_core/engine/dream_engine_fastapi.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/dast/dast.py",
      "core/interfaces/cli.py",
      "reasoning/lukhas_id_reasoning_engine.py",
      "creativity/__init__.py",
      "core/id.py",
      "orchestration/brain/neuro_symbolic/bridge.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/suites/advanced_agi_test_suite.py",
      "learning/meta_learning/symbolic_feedback.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/connect_critical_systems.py",
      "consciousness/systems/lambda_mirror.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "learning/__init__.py",
      "orchestration/brain/MultiBrainSymphony.py",
      ".pwm_cleanup_archive/archive/timestamped/brain_integration/brain_integration_20250620_013824.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream/test_dream_governance_integration.py",
      "dream/dream_pipeline.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/oracle_nervous_system.py",
      "quantum/processing/quantum_waveform.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/cli/ctl.py",
      "consciousness/dream_bridge_adapter.py",
      "api/commercial/dream_commerce/dream_api.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/agent_logic/memory_handler.py",
      ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/dream_engine/publish_queue_manager.py",
      "deployments/dream_commerce/dream_commerce/dream_api.py",
      "consciousness/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/logic/memory_handler.py",
      "identity/core/auth/dream_auth.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/meta_learning/remediator_agent.py",
      "orchestration/brain/brain_integration_enhanced.py",
      "dream/engine/dream_engine.py",
      "tools/scripts/smart_naming_refactor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_waveform.py",
      "core/interfaces/as_agent/sys/dast/dast.py",
      "core/engines/identity_engine.py",
      "core/engines/creative_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_adversarial_dreaming.py",
      "tools/scripts/create_dream_recall_api.py",
      "orchestration/core.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/consciousness_activation.py",
      "orchestration/__init__.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "orchestration/brain/orchestration/core.py",
      "orchestration/core_modules/symbolic_handshake.py",
      "api/core/dream.py",
      "core/interfaces/logic/memory_handler.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/golden_trio_integration_tasks.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/consciousness/test_dream_bridge_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/learning_activation.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/brain_integration_integration_v1_backup_20250731_120345.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/identity_activation.py",
      "consciousness/systems/dream_engine/dream_reflection_loop.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/hold/dreams/test_affect_delta_detection.py",
      "orchestration/brain/meta/cognition/reflection_layer.py",
      "dream/dream_engine/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/cli.py",
      "orchestration/brain/visionary_orchestrator.py",
      "orchestration/monitoring/reflection_layer.py",
      "core/engines/learning_engine.py",
      "tools/comprehensive_core_auditor.py",
      "dream/visualization/dream_timeline_visualizer.py",
      "orchestration/brain/unified_integration/adapters/brain_adapter.py",
      "core/interfaces/as_agent/agent_logic/memory_handler.py",
      "orchestration/brain/enhanced_brain_integration.py",
      "core/engines/consciousness_engine.py",
      "orchestration/brain/unified_integration/adapters/dream_adapter.py",
      "orchestration/brain/context/context_sync.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_recursive_dream_fork.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/dream_system/test_dream_core.py",
      "orchestration/brain/integration/brain_integration.py"
    ],
    "quantum_state": [
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agent1/test_agent1_task12_integration.py",
      "quantum/attention_economics.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/dream_openai_demo.py",
      "tools/scripts/smart_naming_refactor.py",
      "core/bridges/consciousness_quantum_bridge.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_colony.py",
      "memory/systems/integration_example.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_colony_integrations.py",
      "quantum/processing/quantum_colony.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/safety/bridges/safety_quantum_bridge.py",
      "tools/scripts/create_dream_recall_api.py",
      "dream/dream_data_sources.py",
      "memory/scaffold/atomic_memory_scaffold.py",
      "dream/colony_dream_coordinator.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/bio_test_oracle.py",
      "tools/comprehensive_core_auditor.py",
      "tools/analysis/lukhas_concept_scanner.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/attention_economics.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/bridges/consciousness_quantum_bridge.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "dream/dream_pipeline.py",
      "tools/scripts/create_memory_fold_api.py",
      "bio/core/symbolic_quantum_coherence_enhancer.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/agents/agent1/test_task12_integration.py",
      "tools/full_connectivity_resolver.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/quantum_coherence_enhancer.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/anomaly_filter_colony.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_bio_symbolic_integration.py",
      "tools/scripts/apply_lukhas_naming_conventions.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/rename_quantum_references.py",
      "dream/quantum_dream_adapter.py",
      "bio/core/symbolic_anomaly_filter_colony.py",
      "symbolic/loop_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_oracle.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_dream_system_complete.py"
    ],
    "bio_symbolic": [
      "orchestration/brain/unified_integration/adapters/cognitive_adapter.py",
      "orchestration/brain/cognitive/awareness/awareness.py",
      "tools/scripts/smart_naming_refactor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/creative_engine/__init__.py",
      "voice/interface.py",
      "tools/PatternScanner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/symbolic_activation.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/comprehensive_functional_test.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_comprehensive_test.py",
      "quantum/\u039bBot_quantum_security.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/brain_integration_v1_backup_20250731_120345.py",
      "consciousness/awareness/system_awareness.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/suites/advanced_agi_test_suite.py",
      "bio/core/symbolic_bio_symbolic.py",
      "orchestration/integration_hub.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/__init__.py",
      "bio/__init__.py",
      "orchestration/brain/unified_integration/adapters/intent_adapter.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/test_bio_symbolic_enhanced.py",
      "core/utils/orchestration_energy_aware_execution_planner.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "creativity/engines/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/bio_symbolic.py",
      "orchestration/brain/research_awareness_engine.py",
      "core/meta_learning/remediator_agent.py",
      "orchestration/monitoring/reflection_layer.py",
      "symbolic/bio/__init__.py",
      "orchestration/colony_orchestrator.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/bio_test_oracle.py",
      "tools/comprehensive_core_auditor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_demo.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "symbolic/neural/neuro_symbolic_fusion_layer.py",
      "dream/core/dream_delivery_manager.py",
      "symbolic/bio/bio_symbolic.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/critical_unused_files.py",
      "learning/enhancement_engine.py",
      "core/integration/neuro_symbolic_fusion_layer.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/\u039bBot_quantum_security.py",
      "orchestration/brain/core/types.py",
      "symbolic/__init__.py",
      "tools/full_connectivity_resolver.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_management_system.py",
      "tools/post_consolidation_auditor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/quantum_identity_integration_test.py",
      "bio/core/orchestration_compatibility.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/connectivity_visualizer.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/integration/neuro_symbolic_fusion_layer.py",
      "orchestration/brain/unified_integration/adapters/oscillator_adapter.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/bio_activation.py",
      "symbolic/symbolic_hub.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_bio_symbolic_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/orchestration/energy_aware_execution_planner.py",
      "tools/CriticalConnectivityAnalyzer.py",
      "tools/scripts/apply_lukhas_naming_conventions.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_coherence_diagnostic.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/real_functional_test.py",
      "core/interfaces/api/lambda_bot_api_integration.py",
      "orchestration/master_orchestrator.py",
      "orchestration/brain/brain_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_oracle.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/systems/orchestration/compatibility.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/meta_learning/remediator_agent.py"
    ],
    "memory_helix": [
      "tools/scripts/mesh_implementation.py",
      "orchestration/brain/spine/accent_adapter.py",
      "memory/systems/memory_helix_visualizer.py",
      "tools/scripts/smart_naming_refactor.py",
      "voice/interface.py",
      "tools/PatternScanner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/memory_activation.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/universal_mesh_architecture.py",
      "tools/analysis/smart_consolidator.py",
      "memory/systems/memory_seeder.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/scripts/create_memory_fold_api.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/dev/add_verbose_core_descriptions.py",
      "orchestration/brain/visualization/memory_helix_visualizer.py",
      "memory/systems/core.py",
      "voice/voice_cultural_integrator.py",
      "tools/missing_component_hunter.py",
      "tools/analysis/visualize_lukhas_2030.py",
      "tools/scripts/auto_consolidate.py",
      "memory/systems/memory_helix.py"
    ],
    "awareness_level": [
      "orchestration/brain/brain_integration_enhanced.py",
      "quantum/awareness_system.py",
      "tools/scripts/smart_naming_refactor.py",
      "core/bridges/consciousness_quantum_bridge.py",
      "api/core/services.py",
      "consciousness/systems/consciousness_colony_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/conftest.py",
      "api/core/controllers.py",
      "orchestration/brain/cognitive_core.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/audit/audit_trail.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/main_fastapi.py",
      "dream/dream_data_sources.py",
      "core/audit/audit_trail.py",
      "core/fallback_services.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_universal_bridge.py",
      "core/telemetry/monitoring.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "tools/enterprise/api_framework.py",
      "consciousness/core/engine_alt.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_reflection_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/bridges/consciousness_quantum_bridge.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/awareness_system.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/optimization_adapter.py",
      "consciousness/core/engine_complete.py",
      "consciousness/systems/unified_consciousness_engine.py",
      "consciousness/core/engine.py",
      "consciousness/quantum_integration/quantum_consciousness_visualizer.py",
      "tests/test_audit_trail.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/qrg_demo.py",
      "tools/full_connectivity_resolver.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/main_fastapi.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_core_integration.py",
      "consciousness/openai_consciousness_adapter.py",
      "orchestration/brain/enhanced_brain_integration.py",
      "quantum/systems/bio_integration/optimization_adapter.py",
      "memory/fold_universal_bridge.py",
      "consciousness/core/engine_codex.py",
      "creativity/services.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/fallback_services.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/telemetry/monitoring.py",
      "api/core/consciousness.py",
      "identity/core/auth/dream_auth.py",
      "orchestration/brain/meta_cognitive/reflective_introspection_system.py"
    ],
    "glyph": [
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/dream_openai_demo.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_glyph_registry.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_coherence_optimization_test.py",
      "symbolic/features/glyphs/glyph_engine.py",
      "memory/systems/agent_memory_trace_animator.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/fixtures/symbolic_fixtures.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/__init__.py",
      "symbolic/features/drift/symbolic_drift_tracker.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/create_core_unused_connection_report.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/quantum/quantum_steganographic_demo.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/run_basic_tests.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/symbolic/test_glyphs.py",
      "symbolic/drift/symbolic_drift_tracker.py",
      "identity/qrg_100_percent_coverage.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/parsers/knowledge_loader.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/create_full_core_connection_report.py",
      "symbolic/features/security/main.py",
      ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/security/glyph_mutation_simulator.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/bio_symbolic_coherence_optimization_test.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_glyph_memory_integration.py",
      "quantum/api_manager.py",
      "ethics/governance_checker.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/qrg_demo.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/glyphs.py",
      "memory/fold_engine.py",
      "bio/core/symbolic_contextual_mapping_colony.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/anomaly_filter_colony.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_glyph_memory_timeline.py",
      "symbolic/foundry/symbolic_foundry.py",
      "symbolic/features/collapse/entropy_tracker.py",
      "memory/systems/dream_trace_linker.py",
      "identity/__init__.py",
      "memory/glyph_memory_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/collapse/entropy_tracker.py",
      "memory/systems/glyph_memory_bridge.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/glyphs/glyph_sentinel.py",
      "bio/core/symbolic_fallback_systems.py",
      "core/symbolic_drift_analyzer.py",
      "identity/core/glyph/distributed_glyph_generation.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/lukhus_ultimate_test_suite.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/__init__.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/lambda_shield_tester.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/api/test_glyph_exchange.py",
      "identity/core/events/identity_event_types.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/fallback_systems.py",
      "memory/tools/lambda_vault_scan.py",
      "ethics/sentinel/ethical_sentinel_dashboard.py",
      "trace/drift_dashboard.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_identity_lineage_validation.py",
      "reasoning/scaffold_modules_reasoning_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/symbolic/test_symbolic_core.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/collapse/engine.py",
      "reasoning/oracle_predictor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_demo.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "core/resource_efficiency_analyzer.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_core_agi_systems.py",
      "memory/dreamseed_example.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/quantum/quantum_security_integration_demo.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/security/__init__.py",
      "core/decorators.py",
      "symbolic/foundry/lambda_sage.py",
      "symbolic/features/glyphs/symbolic_foundry.py",
      "identity/core/sing/sso_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/verifold/visual/glyph_stego_encoder.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/creativity/test_creative_market.py",
      "memory/systems/memoria/dreams.py",
      "symbolic/symbolic_glyph_hash.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/run_integration_tests.py",
      "identity/core/glyph/glyph_pipeline.py",
      "identity/core/tier/tier_manager.py",
      "identity/api/api.py",
      "trace/entropy/radar.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/glyphs/glyph_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_dream_system_complete.py",
      "quantum/vault_manager.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/drift/symbolic_drift_tracker.py",
      "api/core/glyph_exchange.py",
      "creativity/narrative/symbolic_weaver.py",
      "bio/core/symbolic_glyph_id_hash.py",
      "tools/scripts/smart_naming_refactor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic_drift_analyzer.py",
      "tools/scripts/consolidation/consolidate_symbolic_communication.py",
      "trace/drift_tools.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/api_manager.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_comprehensive_test.py",
      "symbolic/features/__init__.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_identity_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/test_bio_symbolic_enhanced.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/resource_efficiency_analyzer.py",
      "ethics/tools/lambda_auditor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/bio_symbolic.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/decorators.py",
      "identity/core/glyph/__init__.py",
      "symbolic/features/glyphs/glyph.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/bio_symbolic_orchestrator.py",
      "ethics/glyph_ethics_validator.py",
      "trace/drift/unified_drift_system.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "symbolic/features/security/glyph_redactor_engine.py",
      "symbolic/glyph_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/glyph_id_hash.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/hooks/base.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/generate_complete_integration_tasks.py",
      "memory/hooks/base.py",
      "symbolic/bio/glyph_id_hash.py",
      "symbolic/features/glyphs/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/contextual_mapping_colony.py",
      ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/features_analytics/archetype/lambda_sage.py",
      "reasoning/symbolic_logic_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/vault_manager.py",
      "symbolic/features/glyphs.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_integrity_collapser.py",
      "quantum/processing/quantum_glyph_registry.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_bio_symbolic_integration.py",
      "dream/tools/symbolic_theme_clusterer.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/glyphs/__init__.py",
      "reasoning/conflict_resolver.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/identity_activation.py",
      "tools/analysis/visualize_lukhas_2030.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_ai_functionality.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/security/main.py",
      "tools/analysis/generate_function_index.py",
      "symbolic/features/glyphs/glyph_sentinel.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/glyphs/glyph.py",
      "dream/core/dream_glyph_bridge.py",
      "bio/core/symbolic_bio_symbolic.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/memory/hooks/test_hooks.py",
      "memory/dashboard.py",
      "bio/core/symbolic_bio_symbolic_orchestrator.py",
      "memory/__init__.py",
      "ethics/sentinel/ethical_drift_sentinel.py",
      "dream/dream_data_sources.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/glyphs/symbolic_foundry.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/drift/unified_drift_system.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_glyph_recall_drift_correlation.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/security/glyph_redactor_engine.py",
      "identity/core/qrs/__init__.py",
      "governance/common.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/benchmarks/tests/bio_symbolic_coherence_test.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/reasoning/oracle_demo.py",
      "creativity/creative_market.py",
      "tools/analysis/lukhas_2030_full_consolidator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/professional_audit_tool.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/integration/test_import_verification.py",
      "memory/systems/causal_identity_tracker.py",
      "identity/core/qrg/qrg_manager.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/lukhus_qrg_complete_demo.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/symbolic/test_drift.py",
      "symbolic/symbolic_hub.py",
      ".pwm_cleanup_archive/professional_audit_tool.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/entropy/radar.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/bio_symbolic_coherence_diagnostic.py",
      "symbolic/features/collapse/engine.py",
      "identity/core/events/identity_event_publisher.py",
      "bio/core/symbolic_anomaly_filter_colony.py",
      "symbolic/features/security/__init__.py"
    ],
    "crista": [
      "tools/analysis/generate_function_index.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/connectivity_consolidator.py",
      "tools/scripts/smart_naming_refactor.py",
      "learning/meta/MetaLearningAdapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_crista_optimizer_adapter.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/naming_convention_scanner.py",
      "quantum/systems/bio_integration/connectivity_consolidator.py",
      "orchestration/core_modules/orchestration_service.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "bio/optimization/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/bio_integration_hub.py",
      "tools/analysis/validate_lukhas_concepts.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_components.py",
      "learning/meta_learning_adapter.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_bio_symbolic_integration.py",
      "bio/awareness/awareness.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/crista_optimizer/__init__.py",
      "quantum/bio_crista_optimizer_adapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/integration/bio_awareness/awareness.py",
      "quantum/bio_components.py",
      "bio/bio_integration_hub.py"
    ],
    "memory_fold": [
      "memory/core/quantum_memory_manager.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/quick_import_fix.py",
      "tools/scripts/smart_naming_refactor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_reasoning_self_test_harness.py",
      "memory/systems/integration_adapters.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/__init__.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold_universal_integration.py",
      "trace/drift_tools.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/memory_fold.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_comprehensive.py",
      "tools/enterprise/structured_audit_logger.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_critical_module_imports.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/ethics/lambda_governor_demo.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/brain_integration_v1_backup_20250731_120345.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/suites/advanced_agi_test_suite.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_critical_imports.py",
      "ethics/governor/lambda_governor.py",
      "orchestration/core_modules/signals.py",
      "memory/systems/memory_learning/memory_manager.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/naming_convention_scanner.py",
      "memory/__init__.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_phase3b_memory_recurrence.py",
      "memory/memory_fold.py",
      "memory/unified_memory_manager.py",
      "memory/systems/tier_system.py",
      "memory/scaffold/atomic_memory_scaffold.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/decorators.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_glyph_memory_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_universal_bridge.py",
      "memory/tools/lambda_archive_inspector.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "meta/HEADER_FOOTER_STANDARD.py",
      ".pwm_cleanup_archive/archive/timestamped/brain_integration/brain_integration_20250620_013824.py",
      "orchestration/brain/emotional_resonance.py",
      "core/decorators.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "memory/systems/glyph_memory_bridge.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/healix_mapper.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/dev/add_verbose_core_descriptions.py",
      "orchestration/core_modules/symbolic_handshake.py",
      "memory/systems/causal_identity_tracker.py",
      ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/seedra/ethics/seedra_ethics_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_optimized_memory_system.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/implement_performance_fixes.py",
      "orchestration/brain/visualization/memory_helix_visualizer.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/testing/test_reorganized_modules.py",
      "memory/fold_universal_bridge.py",
      "tools/scripts/apply_lukhas_naming_conventions.py",
      "reasoning/reasoning_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold.py",
      "orchestration/brain/brain_integration.py",
      "tools/enterprise/observability_system.py",
      "memory/glyph_memory_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/scripts/fix_imports_by_module.py",
      "memory/fold_system/foldout.py",
      "quantum/healix_mapper.py",
      "memory/quantum_manager.py"
    ],
    "fold_system": [
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold_simple.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/professional_audit_tool.py",
      "tools/analysis/validate_lukhas_concepts.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/fix_imports_tool.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/professional_audit_tool.py",
      "tools/scripts/smart_naming_refactor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_reorganization.py",
      ".pwm_cleanup_archive/fix_imports_tool.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "memory_cascade": [
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/scripts/smart_naming_refactor.py",
      "dream/oneiric/oneiric_core/main.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "dream_recall": [
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/scripts/apply_lukhas_naming_conventions.py",
      "tools/scripts/smart_naming_refactor.py",
      "tools/scripts/create_dream_recall_api.py",
      "tools/scripts/auto_consolidate.py",
      "tools/analysis/smart_consolidator.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "dream_state": [
      "tools/scripts/smart_naming_refactor.py",
      "identity/qrg_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold_universal_integration.py",
      "dream/core.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/qrg_test_suite.py",
      "memory/dream_memory_fold.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/dream_memory_fold.py",
      "symbolic/vocabularies/__init__.py",
      "dream/core/dream_memory_manager.py",
      "identity/qrg_100_percent_coverage.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_phase3b_memory_recurrence.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/qrg_standalone_demo.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/fixtures/memory_fixtures.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_consensus_system_enhanced.py",
      "reasoning/symbolic_loop_harmonizer.py",
      "orchestration/brain/rem/dream_processor_integrator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_universal_bridge.py",
      "memory/tools/lambda_archive_inspector.py",
      "tools/analysis/lukhas_concept_scanner.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_optimization_adapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/optimization_adapter.py",
      "quantum/processing/quantum_consensus_system_enhanced.py",
      "identity/auth/qrg_generators.py",
      "consciousness/core/engine_poetic.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/lukhus_qrg_complete_demo.py",
      "consciousness/systems/mapper.py",
      "identity/qrg_showcase.py",
      "quantum/systems/bio_integration/optimization_adapter.py",
      "memory/fold_universal_bridge.py",
      "identity/core/glyph/glyph_pipeline.py",
      "consciousness/systems/dream_engine/dream_reflection_loop.py",
      "dream/processors/dream_processor_integrator.py",
      "dream/oneiric/oneiric_core/engine/dream_engine_fastapi.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_consciousness_phase.py",
      "quantum/bio_optimization_adapter.py",
      "identity/core/auth/dream_auth.py"
    ],
    "quantum_consciousness": [
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/analysis/naming_convention_scanner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/analysis-tools/critical_unused_files.py",
      "consciousness/quantum_integration/quantum_consciousness_integration_wrapper.py",
      "tools/scripts/smart_naming_refactor.py",
      "quantum/service.py",
      "consciousness/consciousness_hub.py",
      "core/interfaces/api/lambda_bot_api_integration.py",
      "ethics/dao_community.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/service.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "quantum_coherence": [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/web_integration.py",
      "quantum/metadata.py",
      "creativity/creative_q_expression.py",
      "quantum/processing_core.py",
      "quantum/validator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/cloud/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/creative_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/abas_quantum_specialist.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/system.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/neural_architectures/abas/abas_quantum_specialist.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_crista_optimizer_adapter.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/qrg_standalone_demo.py",
      "quantum/systems/bio_integration/connectivity_consolidator.py",
      "quantum/systems/quantum_validator.py",
      "reasoning/LBot_reasoning_processed.py",
      "deployments/consciousness_platform/consciousness_platform/consciousness_api.py",
      "dream/core/dream_engine.py",
      "quantum/api_manager.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/entanglement.py",
      "quantum/post_quantum_crypto.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/integration/safety/emergency_override.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/healix_mapper.py",
      "quantum/system_orchestrator.py",
      "quantum/systems/bio_integration/bulletproof_system.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/qrg_demo.py",
      "quantum/voice_enhancer.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/quantum_coherence_enhancer.py",
      "quantum/systems/quantum_states.py",
      "quantum/core/engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/system_orchestrator.py",
      "core/neural_architectures/abas/abas_quantum_specialist.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/main.py",
      "quantum/systems/quantum_engine.py",
      "dream/oneiric/oneiric_core/engine/dream_engine_fastapi.py",
      "quantum/certificate_manager.py",
      "quantum/bio_optimization_adapter.py",
      "core/neural_architectures/abas/abas_quantum_specialist_mock.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_processing_core.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/post_quantum_crypto.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/connectivity_consolidator.py",
      "quantum/bio_system.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_quantum_coordinator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/voice_enhancer.py",
      "orchestration/security/dast_orchestrator.py",
      "voice/bio_core/oscillator/bio_quantum_engine.py",
      "orchestration/brain/unified_integration/adapters/intent_adapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/awareness/quantum_bio.py",
      "quantum/processing/quantum_bio_bulletproof_system.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/privacy/zero_knowledge_system.py",
      "quantum/systems/quantum_entanglement.py",
      "orchestration/brain/research_awareness_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_system.py",
      "quantum/processing/quantum_bio_coordinator.py",
      "consciousness/quantum_integration/quantum_creative_consciousness.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_consensus_system_enhanced.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/neural_architectures/abas/abas_quantum_specialist_mock.py",
      "quantum/dream_adapter.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_abas_quantum_specialist_integration.py",
      "quantum/ui_generator.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "reasoning/\u039bBot_reasoning.py",
      "quantum/consensus_system.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_oscillator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/optimization_adapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_validator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_components.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/\u039bBot_quantum_security.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/identity_engine.py",
      "quantum/phase_quantum_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/consensus_system.py",
      "quantum/core/neuro_symbolic_engine.py",
      "consciousness/quantum_integration/quantum_consciousness_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/distributed_quantum_architecture.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/safe_blockchain.py",
      "architectures/abas/integration/abas_integration_hub.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/metadata.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/integration/core_integration_demo.py",
      "quantum/systems/quantum_processing_core.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/dream_adapter.py",
      "consciousness/quantum_integration/quantum_consciousness_integration_wrapper.py",
      "core/neural_architectures/abas/abas_quantum_specialist_wrapper.py",
      "consciousness/consciousness_hub.py",
      "quantum/bio_components.py",
      "quantum/systems/bio_integration/awareness/quantum_bio.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/setup_api_keys.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/test_oracle.py",
      "creativity/quantum_creative_types.py",
      "quantum/vault_manager.py",
      "quantum/abas_quantum_specialist.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/ethics_engine.py",
      "quantum/neural_symbolic_processor.py",
      "quantum/awareness_system.py",
      "quantum/core/identity_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/integration.py",
      "quantum/safe_blockchain.py",
      "tools/scripts/smart_naming_refactor.py",
      "quantum/core/neural_symbolic_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/api_manager.py",
      "quantum/web_integration.py",
      "creativity/advanced_haiku_generator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/neural_symbolic_processor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/unit_tests/test_quantum_creative_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_phase3b_memory_recurrence.py",
      "tools/scripts/create_dream_recall_api.py",
      "bio/quantum_layer.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/neural_architectures/abas/abas_quantum_specialist_wrapper.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/bio_test_oracle.py",
      "quantum/cloud/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_optimization_adapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_entanglement.py",
      "tools/analysis/validate_lukhas_concepts.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_states.py",
      "quantum/processing/quantum_consensus_system_enhanced.py",
      "identity/auth/qrg_generators.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/oscillator.py",
      "tools/scripts/create_memory_fold_api.py",
      "quantum/processor.py",
      "quantum/utils/add_compliant_headers.py",
      "quantum/privacy/zero_knowledge_system.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/vault_manager.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_processor.py",
      "quantum/layer.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_bio_symbolic_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/post_quantum_crypto_enhanced.py",
      "consciousness/systems/dream_engine/dream_reflection_loop.py",
      "quantum/healix_mapper.py",
      "quantum/coordinator.py",
      "quantum/service.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_bio_coordinator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/certificate_manager.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/neural_symbolic_engine.py",
      "quantum/\u039bBot_quantum_security.py",
      "quantum/bio.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/creative_engine.py",
      "orchestration/brain/abstract_reasoning/bio_quantum_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/bulletproof_system.py",
      "quantum/entanglement.py",
      "quantum/system.py",
      "orchestration/brain/core_system.py",
      "quantum/systems/quantum_processor.py",
      "quantum/oscillator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/service.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing_core.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_multi_orchestrator.py",
      "quantum/bio_multi_orchestrator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/neuro_symbolic_engine.py",
      "quantum/post_quantum_crypto_enhanced.py",
      "quantum/main.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/ui_generator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/coordinator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/awareness_system.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/phase_quantum_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/consciousness/quantum_creative_consciousness_demo.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio.py",
      "bio/core/symbolic_quantum_coherence_enhancer.py",
      "quantum/distributed_quantum_architecture.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/quantum_layer.py",
      "quantum/integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/core/engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/extreme_ethical_testing.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/identity/lukhus_qrg_complete_demo.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/layer.py",
      "orchestration/specialized/\u039bDependaBoT_robust.py",
      "quantum/core/ethics_engine.py",
      "quantum/core/creative_engine.py",
      "api/commercial/consciousness_platform/consciousness_api.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/validator.py",
      "quantum/systems/bio_integration/optimization_adapter.py",
      "quantum/setup_api_keys.py",
      "quantum/processing/quantum_oscillator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_compliant_headers.py",
      "quantum/bio_crista_optimizer_adapter.py",
      "identity/core/colonies/dream_verification_colony.py",
      "quantum/creative_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_bio_bulletproof_system.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_system_integration_e2e.py",
      "security/safety/emergency_override.py"
    ],
    "quantum_entanglement": [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/__init__.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_lineage_tracker.py",
      "tools/scripts/smart_naming_refactor.py",
      "core/bridges/consciousness_quantum_bridge.py",
      "quantum/service.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/processing/quantum_hub.py",
      "memory/systems/agent_memory_trace_animator.py",
      "quantum/systems/quantum_entanglement.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "quantum/__init__.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/memory/test_identity_lineage_validation.py",
      "orchestration/brain/abstract_reasoning/bio_quantum_radar_integration.py",
      "quantum/processing/quantum_hub.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/activation_modules/quantum_activation.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/service.py",
      "dream/core/dream_engine.py",
      "tools/analysis/lukhas_concept_scanner.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/bio_optimization_adapter.py",
      "orchestration/specialized/lambda_dependa_bot.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/bridges/consciousness_quantum_bridge.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/bio_integration/optimization_adapter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/systems/quantum_entanglement.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "quantum/utils/add_module_descriptions.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/phase_quantum_integration.py",
      "quantum/phase_quantum_integration.py",
      "tools/scripts/create_memory_fold_api.py",
      "orchestration/brain/abstract_reasoning/__init__.py",
      "memory/fold_lineage_tracker.py",
      "quantum/systems/bio_integration/optimization_adapter.py",
      "identity/core/colonies/dream_verification_colony.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/utils/add_module_descriptions.py",
      "symbolic/loop_engine.py",
      "dream/oneiric/oneiric_core/engine/dream_engine_fastapi.py",
      "memory/fold_system/fold_lineage_tracker.py",
      "quantum/bio_optimization_adapter.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_colony_integrations.py"
    ],
    "bio_oscillation": [
      "orchestration/brain/MultiBrainSymphony.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/analysis/naming_convention_scanner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/quantum/bio_quantum_radar_comprehensive_demo.py",
      "tools/scripts/smart_naming_refactor.py",
      "orchestration/brain/abstract_reasoning/bio_quantum_radar_integration.py",
      "orchestration/brain/abstract_reasoning/__init__.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "orchestration/brain/abstract_reasoning/core.py"
    ],
    "bio_coherence": [
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "memory/fold_universal_bridge.py",
      "tools/scripts/smart_naming_refactor.py",
      "core/interfaces/dashboard/core/universal_adaptive_dashboard.py",
      "symbolic/loop_engine.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_universal_bridge.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "bio_adaptation": [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/bridges/bio_symbolic_bridge.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "core/bridges/bio_symbolic_bridge.py",
      "tools/scripts/smart_naming_refactor.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "symbolic_drift": [
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/monitoring/test_collapse_tracker.py",
      "tools/scripts/smart_naming_refactor.py",
      "core/monitoring/collapse_tracker.py",
      "memory/dashboard.py",
      "ethics/tools/lambda_auditor.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_drift_regression.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/collapse/engine.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "learning/adaptive_agi/Meta_Learning/monitor_dashboard.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/monitoring/drift_monitor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_engine.py",
      "memory/fold_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/collapse_simulator.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/bio/symbolic/anomaly_filter_colony.py",
      "dream/tools/dream_divergence_map.py",
      "memory/systems/identity_lineage_bridge.py",
      "orchestration/brain/monitoring/remediator_agent.py",
      "symbolic/features/collapse/engine.py",
      "bio/core/symbolic_anomaly_filter_colony.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/self_reflective_debugger.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/monitoring/collapse_tracker.py",
      "core/monitoring/drift_monitor.py"
    ],
    "symbolic_coherence": [
      "consciousness/systems/mapper.py",
      "memory/protection/symbolic_quarantine_sanctum.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "orchestration/brain/consciousness/dream_narrator.py",
      "orchestration/brain/emotional/core.py",
      "tools/scripts/smart_naming_refactor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/lambda_shield_tester.py",
      "reasoning/scaffold_modules_reasoning_engine.py",
      "identity/core/colonies/dream_verification_colony.py",
      "orchestration/brain/core/types.py",
      "dream/core.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "emotional_drift": [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/drift/symbolic_drift_tracker.py",
      "creativity/narrative/symbolic_weaver.py",
      "tools/scripts/smart_naming_refactor.py",
      "trace/drift_dashboard_visual.py",
      "tools/enterprise/structured_audit_logger.py",
      "symbolic/features/drift/symbolic_drift_tracker.py",
      "symbolic/drift/symbolic_drift_tracker.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/naming_convention_scanner.py",
      "trace/drift_dashboard.py",
      "consciousness/systems/lambda_mirror.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_drift_regression.py",
      "dream/oneiric/oneiric_core/analysis/drift_score.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/monitoring/drift_monitor.py",
      "consciousness/reflection/lambda_mirror.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_engine.py",
      "memory/fold_engine.py",
      "symbolic/foundry/lambda_mirror.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/symbolic/test_drift.py",
      "dream/core/snapshot_redirection_controller.py",
      "memory/systems/dream_trace_linker.py",
      "core/monitoring/drift_monitor.py"
    ],
    "emotional_vector": [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/drift/symbolic_drift_tracker.py",
      "reasoning/lukhas_id_reasoning_engine.py",
      "tools/scripts/smart_naming_refactor.py",
      "core/identity/manager.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_memory_fold_universal_integration.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_oracle_predictor.py",
      "core/id.py",
      "tools/scripts/create_emotional_coherence_api.py",
      "symbolic/features/drift/trace_drift_tracker.py",
      "dream/core/dream_glyph_bridge.py",
      "orchestration/brain/spine/emotional_sorter.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/drift/trace_drift_tracker.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/fixtures/symbolic_fixtures.py",
      "symbolic/features/drift/symbolic_drift_tracker.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/id.py",
      "core/interfaces/logic/context/context_builder.py",
      "symbolic/drift/symbolic_drift_tracker.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "consciousness/quantum_consciousness_hub.py",
      "symbolic/drift/symbolic_drift_tracker_trace.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_drift_regression.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/identity/manager.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic/drift/symbolic_drift_tracker.py",
      "reasoning/oracle_predictor.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/memory/fold_universal_bridge.py",
      "tools/analysis/lukhas_concept_scanner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/examples/reasoning/oracle_demo.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/as_agent/sys/abas/abas.py",
      "core/interfaces/as_agent/sys/abas/abas.py",
      "tools/analysis/validate_lukhas_concepts.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/healix_mapper.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/monitoring/drift_monitor.py",
      "tools/scripts/create_memory_fold_api.py",
      "core/symbolic/drift/symbolic_drift_tracker.py",
      ".pwm_cleanup_archive/ARCHIVE_DISCONNECTED/backend/seedra/ethics/seedra_ethics_engine.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/symbolic/test_drift.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/interfaces/logic/context/context_builder.py",
      "memory/fold_universal_bridge.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/monitoring/test_drift_monitor.py",
      "quantum/healix_mapper.py",
      "core/monitoring/drift_monitor.py",
      "trace/symbolic_drift_tracker.py"
    ],
    "affect_grid": [
      "tools/analysis/lukhas_concept_scanner.py",
      "tools/scripts/smart_naming_refactor.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py"
    ],
    "trace_trail": [
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/analysis/naming_convention_scanner.py",
      "tools/scripts/smart_naming_refactor.py",
      "tools/analysis/lukhas_concept_scanner.py"
    ],
    "tier_access": [
      "ethics/tools/lambda_auditor.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py",
      "tools/analysis/lukhas_2030_full_consolidator.py",
      "tools/scripts/smart_naming_refactor.py",
      "memory/systems/tier_system.py",
      "tools/enterprise/structured_audit_logger.py",
      "tools/enterprise/observability_system.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "emotion/dreamseed_upgrade.py"
    ],
    "identity_helix": [
      "tools/analysis/lukhas_concept_scanner.py",
      "tools/scripts/smart_naming_refactor.py",
      "tools/analysis/lukhas_naming_refiner.py"
    ],
    "quantum_identity": [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/quantum/web_integration.py",
      "tools/analysis/lukhas_naming_refiner.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_quantum_identity_integration.py",
      "tools/scripts/smart_naming_refactor.py",
      "quantum/web_integration.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/quantum_identity_manager.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "core/quantum_identity_manager.py"
    ],
    "guardian_protocol": [
      "tools/analysis/lukhas_concept_scanner.py",
      "tools/scripts/smart_naming_refactor.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/validate_lukhas_concepts.py"
    ],
    "ethical_drift": [
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/features/symbolic/drift/symbolic_drift_tracker.py",
      "core/symbolic_drift_analyzer.py",
      "creativity/narrative/symbolic_weaver.py",
      "tools/scripts/smart_naming_refactor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/prediction/prophet_predictor.py",
      "trace/drift_dashboard_visual.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/symbolic_drift_analyzer.py",
      "symbolic/features/drift/symbolic_drift_tracker.py",
      "symbolic/drift/symbolic_drift_tracker.py",
      "emotion/tools/emotional_echo_detector.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "trace/drift_dashboard.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_drift_regression.py",
      "tools/analysis/lukhas_concept_scanner.py",
      "learning/adaptive_agi/Meta_Learning/monitor_dashboard.py",
      ".pwm_cleanup_archive/BACKUP_BEFORE_CONSOLIDATION_20250801_002312/core/monitoring/drift_monitor.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/test_lambda_echo_detector.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/test_symbolic_drift_analyzer.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tests/core/symbolic/test_drift.py",
      ".pwm_cleanup_archive/ARCHIVE_NON_PRODUCTION/tools/cli/drift_analyzer_cli.py",
      "core/monitoring/drift_monitor.py"
    ],
    "moral_compass": [
      "tools/analysis/lukhas_concept_scanner.py",
      "tools/scripts/smart_naming_refactor.py",
      "tools/analysis/lukhas_naming_refiner.py",
      "tools/analysis/lukhas_2030_full_consolidator.py"
    ]
  }
}