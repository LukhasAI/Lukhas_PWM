"""
Memory System - Auto-generated entity exports
Generated from entity activation scan
Total entities: 1652
"""

# Lazy imports to avoid circular dependencies
import importlib
import logging

logger = logging.getLogger(__name__)

# Entity registry for lazy loading
_ENTITY_REGISTRY = {
    "ColonyMemoryStats": ("adapters.colony_memory_adapter", "ColonyMemoryStats"),
    "AdapterConfig": ("adapters.colony_memory_adapter", "AdapterConfig"),
    "ColonyMemoryAdapter": ("adapters.colony_memory_adapter", "ColonyMemoryAdapter"),
    "CreativityMemoryAdapter": ("adapters.creativity_adapter", "CreativityMemoryAdapter"),
    "BaseMemoryManager": ("base_manager", "BaseMemoryManager"),
    "MemoryEntry": ("basic", "MemoryEntry"),
    "MemoryStore": ("basic", "MemoryStore"),
    "InMemoryStore": ("basic", "InMemoryStore"),
    "MemoryManager": ("basic", "MemoryManager"),
    "ColonyRole": ("colonies.base_memory_colony", "ColonyRole"),
    "ColonyState": ("colonies.base_memory_colony", "ColonyState"),
    "ColonyCapabilities": ("colonies.base_memory_colony", "ColonyCapabilities"),
    "ColonyMetrics": ("colonies.base_memory_colony", "ColonyMetrics"),
    "BaseMemoryColony": ("colonies.base_memory_colony", "BaseMemoryColony"),
    "MemoryType": ("colonies.base_memory_colony", "MemoryType"),
    "EpisodicMemoryRecord": ("colonies.episodic_memory_colony", "EpisodicMemoryRecord"),
    "EpisodicMemoryColony": ("colonies.episodic_memory_colony", "EpisodicMemoryColony"),
    "SymbolicMotif": ("compression.symbolic_delta", "SymbolicMotif"),
    "CompressionMetrics": ("compression.symbolic_delta", "CompressionMetrics"),
    "AdvancedSymbolicDeltaCompressor": ("compression.symbolic_delta", "AdvancedSymbolicDeltaCompressor"),
    "SleepStage": ("consolidation.consolidation_orchestrator", "SleepStage"),
    "ConsolidationMode": ("consolidation.consolidation_orchestrator", "ConsolidationMode"),
    "ConsolidationSession": ("consolidation.consolidation_orchestrator", "ConsolidationSession"),
    "ConsolidationOrchestrator": ("consolidation.consolidation_orchestrator", "ConsolidationOrchestrator"),
    "HippocampalMemoryInterface": ("consolidation.consolidation_orchestrator", "HippocampalMemoryInterface"),
    "NeocorticalMemoryInterface": ("consolidation.consolidation_orchestrator", "NeocorticalMemoryInterface"),
    "RippleType": ("consolidation.ripple_generator", "RippleType"),
    "ReplayDirection": ("consolidation.ripple_generator", "ReplayDirection"),
    "Ripple": ("consolidation.ripple_generator", "Ripple"),
    "RippleSequence": ("consolidation.ripple_generator", "RippleSequence"),
    "RippleGenerator": ("consolidation.ripple_generator", "RippleGenerator"),
    "EpisodicMemory": ("consolidation.ripple_generator", "EpisodicMemory"),
    "CircadianPhase": ("consolidation.sleep_cycle_manager", "CircadianPhase"),
    "SleepPressure": ("consolidation.sleep_cycle_manager", "SleepPressure"),
    "SleepCycle": ("consolidation.sleep_cycle_manager", "SleepCycle"),
    "SleepArchitecture": ("consolidation.sleep_cycle_manager", "SleepArchitecture"),
    "SleepCycleManager": ("consolidation.sleep_cycle_manager", "SleepCycleManager"),
    "MemoryTraceHarmonizer": ("convergence.memory_trace_harmonizer", "MemoryTraceHarmonizer"),
    "HybridMemoryItem": ("core", "HybridMemoryItem"),
    "VectorStorageLayer": ("core", "VectorStorageLayer"),
    "MemoryAttentionLayer": ("core", "MemoryAttentionLayer"),
    "ContinuousLearningEngine": ("core", "ContinuousLearningEngine"),
    "HybridMemoryFold": ("core", "HybridMemoryFold"),
    "OptimizedVectorStorageLayer": ("core", "OptimizedVectorStorageLayer"),
    "OptimizedHybridMemoryFold": ("core", "OptimizedHybridMemoryFold"),
    "NodeState": ("core", "NodeState"),
    "MessageType": ("core", "MessageType"),
    "DistributedMemoryEntry": ("core", "DistributedMemoryEntry"),
    "NodeInfo": ("core", "NodeInfo"),
    "ConsensusProtocol": ("core", "ConsensusProtocol"),
    "DistributedMemoryFold": ("core", "DistributedMemoryFold"),
    "ValidationMode": ("core.colony_memory_validator", "ValidationMode"),
    "ConsensusResult": ("core.colony_memory_validator", "ConsensusResult"),
    "ValidationRequest": ("core.colony_memory_validator", "ValidationRequest"),
    "ColonyValidationResponse": ("core.colony_memory_validator", "ColonyValidationResponse"),
    "ConsensusOutcome": ("core.colony_memory_validator", "ConsensusOutcome"),
    "ColonyMemoryValidator": ("core.colony_memory_validator", "ColonyMemoryValidator"),
    "EpisodicContext": ("core.interfaces.episodic_interface", "EpisodicContext"),
    "EpisodicMemoryContent": ("core.interfaces.episodic_interface", "EpisodicMemoryContent"),
    "EpisodicMemoryInterface": ("core.interfaces.episodic_interface", "EpisodicMemoryInterface"),
    "MemoryType": ("core.interfaces.memory_interface", "MemoryType"),
    "MemoryState": ("core.interfaces.memory_interface", "MemoryState"),
    "ValidationResult": ("core.interfaces.memory_interface", "ValidationResult"),
    "MemoryMetadata": ("core.interfaces.memory_interface", "MemoryMetadata"),
    "MemoryOperation": ("core.interfaces.memory_interface", "MemoryOperation"),
    "MemoryResponse": ("core.interfaces.memory_interface", "MemoryResponse"),
    "BaseMemoryInterface": ("core.interfaces.memory_interface", "BaseMemoryInterface"),
    "MemoryInterfaceRegistry": ("core.interfaces.memory_interface", "MemoryInterfaceRegistry"),
    "SemanticRelationType": ("core.interfaces.semantic_interface", "SemanticRelationType"),
    "SemanticRelation": ("core.interfaces.semantic_interface", "SemanticRelation"),
    "ConceptNode": ("core.interfaces.semantic_interface", "ConceptNode"),
    "SemanticMemoryContent": ("core.interfaces.semantic_interface", "SemanticMemoryContent"),
    "SemanticMemoryInterface": ("core.interfaces.semantic_interface", "SemanticMemoryInterface"),
    "MemoryType": ("core.unified_memory_orchestrator", "MemoryType"),
    "ConsolidationState": ("core.unified_memory_orchestrator", "ConsolidationState"),
    "SleepStage": ("core.unified_memory_orchestrator", "SleepStage"),
    "MemoryTrace": ("core.unified_memory_orchestrator", "MemoryTrace"),
    "OscillationPattern": ("core.unified_memory_orchestrator", "OscillationPattern"),
    "UnifiedMemoryOrchestrator": ("core.unified_memory_orchestrator", "UnifiedMemoryOrchestrator"),
    "MemoryHealthMetrics": ("dashboard", "MemoryHealthMetrics"),
    "CascadeBlockInfo": ("dashboard", "CascadeBlockInfo"),
    "DriftEventSummary": ("dashboard", "DriftEventSummary"),
    "MemoryHealthDashboard": ("dashboard", "MemoryHealthDashboard"),
    "StateType": ("distributed_state_manager", "StateType"),
    "StateEntry": ("distributed_state_manager", "StateEntry"),
    "StateSnapshot": ("distributed_state_manager", "StateSnapshot"),
    "DistributedStateManager": ("distributed_state_manager", "DistributedStateManager"),
    "MultiNodeStateManager": ("distributed_state_manager", "MultiNodeStateManager"),
    "DreamMemoryManager": ("dream_memory_manager", "DreamMemoryManager"),
    "DriftMemoryManager": ("drift_memory_manager", "DriftMemoryManager"),
    "EmotionVector": ("emotional", "EmotionVector"),
    "EmotionalMemory": ("emotional", "EmotionalMemory"),
    "SymbolicDriftTracker": ("emotional", "SymbolicDriftTracker"),
    "EmotionalMemoryManager": ("emotional_memory_manager", "EmotionalMemoryManager"),
    "UnifiedEmotionalMemoryManager": ("emotional_memory_manager_unified", "UnifiedEmotionalMemoryManager"),
    "EvolutionType": ("evolution", "EvolutionType"),
    "EvolutionEvent": ("evolution", "EvolutionEvent"),
    "MemoryEvolutionEngine": ("evolution", "MemoryEvolutionEngine"),
    "FoldEntropyVisualizer": ("fold_entropy_visualizer", "FoldEntropyVisualizer"),
    "GlyphBinding": ("glyph_memory_integration", "GlyphBinding"),
    "FoldLineage": ("glyph_memory_integration", "FoldLineage"),
    "CompressionType": ("glyph_memory_integration", "CompressionType"),
    "GlyphMemoryIndex": ("glyph_memory_integration", "GlyphMemoryIndex"),
    "EmotionalFoldingEngine": ("glyph_memory_integration", "EmotionalFoldingEngine"),
    "GlyphAffectCoupler": ("glyph_memory_integration", "GlyphAffectCoupler"),
    "DreamMemoryBridge": ("glyph_memory_integration", "DreamMemoryBridge"),
    "GlyphMemorySystem": ("glyph_memory_integration", "GlyphMemorySystem"),
    "EthicalSeverity": ("governance.ethical_drift_governor", "EthicalSeverity"),
    "InterventionType": ("governance.ethical_drift_governor", "InterventionType"),
    "EthicalConcern": ("governance.ethical_drift_governor", "EthicalConcern"),
    "GovernanceRule": ("governance.ethical_drift_governor", "GovernanceRule"),
    "EthicalDriftGovernor": ("governance.ethical_drift_governor", "EthicalDriftGovernor"),
    "HippocampalState": ("hippocampal.hippocampal_buffer", "HippocampalState"),
    "PlaceField": ("hippocampal.hippocampal_buffer", "PlaceField"),
    "EpisodicMemory": ("hippocampal.hippocampal_buffer", "EpisodicMemory"),
    "PlaceCell": ("hippocampal.hippocampal_buffer", "PlaceCell"),
    "GridCell": ("hippocampal.hippocampal_buffer", "GridCell"),
    "HippocampalBuffer": ("hippocampal.hippocampal_buffer", "HippocampalBuffer"),
    "TagScope": ("hippocampal.hippocampal_buffer", "TagScope"),
    "PersistenceMode": ("hippocampal.hippocampal_buffer", "PersistenceMode"),
    "PatternSeparator": ("hippocampal.pattern_separator", "PatternSeparator"),
    "OscillationPhase": ("hippocampal.theta_oscillator", "OscillationPhase"),
    "ThetaWave": ("hippocampal.theta_oscillator", "ThetaWave"),
    "ThetaOscillator": ("hippocampal.theta_oscillator", "ThetaOscillator"),
    "HashAlgorithm": ("integrity.collapse_hash", "HashAlgorithm"),
    "IntegrityStatus": ("integrity.collapse_hash", "IntegrityStatus"),
    "MerkleNode": ("integrity.collapse_hash", "MerkleNode"),
    "Checkpoint": ("integrity.collapse_hash", "Checkpoint"),
    "MerkleTree": ("integrity.collapse_hash", "MerkleTree"),
    "CollapseHash": ("integrity.collapse_hash", "CollapseHash"),
    "TagScope": ("integrity.collapse_hash", "TagScope"),
    "ActorPriority": ("lightweight_concurrency", "ActorPriority"),
    "LightweightActor": ("lightweight_concurrency", "LightweightActor"),
    "MemoryEfficientScheduler": ("lightweight_concurrency", "MemoryEfficientScheduler"),
    "ActorPool": ("lightweight_concurrency", "ActorPool"),
    "LoopInfo": ("loop_monitor", "LoopInfo"),
    "SymbolicLoopMonitor": ("loop_monitor", "SymbolicLoopMonitor"),
    "EnhancedMemoryManager": ("manager", "EnhancedMemoryManager"),
    "EnhancedMemoryFold": ("manager", "EnhancedMemoryFold"),
    "MemoryFoldConfig": ("manager", "MemoryFoldConfig"),
    "EnhancedMemoryVisualizer": ("manager", "EnhancedMemoryVisualizer"),
    "VisualizationConfig": ("manager", "VisualizationConfig"),
    "QuantumOscillator": ("manager", "QuantumOscillator"),
    "CoreMemoriaConfig": ("memoria", "CoreMemoriaConfig"),
    "CoreMemoriaComponent": ("memoria", "CoreMemoriaComponent"),
    "MemoryHub": ("memory_hub", "MemoryHub"),
    "MemoryTier": ("memory_optimization", "MemoryTier"),
    "CompressionStrategy": ("memory_optimization", "CompressionStrategy"),
    "MemoryObject": ("memory_optimization", "MemoryObject"),
    "ObjectPool": ("memory_optimization", "ObjectPool"),
    "CompressedStorage": ("memory_optimization", "CompressedStorage"),
    "TieredMemoryCache": ("memory_optimization", "TieredMemoryCache"),
    "MemoryOptimizer": ("memory_optimization", "MemoryOptimizer"),
    "CompactList": ("memory_optimization", "CompactList"),
    "BloomFilter": ("memory_optimization", "BloomFilter"),
    "PooledWrapper": ("memory_optimization", "PooledWrapper"),
    "Memoria": ("memory_systems.memoria-checkpoint", "Memoria"),
    "ConceptNode": ("neocortical.concept_hierarchy", "ConceptNode"),
    "ConceptHierarchy": ("neocortical.concept_hierarchy", "ConceptHierarchy"),
    "CorticalLayer": ("neocortical.neocortical_network", "CorticalLayer"),
    "LearningRate": ("neocortical.neocortical_network", "LearningRate"),
    "SemanticMemory": ("neocortical.neocortical_network", "SemanticMemory"),
    "CorticalColumn": ("neocortical.neocortical_network", "CorticalColumn"),
    "NeocorticalNetwork": ("neocortical.neocortical_network", "NeocorticalNetwork"),
    "SemanticExtractor": ("neocortical.semantic_extractor", "SemanticExtractor"),
    "MemoryNode": ("node", "MemoryNode"),
    "MemoryOpenAIAdapter": ("openai_memory_adapter", "MemoryOpenAIAdapter"),
    "PersistenceMode": ("persistence.orthogonal_persistence", "PersistenceMode"),
    "StorageBackend": ("persistence.orthogonal_persistence", "StorageBackend"),
    "PersistentMemory": ("persistence.orthogonal_persistence", "PersistentMemory"),
    "PersistenceJournal": ("persistence.orthogonal_persistence", "PersistenceJournal"),
    "OrthogonalPersistence": ("persistence.orthogonal_persistence", "OrthogonalPersistence"),
    "MemoryCoil": ("persistence.orthogonal_persistence", "MemoryCoil"),
    "TagScope": ("persistence.orthogonal_persistence", "TagScope"),
    "PrivacyLevel": ("privacy_preserving_memory_vault", "PrivacyLevel"),
    "EncryptionScheme": ("privacy_preserving_memory_vault", "EncryptionScheme"),
    "PrivacyTechnique": ("privacy_preserving_memory_vault", "PrivacyTechnique"),
    "ComplianceStandard": ("privacy_preserving_memory_vault", "ComplianceStandard"),
    "PrivacyPolicy": ("privacy_preserving_memory_vault", "PrivacyPolicy"),
    "EncryptedMemory": ("privacy_preserving_memory_vault", "EncryptedMemory"),
    "EncryptionProvider": ("privacy_preserving_memory_vault", "EncryptionProvider"),
    "AESGCMProvider": ("privacy_preserving_memory_vault", "AESGCMProvider"),
    "FernetProvider": ("privacy_preserving_memory_vault", "FernetProvider"),
    "DifferentialPrivacyProvider": ("privacy_preserving_memory_vault", "DifferentialPrivacyProvider"),
    "PrivacyPreservingMemoryVault": ("privacy_preserving_memory_vault", "PrivacyPreservingMemoryVault"),
    "QuarantineStatus": ("protection.symbolic_quarantine_sanctum", "QuarantineStatus"),
    "RepairProtocolType": ("protection.symbolic_quarantine_sanctum", "RepairProtocolType"),
    "ThreatLevel": ("protection.symbolic_quarantine_sanctum", "ThreatLevel"),
    "RestoreViability": ("protection.symbolic_quarantine_sanctum", "RestoreViability"),
    "QuarantineEntry": ("protection.symbolic_quarantine_sanctum", "QuarantineEntry"),
    "RepairProtocol": ("protection.symbolic_quarantine_sanctum", "RepairProtocol"),
    "SanctumManifest": ("protection.symbolic_quarantine_sanctum", "SanctumManifest"),
    "SymbolicQuarantineSanctum": ("protection.symbolic_quarantine_sanctum", "SymbolicQuarantineSanctum"),
    "ProteinType": ("proteome.symbolic_proteome", "ProteinType"),
    "FoldingState": ("proteome.symbolic_proteome", "FoldingState"),
    "PostTranslationalModification": ("proteome.symbolic_proteome", "PostTranslationalModification"),
    "MemoryCodon": ("proteome.symbolic_proteome", "MemoryCodon"),
    "MemoryProtein": ("proteome.symbolic_proteome", "MemoryProtein"),
    "ProteinComplex": ("proteome.symbolic_proteome", "ProteinComplex"),
    "MolecularChaperone": ("proteome.symbolic_proteome", "MolecularChaperone"),
    "SymbolicProteome": ("proteome.symbolic_proteome", "SymbolicProteome"),
    "TagScope": ("proteome.symbolic_proteome", "TagScope"),
    "SymbolicTag": ("proteome.symbolic_proteome", "SymbolicTag"),
    "EnhancedMemoryManager": ("quantum_manager", "EnhancedMemoryManager"),
    "EnhancedMemoryFold": ("quantum_manager", "EnhancedMemoryFold"),
    "MemoryFoldConfig": ("quantum_manager", "MemoryFoldConfig"),
    "EnhancedMemoryVisualizer": ("quantum_manager", "EnhancedMemoryVisualizer"),
    "VisualizationConfig": ("quantum_manager", "VisualizationConfig"),
    "QuantumOscillator": ("quantum_manager", "QuantumOscillator"),
    "QuantumMemoryManager": ("quantum_memory_manager", "QuantumMemoryManager"),
    "TraumaType": ("repair.advanced_trauma_repair", "TraumaType"),
    "RepairStrategy": ("repair.advanced_trauma_repair", "RepairStrategy"),
    "HealingPhase": ("repair.advanced_trauma_repair", "HealingPhase"),
    "TraumaSignature": ("repair.advanced_trauma_repair", "TraumaSignature"),
    "RepairScaffold": ("repair.advanced_trauma_repair", "RepairScaffold"),
    "ImmuneResponse": ("repair.advanced_trauma_repair", "ImmuneResponse"),
    "HelicalRepairMechanism": ("repair.advanced_trauma_repair", "HelicalRepairMechanism"),
    "TraumaRepairSystem": ("repair.advanced_trauma_repair", "TraumaRepairSystem"),
    "IntegrityStatus": ("repair.advanced_trauma_repair", "IntegrityStatus"),
    "TagScope": ("repair.advanced_trauma_repair", "TagScope"),
    "HelixRepairModule": ("repair.helix_repair_module", "HelixRepairModule"),
    "ReplayMode": ("replay.replay_buffer", "ReplayMode"),
    "ExperienceType": ("replay.replay_buffer", "ExperienceType"),
    "Experience": ("replay.replay_buffer", "Experience"),
    "ReplayBatch": ("replay.replay_buffer", "ReplayBatch"),
    "ReplayBuffer": ("replay.replay_buffer", "ReplayBuffer"),
    "EpisodicMemory": ("replay.replay_buffer", "EpisodicMemory"),
    "SemanticMemory": ("replay.replay_buffer", "SemanticMemory"),
    "ResonanceMode": ("resonance.resonant_memory_access", "ResonanceMode"),
    "ResonanceSignature": ("resonance.resonant_memory_access", "ResonanceSignature"),
    "ResonantCluster": ("resonance.resonant_memory_access", "ResonantCluster"),
    "ResonantMemoryAccess": ("resonance.resonant_memory_access", "ResonantMemoryAccess"),
    "NucleusState": ("scaffold.atomic_memory_scaffold", "NucleusState"),
    "CoilState": ("scaffold.atomic_memory_scaffold", "CoilState"),
    "AtomicRule": ("scaffold.atomic_memory_scaffold", "AtomicRule"),
    "MemoryCoil": ("scaffold.atomic_memory_scaffold", "MemoryCoil"),
    "AtomicNucleus": ("scaffold.atomic_memory_scaffold", "AtomicNucleus"),
    "FlexibleCoilSystem": ("scaffold.atomic_memory_scaffold", "FlexibleCoilSystem"),
    "AtomicMemoryScaffold": ("scaffold.atomic_memory_scaffold", "AtomicMemoryScaffold"),
    "TagScope": ("scaffold.atomic_memory_scaffold", "TagScope"),
    "TagPermission": ("scaffold.atomic_memory_scaffold", "TagPermission"),
    "MemoryService": ("service", "MemoryService"),
    "IdentityClient": ("service", "IdentityClient"),
    "MemoryService": ("services", "MemoryService"),
    "MoralDecisionType": ("structural_conscience", "MoralDecisionType"),
    "ConscienceSeverity": ("structural_conscience", "ConscienceSeverity"),
    "ConscienceEntry": ("structural_conscience", "ConscienceEntry"),
    "StructuralConscience": ("structural_conscience", "StructuralConscience"),
    "SymbolAwareTieredMemory": ("symbol_aware_tiered_memory", "SymbolAwareTieredMemory"),
    "AdaptiveMemoryEngine": ("systems.adaptive_memory_engine", "AdaptiveMemoryEngine"),
    "AgentMemory": ("systems.agent_memory", "AgentMemory"),
    "AttentionConfig": ("systems.attention_memory_layer", "AttentionConfig"),
    "MultiHeadAttention": ("systems.attention_memory_layer", "MultiHeadAttention"),
    "TemporalAttention": ("systems.attention_memory_layer", "TemporalAttention"),
    "HierarchicalAttention": ("systems.attention_memory_layer", "HierarchicalAttention"),
    "CrossModalAttention": ("systems.attention_memory_layer", "CrossModalAttention"),
    "MemoryAttentionOrchestrator": ("systems.attention_memory_layer", "MemoryAttentionOrchestrator"),
    "WorkingMemoryBuffer": ("systems.bio_symbolic_memory", "WorkingMemoryBuffer"),
    "EpisodicMemoryStore": ("systems.bio_symbolic_memory", "EpisodicMemoryStore"),
    "SemanticKnowledgeGraph": ("systems.bio_symbolic_memory", "SemanticKnowledgeGraph"),
    "ProceduralSkillNetwork": ("systems.bio_symbolic_memory", "ProceduralSkillNetwork"),
    "MemoryConsolidationEngine": ("systems.bio_symbolic_memory", "MemoryConsolidationEngine"),
    "BioSymbolicMemory": ("systems.bio_symbolic_memory", "BioSymbolicMemory"),
    "IdentityLinkType": ("systems.causal_identity_tracker", "IdentityLinkType"),
    "CausalOriginData": ("systems.causal_identity_tracker", "CausalOriginData"),
    "IdentityAnchor": ("systems.causal_identity_tracker", "IdentityAnchor"),
    "EventChainValidation": ("systems.causal_identity_tracker", "EventChainValidation"),
    "CausalIdentityTracker": ("systems.causal_identity_tracker", "CausalIdentityTracker"),
    "CausalRelationType": ("systems.causal_memory_chains", "CausalRelationType"),
    "CausalStrength": ("systems.causal_memory_chains", "CausalStrength"),
    "CausalEvidence": ("systems.causal_memory_chains", "CausalEvidence"),
    "CausalRelation": ("systems.causal_memory_chains", "CausalRelation"),
    "CausalChain": ("systems.causal_memory_chains", "CausalChain"),
    "TemporalCausalAnalyzer": ("systems.causal_memory_chains", "TemporalCausalAnalyzer"),
    "CausalGraphBuilder": ("systems.causal_memory_chains", "CausalGraphBuilder"),
    "CausalReasoningEngine": ("systems.causal_memory_chains", "CausalReasoningEngine"),
    "CausalMemoryWrapper": ("systems.causal_memory_chains", "CausalMemoryWrapper"),
    "ChatGPTMemoryConfig": ("systems.chatgpt_memory_integrator_legacy", "ChatGPTMemoryConfig"),
    "ChatGPTMemoryIntegrator": ("systems.chatgpt_memory_integrator_legacy", "ChatGPTMemoryIntegrator"),
    "MockGPTClient": ("systems.chatgpt_memory_integrator_legacy", "MockGPTClient"),
    "MemoryManager": ("systems.chatgpt_memory_integrator_legacy", "MemoryManager"),
    "CognitiveAdapter": ("systems.chatgpt_memory_integrator_legacy", "CognitiveAdapter"),
    "CognitiveUpdater": ("systems.chatgpt_memory_integrator_legacy", "CognitiveUpdater"),
    "MemoryType": ("systems.chatgpt_memory_integrator_legacy", "MemoryType"),
    "MemoryPriority": ("systems.chatgpt_memory_integrator_legacy", "MemoryPriority"),
    "GPTClient": ("systems.chatgpt_memory_integrator_legacy", "GPTClient"),
    "ConversationState": ("systems.chatgpt_memory_integrator_legacy", "ConversationState"),
    "ConversationMessage": ("systems.chatgpt_memory_integrator_legacy", "ConversationMessage"),
    "CollapseBuffer": ("systems.collapse_buffer", "CollapseBuffer"),
    "CollapseTrace": ("systems.collapse_trace", "CollapseTrace"),
    "ColonyRole": ("systems.colony_swarm_integration", "ColonyRole"),
    "ColonyProfile": ("systems.colony_swarm_integration", "ColonyProfile"),
    "ColonyMemoryValidator": ("systems.colony_swarm_integration", "ColonyMemoryValidator"),
    "SwarmConsensusManager": ("systems.colony_swarm_integration", "SwarmConsensusManager"),
    "MemoryType": ("systems.core", "MemoryType"),
    "MemoryPriority": ("systems.core", "MemoryPriority"),
    "MemoryStrand": ("systems.core", "MemoryStrand"),
    "MemoryEntry": ("systems.core", "MemoryEntry"),
    "MemoryConfig": ("systems.core", "MemoryConfig"),
    "MemoryHealth": ("systems.core", "MemoryHealth"),
    "MemoryModule": ("systems.core", "MemoryModule"),
    "BaseModule": ("systems.core", "BaseModule"),
    "BaseConfig": ("systems.core", "BaseConfig"),
    "BaseHealth": ("systems.core", "BaseHealth"),
    "MemoryType": ("systems.distributed_memory", "MemoryType"),
    "DistributedMemory": ("systems.distributed_memory", "DistributedMemory"),
    "DistributedMemorySystem": ("systems.distributed_memory", "DistributedMemorySystem"),
    "NodeState": ("systems.distributed_memory_fold", "NodeState"),
    "MessageType": ("systems.distributed_memory_fold", "MessageType"),
    "DistributedMemoryEntry": ("systems.distributed_memory_fold", "DistributedMemoryEntry"),
    "NodeInfo": ("systems.distributed_memory_fold", "NodeInfo"),
    "ConsensusProtocol": ("systems.distributed_memory_fold", "ConsensusProtocol"),
    "DistributedMemoryFold": ("systems.distributed_memory_fold", "DistributedMemoryFold"),
    "DreamState": ("systems.dream_integrator", "DreamState"),
    "DreamType": ("systems.dream_integrator", "DreamType"),
    "DreamFragment": ("systems.dream_integrator", "DreamFragment"),
    "DreamSession": ("systems.dream_integrator", "DreamSession"),
    "DreamMemoryLinker": ("systems.dream_integrator", "DreamMemoryLinker"),
    "DreamIntegrator": ("systems.dream_integrator", "DreamIntegrator"),
    "DreamMemoryManager": ("systems.dream_memory_manager", "DreamMemoryManager"),
    "GlyphResonanceLevel": ("systems.dream_trace_linker", "GlyphResonanceLevel"),
    "DreamTraceType": ("systems.dream_trace_linker", "DreamTraceType"),
    "GlyphSignature": ("systems.dream_trace_linker", "GlyphSignature"),
    "IdentitySignature": ("systems.dream_trace_linker", "IdentitySignature"),
    "EmotionalEcho": ("systems.dream_trace_linker", "EmotionalEcho"),
    "DreamTraceLink": ("systems.dream_trace_linker", "DreamTraceLink"),
    "DreamTraceLinker": ("systems.dream_trace_linker", "DreamTraceLinker"),
    "EmotionalModulator": ("systems.emotional_memory_manager", "EmotionalModulator"),
    "MemoryEngine": ("systems.engine", "MemoryEngine"),
    "ReplayStrategy": ("systems.episodic_replay_buffer", "ReplayStrategy"),
    "ConsolidationPhase": ("systems.episodic_replay_buffer", "ConsolidationPhase"),
    "EpisodicMemory": ("systems.episodic_replay_buffer", "EpisodicMemory"),
    "PrioritizedReplayBuffer": ("systems.episodic_replay_buffer", "PrioritizedReplayBuffer"),
    "DreamStateReplay": ("systems.episodic_replay_buffer", "DreamStateReplay"),
    "EpisodicReplayMemoryWrapper": ("systems.episodic_replay_buffer", "EpisodicReplayMemoryWrapper"),
    "ExponentialLearningSystem": ("systems.exponential_learning", "ExponentialLearningSystem"),
    "CausationType": ("systems.fold_lineage_tracker", "CausationType"),
    "CausalLink": ("systems.fold_lineage_tracker", "CausalLink"),
    "FoldLineageNode": ("systems.fold_lineage_tracker", "FoldLineageNode"),
    "LineageChain": ("systems.fold_lineage_tracker", "LineageChain"),
    "FoldLineageTracker": ("systems.fold_lineage_tracker", "FoldLineageTracker"),
    "LKFPackError": ("systems.foldin", "LKFPackError"),
    "LKFPackVersionError": ("systems.foldin", "LKFPackVersionError"),
    "LKFPackIntegrityError": ("systems.foldin", "LKFPackIntegrityError"),
    "GlyphMemoryIndex": ("systems.glyph_memory_bridge", "GlyphMemoryIndex"),
    "GlyphMemoryBridge": ("systems.glyph_memory_bridge", "GlyphMemoryBridge"),
    "MemorySegment": ("systems.healix_memory_core", "MemorySegment"),
    "HealixMemoryCore": ("systems.healix_memory_core", "HealixMemoryCore"),
    "HealixVisualizer": ("systems.healix_memory_core", "HealixVisualizer"),
    "HelixMemory": ("systems.helix_dna", "HelixMemory"),
    "HelixMapper": ("systems.helix_mapper", "HelixMapper"),
    "MemoryTier": ("systems.hierarchical_data_store", "MemoryTier"),
    "CompressionLevel": ("systems.hierarchical_data_store", "CompressionLevel"),
    "MemoryNode": ("systems.hierarchical_data_store", "MemoryNode"),
    "RetrievalContext": ("systems.hierarchical_data_store", "RetrievalContext"),
    "HierarchicalDataStore": ("systems.hierarchical_data_store", "HierarchicalDataStore"),
    "HybridMemoryItem": ("systems.hybrid_memory_fold", "HybridMemoryItem"),
    "VectorStorageLayer": ("systems.hybrid_memory_fold", "VectorStorageLayer"),
    "MemoryAttentionLayer": ("systems.hybrid_memory_fold", "MemoryAttentionLayer"),
    "ContinuousLearningEngine": ("systems.hybrid_memory_fold", "ContinuousLearningEngine"),
    "HybridMemoryFold": ("systems.hybrid_memory_fold", "HybridMemoryFold"),
    "nn": ("systems.hybrid_memory_fold", "nn"),
    "Module": ("systems.hybrid_memory_fold", "Module"),
    "Linear": ("systems.hybrid_memory_fold", "Linear"),
    "MultiheadAttention": ("systems.hybrid_memory_fold", "MultiheadAttention"),
    "ProtectionLevel": ("systems.identity_lineage_bridge", "ProtectionLevel"),
    "ThreatType": ("systems.identity_lineage_bridge", "ThreatType"),
    "IdentityThreat": ("systems.identity_lineage_bridge", "IdentityThreat"),
    "ProtectionAction": ("systems.identity_lineage_bridge", "ProtectionAction"),
    "IdentityLineageBridge": ("systems.identity_lineage_bridge", "IdentityLineageBridge"),
    "InMemoryCacheStorageWrapper": ("systems.in_memory_cache_storage_wrapper", "InMemoryCacheStorageWrapper"),
    "CacheStorage": ("systems.in_memory_cache_storage_wrapper", "CacheStorage"),
    "CacheStorageContext": ("systems.in_memory_cache_storage_wrapper", "CacheStorageContext"),
    "CacheStorageKeyNotFoundError": ("systems.in_memory_cache_storage_wrapper", "CacheStorageKeyNotFoundError"),
    "CacheStat": ("systems.in_memory_cache_storage_wrapper", "CacheStat"),
    "CacheUtils": ("systems.in_memory_cache_storage_wrapper", "CacheUtils"),
    "InMemoryLogExporter": ("systems.in_memory_log_exporter", "InMemoryLogExporter"),
    "LogData": ("systems.in_memory_log_exporter", "LogData"),
    "LogExporter": ("systems.in_memory_log_exporter", "LogExporter"),
    "LogExportResult": ("systems.in_memory_log_exporter", "LogExportResult"),
    "InMemorySpanExporter": ("systems.in_memory_span_exporter", "InMemorySpanExporter"),
    "ReadableSpan": ("systems.in_memory_span_exporter", "ReadableSpan"),
    "SpanExporter": ("systems.in_memory_span_exporter", "SpanExporter"),
    "SpanExportResult": ("systems.in_memory_span_exporter", "SpanExportResult"),
    "VerifoldRegistryAdapter": ("systems.integration_adapters", "VerifoldRegistryAdapter"),
    "DriftMetricsAdapter": ("systems.integration_adapters", "DriftMetricsAdapter"),
    "RealityAnchorsAdapter": ("systems.integration_adapters", "RealityAnchorsAdapter"),
    "ConsensusValidationAdapter": ("systems.integration_adapters", "ConsensusValidationAdapter"),
    "MemorySafetyIntegration": ("systems.integration_adapters", "MemorySafetyIntegration"),
    "EnhancedMemoryIntegration": ("systems.integration_example", "EnhancedMemoryIntegration"),
    "UnifiedMemoryInterface": ("systems.integration_example", "UnifiedMemoryInterface"),
    "EmbeddingCacheEntry": ("systems.lazy_loading_embeddings", "EmbeddingCacheEntry"),
    "LRUEmbeddingCache": ("systems.lazy_loading_embeddings", "LRUEmbeddingCache"),
    "EmbeddingStorage": ("systems.lazy_loading_embeddings", "EmbeddingStorage"),
    "LazyEmbeddingLoader": ("systems.lazy_loading_embeddings", "LazyEmbeddingLoader"),
    "LazyMemoryItem": ("systems.lazy_loading_embeddings", "LazyMemoryItem"),
    "MetaLearningSystem": ("systems.learn_to_learn", "MetaLearningSystem"),
    "_MockChoiceContentDreamsDP": ("systems.memoria.dreams", "_MockChoiceContentDreamsDP"),
    "_MockMessageDreamsDP": ("systems.memoria.dreams", "_MockMessageDreamsDP"),
    "_MockResponseDreamsDP": ("systems.memoria.dreams", "_MockResponseDreamsDP"),
    "OpenAI": ("systems.memoria.dreams", "OpenAI"),
    "APIError": ("systems.memoria.dreams", "APIError"),
    "_MockChoiceContent": ("systems.memoria.gpt_reflection", "_MockChoiceContent"),
    "_MockMessage": ("systems.memoria.gpt_reflection", "_MockMessage"),
    "_MockResponse": ("systems.memoria.gpt_reflection", "_MockResponse"),
    "_MockChatCompletions": ("systems.memoria.gpt_reflection", "_MockChatCompletions"),
    "OpenAI": ("systems.memoria.gpt_reflection", "OpenAI"),
    "APIError": ("systems.memoria.gpt_reflection", "APIError"),
    "AdvancedMemoryManager": ("systems.memory_advanced_manager", "AdvancedMemoryManager"),
    "MemoryManager": ("systems.memory_bases", "MemoryManager"),
    "MemoryAccessPolicy": ("systems.memory_bases", "MemoryAccessPolicy"),
    "MemoryIdentityIntegration": ("systems.memory_bases", "MemoryIdentityIntegration"),
    "Memoria": ("systems.memory_checkpoint", "Memoria"),
    "MemoryNode": ("systems.memory_collapse_verifier", "MemoryNode"),
    "MemoryCollapseVerifier": ("systems.memory_collapse_verifier", "MemoryCollapseVerifier"),
    "MemoryConsolidationEngine": ("systems.memory_consolidation", "MemoryConsolidationEngine"),
    "MemorySystemConsolidator": ("systems.memory_consolidator", "MemorySystemConsolidator"),
    "MemoryDriftMirror": ("systems.memory_drift_mirror", "MemoryDriftMirror"),
    "MemoryDriftStabilizer": ("systems.memory_drift_stabilizer", "MemoryDriftStabilizer"),
    "MemoryDriftTracker": ("systems.memory_drift_tracker", "MemoryDriftTracker"),
    "MemoryEvolution": ("systems.memory_evolution", "MemoryEvolution"),
    "DocumentVersionControl": ("systems.memory_evolution", "DocumentVersionControl"),
    "KnowledgeAdaptation": ("systems.memory_evolution", "KnowledgeAdaptation"),
    "UsageBasedLearning": ("systems.memory_evolution", "UsageBasedLearning"),
    "BioOscillatorAdapter": ("systems.memory_evolution", "BioOscillatorAdapter"),
    "DocumentStructureAnalyzer": ("systems.memory_evolution", "DocumentStructureAnalyzer"),
    "VoiceSynthesisAdapter": ("systems.memory_evolution", "VoiceSynthesisAdapter"),
    "MemoryItem": ("systems.memory_fold_system", "MemoryItem"),
    "TagInfo": ("systems.memory_fold_system", "TagInfo"),
    "MemoryFoldSystem": ("systems.memory_fold_system", "MemoryFoldSystem"),
    "VoiceMemoryHelix": ("systems.memory_helix", "VoiceMemoryHelix"),
    "MemoryStrand": ("systems.memory_helix_golden", "MemoryStrand"),
    "MutationStrategy": ("systems.memory_helix_golden", "MutationStrategy"),
    "HealixMapper": ("systems.memory_helix_golden", "HealixMapper"),
    "MemoryHelixVisualizer": ("systems.memory_helix_visualizer", "MemoryHelixVisualizer"),
    "MemoryAccessPolicy": ("systems.memory_identity", "MemoryAccessPolicy"),
    "MemoryIdentityIntegration": ("systems.memory_identity", "MemoryIdentityIntegration"),
    "MemoryIntrospectionEngine": ("systems.memory_introspection_engine", "MemoryIntrospectionEngine"),
    "MemoryAccessError": ("systems.memory_learning.memory_manager", "MemoryAccessError"),
    "MemoryManager": ("systems.memory_learning.memory_manager", "MemoryManager"),
    "TraumaLockSystem": ("systems.memory_lock", "TraumaLockSystem"),
    "MemoryLoopRebuilder": ("systems.memory_loop_rebuilder", "MemoryLoopRebuilder"),
    "MemoryFile": ("systems.memory_media_file_storage", "MemoryFile"),
    "MemoryMediaFileStorage": ("systems.memory_media_file_storage", "MemoryMediaFileStorage"),
    "MemoryNode": ("systems.memory_node", "MemoryNode"),
    "MemoryOperationType": ("systems.memory_orchestrator", "MemoryOperationType"),
    "MemorySource": ("systems.memory_orchestrator", "MemorySource"),
    "MemoryRequest": ("systems.memory_orchestrator", "MemoryRequest"),
    "MemoryResponse": ("systems.memory_orchestrator", "MemoryResponse"),
    "AGIMemoryOrchestrator": ("systems.memory_orchestrator", "AGIMemoryOrchestrator"),
    "LiveRange": ("systems.memory_planning", "LiveRange"),
    "LiveRanges": ("systems.memory_planning", "LiveRanges"),
    "AllocationTreeNode": ("systems.memory_planning", "AllocationTreeNode"),
    "Allocation": ("systems.memory_planning", "Allocation"),
    "Empty": ("systems.memory_planning", "Empty"),
    "MemorySplitProtocol": ("systems.memory_planning", "MemorySplitProtocol"),
    "ClearCacheOnAllocateMixin": ("systems.memory_planning", "ClearCacheOnAllocateMixin"),
    "TemporalSplit": ("systems.memory_planning", "TemporalSplit"),
    "SpatialSplit": ("systems.memory_planning", "SpatialSplit"),
    "AllocationPool": ("systems.memory_planning", "AllocationPool"),
    "AllocationPools": ("systems.memory_planning", "AllocationPools"),
    "BufferGroup": ("systems.memory_planning", "BufferGroup"),
    "PoolMemoryPlanningLine": ("systems.memory_planning", "PoolMemoryPlanningLine"),
    "AllocFromPoolLine": ("systems.memory_planning", "AllocFromPoolLine"),
    "DeallocFromPoolLine": ("systems.memory_planning", "DeallocFromPoolLine"),
    "MemoryPlanner": ("systems.memory_planning", "MemoryPlanner"),
    "EmotionalState": ("systems.memory_processing", "EmotionalState"),
    "MemoryNode": ("systems.memory_processing", "MemoryNode"),
    "MemoryProcessor": ("systems.memory_processing", "MemoryProcessor"),
    "Category": ("systems.memory_profiler", "Category"),
    "Action": ("systems.memory_profiler", "Action"),
    "Key": ("systems.memory_profiler", "Key"),
    "_Storage": ("systems.memory_profiler", "_Storage"),
    "TensorKey": ("systems.memory_profiler", "TensorKey"),
    "SchemaMatcher": ("systems.memory_profiler", "SchemaMatcher"),
    "OpTree": ("systems.memory_profiler", "OpTree"),
    "SizeMap": ("systems.memory_profiler", "SizeMap"),
    "DataFlowEdge": ("systems.memory_profiler", "DataFlowEdge"),
    "DataFlowNode": ("systems.memory_profiler", "DataFlowNode"),
    "DataFlowGraph": ("systems.memory_profiler", "DataFlowGraph"),
    "CategoryElement": ("systems.memory_profiler", "CategoryElement"),
    "CategoryDict": ("systems.memory_profiler", "CategoryDict"),
    "MemoryProfile": ("systems.memory_profiler", "MemoryProfile"),
    "MemoryProfileTimeline": ("systems.memory_profiler", "MemoryProfileTimeline"),
    "MemoryObjectStreamStatistics": ("systems.memory_research", "MemoryObjectStreamStatistics"),
    "MemoryObjectItemReceiver": ("systems.memory_research", "MemoryObjectItemReceiver"),
    "MemoryObjectStreamState": ("systems.memory_research", "MemoryObjectStreamState"),
    "MemoryObjectReceiveStream": ("systems.memory_research", "MemoryObjectReceiveStream"),
    "MemoryObjectSendStream": ("systems.memory_research", "MemoryObjectSendStream"),
    "MemoryResonanceAnalyzer": ("systems.memory_resonance_analyzer", "MemoryResonanceAnalyzer"),
    "DriftMetrics": ("systems.memory_safety_features", "DriftMetrics"),
    "VerifoldEntry": ("systems.memory_safety_features", "VerifoldEntry"),
    "MemorySafetySystem": ("systems.memory_safety_features", "MemorySafetySystem"),
    "SafeMemoryFold": ("systems.memory_safety_features", "SafeMemoryFold"),
    "MemorySessionStorage": ("systems.memory_session_storage", "MemorySessionStorage"),
    "MemoryProfileDispatchMode": ("systems.memory_tracker", "MemoryProfileDispatchMode"),
    "MemoryTracker": ("systems.memory_tracker", "MemoryTracker"),
    "MemoryUtils": ("systems.memory_utils", "MemoryUtils"),
    "MemoryValidator": ("systems.memory_validator", "MemoryValidator"),
    "VisualizationConfig": ("systems.memory_visualizer", "VisualizationConfig"),
    "EnhancedMemoryVisualizer": ("systems.memory_visualizer", "EnhancedMemoryVisualizer"),
    "Enhanced3DVisualizer": ("systems.memory_visualizer", "Enhanced3DVisualizer"),
    "ProtonGradient": ("systems.memory_visualizer", "ProtonGradient"),
    "Bytes": ("systems.memory_viz", "Bytes"),
    "PatternType": ("systems.meta_learning_patterns", "PatternType"),
    "LearningPhase": ("systems.meta_learning_patterns", "LearningPhase"),
    "LearningEvent": ("systems.meta_learning_patterns", "LearningEvent"),
    "MetaLearningPattern": ("systems.meta_learning_patterns", "MetaLearningPattern"),
    "LearningTrajectoryAnalyzer": ("systems.meta_learning_patterns", "LearningTrajectoryAnalyzer"),
    "PatternExtractor": ("systems.meta_learning_patterns", "PatternExtractor"),
    "MetaLearningPatternSystem": ("systems.meta_learning_patterns", "MetaLearningPatternSystem"),
    "LearningModuleIntegration": ("systems.module_integrations", "LearningModuleIntegration"),
    "CreativityModuleIntegration": ("systems.module_integrations", "CreativityModuleIntegration"),
    "VoiceModuleIntegration": ("systems.module_integrations", "VoiceModuleIntegration"),
    "MetaModuleIntegration": ("systems.module_integrations", "MetaModuleIntegration"),
    "ModalityType": ("systems.multimodal_memory_support", "ModalityType"),
    "ModalityMetadata": ("systems.multimodal_memory_support", "ModalityMetadata"),
    "MultiModalMemoryData": ("systems.multimodal_memory_support", "MultiModalMemoryData"),
    "ImageProcessor": ("systems.multimodal_memory_support", "ImageProcessor"),
    "AudioProcessor": ("systems.multimodal_memory_support", "AudioProcessor"),
    "MultiModalMemoryProcessor": ("systems.multimodal_memory_support", "MultiModalMemoryProcessor"),
    "MultiModalMemoryItem": ("systems.multimodal_memory_support", "MultiModalMemoryItem"),
    "SymbolicRelationType": ("systems.neurosymbolic_integration", "SymbolicRelationType"),
    "LogicalOperator": ("systems.neurosymbolic_integration", "LogicalOperator"),
    "SymbolicEntity": ("systems.neurosymbolic_integration", "SymbolicEntity"),
    "SymbolicRelation": ("systems.neurosymbolic_integration", "SymbolicRelation"),
    "LogicalRule": ("systems.neurosymbolic_integration", "LogicalRule"),
    "NeuralSymbolicExtractor": ("systems.neurosymbolic_integration", "NeuralSymbolicExtractor"),
    "SymbolicReasoner": ("systems.neurosymbolic_integration", "SymbolicReasoner"),
    "NeurosymbolicIntegrationLayer": ("systems.neurosymbolic_integration", "NeurosymbolicIntegrationLayer"),
    "OptimizedVectorStorageLayer": ("systems.optimized_hybrid_memory_fold", "OptimizedVectorStorageLayer"),
    "OptimizedHybridMemoryFold": ("systems.optimized_hybrid_memory_fold", "OptimizedHybridMemoryFold"),
    "MemoryOrchestrator": ("systems.orchestrator", "MemoryOrchestrator"),
    "PinMemoryCache": ("systems.pin_memory_cache", "PinMemoryCache"),
    "MemoryProcessor": ("systems.processor", "MemoryProcessor"),
    "QuantumAssociativeMemoryBank": ("systems.quantum_memory_architecture", "QuantumAssociativeMemoryBank"),
    "RecallHandler": ("systems.recall_handler", "RecallHandler"),
    "ReflectionType": ("systems.reflection_engine", "ReflectionType"),
    "ReflectionDepth": ("systems.reflection_engine", "ReflectionDepth"),
    "ReflectionInsight": ("systems.reflection_engine", "ReflectionInsight"),
    "ReflectionSession": ("systems.reflection_engine", "ReflectionSession"),
    "PatternDetector": ("systems.reflection_engine", "PatternDetector"),
    "MetaCognitiveAnalyzer": ("systems.reflection_engine", "MetaCognitiveAnalyzer"),
    "MemoryReflector": ("systems.reflection_engine", "MemoryReflector"),
    "ReplayMode": ("systems.replay_system", "ReplayMode"),
    "ReplayDirection": ("systems.replay_system", "ReplayDirection"),
    "ReplayQuality": ("systems.replay_system", "ReplayQuality"),
    "MemorySnapshot": ("systems.replay_system", "MemorySnapshot"),
    "ReplaySequence": ("systems.replay_system", "ReplaySequence"),
    "ReplaySession": ("systems.replay_system", "ReplaySession"),
    "TemporalIndex": ("systems.replay_system", "TemporalIndex"),
    "MemoryReplayer": ("systems.replay_system", "MemoryReplayer"),
    "EmotionalState": ("systems.resonance_memory_retrieval", "EmotionalState"),
    "FrequencyFingerprint": ("systems.resonance_memory_retrieval", "FrequencyFingerprint"),
    "ResonantMemory": ("systems.resonance_memory_retrieval", "ResonantMemory"),
    "FrequencyGenerator": ("systems.resonance_memory_retrieval", "FrequencyGenerator"),
    "ResonanceCalculator": ("systems.resonance_memory_retrieval", "ResonanceCalculator"),
    "ResonanceGate": ("systems.resonance_memory_retrieval", "ResonanceGate"),
    "AgentMemory": ("systems.simple_memory", "AgentMemory"),
    "MemoryType": ("systems.simple_store", "MemoryType"),
    "MemoryPriority": ("systems.simple_store", "MemoryPriority"),
    "MemoryEntry": ("systems.simple_store", "MemoryEntry"),
    "MemoryConfig": ("systems.simple_store", "MemoryConfig"),
    "UnifiedMemoryManager": ("systems.simple_store", "UnifiedMemoryManager"),
    "CompressionState": ("systems.symbolic_delta_compression", "CompressionState"),
    "CompressionRecord": ("systems.symbolic_delta_compression", "CompressionRecord"),
    "LoopDetectionResult": ("systems.symbolic_delta_compression", "LoopDetectionResult"),
    "SymbolicDeltaCompressionManager": ("systems.symbolic_delta_compression", "SymbolicDeltaCompressionManager"),
    "ReplayEvent": ("systems.symbolic_replay_engine", "ReplayEvent"),
    "SymbolicReplayEngine": ("systems.symbolic_replay_engine", "SymbolicReplayEngine"),
    "SymbolicSnapshot": ("systems.symbolic_snapshot", "SymbolicSnapshot"),
    "TierLevel": ("systems.tier_system", "TierLevel"),
    "AccessType": ("systems.tier_system", "AccessType"),
    "PermissionScope": ("systems.tier_system", "PermissionScope"),
    "AccessContext": ("systems.tier_system", "AccessContext"),
    "TierPermission": ("systems.tier_system", "TierPermission"),
    "AccessDecision": ("systems.tier_system", "AccessDecision"),
    "DynamicTierSystem": ("systems.tier_system", "DynamicTierSystem"),
    "MemoryTrace": ("systems.trace_injector", "MemoryTrace"),
    "TraceInjector": ("systems.trace_injector", "TraceInjector"),
    "TraumaLockSystem": ("systems.trauma_lock", "TraumaLockSystem"),
    "VoiceMemoryBridge": ("systems.voice_memory_bridge", "VoiceMemoryBridge"),
    "AnomalyType": ("tools.lambda_archive_inspector", "AnomalyType"),
    "MemoryEntryType": ("tools.lambda_archive_inspector", "MemoryEntryType"),
    "MemoryEntry": ("tools.lambda_archive_inspector", "MemoryEntry"),
    "SymbolicAnomaly": ("tools.lambda_archive_inspector", "SymbolicAnomaly"),
    "ArchiveReport": ("tools.lambda_archive_inspector", "ArchiveReport"),
    "LambdaArchiveInspector": ("tools.lambda_archive_inspector", "LambdaArchiveInspector"),
    "SymbolicVaultScanner": ("tools.lambda_vault_scan", "SymbolicVaultScanner"),
    "MemoryDriftAuditor": ("tools.memory_drift_auditor", "MemoryDriftAuditor"),
    "EnhancedMemoryManager": ("unified_memory_manager", "EnhancedMemoryManager"),
    "EnhancedMemoryManager": ("unified_memory_manager", "EnhancedMemoryManager"),
    "QuantumMemoryManager": ("unified_memory_manager", "QuantumMemoryManager"),
    "DriftMemoryManager": ("unified_memory_manager", "DriftMemoryManager"),
    "VisualizationConfig": ("visualizer", "VisualizationConfig"),
    "EnhancedMemoryVisualizer": ("visualizer", "EnhancedMemoryVisualizer"),
    "Enhanced3DVisualizer": ("visualizer", "Enhanced3DVisualizer"),
    "QuantumOscillator": ("visualizer", "QuantumOscillator"),
    "ProtonGradient": ("visualizer", "ProtonGradient"),
    "MemoryManager": ("voice_memory_manager", "MemoryManager"),
}

# Function registry
_FUNCTION_REGISTRY = {
    "success_rate": ("adapters.colony_memory_adapter", "success_rate"),
    "is_active": ("adapters.colony_memory_adapter", "is_active"),
    "register_memory_interface": ("adapters.colony_memory_adapter", "register_memory_interface"),
    "register_interface_factory": ("adapters.colony_memory_adapter", "register_interface_factory"),
    "register_colony": ("adapters.colony_memory_adapter", "register_colony"),
    "unregister_colony": ("adapters.colony_memory_adapter", "unregister_colony"),
    "get_adapter_stats": ("adapters.colony_memory_adapter", "get_adapter_stats"),
    "get_colony_stats": ("adapters.colony_memory_adapter", "get_colony_stats"),
    "get_emotional_modulator": ("adapters.creativity_adapter", "get_emotional_modulator"),
    "get_emotional_modulator": ("adapters.creativity_adapter", "get_emotional_modulator"),
    "store_creative_memory": ("adapters.creativity_adapter", "store_creative_memory"),
    "retrieve_creative_context": ("adapters.creativity_adapter", "retrieve_creative_context"),
    "generate_memory_id": ("base_manager", "generate_memory_id"),
    "remember": ("basic", "remember"),
    "recall": ("basic", "recall"),
    "search": ("basic", "search"),
    "access": ("basic", "access"),
    "to_dict": ("basic", "to_dict"),
    "from_dict": ("basic", "from_dict"),
    "store": ("basic", "store"),
    "retrieve": ("basic", "retrieve"),
    "search": ("basic", "search"),
    "list_all": ("basic", "list_all"),
    "delete": ("basic", "delete"),
    "store": ("basic", "store"),
    "retrieve": ("basic", "retrieve"),
    "search": ("basic", "search"),
    "list_all": ("basic", "list_all"),
    "delete": ("basic", "delete"),
    "clear": ("basic", "clear"),
    "size": ("basic", "size"),
    "remember": ("basic", "remember"),
    "recall": ("basic", "recall"),
    "recall_entry": ("basic", "recall_entry"),
    "search_memories": ("basic", "search_memories"),
    "recent_memories": ("basic", "recent_memories"),
    "forget": ("basic", "forget"),
    "memory_stats": ("basic", "memory_stats"),
    "calculate_health_score": ("colonies.base_memory_colony", "calculate_health_score"),
    "register_peer_colony": ("colonies.base_memory_colony", "register_peer_colony"),
    "register_message_callback": ("colonies.base_memory_colony", "register_message_callback"),
    "get_health_status": ("colonies.base_memory_colony", "get_health_status"),
    "create_advanced_compressor": ("compression.symbolic_delta", "create_advanced_compressor"),
    "extract_advanced_motifs": ("compression.symbolic_delta", "extract_advanced_motifs"),
    "importance_based_pruning": ("compression.symbolic_delta", "importance_based_pruning"),
    "compress_memory_delta": ("compression.symbolic_delta", "compress_memory_delta"),
    "analyze_compression_patterns": ("compression.symbolic_delta", "analyze_compression_patterns"),
    "calculate_efficiency": ("consolidation.consolidation_orchestrator", "calculate_efficiency"),
    "register_stage_callback": ("consolidation.consolidation_orchestrator", "register_stage_callback"),
    "register_consolidation_callback": ("consolidation.consolidation_orchestrator", "register_consolidation_callback"),
    "get_session_metrics": ("consolidation.consolidation_orchestrator", "get_session_metrics"),
    "get_metrics": ("consolidation.consolidation_orchestrator", "get_metrics"),
    "calculate_power": ("consolidation.ripple_generator", "calculate_power"),
    "add_ripple": ("consolidation.ripple_generator", "add_ripple"),
    "set_memory_pool": ("consolidation.ripple_generator", "set_memory_pool"),
    "set_priority_memories": ("consolidation.ripple_generator", "set_priority_memories"),
    "update_sleep_stage": ("consolidation.ripple_generator", "update_sleep_stage"),
    "register_ripple_callback": ("consolidation.ripple_generator", "register_ripple_callback"),
    "register_sequence_callback": ("consolidation.ripple_generator", "register_sequence_callback"),
    "get_recent_ripples": ("consolidation.ripple_generator", "get_recent_ripples"),
    "get_metrics": ("consolidation.ripple_generator", "get_metrics"),
    "calculate_duration": ("consolidation.sleep_cycle_manager", "calculate_duration"),
    "get_stage_proportion": ("consolidation.sleep_cycle_manager", "get_stage_proportion"),
    "get_stage_duration": ("consolidation.sleep_cycle_manager", "get_stage_duration"),
    "get_next_stage": ("consolidation.sleep_cycle_manager", "get_next_stage"),
    "register_stage_callback": ("consolidation.sleep_cycle_manager", "register_stage_callback"),
    "register_cycle_callback": ("consolidation.sleep_cycle_manager", "register_cycle_callback"),
    "get_metrics": ("consolidation.sleep_cycle_manager", "get_metrics"),
    "harmonize_traces": ("convergence.memory_trace_harmonizer", "harmonize_traces"),
    "create_hybrid_memory_fold": ("core", "create_hybrid_memory_fold"),
    "create_optimized_hybrid_memory_fold_with_lazy_loading": ("core", "create_optimized_hybrid_memory_fold_with_lazy_loading"),
    "create_optimized_hybrid_memory_fold": ("core", "create_optimized_hybrid_memory_fold"),
    "create_optimized_hybrid_memory_fold_512": ("core", "create_optimized_hybrid_memory_fold_512"),
    "add_vector": ("core", "add_vector"),
    "search_similar": ("core", "search_similar"),
    "compute_attention_scores": ("core", "compute_attention_scores"),
    "update_tag_importance": ("core", "update_tag_importance"),
    "get_tag_importance": ("core", "get_tag_importance"),
    "decay_all_weights": ("core", "decay_all_weights"),
    "get_enhanced_statistics": ("core", "get_enhanced_statistics"),
    "add_vector": ("core", "add_vector"),
    "get_memory_usage_stats": ("core", "get_memory_usage_stats"),
    "get_optimization_statistics": ("core", "get_optimization_statistics"),
    "get_enhanced_statistics": ("core", "get_enhanced_statistics"),
    "to_dict": ("core", "to_dict"),
    "from_dict": ("core", "from_dict"),
    "endpoint": ("core", "endpoint"),
    "is_alive": ("core", "is_alive"),
    "get_network_status": ("core", "get_network_status"),
    "trace_recursive": ("core", "trace_recursive"),
    "register_colony": ("core.colony_memory_validator", "register_colony"),
    "unregister_colony": ("core.colony_memory_validator", "unregister_colony"),
    "register_consensus_callback": ("core.colony_memory_validator", "register_consensus_callback"),
    "get_colony_stats": ("core.colony_memory_validator", "get_colony_stats"),
    "get_metrics": ("core.colony_memory_validator", "get_metrics"),
    "get_consolidation_candidates": ("core.interfaces.episodic_interface", "get_consolidation_candidates"),
    "get_metrics": ("core.interfaces.episodic_interface", "get_metrics"),
    "update_access": ("core.interfaces.memory_interface", "update_access"),
    "calculate_salience": ("core.interfaces.memory_interface", "calculate_salience"),
    "register_operation_callback": ("core.interfaces.memory_interface", "register_operation_callback"),
    "get_metrics": ("core.interfaces.memory_interface", "get_metrics"),
    "register_interface": ("core.interfaces.memory_interface", "register_interface"),
    "register_factory": ("core.interfaces.memory_interface", "register_factory"),
    "get_interface": ("core.interfaces.memory_interface", "get_interface"),
    "list_available_types": ("core.interfaces.memory_interface", "list_available_types"),
    "update_strength": ("core.interfaces.semantic_interface", "update_strength"),
    "activate": ("core.interfaces.semantic_interface", "activate"),
    "co_activate_with": ("core.interfaces.semantic_interface", "co_activate_with"),
    "get_concept_hierarchy": ("core.interfaces.semantic_interface", "get_concept_hierarchy"),
    "activate_concept_network": ("core.interfaces.semantic_interface", "activate_concept_network"),
    "get_metrics": ("core.interfaces.semantic_interface", "get_metrics"),
    "has_cycle": ("core.interfaces.semantic_interface", "has_cycle"),
    "to_dict": ("core.unified_memory_orchestrator", "to_dict"),
    "get_memory_statistics": ("core.unified_memory_orchestrator", "get_memory_statistics"),
    "create_memory_dashboard": ("dashboard", "create_memory_dashboard"),
    "get_memory_health_metrics": ("dashboard", "get_memory_health_metrics"),
    "list_active_cascade_blocks": ("dashboard", "list_active_cascade_blocks"),
    "view_recent_drift_events": ("dashboard", "view_recent_drift_events"),
    "get_dashboard_summary": ("dashboard", "get_dashboard_summary"),
    "get_dream_integration_analytics": ("dashboard", "get_dream_integration_analytics"),
    "is_expired": ("distributed_state_manager", "is_expired"),
    "access": ("distributed_state_manager", "access"),
    "set": ("distributed_state_manager", "set"),
    "get": ("distributed_state_manager", "get"),
    "delete": ("distributed_state_manager", "delete"),
    "get_shard_keys": ("distributed_state_manager", "get_shard_keys"),
    "get_shard_stats": ("distributed_state_manager", "get_shard_stats"),
    "get_global_stats": ("distributed_state_manager", "get_global_stats"),
    "shutdown": ("distributed_state_manager", "shutdown"),
    "get_node": ("distributed_state_manager", "get_node"),
    "set": ("distributed_state_manager", "set"),
    "get": ("distributed_state_manager", "get"),
    "get_cluster_stats": ("distributed_state_manager", "get_cluster_stats"),
    "shutdown_all": ("distributed_state_manager", "shutdown_all"),
    "demonstrate_dreamseed_integration": ("dreamseed_example", "demonstrate_dreamseed_integration"),
    "demonstrate_safeguard_edge_cases": ("dreamseed_example", "demonstrate_safeguard_edge_cases"),
    "lukhas_tier_required": ("emotional", "lukhas_tier_required"),
    "decorator": ("emotional", "decorator"),
    "blend": ("emotional", "blend"),
    "to_dict": ("emotional", "to_dict"),
    "get_primary_emotion": ("emotional", "get_primary_emotion"),
    "from_dict": ("emotional", "from_dict"),
    "process_experience": ("emotional", "process_experience"),
    "check_identity_emotion_cascade": ("emotional", "check_identity_emotion_cascade"),
    "is_fuse_active": ("emotional", "is_fuse_active"),
    "get_emotional_response": ("emotional", "get_emotional_response"),
    "get_associated_emotion": ("emotional", "get_associated_emotion"),
    "get_current_emotional_state": ("emotional", "get_current_emotional_state"),
    "get_emotional_history": ("emotional", "get_emotional_history"),
    "affect_delta": ("emotional", "affect_delta"),
    "symbolic_affect_trace": ("emotional", "symbolic_affect_trace"),
    "affect_vector_velocity": ("emotional", "affect_vector_velocity"),
    "store_emotional_memory": ("emotional", "store_emotional_memory"),
    "track_drift": ("emotional", "track_drift"),
    "register_drift": ("emotional", "register_drift"),
    "record_drift": ("emotional", "record_drift"),
    "get_global_evolution_engine": ("evolution", "get_global_evolution_engine"),
    "evolve_memory_globally": ("evolution", "evolve_memory_globally"),
    "evolve_memory": ("evolution", "evolve_memory"),
    "get_evolution_history": ("evolution", "get_evolution_history"),
    "add_evolution_rule": ("evolution", "add_evolution_rule"),
    "get_evolution_stats": ("evolution", "get_evolution_stats"),
    "render_mermaid_timeline": ("fold_entropy_visualizer", "render_mermaid_timeline"),
    "render_ascii_chart": ("fold_entropy_visualizer", "render_ascii_chart"),
    "get_glyph_memory_system": ("glyph_memory_integration", "get_glyph_memory_system"),
    "create_glyph_memory": ("glyph_memory_integration", "create_glyph_memory"),
    "recall_by_glyphs": ("glyph_memory_integration", "recall_by_glyphs"),
    "fold_recent_memories": ("glyph_memory_integration", "fold_recent_memories"),
    "bind_glyph_to_fold": ("glyph_memory_integration", "bind_glyph_to_fold"),
    "get_folds_by_glyph": ("glyph_memory_integration", "get_folds_by_glyph"),
    "get_glyphs_by_fold": ("glyph_memory_integration", "get_glyphs_by_fold"),
    "calculate_glyph_affinity": ("glyph_memory_integration", "calculate_glyph_affinity"),
    "identify_foldable_memories": ("glyph_memory_integration", "identify_foldable_memories"),
    "fold_memory_group": ("glyph_memory_integration", "fold_memory_group"),
    "couple_glyph_with_memory": ("glyph_memory_integration", "couple_glyph_with_memory"),
    "retrieve_by_glyph_affect": ("glyph_memory_integration", "retrieve_by_glyph_affect"),
    "process_dream_state": ("glyph_memory_integration", "process_dream_state"),
    "get_dream_glyph_landscape": ("glyph_memory_integration", "get_dream_glyph_landscape"),
    "create_glyph_indexed_memory": ("glyph_memory_integration", "create_glyph_indexed_memory"),
    "recall_by_glyph_pattern": ("glyph_memory_integration", "recall_by_glyph_pattern"),
    "perform_temporal_folding": ("glyph_memory_integration", "perform_temporal_folding"),
    "get_memory_glyph_statistics": ("glyph_memory_integration", "get_memory_glyph_statistics"),
    "create_ethical_governor": ("governance.ethical_drift_governor", "create_ethical_governor"),
    "evaluate_memory_action": ("governance.ethical_drift_governor", "evaluate_memory_action"),
    "monitor_memory_drift": ("governance.ethical_drift_governor", "monitor_memory_drift"),
    "generate_governance_report": ("governance.ethical_drift_governor", "generate_governance_report"),
    "register_with_fold_engine": ("governance.ethical_drift_governor", "register_with_fold_engine"),
    "calculate_salience": ("hippocampal.hippocampal_buffer", "calculate_salience"),
    "activation": ("hippocampal.hippocampal_buffer", "activation"),
    "activation": ("hippocampal.hippocampal_buffer", "activation"),
    "get_consolidation_candidates": ("hippocampal.hippocampal_buffer", "get_consolidation_candidates"),
    "get_metrics": ("hippocampal.hippocampal_buffer", "get_metrics"),
    "separate": ("hippocampal.pattern_separator", "separate"),
    "separate_batch": ("hippocampal.pattern_separator", "separate_batch"),
    "compute_separation_quality": ("hippocampal.pattern_separator", "compute_separation_quality"),
    "create_content_vector": ("hippocampal.pattern_separator", "create_content_vector"),
    "reset_competitive_weights": ("hippocampal.pattern_separator", "reset_competitive_weights"),
    "get_metrics": ("hippocampal.pattern_separator", "get_metrics"),
    "phase_degrees": ("hippocampal.theta_oscillator", "phase_degrees"),
    "get_current_state": ("hippocampal.theta_oscillator", "get_current_state"),
    "is_encoding_optimal": ("hippocampal.theta_oscillator", "is_encoding_optimal"),
    "is_retrieval_optimal": ("hippocampal.theta_oscillator", "is_retrieval_optimal"),
    "phase_lock": ("hippocampal.theta_oscillator", "phase_lock"),
    "phase_unlock": ("hippocampal.theta_oscillator", "phase_unlock"),
    "register_phase_callback": ("hippocampal.theta_oscillator", "register_phase_callback"),
    "modulate_frequency": ("hippocampal.theta_oscillator", "modulate_frequency"),
    "modulate_amplitude": ("hippocampal.theta_oscillator", "modulate_amplitude"),
    "get_gamma_phase": ("hippocampal.theta_oscillator", "get_gamma_phase"),
    "compute_phase_amplitude_coupling": ("hippocampal.theta_oscillator", "compute_phase_amplitude_coupling"),
    "get_phase_coherence": ("hippocampal.theta_oscillator", "get_phase_coherence"),
    "get_traveling_wave_offset": ("hippocampal.theta_oscillator", "get_traveling_wave_offset"),
    "get_metrics": ("hippocampal.theta_oscillator", "get_metrics"),
    "is_leaf": ("integrity.collapse_hash", "is_leaf"),
    "compute_hash": ("integrity.collapse_hash", "compute_hash"),
    "to_dict": ("integrity.collapse_hash", "to_dict"),
    "add_memory": ("integrity.collapse_hash", "add_memory"),
    "verify_memory": ("integrity.collapse_hash", "verify_memory"),
    "generate_proof": ("integrity.collapse_hash", "generate_proof"),
    "verify_proof": ("integrity.collapse_hash", "verify_proof"),
    "get_root_hash": ("integrity.collapse_hash", "get_root_hash"),
    "get_checkpoint_history": ("integrity.collapse_hash", "get_checkpoint_history"),
    "collect_leaves": ("integrity.collapse_hash", "collect_leaves"),
    "verify_node": ("integrity.collapse_hash", "verify_node"),
    "get_stats": ("lightweight_concurrency", "get_stats"),
    "release_actor": ("lightweight_concurrency", "release_actor"),
    "register_loop": ("loop_monitor", "register_loop"),
    "report_entanglement": ("loop_monitor", "report_entanglement"),
    "report_corruption": ("loop_monitor", "report_corruption"),
    "get_active_folds": ("manager", "get_active_folds"),
    "create_core_memoria_component": ("memoria", "create_core_memoria_component"),
    "record_consciousness_phase": ("memoria", "record_consciousness_phase"),
    "process_symbolic_trace": ("memoria", "process_symbolic_trace"),
    "get_last_consciousness_phase": ("memoria", "get_last_consciousness_phase"),
    "get_component_status": ("memoria", "get_component_status"),
    "get_memory_hub": ("memory_hub", "get_memory_hub"),
    "register_service": ("memory_hub", "register_service"),
    "get_service": ("memory_hub", "get_service"),
    "list_services": ("memory_hub", "list_services"),
    "register_event_handler": ("memory_hub", "register_event_handler"),
    "update_access": ("memory_optimization", "update_access"),
    "age_seconds": ("memory_optimization", "age_seconds"),
    "access_frequency": ("memory_optimization", "access_frequency"),
    "acquire": ("memory_optimization", "acquire"),
    "release": ("memory_optimization", "release"),
    "clear": ("memory_optimization", "clear"),
    "get_stats": ("memory_optimization", "get_stats"),
    "compress": ("memory_optimization", "compress"),
    "decompress": ("memory_optimization", "decompress"),
    "select_strategy": ("memory_optimization", "select_strategy"),
    "put": ("memory_optimization", "put"),
    "get": ("memory_optimization", "get"),
    "get_stats": ("memory_optimization", "get_stats"),
    "store": ("memory_optimization", "store"),
    "retrieve": ("memory_optimization", "retrieve"),
    "acquire_pooled_object": ("memory_optimization", "acquire_pooled_object"),
    "release_pooled_object": ("memory_optimization", "release_pooled_object"),
    "register_optimization": ("memory_optimization", "register_optimization"),
    "register_default_optimizations": ("memory_optimization", "register_default_optimizations"),
    "get_memory_stats": ("memory_optimization", "get_memory_stats"),
    "create_memory_efficient_collection": ("memory_optimization", "create_memory_efficient_collection"),
    "append": ("memory_optimization", "append"),
    "memory_usage": ("memory_optimization", "memory_usage"),
    "add": ("memory_optimization", "add"),
    "contains": ("memory_optimization", "contains"),
    "memory_usage": ("memory_optimization", "memory_usage"),
    "clear_empty_collections": ("memory_optimization", "clear_empty_collections"),
    "force_gc": ("memory_optimization", "force_gc"),
    "compress_large_objects": ("memory_optimization", "compress_large_objects"),
    "store": ("memory_systems.memoria-checkpoint", "store"),
    "trace": ("memory_systems.memoria-checkpoint", "trace"),
    "add_child": ("neocortical.concept_hierarchy", "add_child"),
    "remove_child": ("neocortical.concept_hierarchy", "remove_child"),
    "get_ancestors": ("neocortical.concept_hierarchy", "get_ancestors"),
    "get_descendants": ("neocortical.concept_hierarchy", "get_descendants"),
    "get_siblings": ("neocortical.concept_hierarchy", "get_siblings"),
    "calculate_similarity": ("neocortical.concept_hierarchy", "calculate_similarity"),
    "add_concept": ("neocortical.concept_hierarchy", "add_concept"),
    "find_concept": ("neocortical.concept_hierarchy", "find_concept"),
    "get_path": ("neocortical.concept_hierarchy", "get_path"),
    "activate_concept": ("neocortical.concept_hierarchy", "activate_concept"),
    "find_common_ancestor": ("neocortical.concept_hierarchy", "find_common_ancestor"),
    "get_semantic_distance": ("neocortical.concept_hierarchy", "get_semantic_distance"),
    "extract_ontology": ("neocortical.concept_hierarchy", "extract_ontology"),
    "prune_unused": ("neocortical.concept_hierarchy", "prune_unused"),
    "decay_activations": ("neocortical.concept_hierarchy", "decay_activations"),
    "get_metrics": ("neocortical.concept_hierarchy", "get_metrics"),
    "calculate_activation_energy": ("neocortical.neocortical_network", "calculate_activation_energy"),
    "initialize_layers": ("neocortical.neocortical_network", "initialize_layers"),
    "get_concept_hierarchy": ("neocortical.neocortical_network", "get_concept_hierarchy"),
    "get_metrics": ("neocortical.neocortical_network", "get_metrics"),
    "extract_semantics": ("neocortical.semantic_extractor", "extract_semantics"),
    "extract_concept": ("neocortical.semantic_extractor", "extract_concept"),
    "find_semantic_similarity": ("neocortical.semantic_extractor", "find_semantic_similarity"),
    "get_metrics": ("neocortical.semantic_extractor", "get_metrics"),
    "store": ("node", "store"),
    "retrieve": ("node", "retrieve"),
    "retrieve_recent": ("node", "retrieve_recent"),
    "semantic_search": ("node", "semantic_search"),
    "to_bytes": ("persistence.orthogonal_persistence", "to_bytes"),
    "from_bytes": ("persistence.orthogonal_persistence", "from_bytes"),
    "get_metrics": ("persistence.orthogonal_persistence", "get_metrics"),
    "update_access_tracking": ("privacy_preserving_memory_vault", "update_access_tracking"),
    "is_expired": ("privacy_preserving_memory_vault", "is_expired"),
    "should_be_deleted": ("privacy_preserving_memory_vault", "should_be_deleted"),
    "add_noise": ("privacy_preserving_memory_vault", "add_noise"),
    "add_gaussian_noise": ("privacy_preserving_memory_vault", "add_gaussian_noise"),
    "privatize_histogram": ("privacy_preserving_memory_vault", "privatize_histogram"),
    "get_compliance_status": ("privacy_preserving_memory_vault", "get_compliance_status"),
    "get_vault_status": ("privacy_preserving_memory_vault", "get_vault_status"),
    "main": ("protection.symbolic_quarantine_sanctum", "main"),
    "to_dict": ("protection.symbolic_quarantine_sanctum", "to_dict"),
    "add_audit_entry": ("protection.symbolic_quarantine_sanctum", "add_audit_entry"),
    "to_dict": ("protection.symbolic_quarantine_sanctum", "to_dict"),
    "to_dict": ("protection.symbolic_quarantine_sanctum", "to_dict"),
    "get_quarantine_status": ("protection.symbolic_quarantine_sanctum", "get_quarantine_status"),
    "get_sanctum_report": ("protection.symbolic_quarantine_sanctum", "get_sanctum_report"),
    "register_governor_callback": ("protection.symbolic_quarantine_sanctum", "register_governor_callback"),
    "register_sentinel_callback": ("protection.symbolic_quarantine_sanctum", "register_sentinel_callback"),
    "register_archive_callback": ("protection.symbolic_quarantine_sanctum", "register_archive_callback"),
    "cool_value": ("protection.symbolic_quarantine_sanctum", "cool_value"),
    "cool_structure": ("protection.symbolic_quarantine_sanctum", "cool_structure"),
    "from_memory_fragment": ("proteome.symbolic_proteome", "from_memory_fragment"),
    "calculate_stability": ("proteome.symbolic_proteome", "calculate_stability"),
    "is_functional": ("proteome.symbolic_proteome", "is_functional"),
    "calculate_synergy": ("proteome.symbolic_proteome", "calculate_synergy"),
    "get_metrics": ("proteome.symbolic_proteome", "get_metrics"),
    "get_active_folds": ("quantum_manager", "get_active_folds"),
    "calculate_priority": ("repair.advanced_trauma_repair", "calculate_priority"),
    "add_checkpoint": ("repair.advanced_trauma_repair", "add_checkpoint"),
    "matches_threat": ("repair.advanced_trauma_repair", "matches_threat"),
    "get_healing_report": ("repair.advanced_trauma_repair", "get_healing_report"),
    "calculate_sampling_weight": ("replay.replay_buffer", "calculate_sampling_weight"),
    "update_priority": ("replay.replay_buffer", "update_priority"),
    "calculate_metrics": ("replay.replay_buffer", "calculate_metrics"),
    "add_experience": ("replay.replay_buffer", "add_experience"),
    "add_episodic_memory": ("replay.replay_buffer", "add_episodic_memory"),
    "add_semantic_memory": ("replay.replay_buffer", "add_semantic_memory"),
    "sample_batch": ("replay.replay_buffer", "sample_batch"),
    "update_priorities": ("replay.replay_buffer", "update_priorities"),
    "get_experience": ("replay.replay_buffer", "get_experience"),
    "find_similar_experiences": ("replay.replay_buffer", "find_similar_experiences"),
    "get_metrics": ("replay.replay_buffer", "get_metrics"),
    "calculate_resonance_with": ("resonance.resonant_memory_access", "calculate_resonance_with"),
    "update_coherence": ("resonance.resonant_memory_access", "update_coherence"),
    "register_memory": ("resonance.resonant_memory_access", "register_memory"),
    "get_resonance_stats": ("resonance.resonant_memory_access", "get_resonance_stats"),
    "calculate_stability": ("scaffold.atomic_memory_scaffold", "calculate_stability"),
    "add_rule": ("scaffold.atomic_memory_scaffold", "add_rule"),
    "seal_nucleus": ("scaffold.atomic_memory_scaffold", "seal_nucleus"),
    "verify_integrity": ("scaffold.atomic_memory_scaffold", "verify_integrity"),
    "create_coil": ("scaffold.atomic_memory_scaffold", "create_coil"),
    "assess_trauma_impact": ("scaffold.atomic_memory_scaffold", "assess_trauma_impact"),
    "get_metrics": ("scaffold.atomic_memory_scaffold", "get_metrics"),
    "store_memory": ("service", "store_memory"),
    "retrieve_memory": ("service", "retrieve_memory"),
    "search_memory": ("service", "search_memory"),
    "delete_memory": ("service", "delete_memory"),
    "store_memory": ("service", "store_memory"),
    "retrieve_memory": ("service", "retrieve_memory"),
    "search_memory": ("service", "search_memory"),
    "delete_memory": ("service", "delete_memory"),
    "get_memory_stats": ("service", "get_memory_stats"),
    "configure_cross_module_storage": ("service", "configure_cross_module_storage"),
    "configure_storage": ("service", "configure_storage"),
    "verify_user_access": ("service", "verify_user_access"),
    "check_consent": ("service", "check_consent"),
    "log_activity": ("service", "log_activity"),
    "create_memory_service": ("services", "create_memory_service"),
    "create_structural_conscience": ("structural_conscience", "create_structural_conscience"),
    "to_dict": ("structural_conscience", "to_dict"),
    "from_dict": ("structural_conscience", "from_dict"),
    "get_moral_history": ("structural_conscience", "get_moral_history"),
    "get_conscience_summary": ("structural_conscience", "get_conscience_summary"),
    "store": ("symbol_aware_tiered_memory", "store"),
    "retrieve": ("symbol_aware_tiered_memory", "retrieve"),
    "get_dream_flagged": ("symbol_aware_tiered_memory", "get_dream_flagged"),
    "lukhas_tier_required": ("systems.adaptive_memory_engine", "lukhas_tier_required"),
    "decorator": ("systems.adaptive_memory_engine", "decorator"),
    "recall_signature": ("systems.adaptive_memory_engine", "recall_signature"),
    "lukhas_tier_required": ("systems.agent_memory", "lukhas_tier_required"),
    "get_shared_memory": ("systems.agent_memory", "get_shared_memory"),
    "decorator": ("systems.agent_memory", "decorator"),
    "create_attention_orchestrator": ("systems.attention_memory_layer", "create_attention_orchestrator"),
    "forward": ("systems.attention_memory_layer", "forward"),
    "compute_temporal_bias": ("systems.attention_memory_layer", "compute_temporal_bias"),
    "forward": ("systems.attention_memory_layer", "forward"),
    "create_hierarchical_representations": ("systems.attention_memory_layer", "create_hierarchical_representations"),
    "forward": ("systems.attention_memory_layer", "forward"),
    "forward": ("systems.attention_memory_layer", "forward"),
    "compute_memory_relevance": ("systems.attention_memory_layer", "compute_memory_relevance"),
    "explain_attention": ("systems.attention_memory_layer", "explain_attention"),
    "lukhas_tier_required": ("systems.bio_symbolic_memory", "lukhas_tier_required"),
    "decorator": ("systems.bio_symbolic_memory", "decorator"),
    "create_causal_origin": ("systems.causal_identity_tracker", "create_causal_origin"),
    "create_identity_anchor": ("systems.causal_identity_tracker", "create_identity_anchor"),
    "validate_event_chain": ("systems.causal_identity_tracker", "validate_event_chain"),
    "detect_trauma_markers": ("systems.causal_identity_tracker", "detect_trauma_markers"),
    "create_recovery_link": ("systems.causal_identity_tracker", "create_recovery_link"),
    "get_identity_stability_report": ("systems.causal_identity_tracker", "get_identity_stability_report"),
    "to_dict": ("systems.causal_memory_chains", "to_dict"),
    "add_evidence": ("systems.causal_memory_chains", "add_evidence"),
    "to_dict": ("systems.causal_memory_chains", "to_dict"),
    "get_chain_length": ("systems.causal_memory_chains", "get_chain_length"),
    "get_total_delay": ("systems.causal_memory_chains", "get_total_delay"),
    "to_dict": ("systems.causal_memory_chains", "to_dict"),
    "add_memory": ("systems.causal_memory_chains", "add_memory"),
    "add_causal_relation": ("systems.causal_memory_chains", "add_causal_relation"),
    "find_causal_paths": ("systems.causal_memory_chains", "find_causal_paths"),
    "get_causal_ancestors": ("systems.causal_memory_chains", "get_causal_ancestors"),
    "get_causal_descendants": ("systems.causal_memory_chains", "get_causal_descendants"),
    "identify_causal_chains": ("systems.causal_memory_chains", "identify_causal_chains"),
    "analyze_causal_structure": ("systems.causal_memory_chains", "analyze_causal_structure"),
    "get_causal_reasoning_statistics": ("systems.causal_memory_chains", "get_causal_reasoning_statistics"),
    "lukhas_tier_required": ("systems.chatgpt_memory_integrator_legacy", "lukhas_tier_required"),
    "decorator": ("systems.chatgpt_memory_integrator_legacy", "decorator"),
    "set_memory_manager": ("systems.chatgpt_memory_integrator_legacy", "set_memory_manager"),
    "set_cognitive_adapter": ("systems.chatgpt_memory_integrator_legacy", "set_cognitive_adapter"),
    "buffer_event": ("systems.collapse_buffer", "buffer_event"),
    "get_global_tracer": ("systems.collapse_trace", "get_global_tracer"),
    "log_collapse": ("systems.collapse_trace", "log_collapse"),
    "get_collapse_history": ("systems.collapse_trace", "get_collapse_history"),
    "register_colony": ("systems.colony_swarm_integration", "register_colony"),
    "get_swarm_status": ("systems.colony_swarm_integration", "get_swarm_status"),
    "lukhas_tier_required": ("systems.core", "lukhas_tier_required"),
    "decorator": ("systems.core", "decorator"),
    "symbolic_vocabulary": ("systems.core", "symbolic_vocabulary"),
    "ethical_validation": ("systems.core", "ethical_validation"),
    "decorator": ("systems.core", "decorator"),
    "decorator": ("systems.core", "decorator"),
    "to_dict": ("systems.distributed_memory", "to_dict"),
    "to_dict": ("systems.distributed_memory_fold", "to_dict"),
    "from_dict": ("systems.distributed_memory_fold", "from_dict"),
    "endpoint": ("systems.distributed_memory_fold", "endpoint"),
    "is_alive": ("systems.distributed_memory_fold", "is_alive"),
    "get_network_status": ("systems.distributed_memory_fold", "get_network_status"),
    "get_dream_integrator": ("systems.dream_integrator", "get_dream_integrator"),
    "initiate_dream": ("systems.dream_integrator", "initiate_dream"),
    "add_fragment": ("systems.dream_integrator", "add_fragment"),
    "integrate_dream": ("systems.dream_integrator", "integrate_dream"),
    "get_dream_status": ("systems.dream_integrator", "get_dream_status"),
    "create_memory_link": ("systems.dream_integrator", "create_memory_link"),
    "get_linked_memories": ("systems.dream_integrator", "get_linked_memories"),
    "find_related_dreams": ("systems.dream_integrator", "find_related_dreams"),
    "initiate_dream_formation": ("systems.dream_integrator", "initiate_dream_formation"),
    "add_dream_fragment": ("systems.dream_integrator", "add_dream_fragment"),
    "process_dream_integration": ("systems.dream_integrator", "process_dream_integration"),
    "get_dream_insights": ("systems.dream_integrator", "get_dream_insights"),
    "find_dreams_by_memory": ("systems.dream_integrator", "find_dreams_by_memory"),
    "get_system_status": ("systems.dream_integrator", "get_system_status"),
    "lukhas_tier_required": ("systems.dream_memory_manager", "lukhas_tier_required"),
    "decorator": ("systems.dream_memory_manager", "decorator"),
    "create_dream_trace_linker": ("systems.dream_trace_linker", "create_dream_trace_linker"),
    "link_dream_to_memory": ("systems.dream_trace_linker", "link_dream_to_memory"),
    "get_session_analytics": ("systems.dream_trace_linker", "get_session_analytics"),
    "modulate_emotion": ("systems.emotional_memory_manager", "modulate_emotion"),
    "integrate_memory_emotion": ("systems.emotional_memory_manager", "integrate_memory_emotion"),
    "get_emotional_context": ("systems.emotional_memory_manager", "get_emotional_context"),
    "update_emotional_state": ("systems.emotional_memory_manager", "update_emotional_state"),
    "create_memory_component": ("systems.engine", "create_memory_component"),
    "get_status": ("systems.engine", "get_status"),
    "update_priority": ("systems.episodic_replay_buffer", "update_priority"),
    "mark_replayed": ("systems.episodic_replay_buffer", "mark_replayed"),
    "to_dict": ("systems.episodic_replay_buffer", "to_dict"),
    "add_experience": ("systems.episodic_replay_buffer", "add_experience"),
    "sample_batch": ("systems.episodic_replay_buffer", "sample_batch"),
    "update_priorities": ("systems.episodic_replay_buffer", "update_priorities"),
    "get_episode_trajectory": ("systems.episodic_replay_buffer", "get_episode_trajectory"),
    "consolidate_memories": ("systems.episodic_replay_buffer", "consolidate_memories"),
    "get_replay_statistics": ("systems.episodic_replay_buffer", "get_replay_statistics"),
    "get_replay_statistics": ("systems.episodic_replay_buffer", "get_replay_statistics"),
    "lukhas_tier_required": ("systems.exponential_learning", "lukhas_tier_required"),
    "decorator": ("systems.exponential_learning", "decorator"),
    "incorporate_experience": ("systems.exponential_learning", "incorporate_experience"),
    "get_status": ("systems.exponential_learning", "get_status"),
    "create_lineage_tracker": ("systems.fold_lineage_tracker", "create_lineage_tracker"),
    "create_enhanced_lineage_tracker": ("systems.fold_lineage_tracker", "create_enhanced_lineage_tracker"),
    "add_lineage_entry": ("systems.fold_lineage_tracker", "add_lineage_entry"),
    "get_lineage": ("systems.fold_lineage_tracker", "get_lineage"),
    "track_causation": ("systems.fold_lineage_tracker", "track_causation"),
    "track_fold_state": ("systems.fold_lineage_tracker", "track_fold_state"),
    "analyze_fold_lineage": ("systems.fold_lineage_tracker", "analyze_fold_lineage"),
    "generate_lineage_graph": ("systems.fold_lineage_tracker", "generate_lineage_graph"),
    "get_causal_insights": ("systems.fold_lineage_tracker", "get_causal_insights"),
    "import_folds": ("systems.foldin", "import_folds"),
    "import_folds_safe": ("systems.foldin", "import_folds_safe"),
    "verify_lkf_pack": ("systems.foldin", "verify_lkf_pack"),
    "import_from_stream": ("systems.foldin", "import_from_stream"),
    "create_memory_importer": ("systems.foldin", "create_memory_importer"),
    "importer": ("systems.foldin", "importer"),
    "verify_lkf_pack": ("systems.foldin_simple", "verify_lkf_pack"),
    "export_folds": ("systems.foldout", "export_folds"),
    "export_folds_streaming": ("systems.foldout", "export_folds_streaming"),
    "create_fold_bundle": ("systems.foldout", "create_fold_bundle"),
    "create_memory_exporter": ("systems.foldout", "create_memory_exporter"),
    "exporter": ("systems.foldout", "exporter"),
    "create_fold_bundle": ("systems.foldout_simple", "create_fold_bundle"),
    "create_glyph_indexed_memory": ("systems.glyph_memory_bridge", "create_glyph_indexed_memory"),
    "recall_by_glyph": ("systems.glyph_memory_bridge", "recall_by_glyph"),
    "create_drift_anchor": ("systems.glyph_memory_bridge", "create_drift_anchor"),
    "assess_memory_drift": ("systems.glyph_memory_bridge", "assess_memory_drift"),
    "get_memory_by_causal_link": ("systems.glyph_memory_bridge", "get_memory_by_causal_link"),
    "create_retrieval_filter": ("systems.glyph_memory_bridge", "create_retrieval_filter"),
    "get_statistics": ("systems.glyph_memory_bridge", "get_statistics"),
    "traverse_causal_chain": ("systems.glyph_memory_bridge", "traverse_causal_chain"),
    "lukhas_tier_required": ("systems.healix_memory_core", "lukhas_tier_required"),
    "calculate_drift_score": ("systems.healix_memory_core", "calculate_drift_score"),
    "decorator": ("systems.healix_memory_core", "decorator"),
    "encode_to_dna": ("systems.healix_memory_core", "encode_to_dna"),
    "decode_from_dna": ("systems.healix_memory_core", "decode_from_dna"),
    "generate_collapse_hash": ("systems.healix_memory_core", "generate_collapse_hash"),
    "get_baseline_state": ("systems.healix_memory_core", "get_baseline_state"),
    "anonymize_sequence": ("systems.healix_memory_core", "anonymize_sequence"),
    "get_memory_stats": ("systems.healix_memory_core", "get_memory_stats"),
    "generate_compliance_report": ("systems.healix_memory_core", "generate_compliance_report"),
    "create_memory_landscape_plot_data": ("systems.healix_memory_core", "create_memory_landscape_plot_data"),
    "lukhas_tier_required": ("systems.helix_dna", "lukhas_tier_required"),
    "decorator": ("systems.helix_dna", "decorator"),
    "lukhas_tier_required": ("systems.helix_mapper", "lukhas_tier_required"),
    "decorator": ("systems.helix_mapper", "decorator"),
    "get_status": ("systems.hierarchical_data_store", "get_status"),
    "build_tree": ("systems.hierarchical_data_store", "build_tree"),
    "create_hybrid_memory_fold": ("systems.hybrid_memory_fold", "create_hybrid_memory_fold"),
    "add_vector": ("systems.hybrid_memory_fold", "add_vector"),
    "search_similar": ("systems.hybrid_memory_fold", "search_similar"),
    "compute_attention_scores": ("systems.hybrid_memory_fold", "compute_attention_scores"),
    "update_tag_importance": ("systems.hybrid_memory_fold", "update_tag_importance"),
    "get_tag_importance": ("systems.hybrid_memory_fold", "get_tag_importance"),
    "decay_all_weights": ("systems.hybrid_memory_fold", "decay_all_weights"),
    "get_enhanced_statistics": ("systems.hybrid_memory_fold", "get_enhanced_statistics"),
    "trace_recursive": ("systems.hybrid_memory_fold", "trace_recursive"),
    "validate_memory_operation": ("systems.identity_lineage_bridge", "validate_memory_operation"),
    "protect_identity_anchor": ("systems.identity_lineage_bridge", "protect_identity_anchor"),
    "detect_collapse_trauma_threats": ("systems.identity_lineage_bridge", "detect_collapse_trauma_threats"),
    "create_recovery_protocol": ("systems.identity_lineage_bridge", "create_recovery_protocol"),
    "get_identity_protection_status": ("systems.identity_lineage_bridge", "get_identity_protection_status"),
    "ttl_seconds": ("systems.in_memory_cache_storage_wrapper", "ttl_seconds"),
    "max_entries": ("systems.in_memory_cache_storage_wrapper", "max_entries"),
    "get": ("systems.in_memory_cache_storage_wrapper", "get"),
    "set": ("systems.in_memory_cache_storage_wrapper", "set"),
    "delete": ("systems.in_memory_cache_storage_wrapper", "delete"),
    "clear": ("systems.in_memory_cache_storage_wrapper", "clear"),
    "get_stats": ("systems.in_memory_cache_storage_wrapper", "get_stats"),
    "close": ("systems.in_memory_cache_storage_wrapper", "close"),
    "get_logger": ("systems.in_memory_cache_storage_wrapper", "get_logger"),
    "clear": ("systems.in_memory_log_exporter", "clear"),
    "get_finished_logs": ("systems.in_memory_log_exporter", "get_finished_logs"),
    "export": ("systems.in_memory_log_exporter", "export"),
    "shutdown": ("systems.in_memory_log_exporter", "shutdown"),
    "export": ("systems.in_memory_log_exporter", "export"),
    "shutdown": ("systems.in_memory_log_exporter", "shutdown"),
    "clear": ("systems.in_memory_span_exporter", "clear"),
    "get_finished_spans": ("systems.in_memory_span_exporter", "get_finished_spans"),
    "export": ("systems.in_memory_span_exporter", "export"),
    "shutdown": ("systems.in_memory_span_exporter", "shutdown"),
    "force_flush": ("systems.in_memory_span_exporter", "force_flush"),
    "export": ("systems.in_memory_span_exporter", "export"),
    "shutdown": ("systems.in_memory_span_exporter", "shutdown"),
    "force_flush": ("systems.in_memory_span_exporter", "force_flush"),
    "register_trust_callback": ("systems.integration_adapters", "register_trust_callback"),
    "get_module_trust_report": ("systems.integration_adapters", "get_module_trust_report"),
    "set_module_drift_threshold": ("systems.integration_adapters", "set_module_drift_threshold"),
    "register_calibration_callback": ("systems.integration_adapters", "register_calibration_callback"),
    "get_module_drift_report": ("systems.integration_adapters", "get_module_drift_report"),
    "add_module_anchor": ("systems.integration_adapters", "add_module_anchor"),
    "register_validation_callback": ("systems.integration_adapters", "register_validation_callback"),
    "get_module_anchors": ("systems.integration_adapters", "get_module_anchors"),
    "register_colony_validator": ("systems.integration_adapters", "register_colony_validator"),
    "set_swarm_threshold": ("systems.integration_adapters", "set_swarm_threshold"),
    "get_consensus_report": ("systems.integration_adapters", "get_consensus_report"),
    "get_integration_status": ("systems.integration_adapters", "get_integration_status"),
    "collapse_score": ("systems.integrity_collapser", "collapse_score"),
    "recover_overflow": ("systems.integrity_collapser", "recover_overflow"),
    "snapshot_entropy": ("systems.integrity_collapser", "snapshot_entropy"),
    "create_lazy_embedding_system": ("systems.lazy_loading_embeddings", "create_lazy_embedding_system"),
    "get": ("systems.lazy_loading_embeddings", "get"),
    "put": ("systems.lazy_loading_embeddings", "put"),
    "put_batch": ("systems.lazy_loading_embeddings", "put_batch"),
    "clear": ("systems.lazy_loading_embeddings", "clear"),
    "get_stats": ("systems.lazy_loading_embeddings", "get_stats"),
    "store_embedding": ("systems.lazy_loading_embeddings", "store_embedding"),
    "load_embedding": ("systems.lazy_loading_embeddings", "load_embedding"),
    "load_embeddings_batch": ("systems.lazy_loading_embeddings", "load_embeddings_batch"),
    "exists": ("systems.lazy_loading_embeddings", "exists"),
    "delete_embedding": ("systems.lazy_loading_embeddings", "delete_embedding"),
    "get_storage_stats": ("systems.lazy_loading_embeddings", "get_storage_stats"),
    "exists": ("systems.lazy_loading_embeddings", "exists"),
    "get_performance_stats": ("systems.lazy_loading_embeddings", "get_performance_stats"),
    "optimize_cache": ("systems.lazy_loading_embeddings", "optimize_cache"),
    "get_content": ("systems.lazy_loading_embeddings", "get_content"),
    "get_tags": ("systems.lazy_loading_embeddings", "get_tags"),
    "get_metadata": ("systems.lazy_loading_embeddings", "get_metadata"),
    "memory_usage": ("systems.lazy_loading_embeddings", "memory_usage"),
    "memory_usage_kb": ("systems.lazy_loading_embeddings", "memory_usage_kb"),
    "lukhas_tier_required": ("systems.learn_to_learn", "lukhas_tier_required"),
    "decorator": ("systems.learn_to_learn", "decorator"),
    "optimize_learning_approach": ("systems.learn_to_learn", "optimize_learning_approach"),
    "incorporate_feedback": ("systems.learn_to_learn", "incorporate_feedback"),
    "generate_learning_report": ("systems.learn_to_learn", "generate_learning_report"),
    "log_memory": ("systems.memoria", "log_memory"),
    "get_full_memory_log": ("systems.memoria", "get_full_memory_log"),
    "run_lukhas_symbolic_dream_script": ("systems.memoria.dream_cron", "run_lukhas_symbolic_dream_script"),
    "main_dream_scheduler_loop": ("systems.memoria.dream_cron", "main_dream_scheduler_loop"),
    "compute_survival_score": ("systems.memoria.dreams", "compute_survival_score"),
    "generate_dream_narrative": ("systems.memoria.dreams", "generate_dream_narrative"),
    "extract_visual_prompts_from_dream": ("systems.memoria.dreams", "extract_visual_prompts_from_dream"),
    "save_dream_to_log": ("systems.memoria.dreams", "save_dream_to_log"),
    "load_all_entries": ("systems.memoria.dreams", "load_all_entries"),
    "load_traits": ("systems.memoria.dreams", "load_traits"),
    "generate_gpt_reflection": ("systems.memoria.gpt_reflection", "generate_gpt_reflection"),
    "create": ("systems.memoria.gpt_reflection", "create"),
    "load_dream_memories_from_log": ("systems.memoria.reflector", "load_dream_memories_from_log"),
    "reflect_on_dream_memories": ("systems.memoria.reflector", "reflect_on_dream_memories"),
    "run_dream_reflection_cycle": ("systems.memoria.reflector", "run_dream_reflection_cycle"),
    "load_recent_dream_logs": ("systems.memoria.replayer", "load_recent_dream_logs"),
    "replay_dreams_with_current_state": ("systems.memoria.replayer", "replay_dreams_with_current_state"),
    "load_traits": ("systems.memoria.replayer", "load_traits"),
    "speak": ("systems.memoria.replayer", "speak"),
    "log_symbolic_ai_memory_event": ("systems.memoria.replayer", "log_symbolic_ai_memory_event"),
    "display_visual_traits": ("systems.memoria.replayer", "display_visual_traits"),
    "log_memory": ("systems.memoria_codex", "log_memory"),
    "get_full_memory_log": ("systems.memoria_codex", "get_full_memory_log"),
    "log_memory": ("systems.memoria_system", "log_memory"),
    "lukhas_tier_required": ("systems.memory_advanced_manager", "lukhas_tier_required"),
    "decorator": ("systems.memory_advanced_manager", "decorator"),
    "get_memory_statistics": ("systems.memory_advanced_manager", "get_memory_statistics"),
    "store": ("systems.memory_bases", "store"),
    "retrieve": ("systems.memory_bases", "retrieve"),
    "delete": ("systems.memory_bases", "delete"),
    "log_access": ("systems.memory_bases", "log_access"),
    "can_access": ("systems.memory_bases", "can_access"),
    "link_memory_to_identity": ("systems.memory_bases", "link_memory_to_identity"),
    "get_identity_memories": ("systems.memory_bases", "get_identity_memories"),
    "store": ("systems.memory_checkpoint", "store"),
    "trace": ("systems.memory_checkpoint", "trace"),
    "verify_collapse_integrity": ("systems.memory_collapse_verifier", "verify_collapse_integrity"),
    "validate_semantic_preservation": ("systems.memory_collapse_verifier", "validate_semantic_preservation"),
    "check_emotional_consistency": ("systems.memory_collapse_verifier", "check_emotional_consistency"),
    "audit_collapse_operation": ("systems.memory_collapse_verifier", "audit_collapse_operation"),
    "compute_decay_rate": ("systems.memory_consolidation", "compute_decay_rate"),
    "main": ("systems.memory_consolidator", "main"),
    "consolidate": ("systems.memory_consolidator", "consolidate"),
    "analyze_drift": ("systems.memory_drift_mirror", "analyze_drift"),
    "analyze_drift_log": ("systems.memory_drift_stabilizer", "analyze_drift_log"),
    "stabilize_memory": ("systems.memory_drift_stabilizer", "stabilize_memory"),
    "track_drift": ("systems.memory_drift_tracker", "track_drift"),
    "encrypt_memory": ("systems.memory_encryptor", "encrypt_memory"),
    "encrypt_user_file": ("systems.memory_encryptor", "encrypt_user_file"),
    "create_document": ("systems.memory_evolution", "create_document"),
    "update_document": ("systems.memory_evolution", "update_document"),
    "record_interaction": ("systems.memory_evolution", "record_interaction"),
    "get_document_history": ("systems.memory_evolution", "get_document_history"),
    "get_related_documents": ("systems.memory_evolution", "get_related_documents"),
    "get_recommendations": ("systems.memory_evolution", "get_recommendations"),
    "update_document_relationships": ("systems.memory_evolution", "update_document_relationships"),
    "get_document_effectiveness": ("systems.memory_evolution", "get_document_effectiveness"),
    "get_usage_patterns": ("systems.memory_evolution", "get_usage_patterns"),
    "maintenance_cycle": ("systems.memory_evolution", "maintenance_cycle"),
    "run_multi_cycle_recursion": ("systems.memory_evolution", "run_multi_cycle_recursion"),
    "get_last_voice_synthesis": ("systems.memory_evolution", "get_last_voice_synthesis"),
    "track_changes": ("systems.memory_evolution", "track_changes"),
    "adapt_knowledge": ("systems.memory_evolution", "adapt_knowledge"),
    "update_relationships": ("systems.memory_evolution", "update_relationships"),
    "learn_from_usage": ("systems.memory_evolution", "learn_from_usage"),
    "record_interaction": ("systems.memory_evolution", "record_interaction"),
    "identify_patterns": ("systems.memory_evolution", "identify_patterns"),
    "get_document_effectiveness": ("systems.memory_evolution", "get_document_effectiveness"),
    "update_user_preferences": ("systems.memory_evolution", "update_user_preferences"),
    "adapt_oscillations": ("systems.memory_evolution", "adapt_oscillations"),
    "analyze_structure": ("systems.memory_evolution", "analyze_structure"),
    "synthesize": ("systems.memory_evolution", "synthesize"),
    "synthesize_content": ("systems.memory_evolution", "synthesize_content"),
    "clear_cache": ("systems.memory_evolution", "clear_cache"),
    "get_last_synthesis": ("systems.memory_evolution", "get_last_synthesis"),
    "create_memory_fold_system": ("systems.memory_fold_system", "create_memory_fold_system"),
    "get_statistics": ("systems.memory_fold_system", "get_statistics"),
    "verify_lkf_pack": ("systems.memory_fold_system", "verify_lkf_pack"),
    "json_serial": ("systems.memory_fold_system", "json_serial"),
    "convert_conv2d_weight_memory_format": ("systems.memory_format", "convert_conv2d_weight_memory_format"),
    "convert_conv3d_weight_memory_format": ("systems.memory_format", "convert_conv3d_weight_memory_format"),
    "save_memory": ("systems.memory_helix", "save_memory"),
    "get_curious_word": ("systems.memory_helix", "get_curious_word"),
    "get_due_practice_words": ("systems.memory_helix", "get_due_practice_words"),
    "get_pronunciation_for_word": ("systems.memory_helix", "get_pronunciation_for_word"),
    "generate_accent_report": ("systems.memory_helix", "generate_accent_report"),
    "get_memory_coordinates": ("systems.memory_helix_visualizer", "get_memory_coordinates"),
    "get_authorized_memories": ("systems.memory_helix_visualizer", "get_authorized_memories"),
    "visualize_memory_helix": ("systems.memory_helix_visualizer", "visualize_memory_helix"),
    "create_interactive_visualization": ("systems.memory_helix_visualizer", "create_interactive_visualization"),
    "update_memory_links": ("systems.memory_helix_visualizer", "update_memory_links"),
    "register_memory": ("systems.memory_identity", "register_memory"),
    "verify_access_permission": ("systems.memory_identity", "verify_access_permission"),
    "share_memory": ("systems.memory_identity", "share_memory"),
    "revoke_memory_access": ("systems.memory_identity", "revoke_memory_access"),
    "get_shared_memories": ("systems.memory_identity", "get_shared_memories"),
    "encrypt_memory_content": ("systems.memory_identity", "encrypt_memory_content"),
    "decrypt_memory_content": ("systems.memory_identity", "decrypt_memory_content"),
    "cleanup": ("systems.memory_identity", "cleanup"),
    "notify_memory_removal": ("systems.memory_identity", "notify_memory_removal"),
    "get_permission_status": ("systems.memory_identity", "get_permission_status"),
    "compute_fold_metrics": ("systems.memory_introspection_engine", "compute_fold_metrics"),
    "snapshot_memory_state": ("systems.memory_introspection_engine", "snapshot_memory_state"),
    "introspect": ("systems.memory_introspection_engine", "introspect"),
    "process_dream_cycle": ("systems.memory_learning.memory_manager", "process_dream_cycle"),
    "store": ("systems.memory_learning.memory_manager", "store"),
    "retrieve": ("systems.memory_learning.memory_manager", "retrieve"),
    "forget": ("systems.memory_learning.memory_manager", "forget"),
    "batch_forget": ("systems.memory_learning.memory_manager", "batch_forget"),
    "extract_user_insights": ("systems.memory_learning.memory_manager", "extract_user_insights"),
    "get_interaction_history": ("systems.memory_learning.memory_manager", "get_interaction_history"),
    "encrypt_memory": ("systems.memory_lock", "encrypt_memory"),
    "decrypt_memory": ("systems.memory_lock", "decrypt_memory"),
    "get_access_stats": ("systems.memory_lock", "get_access_stats"),
    "rebuild_loop": ("systems.memory_loop_rebuilder", "rebuild_loop"),
    "get_extension_for_mimetype": ("systems.memory_media_file_storage", "get_extension_for_mimetype"),
    "content_size": ("systems.memory_media_file_storage", "content_size"),
    "load_and_get_id": ("systems.memory_media_file_storage", "load_and_get_id"),
    "get_file": ("systems.memory_media_file_storage", "get_file"),
    "get_url": ("systems.memory_media_file_storage", "get_url"),
    "delete_file": ("systems.memory_media_file_storage", "delete_file"),
    "get_stats": ("systems.memory_media_file_storage", "get_stats"),
    "store": ("systems.memory_node", "store"),
    "retrieve": ("systems.memory_node", "retrieve"),
    "retrieve_recent": ("systems.memory_node", "retrieve_recent"),
    "retrieve_by_type": ("systems.memory_node", "retrieve_by_type"),
    "semantic_search": ("systems.memory_node", "semantic_search"),
    "forget": ("systems.memory_node", "forget"),
    "add_to_working_memory": ("systems.memory_node", "add_to_working_memory"),
    "clear_working_memory": ("systems.memory_node", "clear_working_memory"),
    "update_memory": ("systems.memory_node", "update_memory"),
    "get_memory_stats": ("systems.memory_node", "get_memory_stats"),
    "process_message": ("systems.memory_node", "process_message"),
    "get_status": ("systems.memory_orchestrator", "get_status"),
    "contains": ("systems.memory_planning", "contains"),
    "join": ("systems.memory_planning", "join"),
    "overlaps": ("systems.memory_planning", "overlaps"),
    "begin": ("systems.memory_planning", "begin"),
    "end": ("systems.memory_planning", "end"),
    "allocate": ("systems.memory_planning", "allocate"),
    "get_live_ranges": ("systems.memory_planning", "get_live_ranges"),
    "get_size_hint": ("systems.memory_planning", "get_size_hint"),
    "get_symbolic_size": ("systems.memory_planning", "get_symbolic_size"),
    "finalize": ("systems.memory_planning", "finalize"),
    "is_empty": ("systems.memory_planning", "is_empty"),
    "device": ("systems.memory_planning", "device"),
    "get_live_ranges": ("systems.memory_planning", "get_live_ranges"),
    "get_size_hint": ("systems.memory_planning", "get_size_hint"),
    "get_symbolic_size": ("systems.memory_planning", "get_symbolic_size"),
    "mark_allocated": ("systems.memory_planning", "mark_allocated"),
    "finalize": ("systems.memory_planning", "finalize"),
    "codegen_alloc_from_pool": ("systems.memory_planning", "codegen_alloc_from_pool"),
    "get_live_ranges": ("systems.memory_planning", "get_live_ranges"),
    "get_size_hint": ("systems.memory_planning", "get_size_hint"),
    "get_symbolic_size": ("systems.memory_planning", "get_symbolic_size"),
    "is_empty": ("systems.memory_planning", "is_empty"),
    "allocate": ("systems.memory_planning", "allocate"),
    "clear_cache": ("systems.memory_planning", "clear_cache"),
    "get_live_ranges": ("systems.memory_planning", "get_live_ranges"),
    "get_size_hint": ("systems.memory_planning", "get_size_hint"),
    "get_symbolic_size": ("systems.memory_planning", "get_symbolic_size"),
    "is_empty": ("systems.memory_planning", "is_empty"),
    "finalize": ("systems.memory_planning", "finalize"),
    "create": ("systems.memory_planning", "create"),
    "get_live_ranges": ("systems.memory_planning", "get_live_ranges"),
    "get_size_hint": ("systems.memory_planning", "get_size_hint"),
    "get_symbolic_size": ("systems.memory_planning", "get_symbolic_size"),
    "finalize": ("systems.memory_planning", "finalize"),
    "allocate": ("systems.memory_planning", "allocate"),
    "allocate_at_end": ("systems.memory_planning", "allocate_at_end"),
    "finalize": ("systems.memory_planning", "finalize"),
    "codegen_create": ("systems.memory_planning", "codegen_create"),
    "codegen_destroy": ("systems.memory_planning", "codegen_destroy"),
    "get_pools": ("systems.memory_planning", "get_pools"),
    "allocate": ("systems.memory_planning", "allocate"),
    "allocate_output": ("systems.memory_planning", "allocate_output"),
    "finalize": ("systems.memory_planning", "finalize"),
    "pprint": ("systems.memory_planning", "pprint"),
    "update_usage": ("systems.memory_planning", "update_usage"),
    "sym_nbytes": ("systems.memory_planning", "sym_nbytes"),
    "make_allocation": ("systems.memory_planning", "make_allocation"),
    "node": ("systems.memory_planning", "node"),
    "codegen": ("systems.memory_planning", "codegen"),
    "codegen": ("systems.memory_planning", "codegen"),
    "plan": ("systems.memory_planning", "plan"),
    "drop_removed_buffers": ("systems.memory_planning", "drop_removed_buffers"),
    "compute_buffer_groups": ("systems.memory_planning", "compute_buffer_groups"),
    "convert_to_pool_lines": ("systems.memory_planning", "convert_to_pool_lines"),
    "compute_live_ranges": ("systems.memory_planning", "compute_live_ranges"),
    "allocate_groups": ("systems.memory_planning", "allocate_groups"),
    "mark_first_last_usage": ("systems.memory_planning", "mark_first_last_usage"),
    "store_interaction": ("systems.memory_processing", "store_interaction"),
    "get_relevant_memories": ("systems.memory_processing", "get_relevant_memories"),
    "update_memory_references": ("systems.memory_processing", "update_memory_references"),
    "get_emotional_summary": ("systems.memory_processing", "get_emotional_summary"),
    "export_memories": ("systems.memory_processing", "export_memories"),
    "import_memories": ("systems.memory_processing", "import_memories"),
    "cluster_memories": ("systems.memory_processing", "cluster_memories"),
    "get_memory_timeline": ("systems.memory_processing", "get_memory_timeline"),
    "calculate_relevance": ("systems.memory_processing", "calculate_relevance"),
    "extract_parameters": ("systems.memory_profiler", "extract_parameters"),
    "extract_gradients": ("systems.memory_profiler", "extract_gradients"),
    "get_scopes": ("systems.memory_profiler", "get_scopes"),
    "from_allocation": ("systems.memory_profiler", "from_allocation"),
    "from_tensor": ("systems.memory_profiler", "from_tensor"),
    "inputs_are_mutable": ("systems.memory_profiler", "inputs_are_mutable"),
    "match_schemas": ("systems.memory_profiler", "match_schemas"),
    "lookup_schemas": ("systems.memory_profiler", "lookup_schemas"),
    "dfs": ("systems.memory_profiler", "dfs"),
    "sorted_nodes": ("systems.memory_profiler", "sorted_nodes"),
    "is_allocation": ("systems.memory_profiler", "is_allocation"),
    "is_deletion": ("systems.memory_profiler", "is_deletion"),
    "inputs": ("systems.memory_profiler", "inputs"),
    "outputs": ("systems.memory_profiler", "outputs"),
    "intermediates": ("systems.memory_profiler", "intermediates"),
    "start_time": ("systems.memory_profiler", "start_time"),
    "flow_nodes": ("systems.memory_profiler", "flow_nodes"),
    "validate": ("systems.memory_profiler", "validate"),
    "leaf_events": ("systems.memory_profiler", "leaf_events"),
    "lookup": ("systems.memory_profiler", "lookup"),
    "bump": ("systems.memory_profiler", "bump"),
    "delete": ("systems.memory_profiler", "delete"),
    "set_by_id": ("systems.memory_profiler", "set_by_id"),
    "set_by_key": ("systems.memory_profiler", "set_by_key"),
    "set_by_version": ("systems.memory_profiler", "set_by_version"),
    "setdefault_by_version": ("systems.memory_profiler", "setdefault_by_version"),
    "get": ("systems.memory_profiler", "get"),
    "timeline": ("systems.memory_profiler", "timeline"),
    "export_memory_timeline": ("systems.memory_profiler", "export_memory_timeline"),
    "export_memory_timeline_raw": ("systems.memory_profiler", "export_memory_timeline_raw"),
    "export_memory_timeline_html": ("systems.memory_profiler", "export_memory_timeline_html"),
    "matches": ("systems.memory_profiler", "matches"),
    "leaf_op": ("systems.memory_profiler", "leaf_op"),
    "children_fn": ("systems.memory_profiler", "children_fn"),
    "update": ("systems.memory_profiler", "update"),
    "get_category_index": ("systems.memory_profiler", "get_category_index"),
    "recall_memories": ("systems.memory_recall", "recall_memories"),
    "decrypt_user_file": ("systems.memory_recall", "decrypt_user_file"),
    "generate_sid": ("systems.memory_recall", "generate_sid"),
    "store_interaction": ("systems.memory_reflector", "store_interaction"),
    "recall_last_interaction": ("systems.memory_reflector", "recall_last_interaction"),
    "statistics": ("systems.memory_research", "statistics"),
    "receive_nowait": ("systems.memory_research", "receive_nowait"),
    "clone": ("systems.memory_research", "clone"),
    "close": ("systems.memory_research", "close"),
    "statistics": ("systems.memory_research", "statistics"),
    "send_nowait": ("systems.memory_research", "send_nowait"),
    "clone": ("systems.memory_research", "clone"),
    "close": ("systems.memory_research", "close"),
    "statistics": ("systems.memory_research", "statistics"),
    "analyze_resonance": ("systems.memory_resonance_analyzer", "analyze_resonance"),
    "calculate_drift": ("systems.memory_safety_features", "calculate_drift"),
    "compute_collapse_hash": ("systems.memory_safety_features", "compute_collapse_hash"),
    "track_drift": ("systems.memory_safety_features", "track_drift"),
    "calibrate_drift_metrics": ("systems.memory_safety_features", "calibrate_drift_metrics"),
    "add_reality_anchor": ("systems.memory_safety_features", "add_reality_anchor"),
    "get_safety_report": ("systems.memory_safety_features", "get_safety_report"),
    "generate_seed_memory": ("systems.memory_seeder", "generate_seed_memory"),
    "seed_memory_store": ("systems.memory_seeder", "seed_memory_store"),
    "get": ("systems.memory_session_storage", "get"),
    "save": ("systems.memory_session_storage", "save"),
    "delete": ("systems.memory_session_storage", "delete"),
    "list": ("systems.memory_session_storage", "list"),
    "start_monitor": ("systems.memory_tracker", "start_monitor"),
    "stop": ("systems.memory_tracker", "stop"),
    "summary": ("systems.memory_tracker", "summary"),
    "show_traces": ("systems.memory_tracker", "show_traces"),
    "save_stats": ("systems.memory_tracker", "save_stats"),
    "load": ("systems.memory_tracker", "load"),
    "generate_memory_id": ("systems.memory_utils", "generate_memory_id"),
    "encrypt_memory_data": ("systems.memory_utils", "encrypt_memory_data"),
    "decrypt_memory_data": ("systems.memory_utils", "decrypt_memory_data"),
    "validate_memory_access": ("systems.memory_utils", "validate_memory_access"),
    "format_memory_timestamp": ("systems.memory_utils", "format_memory_timestamp"),
    "calculate_memory_size": ("systems.memory_utils", "calculate_memory_size"),
    "create_memory_component": ("systems.memory_validator", "create_memory_component"),
    "get_status": ("systems.memory_validator", "get_status"),
    "setup_visualization": ("systems.memory_visualizer", "setup_visualization"),
    "launch_3d_viewer": ("systems.memory_visualizer", "launch_3d_viewer"),
    "format_flamegraph": ("systems.memory_viz", "format_flamegraph"),
    "segments": ("systems.memory_viz", "segments"),
    "memory": ("systems.memory_viz", "memory"),
    "compare": ("systems.memory_viz", "compare"),
    "calc_active": ("systems.memory_viz", "calc_active"),
    "segsum": ("systems.memory_viz", "segsum"),
    "trace": ("systems.memory_viz", "trace"),
    "trace_plot": ("systems.memory_viz", "trace_plot"),
    "profile_plot": ("systems.memory_viz", "profile_plot"),
    "segment_plot": ("systems.memory_viz", "segment_plot"),
    "frames_fragment": ("systems.memory_viz", "frames_fragment"),
    "format": ("systems.memory_viz", "format"),
    "to_device": ("systems.memory_viz", "to_device"),
    "allocate": ("systems.memory_viz", "allocate"),
    "free": ("systems.memory_viz", "free"),
    "find_segment": ("systems.memory_viz", "find_segment"),
    "to_feature_vector": ("systems.meta_learning_patterns", "to_feature_vector"),
    "to_dict": ("systems.meta_learning_patterns", "to_dict"),
    "from_dict": ("systems.meta_learning_patterns", "from_dict"),
    "analyze_trajectory": ("systems.meta_learning_patterns", "analyze_trajectory"),
    "get_pattern_statistics": ("systems.meta_learning_patterns", "get_pattern_statistics"),
    "process_image": ("systems.multimodal_memory_support", "process_image"),
    "extract_image_features": ("systems.multimodal_memory_support", "extract_image_features"),
    "process_audio": ("systems.multimodal_memory_support", "process_audio"),
    "extract_audio_features": ("systems.multimodal_memory_support", "extract_audio_features"),
    "get_content": ("systems.multimodal_memory_support", "get_content"),
    "get_tags": ("systems.multimodal_memory_support", "get_tags"),
    "get_metadata": ("systems.multimodal_memory_support", "get_metadata"),
    "get_embedding": ("systems.multimodal_memory_support", "get_embedding"),
    "get_modality_data": ("systems.multimodal_memory_support", "get_modality_data"),
    "get_modality_embedding": ("systems.multimodal_memory_support", "get_modality_embedding"),
    "memory_usage": ("systems.multimodal_memory_support", "memory_usage"),
    "memory_usage_kb": ("systems.multimodal_memory_support", "memory_usage_kb"),
    "to_dict": ("systems.neurosymbolic_integration", "to_dict"),
    "from_dict": ("systems.neurosymbolic_integration", "from_dict"),
    "to_triple": ("systems.neurosymbolic_integration", "to_triple"),
    "to_dict": ("systems.neurosymbolic_integration", "to_dict"),
    "from_dict": ("systems.neurosymbolic_integration", "from_dict"),
    "applies_to": ("systems.neurosymbolic_integration", "applies_to"),
    "to_dict": ("systems.neurosymbolic_integration", "to_dict"),
    "from_dict": ("systems.neurosymbolic_integration", "from_dict"),
    "get_knowledge_statistics": ("systems.neurosymbolic_integration", "get_knowledge_statistics"),
    "create_optimized_hybrid_memory_fold_with_lazy_loading": ("systems.optimized_hybrid_memory_fold", "create_optimized_hybrid_memory_fold_with_lazy_loading"),
    "create_optimized_hybrid_memory_fold": ("systems.optimized_hybrid_memory_fold", "create_optimized_hybrid_memory_fold"),
    "create_optimized_hybrid_memory_fold_512": ("systems.optimized_hybrid_memory_fold", "create_optimized_hybrid_memory_fold_512"),
    "add_vector": ("systems.optimized_hybrid_memory_fold", "add_vector"),
    "get_memory_usage_stats": ("systems.optimized_hybrid_memory_fold", "get_memory_usage_stats"),
    "get_optimization_statistics": ("systems.optimized_hybrid_memory_fold", "get_optimization_statistics"),
    "get_enhanced_statistics": ("systems.optimized_hybrid_memory_fold", "get_enhanced_statistics"),
    "create_memory_component": ("systems.orchestrator", "create_memory_component"),
    "get_status": ("systems.orchestrator", "get_status"),
    "pin_memory": ("systems.pin_memory", "pin_memory"),
    "do_one_step": ("systems.pin_memory", "do_one_step"),
    "get": ("systems.pin_memory_cache", "get"),
    "remove": ("systems.pin_memory_cache", "remove"),
    "create_memory_component": ("systems.processor", "create_memory_component"),
    "get_status": ("systems.processor", "get_status"),
    "recall_memory": ("systems.recall_handler", "recall_memory"),
    "get_memory_reflector": ("systems.reflection_engine", "get_memory_reflector"),
    "initiate_reflection": ("systems.reflection_engine", "initiate_reflection"),
    "process_reflection": ("systems.reflection_engine", "process_reflection"),
    "get_self_assessment": ("systems.reflection_engine", "get_self_assessment"),
    "get_reflector_status": ("systems.reflection_engine", "get_reflector_status"),
    "detect_patterns": ("systems.reflection_engine", "detect_patterns"),
    "analyze_thinking_patterns": ("systems.reflection_engine", "analyze_thinking_patterns"),
    "initiate_reflection_session": ("systems.reflection_engine", "initiate_reflection_session"),
    "process_reflection_analysis": ("systems.reflection_engine", "process_reflection_analysis"),
    "get_insights_by_type": ("systems.reflection_engine", "get_insights_by_type"),
    "find_contradictory_insights": ("systems.reflection_engine", "find_contradictory_insights"),
    "generate_self_assessment": ("systems.reflection_engine", "generate_self_assessment"),
    "recommend_memory_optimization": ("systems.reflection_engine", "recommend_memory_optimization"),
    "get_system_status": ("systems.reflection_engine", "get_system_status"),
    "get_memory_replayer": ("systems.replay_system", "get_memory_replayer"),
    "create_sequence": ("systems.replay_system", "create_sequence"),
    "start_session": ("systems.replay_system", "start_session"),
    "get_next": ("systems.replay_system", "get_next"),
    "get_replayer_status": ("systems.replay_system", "get_replayer_status"),
    "add_memory_timestamp": ("systems.replay_system", "add_memory_timestamp"),
    "get_memories_in_range": ("systems.replay_system", "get_memories_in_range"),
    "get_causal_sequence": ("systems.replay_system", "get_causal_sequence"),
    "find_temporal_neighbors": ("systems.replay_system", "find_temporal_neighbors"),
    "create_replay_sequence": ("systems.replay_system", "create_replay_sequence"),
    "start_replay_session": ("systems.replay_system", "start_replay_session"),
    "get_next_memory": ("systems.replay_system", "get_next_memory"),
    "seek_to_position": ("systems.replay_system", "seek_to_position"),
    "find_memories_by_content": ("systems.replay_system", "find_memories_by_content"),
    "create_associative_sequence": ("systems.replay_system", "create_associative_sequence"),
    "get_session_status": ("systems.replay_system", "get_session_status"),
    "close_session": ("systems.replay_system", "close_session"),
    "get_system_status": ("systems.replay_system", "get_system_status"),
    "emotional_state_to_frequency": ("systems.resonance_memory_retrieval", "emotional_state_to_frequency"),
    "generate_frequency_fingerprint": ("systems.resonance_memory_retrieval", "generate_frequency_fingerprint"),
    "cosine_similarity": ("systems.resonance_memory_retrieval", "cosine_similarity"),
    "frequency_resonance": ("systems.resonance_memory_retrieval", "frequency_resonance"),
    "temporal_decay": ("systems.resonance_memory_retrieval", "temporal_decay"),
    "access_boost": ("systems.resonance_memory_retrieval", "access_boost"),
    "store_memory_with_frequency": ("systems.resonance_memory_retrieval", "store_memory_with_frequency"),
    "retrieve_by_resonance": ("systems.resonance_memory_retrieval", "retrieve_by_resonance"),
    "update_memory_resonance": ("systems.resonance_memory_retrieval", "update_memory_resonance"),
    "get_memory_by_id": ("systems.resonance_memory_retrieval", "get_memory_by_id"),
    "analyze_resonance_patterns": ("systems.resonance_memory_retrieval", "analyze_resonance_patterns"),
    "get_system_health": ("systems.resonance_memory_retrieval", "get_system_health"),
    "demo_resonance_system": ("systems.resonance_memory_retrieval", "demo_resonance_system"),
    "append_to_shared_memory": ("systems.simple_memory", "append_to_shared_memory"),
    "read_from_shared_memory": ("systems.simple_memory", "read_from_shared_memory"),
    "read_all_memory": ("systems.simple_memory", "read_all_memory"),
    "to_dict": ("systems.simple_store", "to_dict"),
    "from_dict": ("systems.simple_store", "from_dict"),
    "create_compression_manager": ("systems.symbolic_delta_compression", "create_compression_manager"),
    "compress_fold": ("systems.symbolic_delta_compression", "compress_fold"),
    "get_compression_analytics": ("systems.symbolic_delta_compression", "get_compression_analytics"),
    "emergency_decompress": ("systems.symbolic_delta_compression", "emergency_decompress"),
    "record_event": ("systems.symbolic_replay_engine", "record_event"),
    "save": ("systems.symbolic_replay_engine", "save"),
    "load": ("systems.symbolic_replay_engine", "load"),
    "replay": ("systems.symbolic_replay_engine", "replay"),
    "create_snapshot": ("systems.symbolic_snapshot", "create_snapshot"),
    "lukhas_tier_required": ("systems.tier_system", "lukhas_tier_required"),
    "create_tier_system": ("systems.tier_system", "create_tier_system"),
    "symbolic_access_test": ("systems.tier_system", "symbolic_access_test"),
    "check_access_level": ("systems.tier_system", "check_access_level"),
    "check_access": ("systems.tier_system", "check_access"),
    "elevate_session": ("systems.tier_system", "elevate_session"),
    "decorator": ("systems.tier_system", "decorator"),
    "wrapper": ("systems.tier_system", "wrapper"),
    "get_global_injector": ("systems.trace_injector", "get_global_injector"),
    "inject_memory_trace": ("systems.trace_injector", "inject_memory_trace"),
    "start_memory_trace": ("systems.trace_injector", "start_memory_trace"),
    "end_memory_trace": ("systems.trace_injector", "end_memory_trace"),
    "export_trace_data": ("systems.trace_injector", "export_trace_data"),
    "to_dict": ("systems.trace_injector", "to_dict"),
    "generate_trace_id": ("systems.trace_injector", "generate_trace_id"),
    "inject_trace": ("systems.trace_injector", "inject_trace"),
    "start_memory_operation": ("systems.trace_injector", "start_memory_operation"),
    "end_memory_operation": ("systems.trace_injector", "end_memory_operation"),
    "get_trace_chain": ("systems.trace_injector", "get_trace_chain"),
    "get_active_traces": ("systems.trace_injector", "get_active_traces"),
    "export_traces": ("systems.trace_injector", "export_traces"),
    "clear_traces": ("systems.trace_injector", "clear_traces"),
    "encrypt_memory": ("systems.trauma_lock", "encrypt_memory"),
    "decrypt_memory": ("systems.trauma_lock", "decrypt_memory"),
    "get_access_stats": ("systems.trauma_lock", "get_access_stats"),
    "process_voice_memory": ("systems.voice_memory_bridge", "process_voice_memory"),
    "main": ("tools.lambda_archive_inspector", "main"),
    "to_dict": ("tools.lambda_archive_inspector", "to_dict"),
    "to_dict": ("tools.lambda_archive_inspector", "to_dict"),
    "to_dict": ("tools.lambda_archive_inspector", "to_dict"),
    "scan_memory_vault": ("tools.lambda_archive_inspector", "scan_memory_vault"),
    "detect_high_entropy_clusters": ("tools.lambda_archive_inspector", "detect_high_entropy_clusters"),
    "detect_forgotten_symbols": ("tools.lambda_archive_inspector", "detect_forgotten_symbols"),
    "reconstruct_symbolic_linkage": ("tools.lambda_archive_inspector", "reconstruct_symbolic_linkage"),
    "calculate_archive_score": ("tools.lambda_archive_inspector", "calculate_archive_score"),
    "generate_archive_report": ("tools.lambda_archive_inspector", "generate_archive_report"),
    "main": ("tools.lambda_vault_scan", "main"),
    "load_memory_snapshots": ("tools.lambda_vault_scan", "load_memory_snapshots"),
    "detect_stale_symbols": ("tools.lambda_vault_scan", "detect_stale_symbols"),
    "detect_missing_links": ("tools.lambda_vault_scan", "detect_missing_links"),
    "assess_vault_health": ("tools.lambda_vault_scan", "assess_vault_health"),
    "export_vault_report": ("tools.lambda_vault_scan", "export_vault_report"),
    "main": ("tools.memory_drift_auditor", "main"),
    "load_memory_snapshots": ("tools.memory_drift_auditor", "load_memory_snapshots"),
    "detect_memory_drift": ("tools.memory_drift_auditor", "detect_memory_drift"),
    "trace_collapse_events": ("tools.memory_drift_auditor", "trace_collapse_events"),
    "generate_audit_report": ("tools.memory_drift_auditor", "generate_audit_report"),
    "visualize_memory_timeline": ("tools.memory_drift_auditor", "visualize_memory_timeline"),
    "get_active_folds": ("unified_memory_manager", "get_active_folds"),
    "get_active_folds": ("unified_memory_manager", "get_active_folds"),
    "setup_visualization": ("visualizer", "setup_visualization"),
    "launch_3d_viewer": ("visualizer", "launch_3d_viewer"),
    "quantum_modulate": ("visualizer", "quantum_modulate"),
    "store_interaction": ("voice_memory_manager", "store_interaction"),
    "get_relevant_memories": ("voice_memory_manager", "get_relevant_memories"),
    "store_voice_preference": ("voice_memory_manager", "store_voice_preference"),
    "get_voice_preferences": ("voice_memory_manager", "get_voice_preferences"),
    "get_user_interactions": ("voice_memory_manager", "get_user_interactions"),
}


def __getattr__(name):
    """Lazy import entities on access"""
    # Check class registry first
    if name in _ENTITY_REGISTRY:
        module_path, attr_name = _ENTITY_REGISTRY[name]
        try:
            module = importlib.import_module(f".{module_path}", package=__package__)
            return getattr(module, attr_name)
        except (ImportError, AttributeError) as e:
            logger.warning(f"Failed to import {attr_name} from {module_path}: {e}")
            raise AttributeError(f"module '{__name__}' has no attribute '{name}'")

    # Check function registry
    if name in _FUNCTION_REGISTRY:
        module_path, attr_name = _FUNCTION_REGISTRY[name]
        try:
            module = importlib.import_module(f".{module_path}", package=__package__)
            return getattr(module, attr_name)
        except (ImportError, AttributeError) as e:
            logger.warning(f"Failed to import {attr_name} from {module_path}: {e}")
            raise AttributeError(f"module '{__name__}' has no attribute '{name}'")

    raise AttributeError(f"module '{__name__}' has no attribute '{name}'")


def __dir__():
    """List all available entities"""
    return list(_ENTITY_REGISTRY.keys()) + list(_FUNCTION_REGISTRY.keys())


# Export commonly used entities directly for better IDE support
__all__ = [
    "ColonyMemoryStats",
    "AdapterConfig",
    "ColonyMemoryAdapter",
    "CreativityMemoryAdapter",
    "BaseMemoryManager",
    "MemoryEntry",
    "MemoryStore",
    "InMemoryStore",
    "MemoryManager",
    "ColonyRole",
    "ColonyState",
    "ColonyCapabilities",
    "ColonyMetrics",
    "BaseMemoryColony",
    "MemoryType",
    "EpisodicMemoryRecord",
    "EpisodicMemoryColony",
    "SymbolicMotif",
    "CompressionMetrics",
    "AdvancedSymbolicDeltaCompressor",
]

# System metadata
__system__ = "memory"
__total_entities__ = 1652
__classes__ = 600
__functions__ = 1052
