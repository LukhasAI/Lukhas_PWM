"""
Consciousness System - Auto-generated entity exports
Generated from entity activation scan
Total entities: 371
"""

# Lazy imports to avoid circular dependencies
import importlib
import logging

logger = logging.getLogger(__name__)

# Entity registry for lazy loading
_ENTITY_REGISTRY = {
    "LucasAwarenessProtocol": ("awareness.awareness_protocol", "LucasAwarenessProtocol"),
    "BioSymbolicAwarenessAdapter": ("awareness.bio_symbolic_awareness_adapter", "BioSymbolicAwarenessAdapter"),
    "MockNumpy": ("awareness.bio_symbolic_awareness_adapter", "MockNumpy"),
    "ProtonGradient": ("awareness.bio_symbolic_awareness_adapter", "ProtonGradient"),
    "QuantumAttentionGate": ("awareness.bio_symbolic_awareness_adapter", "QuantumAttentionGate"),
    "CristaFilter": ("awareness.bio_symbolic_awareness_adapter", "CristaFilter"),
    "CardiolipinEncoder": ("awareness.bio_symbolic_awareness_adapter", "CardiolipinEncoder"),
    "SymbolicTraceLogger": ("awareness.symbolic_trace_logger", "SymbolicTraceLogger"),
    "SystemAwareness": ("awareness.system_awareness", "SystemAwareness"),
    "BrainIntegrationConfig": ("brain_integration_20250620_013824", "BrainIntegrationConfig"),
    "DynamicImporter": ("brain_integration_20250620_013824", "DynamicImporter"),
    "TierAccessControl": ("brain_integration_20250620_013824", "TierAccessControl"),
    "EmotionVector": ("brain_integration_20250620_013824", "EmotionVector"),
    "EmotionalOscillator": ("brain_integration_20250620_013824", "EmotionalOscillator"),
    "MemoryEmotionalIntegrator": ("brain_integration_20250620_013824", "MemoryEmotionalIntegrator"),
    "MemoryVoiceIntegrator": ("brain_integration_20250620_013824", "MemoryVoiceIntegrator"),
    "LucasBrainIntegration": ("brain_integration_20250620_013824", "LucasBrainIntegration"),
    "AccessTier": ("brain_integration_20250620_013824", "AccessTier"),
    "CognitiveState": ("cognitive.adapter", "CognitiveState"),
    "EmotionalModulation": ("cognitive.adapter", "EmotionalModulation"),
    "CognitiveAdapter": ("cognitive.adapter", "CognitiveAdapter"),
    "CognitiveAdapter": ("cognitive.adapter", "CognitiveAdapter"),
    "CognitiveAdapter": ("cognitive.adapter", "CognitiveAdapter"),
    "CoreComponent": ("cognitive.adapter", "CoreComponent"),
    "SecurityContext": ("cognitive.adapter", "SecurityContext"),
    "MetaLearningSystem": ("cognitive.adapter", "MetaLearningSystem"),
    "HelixMapper": ("cognitive.adapter", "HelixMapper"),
    "CognitiveAdapterConfig": ("cognitive.adapter_complete", "CognitiveAdapterConfig"),
    "CoreComponent": ("cognitive.adapter_complete", "CoreComponent"),
    "SecurityContext": ("cognitive.adapter_complete", "SecurityContext"),
    "MemoryType": ("cognitive.adapter_complete", "MemoryType"),
    "MetaLearningSystem": ("cognitive.adapter_complete", "MetaLearningSystem"),
    "HelixMapper": ("cognitive.adapter_complete", "HelixMapper"),
    "CognitiveState": ("cognitive.adapter_complete", "CognitiveState"),
    "EmotionalModulation": ("cognitive.adapter_complete", "EmotionalModulation"),
    "CognitiveAdapter": ("cognitive.adapter_complete", "CognitiveAdapter"),
    "ReflectiveIntrospectionSystem": ("cognitive.reflective_introspection", "ReflectiveIntrospectionSystem"),
    "CognitiveConfig": ("cognitive_architecture_controller", "CognitiveConfig"),
    "CognitiveProcessType": ("cognitive_architecture_controller", "CognitiveProcessType"),
    "MemoryType": ("cognitive_architecture_controller", "MemoryType"),
    "ProcessPriority": ("cognitive_architecture_controller", "ProcessPriority"),
    "ProcessState": ("cognitive_architecture_controller", "ProcessState"),
    "ResourceType": ("cognitive_architecture_controller", "ResourceType"),
    "CognitiveResource": ("cognitive_architecture_controller", "CognitiveResource"),
    "MemoryItem": ("cognitive_architecture_controller", "MemoryItem"),
    "CognitiveProcess": ("cognitive_architecture_controller", "CognitiveProcess"),
    "MemorySystem": ("cognitive_architecture_controller", "MemorySystem"),
    "WorkingMemory": ("cognitive_architecture_controller", "WorkingMemory"),
    "EpisodicMemory": ("cognitive_architecture_controller", "EpisodicMemory"),
    "SemanticMemory": ("cognitive_architecture_controller", "SemanticMemory"),
    "ProceduralMemory": ("cognitive_architecture_controller", "ProceduralMemory"),
    "CognitiveResourceManager": ("cognitive_architecture_controller", "CognitiveResourceManager"),
    "CognitiveProcessScheduler": ("cognitive_architecture_controller", "CognitiveProcessScheduler"),
    "CognitiveMonitor": ("cognitive_architecture_controller", "CognitiveMonitor"),
    "CognitiveArchitectureController": ("cognitive_architecture_controller", "CognitiveArchitectureController"),
    "ConsciousnessHub": ("consciousness_hub", "ConsciousnessHub"),
    "DreamConsciousnessBridge": ("dream_bridge", "DreamConsciousnessBridge"),
    "MetaLearningCycle": ("loop_meta_learning", "MetaLearningCycle"),
    "MetaLearningLoop": ("loop_meta_learning", "MetaLearningLoop"),
    "ConsciousnessOpenAIAdapter": ("openai_consciousness_adapter", "ConsciousnessOpenAIAdapter"),
    "ConsciousnessState": ("quantum_consciousness_hub", "ConsciousnessState"),
    "QuantumConsciousnessState": ("quantum_consciousness_hub", "QuantumConsciousnessState"),
    "QuantumConsciousnessHub": ("quantum_consciousness_hub", "QuantumConsciousnessHub"),
    "QuantumCreativeConsciousness": ("quantum_consciousness_integration", "QuantumCreativeConsciousness"),
    "ElevatedConsciousnessModule": ("quantum_consciousness_integration", "ElevatedConsciousnessModule"),
    "ConsciousnessLevel": ("quantum_consciousness_integration", "ConsciousnessLevel"),
    "QualiaType": ("quantum_consciousness_integration", "QualiaType"),
    "ConsciousExperience": ("quantum_consciousness_integration", "ConsciousExperience"),
    "LukhasCreativeExpressionEngine": ("quantum_consciousness_integration", "LukhasCreativeExpressionEngine"),
    "ReflectionType": ("reflection.lambda_mirror", "ReflectionType"),
    "EmotionalTone": ("reflection.lambda_mirror", "EmotionalTone"),
    "AlignmentStatus": ("reflection.lambda_mirror", "AlignmentStatus"),
    "ExperienceEntry": ("reflection.lambda_mirror", "ExperienceEntry"),
    "EmotionalDrift": ("reflection.lambda_mirror", "EmotionalDrift"),
    "AlignmentScore": ("reflection.lambda_mirror", "AlignmentScore"),
    "ReflectionEntry": ("reflection.lambda_mirror", "ReflectionEntry"),
    "LambdaMirror": ("reflection.lambda_mirror", "LambdaMirror"),
    "ConsciousnessService": ("service", "ConsciousnessService"),
    "IdentityClient": ("service", "IdentityClient"),
    "ConsciousnessService": ("services", "ConsciousnessService"),
    "AwarenessEngine": ("systems.awareness_engine", "AwarenessEngine"),
    "AwarenessProcessor": ("systems.awareness_processor", "AwarenessProcessor"),
    "AwarenessTracker": ("systems.awareness_tracker", "AwarenessTracker"),
    "VoicePersonalityIntegrator": ("systems.cognitive_systems.voice_personality", "VoicePersonalityIntegrator"),
    "MetaCognition": ("systems.consciousness", "MetaCognition"),
    "DistributedConsciousnessEngine": ("systems.consciousness_colony_integration", "DistributedConsciousnessEngine"),
    "DreamReflectionConfig": ("systems.dream_engine.dream_reflection_loop", "DreamReflectionConfig"),
    "DreamState": ("systems.dream_engine.dream_reflection_loop", "DreamState"),
    "DreamReflectionLoop": ("systems.dream_engine.dream_reflection_loop", "DreamReflectionLoop"),
    "DreamLoggerLoop": ("systems.dream_engine.dream_reflection_loop", "DreamLoggerLoop"),
    "ConsciousnessState": ("systems.engine", "ConsciousnessState"),
    "ConsciousnessPattern": ("systems.engine", "ConsciousnessPattern"),
    "ConsciousnessPattern": ("systems.engine", "ConsciousnessPattern"),
    "AnthropicEthicsEngine": ("systems.engine", "AnthropicEthicsEngine"),
    "SelfAwareAdaptationModule": ("systems.engine", "SelfAwareAdaptationModule"),
    "LUKHASConsciousnessEngine": ("systems.engine", "LUKHASConsciousnessEngine"),
    "ConsciousnessState": ("systems.engine_alt", "ConsciousnessState"),
    "ConsciousnessPattern": ("systems.engine_alt", "ConsciousnessPattern"),
    "AnthropicEthicsEngine": ("systems.engine_alt", "AnthropicEthicsEngine"),
    "SelfAwareAdaptationModule": ("systems.engine_alt", "SelfAwareAdaptationModule"),
    "LUKHASConsciousnessEngine": ("systems.engine_alt", "LUKHASConsciousnessEngine"),
    "ConsciousnessState": ("systems.engine_codex", "ConsciousnessState"),
    "ConsciousnessPattern": ("systems.engine_codex", "ConsciousnessPattern"),
    "AnthropicEthicsEngine": ("systems.engine_codex", "AnthropicEthicsEngine"),
    "SelfAwareAdaptationModule": ("systems.engine_codex", "SelfAwareAdaptationModule"),
    "LUKHASConsciousnessEngine": ("systems.engine_codex", "LUKHASConsciousnessEngine"),
    "ConsciousnessEngineConfig": ("systems.engine_complete", "ConsciousnessEngineConfig"),
    "ConsciousnessState": ("systems.engine_complete", "ConsciousnessState"),
    "ConsciousnessPattern": ("systems.engine_complete", "ConsciousnessPattern"),
    "AnthropicEthicsEngine": ("systems.engine_complete", "AnthropicEthicsEngine"),
    "DefaultEthicsEngine": ("systems.engine_complete", "DefaultEthicsEngine"),
    "SelfAwareAdaptationModule": ("systems.engine_complete", "SelfAwareAdaptationModule"),
    "AGIConsciousnessEngine": ("systems.engine_complete", "AGIConsciousnessEngine"),
    "ConsciousnessState": ("systems.engine_poetic", "ConsciousnessState"),
    "AwarenessFrame": ("systems.engine_poetic", "AwarenessFrame"),
    "ConsciousnessEngine": ("systems.engine_poetic", "ConsciousnessEngine"),
    "ConsciousnessState": ("systems.integrator", "ConsciousnessState"),
    "IntegrationPriority": ("systems.integrator", "IntegrationPriority"),
    "ConsciousnessEvent": ("systems.integrator", "ConsciousnessEvent"),
    "IntegrationContext": ("systems.integrator", "IntegrationContext"),
    "ConsciousnessIntegrator": ("systems.integrator", "ConsciousnessIntegrator"),
    "EnhancedMemoryManager": ("systems.integrator", "EnhancedMemoryManager"),
    "MemoryType": ("systems.integrator", "MemoryType"),
    "VoiceProcessor": ("systems.integrator", "VoiceProcessor"),
    "PersonaManager": ("systems.integrator", "PersonaManager"),
    "IdentityManager": ("systems.integrator", "IdentityManager"),
    "EmotionEngine": ("systems.integrator", "EmotionEngine"),
    "ReflectionType": ("systems.lambda_mirror", "ReflectionType"),
    "EmotionalTone": ("systems.lambda_mirror", "EmotionalTone"),
    "AlignmentStatus": ("systems.lambda_mirror", "AlignmentStatus"),
    "ExperienceEntry": ("systems.lambda_mirror", "ExperienceEntry"),
    "EmotionalDrift": ("systems.lambda_mirror", "EmotionalDrift"),
    "AlignmentScore": ("systems.lambda_mirror", "AlignmentScore"),
    "ReflectionEntry": ("systems.lambda_mirror", "ReflectionEntry"),
    "LambdaMirror": ("systems.lambda_mirror", "LambdaMirror"),
    "ConsciousnessState": ("systems.mapper", "ConsciousnessState"),
    "ConsciousnessIntensity": ("systems.mapper", "ConsciousnessIntensity"),
    "ConsciousnessProfile": ("systems.mapper", "ConsciousnessProfile"),
    "VoiceConsciousnessMapping": ("systems.mapper", "VoiceConsciousnessMapping"),
    "ConsciousnessMapper": ("systems.mapper", "ConsciousnessMapper"),
    "QuantumCreativeConsciousness": ("systems.quantum_consciousness_integration", "QuantumCreativeConsciousness"),
    "QuantumConsciousnessVisualizer": ("systems.quantum_consciousness_visualizer", "QuantumConsciousnessVisualizer"),
    "QuantumCreativeDemo": ("systems.quantum_creative_consciousness", "QuantumCreativeDemo"),
    "SelfReflectionEngine": ("systems.self_reflection_engine", "SelfReflectionEngine"),
    "ConsciousnessState": ("systems.state", "ConsciousnessState"),
    "UnifiedConsciousnessEngine": ("systems.unified_consciousness_engine", "UnifiedConsciousnessEngine"),
    "ConsciousnessValidator": ("systems.validator", "ConsciousnessValidator"),
    "ΛBotConsciousnessMonitor": ("systems.ΛBot_consciousness_monitor", "ΛBotConsciousnessMonitor"),
}

# Function registry
_FUNCTION_REGISTRY = {
    "lukhas_tier_required": ("awareness.awareness_protocol", "lukhas_tier_required"),
    "decorator": ("awareness.awareness_protocol", "decorator"),
    "update_bio_metrics": ("awareness.awareness_protocol", "update_bio_metrics"),
    "wrapper_sync": ("awareness.awareness_protocol", "wrapper_sync"),
    "mean": ("awareness.bio_symbolic_awareness_adapter", "mean"),
    "std": ("awareness.bio_symbolic_awareness_adapter", "std"),
    "clip": ("awareness.bio_symbolic_awareness_adapter", "clip"),
    "corrcoef": ("awareness.bio_symbolic_awareness_adapter", "corrcoef"),
    "process": ("awareness.bio_symbolic_awareness_adapter", "process"),
    "attend": ("awareness.bio_symbolic_awareness_adapter", "attend"),
    "filter": ("awareness.bio_symbolic_awareness_adapter", "filter"),
    "encode": ("awareness.bio_symbolic_awareness_adapter", "encode"),
    "create_base_pattern": ("awareness.bio_symbolic_awareness_adapter", "create_base_pattern"),
    "lukhas_tier_required": ("awareness.symbolic_trace_logger", "lukhas_tier_required"),
    "decorator": ("awareness.symbolic_trace_logger", "decorator"),
    "log_awareness_trace": ("awareness.symbolic_trace_logger", "log_awareness_trace"),
    "get_pattern_analysis": ("awareness.symbolic_trace_logger", "get_pattern_analysis"),
    "wrapper": ("awareness.symbolic_trace_logger", "wrapper"),
    "lukhas_tier_required": ("brain_integration_20250620_013824", "lukhas_tier_required"),
    "get_emotion_adjustments": ("brain_integration_20250620_013824", "get_emotion_adjustments"),
    "get_memory_path": ("brain_integration_20250620_013824", "get_memory_path"),
    "import_module": ("brain_integration_20250620_013824", "import_module"),
    "check_access": ("brain_integration_20250620_013824", "check_access"),
    "get_required_tier": ("brain_integration_20250620_013824", "get_required_tier"),
    "decorator": ("brain_integration_20250620_013824", "decorator"),
    "calculate_distance": ("brain_integration_20250620_013824", "calculate_distance"),
    "find_similar_emotions": ("brain_integration_20250620_013824", "find_similar_emotions"),
    "update_emotional_state": ("brain_integration_20250620_013824", "update_emotional_state"),
    "get_voice_modulation_params": ("brain_integration_20250620_013824", "get_voice_modulation_params"),
    "store_memory_with_emotion": ("brain_integration_20250620_013824", "store_memory_with_emotion"),
    "retrieve_with_emotional_context": ("brain_integration_20250620_013824", "retrieve_with_emotional_context"),
    "find_emotionally_similar_memories": ("brain_integration_20250620_013824", "find_emotionally_similar_memories"),
    "dream_consolidate_memories": ("brain_integration_20250620_013824", "dream_consolidate_memories"),
    "speak_with_emotional_context": ("brain_integration_20250620_013824", "speak_with_emotional_context"),
    "process_message": ("brain_integration_20250620_013824", "process_message"),
    "start_consolidation_thread": ("brain_integration_20250620_013824", "start_consolidation_thread"),
    "stop_consolidation_thread": ("brain_integration_20250620_013824", "stop_consolidation_thread"),
    "consolidation_loop": ("brain_integration_20250620_013824", "consolidation_loop"),
    "wrapper_sync": ("brain_integration_20250620_013824", "wrapper_sync"),
    "lukhas_tier_required": ("cognitive.adapter", "lukhas_tier_required"),
    "decorator": ("cognitive.adapter", "decorator"),
    "wrapper_sync": ("cognitive.adapter", "wrapper_sync"),
    "lukhas_tier_required": ("cognitive.adapter_complete", "lukhas_tier_required"),
    "get": ("cognitive.adapter_complete", "get"),
    "decorator": ("cognitive.adapter_complete", "decorator"),
    "has_permission": ("cognitive.adapter_complete", "has_permission"),
    "get_user_context": ("cognitive.adapter_complete", "get_user_context"),
    "extract_patterns": ("cognitive.adapter_complete", "extract_patterns"),
    "reset_state": ("cognitive.adapter_complete", "reset_state"),
    "get_state_summary": ("cognitive.adapter_complete", "get_state_summary"),
    "shutdown": ("cognitive.adapter_complete", "shutdown"),
    "wrapper_sync": ("cognitive.adapter_complete", "wrapper_sync"),
    "lukhas_tier_required": ("cognitive.reflective_introspection", "lukhas_tier_required"),
    "decorator": ("cognitive.reflective_introspection", "decorator"),
    "log_interaction": ("cognitive.reflective_introspection", "log_interaction"),
    "analyze_recent_interactions": ("cognitive.reflective_introspection", "analyze_recent_interactions"),
    "wrapper_sync": ("cognitive.reflective_introspection", "wrapper_sync"),
    "lukhas_tier_required": ("cognitive_architecture_controller", "lukhas_tier_required"),
    "get_int": ("cognitive_architecture_controller", "get_int"),
    "get_float": ("cognitive_architecture_controller", "get_float"),
    "get_dict": ("cognitive_architecture_controller", "get_dict"),
    "decorator": ("cognitive_architecture_controller", "decorator"),
    "available": ("cognitive_architecture_controller", "available"),
    "allocate": ("cognitive_architecture_controller", "allocate"),
    "release": ("cognitive_architecture_controller", "release"),
    "store": ("cognitive_architecture_controller", "store"),
    "retrieve": ("cognitive_architecture_controller", "retrieve"),
    "forget": ("cognitive_architecture_controller", "forget"),
    "consolidate": ("cognitive_architecture_controller", "consolidate"),
    "store": ("cognitive_architecture_controller", "store"),
    "retrieve": ("cognitive_architecture_controller", "retrieve"),
    "forget": ("cognitive_architecture_controller", "forget"),
    "consolidate": ("cognitive_architecture_controller", "consolidate"),
    "store": ("cognitive_architecture_controller", "store"),
    "retrieve": ("cognitive_architecture_controller", "retrieve"),
    "retrieve_by_time_range": ("cognitive_architecture_controller", "retrieve_by_time_range"),
    "forget": ("cognitive_architecture_controller", "forget"),
    "consolidate": ("cognitive_architecture_controller", "consolidate"),
    "store": ("cognitive_architecture_controller", "store"),
    "retrieve": ("cognitive_architecture_controller", "retrieve"),
    "find_related_concepts": ("cognitive_architecture_controller", "find_related_concepts"),
    "forget": ("cognitive_architecture_controller", "forget"),
    "consolidate": ("cognitive_architecture_controller", "consolidate"),
    "store": ("cognitive_architecture_controller", "store"),
    "retrieve": ("cognitive_architecture_controller", "retrieve"),
    "update_skill_level": ("cognitive_architecture_controller", "update_skill_level"),
    "forget": ("cognitive_architecture_controller", "forget"),
    "consolidate": ("cognitive_architecture_controller", "consolidate"),
    "allocate": ("cognitive_architecture_controller", "allocate"),
    "release": ("cognitive_architecture_controller", "release"),
    "get_availability": ("cognitive_architecture_controller", "get_availability"),
    "submit_process": ("cognitive_architecture_controller", "submit_process"),
    "shutdown": ("cognitive_architecture_controller", "shutdown"),
    "shutdown": ("cognitive_architecture_controller", "shutdown"),
    "think": ("cognitive_architecture_controller", "think"),
    "remember": ("cognitive_architecture_controller", "remember"),
    "recall": ("cognitive_architecture_controller", "recall"),
    "learn": ("cognitive_architecture_controller", "learn"),
    "plan": ("cognitive_architecture_controller", "plan"),
    "decide": ("cognitive_architecture_controller", "decide"),
    "create": ("cognitive_architecture_controller", "create"),
    "reflect": ("cognitive_architecture_controller", "reflect"),
    "get_status": ("cognitive_architecture_controller", "get_status"),
    "shutdown": ("cognitive_architecture_controller", "shutdown"),
    "recharge_loop": ("cognitive_architecture_controller", "recharge_loop"),
    "consolidation_loop": ("cognitive_architecture_controller", "consolidation_loop"),
    "wrapper_sync": ("cognitive_architecture_controller", "wrapper_sync"),
    "get_consciousness_hub": ("consciousness_hub", "get_consciousness_hub"),
    "register_service": ("consciousness_hub", "register_service"),
    "get_service": ("consciousness_hub", "get_service"),
    "list_services": ("consciousness_hub", "list_services"),
    "register_event_handler": ("consciousness_hub", "register_event_handler"),
    "register_with_hub": ("dream_bridge", "register_with_hub"),
    "get_meta_learning_loop": ("loop_meta_learning", "get_meta_learning_loop"),
    "get_quantum_consciousness_hub": ("quantum_consciousness_hub", "get_quantum_consciousness_hub"),
    "to_quantum_representation": ("quantum_consciousness_hub", "to_quantum_representation"),
    "inject_components": ("quantum_consciousness_hub", "inject_components"),
    "lukhas_tier_required": ("quantum_consciousness_integration", "lukhas_tier_required"),
    "get_consciousness_integration_status": ("quantum_consciousness_integration", "get_consciousness_integration_status"),
    "decorator": ("quantum_consciousness_integration", "decorator"),
    "get_consciousness_status": ("quantum_consciousness_integration", "get_consciousness_status"),
    "setup_quantum_entanglement": ("quantum_consciousness_integration", "setup_quantum_entanglement"),
    "create_entanglement": ("quantum_consciousness_integration", "create_entanglement"),
    "main": ("reflection.lambda_mirror", "main"),
    "to_dict": ("reflection.lambda_mirror", "to_dict"),
    "to_dict": ("reflection.lambda_mirror", "to_dict"),
    "to_dict": ("reflection.lambda_mirror", "to_dict"),
    "to_dict": ("reflection.lambda_mirror", "to_dict"),
    "identify_reflection_prompts": ("reflection.lambda_mirror", "identify_reflection_prompts"),
    "lukhas_tier_required": ("service", "lukhas_tier_required"),
    "process_awareness_api": ("service", "process_awareness_api"),
    "perform_introspection_api": ("service", "perform_introspection_api"),
    "get_consciousness_state_api": ("service", "get_consciousness_state_api"),
    "decorator": ("service", "decorator"),
    "initialize": ("service", "initialize"),
    "process_awareness_stream": ("service", "process_awareness_stream"),
    "perform_introspection": ("service", "perform_introspection"),
    "get_current_consciousness_state_report": ("service", "get_current_consciousness_state_report"),
    "direct_attention_focus": ("service", "direct_attention_focus"),
    "engage_metacognitive_analysis": ("service", "engage_metacognitive_analysis"),
    "wrapper_sync": ("service", "wrapper_sync"),
    "verify_user_access": ("service", "verify_user_access"),
    "check_consent": ("service", "check_consent"),
    "log_activity": ("service", "log_activity"),
    "create_consciousness_service": ("services", "create_consciousness_service"),
    "lukhas_tier_required": ("systems.awareness_engine", "lukhas_tier_required"),
    "create_awareness_component": ("systems.awareness_engine", "create_awareness_component"),
    "decorator": ("systems.awareness_engine", "decorator"),
    "get_status": ("systems.awareness_engine", "get_status"),
    "wrapper_sync": ("systems.awareness_engine", "wrapper_sync"),
    "lukhas_tier_required": ("systems.awareness_processor", "lukhas_tier_required"),
    "create_awareness_processor": ("systems.awareness_processor", "create_awareness_processor"),
    "decorator": ("systems.awareness_processor", "decorator"),
    "get_status": ("systems.awareness_processor", "get_status"),
    "wrapper_sync": ("systems.awareness_processor", "wrapper_sync"),
    "create_consciousness_component": ("systems.awareness_tracker", "create_consciousness_component"),
    "create_consciousness_component": ("systems.awareness_tracker", "create_consciousness_component"),
    "get_status": ("systems.awareness_tracker", "get_status"),
    "get_voice_modulation": ("systems.cognitive_systems.voice_personality", "get_voice_modulation"),
    "adapt_to_interaction": ("systems.cognitive_systems.voice_personality", "adapt_to_interaction"),
    "create_consciousness_component": ("systems.consciousness", "create_consciousness_component"),
    "create_consciousness_component": ("systems.consciousness", "create_consciousness_component"),
    "get_status": ("systems.consciousness", "get_status"),
    "create_dream_reflection_loop": ("systems.dream_engine.dream_reflection_loop", "create_dream_reflection_loop"),
    "connect_brain": ("systems.dream_engine.dream_reflection_loop", "connect_brain"),
    "register_with_core": ("systems.dream_engine.dream_reflection_loop", "register_with_core"),
    "reflect": ("systems.dream_engine.dream_reflection_loop", "reflect"),
    "is_stable": ("systems.dream_engine.dream_reflection_loop", "is_stable"),
    "handle_system_idle": ("systems.dream_engine.dream_reflection_loop", "handle_system_idle"),
    "handle_system_active": ("systems.dream_engine.dream_reflection_loop", "handle_system_active"),
    "start_dream_cycle": ("systems.dream_engine.dream_reflection_loop", "start_dream_cycle"),
    "stop_dream_cycle": ("systems.dream_engine.dream_reflection_loop", "stop_dream_cycle"),
    "consolidate_memories": ("systems.dream_engine.dream_reflection_loop", "consolidate_memories"),
    "extract_insights": ("systems.dream_engine.dream_reflection_loop", "extract_insights"),
    "recognize_patterns": ("systems.dream_engine.dream_reflection_loop", "recognize_patterns"),
    "synthesize_dream": ("systems.dream_engine.dream_reflection_loop", "synthesize_dream"),
    "process_message": ("systems.dream_engine.dream_reflection_loop", "process_message"),
    "start": ("systems.dream_engine.dream_reflection_loop", "start"),
    "stop": ("systems.dream_engine.dream_reflection_loop", "stop"),
    "get_status": ("systems.dream_engine.dream_reflection_loop", "get_status"),
    "get_metrics": ("systems.dream_engine.dream_reflection_loop", "get_metrics"),
    "update_scores": ("systems.dream_engine.dream_reflection_loop", "update_scores"),
    "calculate_drift": ("systems.dream_engine.dream_reflection_loop", "calculate_drift"),
    "calculate_convergence": ("systems.dream_engine.dream_reflection_loop", "calculate_convergence"),
    "calculate_affect_delta": ("systems.dream_engine.dream_reflection_loop", "calculate_affect_delta"),
    "calculate_entropy_delta": ("systems.dream_engine.dream_reflection_loop", "calculate_entropy_delta"),
    "dream_to_memory_feedback": ("systems.dream_engine.dream_reflection_loop", "dream_to_memory_feedback"),
    "dream_synthesis_summary": ("systems.dream_engine.dream_reflection_loop", "dream_synthesis_summary"),
    "dream_snapshot": ("systems.dream_engine.dream_reflection_loop", "dream_snapshot"),
    "lukhas_tier_required": ("systems.engine", "lukhas_tier_required"),
    "decorator": ("systems.engine", "decorator"),
    "to_dict": ("systems.engine", "to_dict"),
    "wrapper_sync": ("systems.engine", "wrapper_sync"),
    "to_dict": ("systems.engine_alt", "to_dict"),
    "to_dict": ("systems.engine_codex", "to_dict"),
    "lukhas_tier_required": ("systems.engine_complete", "lukhas_tier_required"),
    "get": ("systems.engine_complete", "get"),
    "decorator": ("systems.engine_complete", "decorator"),
    "to_dict": ("systems.engine_complete", "to_dict"),
    "get_consciousness_state": ("systems.engine_complete", "get_consciousness_state"),
    "get_system_status": ("systems.engine_complete", "get_system_status"),
    "wrapper_sync": ("systems.engine_complete", "wrapper_sync"),
    "calculate_consciousness_metrics": ("systems.engine_poetic", "calculate_consciousness_metrics"),
    "get_status": ("systems.engine_poetic", "get_status"),
    "process_consciousness_event": ("systems.integrator", "process_consciousness_event"),
    "main": ("systems.lambda_mirror", "main"),
    "to_dict": ("systems.lambda_mirror", "to_dict"),
    "to_dict": ("systems.lambda_mirror", "to_dict"),
    "to_dict": ("systems.lambda_mirror", "to_dict"),
    "to_dict": ("systems.lambda_mirror", "to_dict"),
    "identify_reflection_prompts": ("systems.lambda_mirror", "identify_reflection_prompts"),
    "get_consciousness_integration_status": ("systems.quantum_consciousness_integration", "get_consciousness_integration_status"),
    "get_consciousness_status": ("systems.quantum_consciousness_integration", "get_consciousness_status"),
    "generate_neural_radiance_field": ("systems.quantum_consciousness_visualizer", "generate_neural_radiance_field"),
    "render_symbolic_layer": ("systems.quantum_consciousness_visualizer", "render_symbolic_layer"),
    "write_reflection_event": ("systems.reflection.reflection", "write_reflection_event"),
    "create_consciousness_component": ("systems.self_reflection_engine", "create_consciousness_component"),
    "create_consciousness_component": ("systems.self_reflection_engine", "create_consciousness_component"),
    "get_status": ("systems.self_reflection_engine", "get_status"),
    "create_consciousness_component": ("systems.state", "create_consciousness_component"),
    "get_status": ("systems.state", "get_status"),
    "create_consciousness_component": ("systems.validator", "create_consciousness_component"),
    "get_status": ("systems.validator", "get_status"),
}


def __getattr__(name):
    """Lazy import entities on access"""
    # Check class registry first
    if name in _ENTITY_REGISTRY:
        module_path, attr_name = _ENTITY_REGISTRY[name]
        try:
            module = importlib.import_module(f".{module_path}", package=__package__)
            return getattr(module, attr_name)
        except (ImportError, AttributeError) as e:
            logger.warning(f"Failed to import {attr_name} from {module_path}: {e}")
            raise AttributeError(f"module '{__name__}' has no attribute '{name}'")

    # Check function registry
    if name in _FUNCTION_REGISTRY:
        module_path, attr_name = _FUNCTION_REGISTRY[name]
        try:
            module = importlib.import_module(f".{module_path}", package=__package__)
            return getattr(module, attr_name)
        except (ImportError, AttributeError) as e:
            logger.warning(f"Failed to import {attr_name} from {module_path}: {e}")
            raise AttributeError(f"module '{__name__}' has no attribute '{name}'")

    raise AttributeError(f"module '{__name__}' has no attribute '{name}'")


def __dir__():
    """List all available entities"""
    return list(_ENTITY_REGISTRY.keys()) + list(_FUNCTION_REGISTRY.keys())


# Export commonly used entities directly for better IDE support
__all__ = [
    "LucasAwarenessProtocol",
    "BioSymbolicAwarenessAdapter",
    "MockNumpy",
    "ProtonGradient",
    "QuantumAttentionGate",
    "CristaFilter",
    "CardiolipinEncoder",
    "SymbolicTraceLogger",
    "SystemAwareness",
    "BrainIntegrationConfig",
    "DynamicImporter",
    "TierAccessControl",
    "EmotionVector",
    "EmotionalOscillator",
    "MemoryEmotionalIntegrator",
    "MemoryVoiceIntegrator",
    "LucasBrainIntegration",
    "AccessTier",
    "CognitiveState",
    "EmotionalModulation",
]

# System metadata
__system__ = "consciousness"
__total_entities__ = 371
__classes__ = 148
__functions__ = 223
